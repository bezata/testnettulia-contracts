{
	"id": "fce9912d24d9ea58a883385d580ae1c4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"settings": {
			"viaIR": true,
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/contracts/interfaces/IFlashPoolRewardManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\ninterface IFlashPoolRewardManager {\r\n    /// @notice Registers a pool to start accruing rewards, initializing the reward mechanism.\r\n    /// @param pool The address of the pool to register.\r\n    /// @param rewardToken The ERC20 token used as the reward token.\r\n    function registerPool(address pool, address rewardToken, uint256 loanAmount) external returns (bool);\r\n\r\n    /// @notice Claims rewards for the lender from a specific pool.\r\n    /// @param pool The address of the flash pool.\r\n    function claimRewards(address pool) external;\r\n\r\n    /// @notice Calculates claimable interest for the lender.\r\n    /// @param pool The address of the pool.\r\n    /// @return uint256 The amount of interest that can be claimed.\r\n    function calculateClaimableInterest(address pool) external view returns (uint256);\r\n\r\n    /// @notice Accrues rewards for a specific pool based on the current APY and block difference.\r\n    /// @param pool The address of the pool for which to accrue rewards.\r\n    function accrueRewards(address pool) external;\r\n\r\n\r\n    /// @notice Deregisters a pool, stopping it from accruing further rewards.\r\n    /// @param pool The address of the pool to deregister.\r\n    function deregisterPool(address pool) external;\r\n\r\n    /// @notice Returns the reward details for a specific pool.\r\n    /// @param pool The address of the pool.\r\n    /// @return rewardToken The token used for rewards.\r\n    /// @return rewardsAccrued Total accrued rewards.\r\n    /// @return lastRewardBlock Last block number when rewards were calculated.\r\n    /// @return rewardRate Dynamic reward rate based on APY.\r\n    /// @return lenderClaimedRewards Amount of rewards claimed by the lender.\r\n    /// @return isAccruing Flag to indicate if the pool is accruing rewards.\r\n    function getRewardDetails(address pool) \r\n        external \r\n        view \r\n        returns (\r\n            address rewardToken,\r\n            uint256 rewardsAccrued,\r\n            uint256 lastRewardBlock,\r\n            uint256 rewardRate,\r\n            uint256 lenderClaimedRewards,\r\n            bool isAccruing\r\n        );\r\n}\r\n"
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/contracts/interfaces/IFlashPoolRewardManager.sol": {
				"IFlashPoolRewardManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "accrueRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "calculateClaimableInterest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "claimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "deregisterPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "getRewardDetails",
							"outputs": [
								{
									"internalType": "address",
									"name": "rewardToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rewardsAccrued",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lenderClaimedRewards",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isAccruing",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rewardToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "loanAmount",
									"type": "uint256"
								}
							],
							"name": "registerPool",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"accrueRewards(address)": {
								"params": {
									"pool": "The address of the pool for which to accrue rewards."
								}
							},
							"calculateClaimableInterest(address)": {
								"params": {
									"pool": "The address of the pool."
								},
								"returns": {
									"_0": "uint256 The amount of interest that can be claimed."
								}
							},
							"claimRewards(address)": {
								"params": {
									"pool": "The address of the flash pool."
								}
							},
							"deregisterPool(address)": {
								"params": {
									"pool": "The address of the pool to deregister."
								}
							},
							"getRewardDetails(address)": {
								"params": {
									"pool": "The address of the pool."
								},
								"returns": {
									"isAccruing": "Flag to indicate if the pool is accruing rewards.",
									"lastRewardBlock": "Last block number when rewards were calculated.",
									"lenderClaimedRewards": "Amount of rewards claimed by the lender.",
									"rewardRate": "Dynamic reward rate based on APY.",
									"rewardToken": "The token used for rewards.",
									"rewardsAccrued": "Total accrued rewards."
								}
							},
							"registerPool(address,address,uint256)": {
								"params": {
									"pool": "The address of the pool to register.",
									"rewardToken": "The ERC20 token used as the reward token."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"accrueRewards(address)": "3d39955c",
							"calculateClaimableInterest(address)": "51b2d521",
							"claimRewards(address)": "ef5cfb8c",
							"deregisterPool(address)": "7e72c7d7",
							"getRewardDetails(address)": "d919007e",
							"registerPool(address,address,uint256)": "51c15721"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"accrueRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"calculateClaimableInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"deregisterPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getRewardDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardsAccrued\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lenderClaimedRewards\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isAccruing\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"}],\"name\":\"registerPool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"accrueRewards(address)\":{\"params\":{\"pool\":\"The address of the pool for which to accrue rewards.\"}},\"calculateClaimableInterest(address)\":{\"params\":{\"pool\":\"The address of the pool.\"},\"returns\":{\"_0\":\"uint256 The amount of interest that can be claimed.\"}},\"claimRewards(address)\":{\"params\":{\"pool\":\"The address of the flash pool.\"}},\"deregisterPool(address)\":{\"params\":{\"pool\":\"The address of the pool to deregister.\"}},\"getRewardDetails(address)\":{\"params\":{\"pool\":\"The address of the pool.\"},\"returns\":{\"isAccruing\":\"Flag to indicate if the pool is accruing rewards.\",\"lastRewardBlock\":\"Last block number when rewards were calculated.\",\"lenderClaimedRewards\":\"Amount of rewards claimed by the lender.\",\"rewardRate\":\"Dynamic reward rate based on APY.\",\"rewardToken\":\"The token used for rewards.\",\"rewardsAccrued\":\"Total accrued rewards.\"}},\"registerPool(address,address,uint256)\":{\"params\":{\"pool\":\"The address of the pool to register.\",\"rewardToken\":\"The ERC20 token used as the reward token.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accrueRewards(address)\":{\"notice\":\"Accrues rewards for a specific pool based on the current APY and block difference.\"},\"calculateClaimableInterest(address)\":{\"notice\":\"Calculates claimable interest for the lender.\"},\"claimRewards(address)\":{\"notice\":\"Claims rewards for the lender from a specific pool.\"},\"deregisterPool(address)\":{\"notice\":\"Deregisters a pool, stopping it from accruing further rewards.\"},\"getRewardDetails(address)\":{\"notice\":\"Returns the reward details for a specific pool.\"},\"registerPool(address,address,uint256)\":{\"notice\":\"Registers a pool to start accruing rewards, initializing the reward mechanism.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/interfaces/IFlashPoolRewardManager.sol\":\"IFlashPoolRewardManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/interfaces/IFlashPoolRewardManager.sol\":{\"keccak256\":\"0x9dd0d2b6a0a9561e31b724b73ad384a3d5525e8c9786e98f608e8a7b16052084\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6e01c75eb15ad3ba0dd1b965df8188200177519c6fd7e6d9b624654da527fec\",\"dweb:/ipfs/QmQdysNJH7hW9mXMcy22TMyfdMjJSNtzmRFMniGMYoAXAr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"accrueRewards(address)": {
								"notice": "Accrues rewards for a specific pool based on the current APY and block difference."
							},
							"calculateClaimableInterest(address)": {
								"notice": "Calculates claimable interest for the lender."
							},
							"claimRewards(address)": {
								"notice": "Claims rewards for the lender from a specific pool."
							},
							"deregisterPool(address)": {
								"notice": "Deregisters a pool, stopping it from accruing further rewards."
							},
							"getRewardDetails(address)": {
								"notice": "Returns the reward details for a specific pool."
							},
							"registerPool(address,address,uint256)": {
								"notice": "Registers a pool to start accruing rewards, initializing the reward mechanism."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/contracts/interfaces/IFlashPoolRewardManager.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/interfaces/IFlashPoolRewardManager.sol",
					"exportedSymbols": {
						"IFlashPoolRewardManager": [
							58
						]
					},
					"id": 59,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IFlashPoolRewardManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 58,
							"linearizedBaseContracts": [
								58
							],
							"name": "IFlashPoolRewardManager",
							"nameLocation": "71:23:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "102:218:0",
										"text": "@notice Registers a pool to start accruing rewards, initializing the reward mechanism.\n @param pool The address of the pool to register.\n @param rewardToken The ERC20 token used as the reward token."
									},
									"functionSelector": "51c15721",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerPool",
									"nameLocation": "335:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "356:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "348:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "rewardToken",
												"nameLocation": "370:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "362:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "362:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "loanAmount",
												"nameLocation": "391:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "383:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:55:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "421:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 10,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "421:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "420:6:0"
									},
									"scope": 58,
									"src": "326:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "435:115:0",
										"text": "@notice Claims rewards for the lender from a specific pool.\n @param pool The address of the flash pool."
									},
									"functionSelector": "ef5cfb8c",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewards",
									"nameLocation": "565:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "586:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "578:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "578:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "577:14:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "600:0:0"
									},
									"scope": 58,
									"src": "556:45:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "609:172:0",
										"text": "@notice Calculates claimable interest for the lender.\n @param pool The address of the pool.\n @return uint256 The amount of interest that can be claimed."
									},
									"functionSelector": "51b2d521",
									"id": 27,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateClaimableInterest",
									"nameLocation": "796:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "831:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "823:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:14:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "860:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:9:0"
									},
									"scope": 58,
									"src": "787:82:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "877:168:0",
										"text": "@notice Accrues rewards for a specific pool based on the current APY and block difference.\n @param pool The address of the pool for which to accrue rewards."
									},
									"functionSelector": "3d39955c",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "accrueRewards",
									"nameLocation": "1060:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1082:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1074:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1074:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1073:14:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1096:0:0"
									},
									"scope": 58,
									"src": "1051:46:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1107:134:0",
										"text": "@notice Deregisters a pool, stopping it from accruing further rewards.\n @param pool The address of the pool to deregister."
									},
									"functionSelector": "7e72c7d7",
									"id": 39,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deregisterPool",
									"nameLocation": "1256:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1279:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1271:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1270:14:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1293:0:0"
									},
									"scope": 58,
									"src": "1247:47:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "1302:517:0",
										"text": "@notice Returns the reward details for a specific pool.\n @param pool The address of the pool.\n @return rewardToken The token used for rewards.\n @return rewardsAccrued Total accrued rewards.\n @return lastRewardBlock Last block number when rewards were calculated.\n @return rewardRate Dynamic reward rate based on APY.\n @return lenderClaimedRewards Amount of rewards claimed by the lender.\n @return isAccruing Flag to indicate if the pool is accruing rewards."
									},
									"functionSelector": "d919007e",
									"id": 57,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardDetails",
									"nameLocation": "1834:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1859:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1851:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1851:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1850:14:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "rewardToken",
												"nameLocation": "1940:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1932:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1932:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "rewardsAccrued",
												"nameLocation": "1974:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1966:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1966:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "lastRewardBlock",
												"nameLocation": "2011:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "2003:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2003:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "rewardRate",
												"nameLocation": "2049:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "2041:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "lenderClaimedRewards",
												"nameLocation": "2082:20:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "2074:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2074:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "isAccruing",
												"nameLocation": "2122:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "2117:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 54,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2117:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1917:226:0"
									},
									"scope": 58,
									"src": "1825:319:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 59,
							"src": "61:2086:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:2116:0"
				},
				"id": 0
			}
		}
	}
}