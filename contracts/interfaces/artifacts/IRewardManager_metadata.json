{
	"compiler": {
		"version": "0.8.25+commit.b61c2a91"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "pool",
						"type": "address"
					}
				],
				"name": "accrueRewards",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "pool",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "isLender",
						"type": "bool"
					}
				],
				"name": "claimRewards",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "pool",
						"type": "address"
					}
				],
				"name": "deregisterPool",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "pool",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "rewardToken",
						"type": "address"
					}
				],
				"name": "registerPool",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"accrueRewards(address)": {
					"params": {
						"pool": "The address of the pool."
					}
				},
				"claimRewards(address,bool)": {
					"params": {
						"isLender": "True if the lender is claiming, false if the borrower.",
						"pool": "The address of the pool."
					}
				},
				"deregisterPool(address)": {
					"params": {
						"pool": "The address of the pool to deregister."
					}
				},
				"registerPool(address,address)": {
					"params": {
						"pool": "The address of the pool to register.",
						"rewardToken": "The ERC20 address for the reward token."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"accrueRewards(address)": {
					"notice": "Accrues rewards for a specific pool."
				},
				"claimRewards(address,bool)": {
					"notice": "Claims rewards for either the lender or borrower."
				},
				"deregisterPool(address)": {
					"notice": "Deregisters a pool."
				},
				"registerPool(address,address)": {
					"notice": "Registers a pool to be eligible for rewards, initializing its reward token."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/contracts/interfaces/IRewardManager.sol": "IRewardManager"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": [],
		"viaIR": true
	},
	"sources": {
		"contracts/contracts/interfaces/IRewardManager.sol": {
			"keccak256": "0x38e38bb8c9a1ed7ae4bd8c5b8d92dbba1c4f3083896213ca142af8fe2e131bf4",
			"license": "MIT",
			"urls": [
				"bzz-raw://47de1c1a90663a49866c94a5a59e2bd91b8029899e9b549ebce16648229713ca",
				"dweb:/ipfs/QmS2RrmQuX5rPm1bJP1uhLJREvuU3aDdayLTZjuhchKgf9"
			]
		}
	},
	"version": 1
}