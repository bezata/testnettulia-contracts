{
	"id": "75855d1997be1006b33bea2969667db2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"settings": {
			"viaIR": true,
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/contracts/permit2/Permit2.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.20;\n\nimport {SignatureTransfer} from \"./SignatureTransfer.sol\";\nimport {AllowanceTransfer} from \"./AllowanceTransfer.sol\";\n\n/// @notice Permit2 handles signature-based transfers in SignatureTransfer and allowance-based transfers in AllowanceTransfer.\n/// @dev Users must approve Permit2 before calling any of the transfer functions.\ncontract Permit2 is SignatureTransfer, AllowanceTransfer {\n// Permit2 unifies the two contracts so users have maximal flexibility with their approval.\n}\n"
			},
			"contracts/contracts/permit2/AllowanceTransfer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.20;\n\nimport {ERC20} from \"solmate/src/tokens/ERC20.sol\";\nimport {SafeTransferLib} from \"solmate/src/utils/SafeTransferLib.sol\";\nimport {PermitHash} from \"../lib/PermitHash.sol\";\nimport {SignatureVerification} from \"../lib/SignatureVerification.sol\";\nimport {EIP712} from \"./EIP712.sol\";\nimport {IAllowanceTransfer} from \"../interfaces/IAllowanceTransfer.sol\";\nimport {SignatureExpired, InvalidNonce} from \"./PermitErrors.sol\";\nimport {Allowance} from \"../lib/Allowance.sol\";\n\ncontract AllowanceTransfer is IAllowanceTransfer, EIP712 {\n    using SignatureVerification for bytes;\n    using SafeTransferLib for ERC20;\n    using PermitHash for PermitSingle;\n    using PermitHash for PermitBatch;\n    using Allowance for PackedAllowance;\n\n    /// @notice Maps users to tokens to spender addresses and information about the approval on the token\n    /// @dev Indexed in the order of token owner address, token address, spender address\n    /// @dev The stored word saves the allowed amount, expiration on the allowance, and nonce\n    mapping(address => mapping(address => mapping(address => PackedAllowance))) public allowance;\n\n    /// @inheritdoc IAllowanceTransfer\n    function approve(address token, address spender, uint160 amount, uint48 expiration) external {\n        PackedAllowance storage allowed = allowance[msg.sender][token][spender];\n        allowed.updateAmountAndExpiration(amount, expiration);\n        emit Approval(msg.sender, token, spender, amount, expiration);\n    }\n\n    /// @inheritdoc IAllowanceTransfer\n    function permit(address owner, PermitSingle memory permitSingle, bytes calldata signature) external {\n        if (block.timestamp > permitSingle.sigDeadline) revert SignatureExpired(permitSingle.sigDeadline);\n\n        // Verify the signer address from the signature.\n        signature.verify(_hashTypedData(permitSingle.hash()), owner);\n\n        _updateApproval(permitSingle.details, owner, permitSingle.spender);\n    }\n\n    /// @inheritdoc IAllowanceTransfer\n    function permit(address owner, PermitBatch memory permitBatch, bytes calldata signature) external {\n        if (block.timestamp > permitBatch.sigDeadline) revert SignatureExpired(permitBatch.sigDeadline);\n\n        // Verify the signer address from the signature.\n        signature.verify(_hashTypedData(permitBatch.hash()), owner);\n\n        address spender = permitBatch.spender;\n        unchecked {\n            uint256 length = permitBatch.details.length;\n            for (uint256 i = 0; i < length; ++i) {\n                _updateApproval(permitBatch.details[i], owner, spender);\n            }\n        }\n    }\n\n    /// @inheritdoc IAllowanceTransfer\n    function transferFrom(address from, address to, uint160 amount, address token) external {\n        _transfer(from, to, amount, token);\n    }\n\n    /// @inheritdoc IAllowanceTransfer\n    function transferFrom(AllowanceTransferDetails[] calldata transferDetails) external {\n        unchecked {\n            uint256 length = transferDetails.length;\n            for (uint256 i = 0; i < length; ++i) {\n                AllowanceTransferDetails memory transferDetail = transferDetails[i];\n                _transfer(transferDetail.from, transferDetail.to, transferDetail.amount, transferDetail.token);\n            }\n        }\n    }\n\n    /// @notice Internal function for transferring tokens using stored allowances\n    /// @dev Will fail if the allowed timeframe has passed\n    function _transfer(address from, address to, uint160 amount, address token) private {\n        PackedAllowance storage allowed = allowance[from][token][msg.sender];\n\n        if (block.timestamp > allowed.expiration) revert AllowanceExpired(allowed.expiration);\n\n        uint256 maxAmount = allowed.amount;\n        if (maxAmount != type(uint160).max) {\n            if (amount > maxAmount) {\n                revert InsufficientAllowance(maxAmount);\n            } else {\n                unchecked {\n                    allowed.amount = uint160(maxAmount) - amount;\n                }\n            }\n        }\n\n        // Transfer the tokens from the from address to the recipient.\n        ERC20(token).safeTransferFrom(from, to, amount);\n    }\n\n    /// @inheritdoc IAllowanceTransfer\n    function lockdown(TokenSpenderPair[] calldata approvals) external {\n        address owner = msg.sender;\n        // Revoke allowances for each pair of spenders and tokens.\n        unchecked {\n            uint256 length = approvals.length;\n            for (uint256 i = 0; i < length; ++i) {\n                address token = approvals[i].token;\n                address spender = approvals[i].spender;\n\n                allowance[owner][token][spender].amount = 0;\n                emit Lockdown(owner, token, spender);\n            }\n        }\n    }\n\n    /// @inheritdoc IAllowanceTransfer\n    function invalidateNonces(address token, address spender, uint48 newNonce) external {\n        uint48 oldNonce = allowance[msg.sender][token][spender].nonce;\n\n        if (newNonce <= oldNonce) revert InvalidNonce();\n\n        // Limit the amount of nonces that can be invalidated in one transaction.\n        unchecked {\n            uint48 delta = newNonce - oldNonce;\n            if (delta > type(uint16).max) revert ExcessiveInvalidation();\n        }\n\n        allowance[msg.sender][token][spender].nonce = newNonce;\n        emit NonceInvalidation(msg.sender, token, spender, newNonce, oldNonce);\n    }\n\n    /// @notice Sets the new values for amount, expiration, and nonce.\n    /// @dev Will check that the signed nonce is equal to the current nonce and then incrememnt the nonce value by 1.\n    /// @dev Emits a Permit event.\n    function _updateApproval(PermitDetails memory details, address owner, address spender) private {\n        uint48 nonce = details.nonce;\n        address token = details.token;\n        uint160 amount = details.amount;\n        uint48 expiration = details.expiration;\n        PackedAllowance storage allowed = allowance[owner][token][spender];\n\n        if (allowed.nonce != nonce) revert InvalidNonce();\n\n        allowed.updateAll(amount, expiration, nonce);\n        emit Permit(owner, token, spender, amount, expiration, nonce);\n    }\n}\n"
			},
			"contracts/contracts/permit2/SignatureTransfer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.20;\n\nimport {ISignatureTransfer} from \"../interfaces/ISignatureTransfer.sol\";\nimport {SignatureExpired, InvalidNonce} from \"./PermitErrors.sol\";\nimport {ERC20} from \"solmate/src/tokens/ERC20.sol\";\nimport {SafeTransferLib} from \"solmate/src/utils/SafeTransferLib.sol\";\nimport {SignatureVerification} from \"../lib/SignatureVerification.sol\";\nimport {PermitHash} from \"../lib/PermitHash.sol\";\nimport {EIP712} from \"./EIP712.sol\";\n\ncontract SignatureTransfer is ISignatureTransfer, EIP712 {\n    using SignatureVerification for bytes;\n    using SafeTransferLib for ERC20;\n    using PermitHash for PermitTransferFrom;\n    using PermitHash for PermitBatchTransferFrom;\n\n    /// @inheritdoc ISignatureTransfer\n    mapping(address => mapping(uint256 => uint256)) public nonceBitmap;\n\n    /// @inheritdoc ISignatureTransfer\n    function permitTransferFrom(\n        PermitTransferFrom memory permit,\n        SignatureTransferDetails calldata transferDetails,\n        address owner,\n        bytes calldata signature\n    ) external {\n        _permitTransferFrom(permit, transferDetails, owner, permit.hash(), signature);\n    }\n\n    /// @inheritdoc ISignatureTransfer\n    function permitWitnessTransferFrom(\n        PermitTransferFrom memory permit,\n        SignatureTransferDetails calldata transferDetails,\n        address owner,\n        bytes32 witness,\n        string calldata witnessTypeString,\n        bytes calldata signature\n    ) external {\n        _permitTransferFrom(\n            permit, transferDetails, owner, permit.hashWithWitness(witness, witnessTypeString), signature\n        );\n    }\n\n    /// @notice Transfers a token using a signed permit message.\n    /// @param permit The permit data signed over by the owner\n    /// @param dataHash The EIP-712 hash of permit data to include when checking signature\n    /// @param owner The owner of the tokens to transfer\n    /// @param transferDetails The spender's requested transfer details for the permitted token\n    /// @param signature The signature to verify\n    function _permitTransferFrom(\n        PermitTransferFrom memory permit,\n        SignatureTransferDetails calldata transferDetails,\n        address owner,\n        bytes32 dataHash,\n        bytes calldata signature\n    ) private {\n        uint256 requestedAmount = transferDetails.requestedAmount;\n\n        if (block.timestamp > permit.deadline) revert SignatureExpired(permit.deadline);\n        if (requestedAmount > permit.permitted.amount) revert InvalidAmount(permit.permitted.amount);\n\n        _useUnorderedNonce(owner, permit.nonce);\n\n        signature.verify(_hashTypedData(dataHash), owner);\n\n        ERC20(permit.permitted.token).safeTransferFrom(owner, transferDetails.to, requestedAmount);\n    }\n\n    /// @inheritdoc ISignatureTransfer\n    function permitTransferFrom(\n        PermitBatchTransferFrom memory permit,\n        SignatureTransferDetails[] calldata transferDetails,\n        address owner,\n        bytes calldata signature\n    ) external {\n        _permitTransferFrom(permit, transferDetails, owner, permit.hash(), signature);\n    }\n\n    /// @inheritdoc ISignatureTransfer\n    function permitWitnessTransferFrom(\n        PermitBatchTransferFrom memory permit,\n        SignatureTransferDetails[] calldata transferDetails,\n        address owner,\n        bytes32 witness,\n        string calldata witnessTypeString,\n        bytes calldata signature\n    ) external {\n        _permitTransferFrom(\n            permit, transferDetails, owner, permit.hashWithWitness(witness, witnessTypeString), signature\n        );\n    }\n\n    /// @notice Transfers tokens using a signed permit messages\n    /// @param permit The permit data signed over by the owner\n    /// @param dataHash The EIP-712 hash of permit data to include when checking signature\n    /// @param owner The owner of the tokens to transfer\n    /// @param signature The signature to verify\n    function _permitTransferFrom(\n        PermitBatchTransferFrom memory permit,\n        SignatureTransferDetails[] calldata transferDetails,\n        address owner,\n        bytes32 dataHash,\n        bytes calldata signature\n    ) private {\n        uint256 numPermitted = permit.permitted.length;\n\n        if (block.timestamp > permit.deadline) revert SignatureExpired(permit.deadline);\n        if (numPermitted != transferDetails.length) revert LengthMismatch();\n\n        _useUnorderedNonce(owner, permit.nonce);\n        signature.verify(_hashTypedData(dataHash), owner);\n\n        unchecked {\n            for (uint256 i = 0; i < numPermitted; ++i) {\n                TokenPermissions memory permitted = permit.permitted[i];\n                uint256 requestedAmount = transferDetails[i].requestedAmount;\n\n                if (requestedAmount > permitted.amount) revert InvalidAmount(permitted.amount);\n\n                if (requestedAmount != 0) {\n                    // allow spender to specify which of the permitted tokens should be transferred\n                    ERC20(permitted.token).safeTransferFrom(owner, transferDetails[i].to, requestedAmount);\n                }\n            }\n        }\n    }\n\n    /// @inheritdoc ISignatureTransfer\n    function invalidateUnorderedNonces(uint256 wordPos, uint256 mask) external {\n        nonceBitmap[msg.sender][wordPos] |= mask;\n\n        emit UnorderedNonceInvalidation(msg.sender, wordPos, mask);\n    }\n\n    /// @notice Returns the index of the bitmap and the bit position within the bitmap. Used for unordered nonces\n    /// @param nonce The nonce to get the associated word and bit positions\n    /// @return wordPos The word position or index into the nonceBitmap\n    /// @return bitPos The bit position\n    /// @dev The first 248 bits of the nonce value is the index of the desired bitmap\n    /// @dev The last 8 bits of the nonce value is the position of the bit in the bitmap\n    function bitmapPositions(uint256 nonce) private pure returns (uint256 wordPos, uint256 bitPos) {\n        wordPos = uint248(nonce >> 8);\n        bitPos = uint8(nonce);\n    }\n\n    /// @notice Checks whether a nonce is taken and sets the bit at the bit position in the bitmap at the word position\n    /// @param from The address to use the nonce at\n    /// @param nonce The nonce to spend\n    function _useUnorderedNonce(address from, uint256 nonce) internal {\n        (uint256 wordPos, uint256 bitPos) = bitmapPositions(nonce);\n        uint256 bit = 1 << bitPos;\n        uint256 flipped = nonceBitmap[from][wordPos] ^= bit;\n\n        if (flipped & bit == 0) revert InvalidNonce();\n    }\n}\n"
			},
			"contracts/contracts/permit2/EIP712.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.20;\n\nimport {IEIP712} from \"../interfaces/IEIP712.sol\";\n\n/// @notice EIP712 helpers for permit2\n/// @dev Maintains cross-chain replay protection in the event of a fork\n/// @dev Reference: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/EIP712.sol\ncontract EIP712 is IEIP712 {\n    // Cache the domain separator as an immutable value, but also store the chain id that it\n    // corresponds to, in order to invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _CACHED_DOMAIN_SEPARATOR;\n    uint256 private immutable _CACHED_CHAIN_ID;\n\n    bytes32 private constant _HASHED_NAME = keccak256(\"Permit2\");\n    bytes32 private constant _TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\n\n    constructor() {\n        _CACHED_CHAIN_ID = block.chainid;\n        _CACHED_DOMAIN_SEPARATOR = _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME);\n    }\n\n    /// @notice Returns the domain separator for the current chain.\n    /// @dev Uses cached version if chainid and address are unchanged from construction.\n    function DOMAIN_SEPARATOR() public view override returns (bytes32) {\n        return block.chainid == _CACHED_CHAIN_ID\n            ? _CACHED_DOMAIN_SEPARATOR\n            : _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME);\n    }\n\n    /// @notice Builds a domain separator using the current chainId and contract address.\n    function _buildDomainSeparator(bytes32 typeHash, bytes32 nameHash) private view returns (bytes32) {\n        return keccak256(abi.encode(typeHash, nameHash, block.chainid, address(this)));\n    }\n\n    /// @notice Creates an EIP-712 typed data hash\n    function _hashTypedData(bytes32 dataHash) internal view returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR(), dataHash));\n    }\n}\n"
			},
			"contracts/contracts/lib/PermitHash.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport {IAllowanceTransfer} from \"../interfaces/IAllowanceTransfer.sol\";\nimport {ISignatureTransfer} from \"../interfaces/ISignatureTransfer.sol\";\n\nlibrary PermitHash {\n    bytes32 public constant _PERMIT_DETAILS_TYPEHASH =\n        keccak256(\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\");\n\n    bytes32 public constant _PERMIT_SINGLE_TYPEHASH = keccak256(\n        \"PermitSingle(PermitDetails details,address spender,uint256 sigDeadline)PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\"\n    );\n\n    bytes32 public constant _PERMIT_BATCH_TYPEHASH = keccak256(\n        \"PermitBatch(PermitDetails[] details,address spender,uint256 sigDeadline)PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\"\n    );\n\n    bytes32 public constant _TOKEN_PERMISSIONS_TYPEHASH = keccak256(\"TokenPermissions(address token,uint256 amount)\");\n\n    bytes32 public constant _PERMIT_TRANSFER_FROM_TYPEHASH = keccak256(\n        \"PermitTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline)TokenPermissions(address token,uint256 amount)\"\n    );\n\n    bytes32 public constant _PERMIT_BATCH_TRANSFER_FROM_TYPEHASH = keccak256(\n        \"PermitBatchTransferFrom(TokenPermissions[] permitted,address spender,uint256 nonce,uint256 deadline)TokenPermissions(address token,uint256 amount)\"\n    );\n\n    string public constant _TOKEN_PERMISSIONS_TYPESTRING = \"TokenPermissions(address token,uint256 amount)\";\n\n    string public constant _PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB =\n        \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\";\n\n    string public constant _PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB =\n        \"PermitBatchWitnessTransferFrom(TokenPermissions[] permitted,address spender,uint256 nonce,uint256 deadline,\";\n\n    function hash(IAllowanceTransfer.PermitSingle memory permitSingle) internal pure returns (bytes32) {\n        bytes32 permitHash = _hashPermitDetails(permitSingle.details);\n        return\n            keccak256(abi.encode(_PERMIT_SINGLE_TYPEHASH, permitHash, permitSingle.spender, permitSingle.sigDeadline));\n    }\n\n    function hash(IAllowanceTransfer.PermitBatch memory permitBatch) internal pure returns (bytes32) {\n        uint256 numPermits = permitBatch.details.length;\n        bytes32[] memory permitHashes = new bytes32[](numPermits);\n        for (uint256 i = 0; i < numPermits; ++i) {\n            permitHashes[i] = _hashPermitDetails(permitBatch.details[i]);\n        }\n        return keccak256(\n            abi.encode(\n                _PERMIT_BATCH_TYPEHASH,\n                keccak256(abi.encodePacked(permitHashes)),\n                permitBatch.spender,\n                permitBatch.sigDeadline\n            )\n        );\n    }\n\n    function hash(ISignatureTransfer.PermitTransferFrom memory permit) internal view returns (bytes32) {\n        bytes32 tokenPermissionsHash = _hashTokenPermissions(permit.permitted);\n        return keccak256(\n            abi.encode(_PERMIT_TRANSFER_FROM_TYPEHASH, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline)\n        );\n    }\n\n    function hash(ISignatureTransfer.PermitBatchTransferFrom memory permit) internal view returns (bytes32) {\n        uint256 numPermitted = permit.permitted.length;\n        bytes32[] memory tokenPermissionHashes = new bytes32[](numPermitted);\n\n        for (uint256 i = 0; i < numPermitted; ++i) {\n            tokenPermissionHashes[i] = _hashTokenPermissions(permit.permitted[i]);\n        }\n\n        return keccak256(\n            abi.encode(\n                _PERMIT_BATCH_TRANSFER_FROM_TYPEHASH,\n                keccak256(abi.encodePacked(tokenPermissionHashes)),\n                msg.sender,\n                permit.nonce,\n                permit.deadline\n            )\n        );\n    }\n\n    function hashWithWitness(\n        ISignatureTransfer.PermitTransferFrom memory permit,\n        bytes32 witness,\n        string calldata witnessTypeString\n    ) internal view returns (bytes32) {\n        bytes32 typeHash = keccak256(abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString));\n\n        bytes32 tokenPermissionsHash = _hashTokenPermissions(permit.permitted);\n        return keccak256(abi.encode(typeHash, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline, witness));\n    }\n\n    function hashWithWitness(\n        ISignatureTransfer.PermitBatchTransferFrom memory permit,\n        bytes32 witness,\n        string calldata witnessTypeString\n    ) internal view returns (bytes32) {\n        bytes32 typeHash =\n            keccak256(abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString));\n\n        uint256 numPermitted = permit.permitted.length;\n        bytes32[] memory tokenPermissionHashes = new bytes32[](numPermitted);\n\n        for (uint256 i = 0; i < numPermitted; ++i) {\n            tokenPermissionHashes[i] = _hashTokenPermissions(permit.permitted[i]);\n        }\n\n        return keccak256(\n            abi.encode(\n                typeHash,\n                keccak256(abi.encodePacked(tokenPermissionHashes)),\n                msg.sender,\n                permit.nonce,\n                permit.deadline,\n                witness\n            )\n        );\n    }\n\n    function _hashPermitDetails(IAllowanceTransfer.PermitDetails memory details) private pure returns (bytes32) {\n        return keccak256(abi.encode(_PERMIT_DETAILS_TYPEHASH, details));\n    }\n\n    function _hashTokenPermissions(ISignatureTransfer.TokenPermissions memory permitted)\n        private\n        pure\n        returns (bytes32)\n    {\n        return keccak256(abi.encode(_TOKEN_PERMISSIONS_TYPEHASH, permitted));\n    }\n}\n"
			},
			"contracts/contracts/lib/SignatureVerification.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport {IERC1271} from \"../interfaces/IERC1271.sol\";\n\nlibrary SignatureVerification {\n    /// @notice Thrown when the passed in signature is not a valid length\n    error InvalidSignatureLength();\n\n    /// @notice Thrown when the recovered signer is equal to the zero address\n    error InvalidSignature();\n\n    /// @notice Thrown when the recovered signer does not equal the claimedSigner\n    error InvalidSigner();\n\n    /// @notice Thrown when the recovered contract signature is incorrect\n    error InvalidContractSignature();\n\n    bytes32 constant UPPER_BIT_MASK = (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n\n    function verify(bytes calldata signature, bytes32 hash, address claimedSigner) internal view {\n        bytes32 r;\n        bytes32 s;\n        uint8 v;\n\n        if (claimedSigner.code.length == 0) {\n            if (signature.length == 65) {\n                (r, s) = abi.decode(signature, (bytes32, bytes32));\n                v = uint8(signature[64]);\n            } else if (signature.length == 64) {\n                // EIP-2098\n                bytes32 vs;\n                (r, vs) = abi.decode(signature, (bytes32, bytes32));\n                s = vs & UPPER_BIT_MASK;\n                v = uint8(uint256(vs >> 255)) + 27;\n            } else {\n                revert InvalidSignatureLength();\n            }\n            address signer = ecrecover(hash, v, r, s);\n            if (signer == address(0)) revert InvalidSignature();\n            if (signer != claimedSigner) revert InvalidSigner();\n        } else {\n            bytes4 magicValue = IERC1271(claimedSigner).isValidSignature(hash, signature);\n            if (magicValue != IERC1271.isValidSignature.selector) revert InvalidContractSignature();\n        }\n    }\n}\n"
			},
			"solmate/src/utils/SafeTransferLib.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.8.0;\n\nimport {ERC20} from \"../tokens/ERC20.sol\";\n\n/// @notice Safe ETH and ERC20 transfer library that gracefully handles missing return values.\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/SafeTransferLib.sol)\n/// @dev Use with caution! Some functions in this library knowingly create dirty bits at the destination of the free memory pointer.\n/// @dev Note that none of the functions in this library check that a token has code at all! That responsibility is delegated to the caller.\nlibrary SafeTransferLib {\n    /*//////////////////////////////////////////////////////////////\n                             ETH OPERATIONS\n    //////////////////////////////////////////////////////////////*/\n\n    function safeTransferETH(address to, uint256 amount) internal {\n        bool success;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Transfer the ETH and store if it succeeded or not.\n            success := call(gas(), to, amount, 0, 0, 0, 0)\n        }\n\n        require(success, \"ETH_TRANSFER_FAILED\");\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                            ERC20 OPERATIONS\n    //////////////////////////////////////////////////////////////*/\n\n    function safeTransferFrom(\n        ERC20 token,\n        address from,\n        address to,\n        uint256 amount\n    ) internal {\n        bool success;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Get a pointer to some free memory.\n            let freeMemoryPointer := mload(0x40)\n\n            // Write the abi-encoded calldata into memory, beginning with the function selector.\n            mstore(freeMemoryPointer, 0x23b872dd00000000000000000000000000000000000000000000000000000000)\n            mstore(add(freeMemoryPointer, 4), and(from, 0xffffffffffffffffffffffffffffffffffffffff)) // Append and mask the \"from\" argument.\n            mstore(add(freeMemoryPointer, 36), and(to, 0xffffffffffffffffffffffffffffffffffffffff)) // Append and mask the \"to\" argument.\n            mstore(add(freeMemoryPointer, 68), amount) // Append the \"amount\" argument. Masking not required as it's a full 32 byte type.\n\n            success := and(\n                // Set success to whether the call reverted, if not we check it either\n                // returned exactly 1 (can't just be non-zero data), or had no return data.\n                or(and(eq(mload(0), 1), gt(returndatasize(), 31)), iszero(returndatasize())),\n                // We use 100 because the length of our calldata totals up like so: 4 + 32 * 3.\n                // We use 0 and 32 to copy up to 32 bytes of return data into the scratch space.\n                // Counterintuitively, this call must be positioned second to the or() call in the\n                // surrounding and() call or else returndatasize() will be zero during the computation.\n                call(gas(), token, 0, freeMemoryPointer, 100, 0, 32)\n            )\n        }\n\n        require(success, \"TRANSFER_FROM_FAILED\");\n    }\n\n    function safeTransfer(\n        ERC20 token,\n        address to,\n        uint256 amount\n    ) internal {\n        bool success;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Get a pointer to some free memory.\n            let freeMemoryPointer := mload(0x40)\n\n            // Write the abi-encoded calldata into memory, beginning with the function selector.\n            mstore(freeMemoryPointer, 0xa9059cbb00000000000000000000000000000000000000000000000000000000)\n            mstore(add(freeMemoryPointer, 4), and(to, 0xffffffffffffffffffffffffffffffffffffffff)) // Append and mask the \"to\" argument.\n            mstore(add(freeMemoryPointer, 36), amount) // Append the \"amount\" argument. Masking not required as it's a full 32 byte type.\n\n            success := and(\n                // Set success to whether the call reverted, if not we check it either\n                // returned exactly 1 (can't just be non-zero data), or had no return data.\n                or(and(eq(mload(0), 1), gt(returndatasize(), 31)), iszero(returndatasize())),\n                // We use 68 because the length of our calldata totals up like so: 4 + 32 * 2.\n                // We use 0 and 32 to copy up to 32 bytes of return data into the scratch space.\n                // Counterintuitively, this call must be positioned second to the or() call in the\n                // surrounding and() call or else returndatasize() will be zero during the computation.\n                call(gas(), token, 0, freeMemoryPointer, 68, 0, 32)\n            )\n        }\n\n        require(success, \"TRANSFER_FAILED\");\n    }\n\n    function safeApprove(\n        ERC20 token,\n        address to,\n        uint256 amount\n    ) internal {\n        bool success;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Get a pointer to some free memory.\n            let freeMemoryPointer := mload(0x40)\n\n            // Write the abi-encoded calldata into memory, beginning with the function selector.\n            mstore(freeMemoryPointer, 0x095ea7b300000000000000000000000000000000000000000000000000000000)\n            mstore(add(freeMemoryPointer, 4), and(to, 0xffffffffffffffffffffffffffffffffffffffff)) // Append and mask the \"to\" argument.\n            mstore(add(freeMemoryPointer, 36), amount) // Append the \"amount\" argument. Masking not required as it's a full 32 byte type.\n\n            success := and(\n                // Set success to whether the call reverted, if not we check it either\n                // returned exactly 1 (can't just be non-zero data), or had no return data.\n                or(and(eq(mload(0), 1), gt(returndatasize(), 31)), iszero(returndatasize())),\n                // We use 68 because the length of our calldata totals up like so: 4 + 32 * 2.\n                // We use 0 and 32 to copy up to 32 bytes of return data into the scratch space.\n                // Counterintuitively, this call must be positioned second to the or() call in the\n                // surrounding and() call or else returndatasize() will be zero during the computation.\n                call(gas(), token, 0, freeMemoryPointer, 68, 0, 32)\n            )\n        }\n\n        require(success, \"APPROVE_FAILED\");\n    }\n}\n"
			},
			"solmate/src/tokens/ERC20.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.8.0;\n\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\nabstract contract ERC20 {\n    /*//////////////////////////////////////////////////////////////\n                                 EVENTS\n    //////////////////////////////////////////////////////////////*/\n\n    event Transfer(address indexed from, address indexed to, uint256 amount);\n\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\n\n    /*//////////////////////////////////////////////////////////////\n                            METADATA STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    string public name;\n\n    string public symbol;\n\n    uint8 public immutable decimals;\n\n    /*//////////////////////////////////////////////////////////////\n                              ERC20 STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    uint256 public totalSupply;\n\n    mapping(address => uint256) public balanceOf;\n\n    mapping(address => mapping(address => uint256)) public allowance;\n\n    /*//////////////////////////////////////////////////////////////\n                            EIP-2612 STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    uint256 internal immutable INITIAL_CHAIN_ID;\n\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\n\n    mapping(address => uint256) public nonces;\n\n    /*//////////////////////////////////////////////////////////////\n                               CONSTRUCTOR\n    //////////////////////////////////////////////////////////////*/\n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        uint8 _decimals\n    ) {\n        name = _name;\n        symbol = _symbol;\n        decimals = _decimals;\n\n        INITIAL_CHAIN_ID = block.chainid;\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                               ERC20 LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\n        allowance[msg.sender][spender] = amount;\n\n        emit Approval(msg.sender, spender, amount);\n\n        return true;\n    }\n\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\n        balanceOf[msg.sender] -= amount;\n\n        // Cannot overflow because the sum of all user\n        // balances can't exceed the max uint256 value.\n        unchecked {\n            balanceOf[to] += amount;\n        }\n\n        emit Transfer(msg.sender, to, amount);\n\n        return true;\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual returns (bool) {\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\n\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\n\n        balanceOf[from] -= amount;\n\n        // Cannot overflow because the sum of all user\n        // balances can't exceed the max uint256 value.\n        unchecked {\n            balanceOf[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        return true;\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                             EIP-2612 LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        require(deadline >= block.timestamp, \"PERMIT_DEADLINE_EXPIRED\");\n\n        // Unchecked because the only math done is incrementing\n        // the owner's nonce which cannot realistically overflow.\n        unchecked {\n            address recoveredAddress = ecrecover(\n                keccak256(\n                    abi.encodePacked(\n                        \"\\x19\\x01\",\n                        DOMAIN_SEPARATOR(),\n                        keccak256(\n                            abi.encode(\n                                keccak256(\n                                    \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\"\n                                ),\n                                owner,\n                                spender,\n                                value,\n                                nonces[owner]++,\n                                deadline\n                            )\n                        )\n                    )\n                ),\n                v,\n                r,\n                s\n            );\n\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \"INVALID_SIGNER\");\n\n            allowance[recoveredAddress][spender] = value;\n        }\n\n        emit Approval(owner, spender, value);\n    }\n\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\n    }\n\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\n        return\n            keccak256(\n                abi.encode(\n                    keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\n                    keccak256(bytes(name)),\n                    keccak256(\"1\"),\n                    block.chainid,\n                    address(this)\n                )\n            );\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                        INTERNAL MINT/BURN LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function _mint(address to, uint256 amount) internal virtual {\n        totalSupply += amount;\n\n        // Cannot overflow because the sum of all user\n        // balances can't exceed the max uint256 value.\n        unchecked {\n            balanceOf[to] += amount;\n        }\n\n        emit Transfer(address(0), to, amount);\n    }\n\n    function _burn(address from, uint256 amount) internal virtual {\n        balanceOf[from] -= amount;\n\n        // Cannot underflow because a user's balance\n        // will never be larger than the total supply.\n        unchecked {\n            totalSupply -= amount;\n        }\n\n        emit Transfer(from, address(0), amount);\n    }\n}\n"
			},
			"contracts/contracts/permit2/PermitErrors.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.20;\n\n/// @notice Shared errors between signature based transfers and allowance based transfers.\n\n/// @notice Thrown when validating an inputted signature that is stale\n/// @param signatureDeadline The timestamp at which a signature is no longer valid\nerror SignatureExpired(uint256 signatureDeadline);\n\n/// @notice Thrown when validating that the inputted nonce has not been used\nerror InvalidNonce();\n"
			},
			"contracts/contracts/interfaces/ISignatureTransfer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport {IEIP712} from \"./IEIP712.sol\";\n\n/// @title SignatureTransfer\n/// @notice Handles ERC20 token transfers through signature based actions\n/// @dev Requires user's token approval on the Permit2 contract\ninterface ISignatureTransfer is IEIP712 {\n    /// @notice Thrown when the requested amount for a transfer is larger than the permissioned amount\n    /// @param maxAmount The maximum amount a spender can request to transfer\n    error InvalidAmount(uint256 maxAmount);\n\n    /// @notice Thrown when the number of tokens permissioned to a spender does not match the number of tokens being transferred\n    /// @dev If the spender does not need to transfer the number of tokens permitted, the spender can request amount 0 to be transferred\n    error LengthMismatch();\n\n    /// @notice Emits an event when the owner successfully invalidates an unordered nonce.\n    event UnorderedNonceInvalidation(address indexed owner, uint256 word, uint256 mask);\n\n    /// @notice The token and amount details for a transfer signed in the permit transfer signature\n    struct TokenPermissions {\n        // ERC20 token address\n        address token;\n        // the maximum amount that can be spent\n        uint256 amount;\n    }\n\n    /// @notice The signed permit message for a single token transfer\n    struct PermitTransferFrom {\n        TokenPermissions permitted;\n        // a unique value for every token owner's signature to prevent signature replays\n        uint256 nonce;\n        // deadline on the permit signature\n        uint256 deadline;\n    }\n\n    /// @notice Specifies the recipient address and amount for batched transfers.\n    /// @dev Recipients and amounts correspond to the index of the signed token permissions array.\n    /// @dev Reverts if the requested amount is greater than the permitted signed amount.\n    struct SignatureTransferDetails {\n        // recipient address\n        address to;\n        // spender requested amount\n        uint256 requestedAmount;\n    }\n\n    /// @notice Used to reconstruct the signed permit message for multiple token transfers\n    /// @dev Do not need to pass in spender address as it is required that it is msg.sender\n    /// @dev Note that a user still signs over a spender address\n    struct PermitBatchTransferFrom {\n        // the tokens and corresponding amounts permitted for a transfer\n        TokenPermissions[] permitted;\n        // a unique value for every token owner's signature to prevent signature replays\n        uint256 nonce;\n        // deadline on the permit signature\n        uint256 deadline;\n    }\n\n    /// @notice A map from token owner address and a caller specified word index to a bitmap. Used to set bits in the bitmap to prevent against signature replay protection\n    /// @dev Uses unordered nonces so that permit messages do not need to be spent in a certain order\n    /// @dev The mapping is indexed first by the token owner, then by an index specified in the nonce\n    /// @dev It returns a uint256 bitmap\n    /// @dev The index, or wordPosition is capped at type(uint248).max\n    function nonceBitmap(address, uint256) external view returns (uint256);\n\n    /// @notice Transfers a token using a signed permit message\n    /// @dev Reverts if the requested amount is greater than the permitted signed amount\n    /// @param permit The permit data signed over by the owner\n    /// @param owner The owner of the tokens to transfer\n    /// @param transferDetails The spender's requested transfer details for the permitted token\n    /// @param signature The signature to verify\n    function permitTransferFrom(\n        PermitTransferFrom memory permit,\n        SignatureTransferDetails calldata transferDetails,\n        address owner,\n        bytes calldata signature\n    ) external;\n\n    /// @notice Transfers a token using a signed permit message\n    /// @notice Includes extra data provided by the caller to verify signature over\n    /// @dev The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition\n    /// @dev Reverts if the requested amount is greater than the permitted signed amount\n    /// @param permit The permit data signed over by the owner\n    /// @param owner The owner of the tokens to transfer\n    /// @param transferDetails The spender's requested transfer details for the permitted token\n    /// @param witness Extra data to include when checking the user signature\n    /// @param witnessTypeString The EIP-712 type definition for remaining string stub of the typehash\n    /// @param signature The signature to verify\n    function permitWitnessTransferFrom(\n        PermitTransferFrom memory permit,\n        SignatureTransferDetails calldata transferDetails,\n        address owner,\n        bytes32 witness,\n        string calldata witnessTypeString,\n        bytes calldata signature\n    ) external;\n\n    /// @notice Transfers multiple tokens using a signed permit message\n    /// @param permit The permit data signed over by the owner\n    /// @param owner The owner of the tokens to transfer\n    /// @param transferDetails Specifies the recipient and requested amount for the token transfer\n    /// @param signature The signature to verify\n    function permitTransferFrom(\n        PermitBatchTransferFrom memory permit,\n        SignatureTransferDetails[] calldata transferDetails,\n        address owner,\n        bytes calldata signature\n    ) external;\n\n    /// @notice Transfers multiple tokens using a signed permit message\n    /// @dev The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition\n    /// @notice Includes extra data provided by the caller to verify signature over\n    /// @param permit The permit data signed over by the owner\n    /// @param owner The owner of the tokens to transfer\n    /// @param transferDetails Specifies the recipient and requested amount for the token transfer\n    /// @param witness Extra data to include when checking the user signature\n    /// @param witnessTypeString The EIP-712 type definition for remaining string stub of the typehash\n    /// @param signature The signature to verify\n    function permitWitnessTransferFrom(\n        PermitBatchTransferFrom memory permit,\n        SignatureTransferDetails[] calldata transferDetails,\n        address owner,\n        bytes32 witness,\n        string calldata witnessTypeString,\n        bytes calldata signature\n    ) external;\n\n    /// @notice Invalidates the bits specified in mask for the bitmap at the word position\n    /// @dev The wordPos is maxed at type(uint248).max\n    /// @param wordPos A number to index the nonceBitmap at\n    /// @param mask A bitmap masked against msg.sender's current bitmap at the word position\n    function invalidateUnorderedNonces(uint256 wordPos, uint256 mask) external;\n}\n"
			},
			"contracts/contracts/lib/Allowance.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport {IAllowanceTransfer} from \"../interfaces/IAllowanceTransfer.sol\";\n\nlibrary Allowance {\n    // note if the expiration passed is 0, then it the approval set to the block.timestamp\n    uint256 private constant BLOCK_TIMESTAMP_EXPIRATION = 0;\n\n    /// @notice Sets the allowed amount, expiry, and nonce of the spender's permissions on owner's token.\n    /// @dev Nonce is incremented.\n    /// @dev If the inputted expiration is 0, the stored expiration is set to block.timestamp\n    function updateAll(\n        IAllowanceTransfer.PackedAllowance storage allowed,\n        uint160 amount,\n        uint48 expiration,\n        uint48 nonce\n    ) internal {\n        uint48 storedNonce;\n        unchecked {\n            storedNonce = nonce + 1;\n        }\n\n        uint48 storedExpiration = expiration == BLOCK_TIMESTAMP_EXPIRATION ? uint48(block.timestamp) : expiration;\n\n        uint256 word = pack(amount, storedExpiration, storedNonce);\n        assembly {\n            sstore(allowed.slot, word)\n        }\n    }\n\n    /// @notice Sets the allowed amount and expiry of the spender's permissions on owner's token.\n    /// @dev Nonce does not need to be incremented.\n    function updateAmountAndExpiration(\n        IAllowanceTransfer.PackedAllowance storage allowed,\n        uint160 amount,\n        uint48 expiration\n    ) internal {\n        // If the inputted expiration is 0, the allowance only lasts the duration of the block.\n        allowed.expiration = expiration == 0 ? uint48(block.timestamp) : expiration;\n        allowed.amount = amount;\n    }\n\n    /// @notice Computes the packed slot of the amount, expiration, and nonce that make up PackedAllowance\n    function pack(uint160 amount, uint48 expiration, uint48 nonce) internal pure returns (uint256 word) {\n        word = (uint256(nonce) << 208) | uint256(expiration) << 160 | amount;\n    }\n}\n"
			},
			"contracts/contracts/interfaces/IAllowanceTransfer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IEIP712} from \"./IEIP712.sol\";\n\n/// @title AllowanceTransfer\n/// @notice Handles ERC20 token permissions through signature based allowance setting and ERC20 token transfers by checking allowed amounts\n/// @dev Requires user's token approval on the Permit2 contract\ninterface IAllowanceTransfer is IEIP712 {\n    /// @notice Thrown when an allowance on a token has expired.\n    /// @param deadline The timestamp at which the allowed amount is no longer valid\n    error AllowanceExpired(uint256 deadline);\n\n    /// @notice Thrown when an allowance on a token has been depleted.\n    /// @param amount The maximum amount allowed\n    error InsufficientAllowance(uint256 amount);\n\n    /// @notice Thrown when too many nonces are invalidated.\n    error ExcessiveInvalidation();\n\n    /// @notice Emits an event when the owner successfully invalidates an ordered nonce.\n    event NonceInvalidation(\n        address indexed owner, address indexed token, address indexed spender, uint48 newNonce, uint48 oldNonce\n    );\n\n    /// @notice Emits an event when the owner successfully sets permissions on a token for the spender.\n    event Approval(\n        address indexed owner, address indexed token, address indexed spender, uint160 amount, uint48 expiration\n    );\n\n    /// @notice Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender.\n    event Permit(\n        address indexed owner,\n        address indexed token,\n        address indexed spender,\n        uint160 amount,\n        uint48 expiration,\n        uint48 nonce\n    );\n\n    /// @notice Emits an event when the owner sets the allowance back to 0 with the lockdown function.\n    event Lockdown(address indexed owner, address token, address spender);\n\n    /// @notice The permit data for a token\n    struct PermitDetails {\n        // ERC20 token address\n        address token;\n        // the maximum amount allowed to spend\n        uint160 amount;\n        // timestamp at which a spender's token allowances become invalid\n        uint48 expiration;\n        // an incrementing value indexed per owner,token,and spender for each signature\n        uint48 nonce;\n    }\n\n    /// @notice The permit message signed for a single token allowance\n    struct PermitSingle {\n        // the permit data for a single token alownce\n        PermitDetails details;\n        // address permissioned on the allowed tokens\n        address spender;\n        // deadline on the permit signature\n        uint256 sigDeadline;\n    }\n\n    /// @notice The permit message signed for multiple token allowances\n    struct PermitBatch {\n        // the permit data for multiple token allowances\n        PermitDetails[] details;\n        // address permissioned on the allowed tokens\n        address spender;\n        // deadline on the permit signature\n        uint256 sigDeadline;\n    }\n\n    /// @notice The saved permissions\n    /// @dev This info is saved per owner, per token, per spender and all signed over in the permit message\n    /// @dev Setting amount to type(uint160).max sets an unlimited approval\n    struct PackedAllowance {\n        // amount allowed\n        uint160 amount;\n        // permission expiry\n        uint48 expiration;\n        // an incrementing value indexed per owner,token,and spender for each signature\n        uint48 nonce;\n    }\n\n    /// @notice A token spender pair.\n    struct TokenSpenderPair {\n        // the token the spender is approved\n        address token;\n        // the spender address\n        address spender;\n    }\n\n    /// @notice Details for a token transfer.\n    struct AllowanceTransferDetails {\n        // the owner of the token\n        address from;\n        // the recipient of the token\n        address to;\n        // the amount of the token\n        uint160 amount;\n        // the token to be transferred\n        address token;\n    }\n\n    /// @notice A mapping from owner address to token address to spender address to PackedAllowance struct, which contains details and conditions of the approval.\n    /// @notice The mapping is indexed in the above order see: allowance[ownerAddress][tokenAddress][spenderAddress]\n    /// @dev The packed slot holds the allowed amount, expiration at which the allowed amount is no longer valid, and current nonce thats updated on any signature based approvals.\n    function allowance(address user, address token, address spender)\n        external\n        view\n        returns (uint160 amount, uint48 expiration, uint48 nonce);\n\n    /// @notice Approves the spender to use up to amount of the specified token up until the expiration\n    /// @param token The token to approve\n    /// @param spender The spender address to approve\n    /// @param amount The approved amount of the token\n    /// @param expiration The timestamp at which the approval is no longer valid\n    /// @dev The packed allowance also holds a nonce, which will stay unchanged in approve\n    /// @dev Setting amount to type(uint160).max sets an unlimited approval\n    function approve(address token, address spender, uint160 amount, uint48 expiration) external;\n\n    /// @notice Permit a spender to a given amount of the owners token via the owner's EIP-712 signature\n    /// @dev May fail if the owner's nonce was invalidated in-flight by invalidateNonce\n    /// @param owner The owner of the tokens being approved\n    /// @param permitSingle Data signed over by the owner specifying the terms of approval\n    /// @param signature The owner's signature over the permit data\n    function permit(address owner, PermitSingle memory permitSingle, bytes calldata signature) external;\n\n    /// @notice Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature\n    /// @dev May fail if the owner's nonce was invalidated in-flight by invalidateNonce\n    /// @param owner The owner of the tokens being approved\n    /// @param permitBatch Data signed over by the owner specifying the terms of approval\n    /// @param signature The owner's signature over the permit data\n    function permit(address owner, PermitBatch memory permitBatch, bytes calldata signature) external;\n\n    /// @notice Transfer approved tokens from one address to another\n    /// @param from The address to transfer from\n    /// @param to The address of the recipient\n    /// @param amount The amount of the token to transfer\n    /// @param token The token address to transfer\n    /// @dev Requires the from address to have approved at least the desired amount\n    /// of tokens to msg.sender.\n    function transferFrom(address from, address to, uint160 amount, address token) external;\n\n    /// @notice Transfer approved tokens in a batch\n    /// @param transferDetails Array of owners, recipients, amounts, and tokens for the transfers\n    /// @dev Requires the from addresses to have approved at least the desired amount\n    /// of tokens to msg.sender.\n    function transferFrom(AllowanceTransferDetails[] calldata transferDetails) external;\n\n    /// @notice Enables performing a \"lockdown\" of the sender's Permit2 identity\n    /// by batch revoking approvals\n    /// @param approvals Array of approvals to revoke.\n    function lockdown(TokenSpenderPair[] calldata approvals) external;\n\n    /// @notice Invalidate nonces for a given (token, spender) pair\n    /// @param token The token to invalidate nonces for\n    /// @param spender The spender to invalidate nonces for\n    /// @param newNonce The new nonce to set. Invalidates all nonces less than it.\n    /// @dev Can't invalidate more than 2**16 nonces per transaction.\n    function invalidateNonces(address token, address spender, uint48 newNonce) external;\n}\n"
			},
			"contracts/contracts/interfaces/IEIP712.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IEIP712 {\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"contracts/contracts/interfaces/IERC1271.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IERC1271 {\n    /// @dev Should return whether the signature provided is valid for the provided data\n    /// @param hash      Hash of the data to be signed\n    /// @param signature Signature byte array associated with _data\n    /// @return magicValue The bytes4 magic value 0x1626ba7e\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/contracts/interfaces/IAllowanceTransfer.sol": {
				"IAllowanceTransfer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "AllowanceExpired",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExcessiveInvalidation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "InsufficientAllowance",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "expiration",
									"type": "uint48"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "Lockdown",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "newNonce",
									"type": "uint48"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "oldNonce",
									"type": "uint48"
								}
							],
							"name": "NonceInvalidation",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "expiration",
									"type": "uint48"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "nonce",
									"type": "uint48"
								}
							],
							"name": "Permit",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"internalType": "uint48",
									"name": "expiration",
									"type": "uint48"
								},
								{
									"internalType": "uint48",
									"name": "nonce",
									"type": "uint48"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"internalType": "uint48",
									"name": "expiration",
									"type": "uint48"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint48",
									"name": "newNonce",
									"type": "uint48"
								}
							],
							"name": "invalidateNonces",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "spender",
											"type": "address"
										}
									],
									"internalType": "struct IAllowanceTransfer.TokenSpenderPair[]",
									"name": "approvals",
									"type": "tuple[]"
								}
							],
							"name": "lockdown",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint160",
													"name": "amount",
													"type": "uint160"
												},
												{
													"internalType": "uint48",
													"name": "expiration",
													"type": "uint48"
												},
												{
													"internalType": "uint48",
													"name": "nonce",
													"type": "uint48"
												}
											],
											"internalType": "struct IAllowanceTransfer.PermitDetails[]",
											"name": "details",
											"type": "tuple[]"
										},
										{
											"internalType": "address",
											"name": "spender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "sigDeadline",
											"type": "uint256"
										}
									],
									"internalType": "struct IAllowanceTransfer.PermitBatch",
									"name": "permitBatch",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint160",
													"name": "amount",
													"type": "uint160"
												},
												{
													"internalType": "uint48",
													"name": "expiration",
													"type": "uint48"
												},
												{
													"internalType": "uint48",
													"name": "nonce",
													"type": "uint48"
												}
											],
											"internalType": "struct IAllowanceTransfer.PermitDetails",
											"name": "details",
											"type": "tuple"
										},
										{
											"internalType": "address",
											"name": "spender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "sigDeadline",
											"type": "uint256"
										}
									],
									"internalType": "struct IAllowanceTransfer.PermitSingle",
									"name": "permitSingle",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "from",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint160",
											"name": "amount",
											"type": "uint160"
										},
										{
											"internalType": "address",
											"name": "token",
											"type": "address"
										}
									],
									"internalType": "struct IAllowanceTransfer.AllowanceTransferDetails[]",
									"name": "transferDetails",
									"type": "tuple[]"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Requires user's token approval on the Permit2 contract",
						"errors": {
							"AllowanceExpired(uint256)": [
								{
									"params": {
										"deadline": "The timestamp at which the allowed amount is no longer valid"
									}
								}
							],
							"InsufficientAllowance(uint256)": [
								{
									"params": {
										"amount": "The maximum amount allowed"
									}
								}
							]
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address,address)": {
								"details": "The packed slot holds the allowed amount, expiration at which the allowed amount is no longer valid, and current nonce thats updated on any signature based approvals."
							},
							"approve(address,address,uint160,uint48)": {
								"details": "The packed allowance also holds a nonce, which will stay unchanged in approveSetting amount to type(uint160).max sets an unlimited approval",
								"params": {
									"amount": "The approved amount of the token",
									"expiration": "The timestamp at which the approval is no longer valid",
									"spender": "The spender address to approve",
									"token": "The token to approve"
								}
							},
							"invalidateNonces(address,address,uint48)": {
								"details": "Can't invalidate more than 2**16 nonces per transaction.",
								"params": {
									"newNonce": "The new nonce to set. Invalidates all nonces less than it.",
									"spender": "The spender to invalidate nonces for",
									"token": "The token to invalidate nonces for"
								}
							},
							"lockdown((address,address)[])": {
								"params": {
									"approvals": "Array of approvals to revoke."
								}
							},
							"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)": {
								"details": "May fail if the owner's nonce was invalidated in-flight by invalidateNonce",
								"params": {
									"owner": "The owner of the tokens being approved",
									"permitSingle": "Data signed over by the owner specifying the terms of approval",
									"signature": "The owner's signature over the permit data"
								}
							},
							"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)": {
								"details": "May fail if the owner's nonce was invalidated in-flight by invalidateNonce",
								"params": {
									"owner": "The owner of the tokens being approved",
									"permitBatch": "Data signed over by the owner specifying the terms of approval",
									"signature": "The owner's signature over the permit data"
								}
							},
							"transferFrom((address,address,uint160,address)[])": {
								"details": "Requires the from addresses to have approved at least the desired amount of tokens to msg.sender.",
								"params": {
									"transferDetails": "Array of owners, recipients, amounts, and tokens for the transfers"
								}
							},
							"transferFrom(address,address,uint160,address)": {
								"details": "Requires the from address to have approved at least the desired amount of tokens to msg.sender.",
								"params": {
									"amount": "The amount of the token to transfer",
									"from": "The address to transfer from",
									"to": "The address of the recipient",
									"token": "The token address to transfer"
								}
							}
						},
						"title": "AllowanceTransfer",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address,address)": "927da105",
							"approve(address,address,uint160,uint48)": "87517c45",
							"invalidateNonces(address,address,uint48)": "65d9723c",
							"lockdown((address,address)[])": "cc53287f",
							"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)": "2b67b570",
							"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)": "2a2d80d1",
							"transferFrom((address,address,uint160,address)[])": "0d58b1db",
							"transferFrom(address,address,uint160,address)": "36c78516"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"AllowanceExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExcessiveInvalidation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"Lockdown\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"newNonce\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"oldNonce\",\"type\":\"uint48\"}],\"name\":\"NonceInvalidation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"name\":\"Permit\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"newNonce\",\"type\":\"uint48\"}],\"name\":\"invalidateNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"internalType\":\"struct IAllowanceTransfer.TokenSpenderPair[]\",\"name\":\"approvals\",\"type\":\"tuple[]\"}],\"name\":\"lockdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IAllowanceTransfer.PermitDetails[]\",\"name\":\"details\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sigDeadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowanceTransfer.PermitBatch\",\"name\":\"permitBatch\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IAllowanceTransfer.PermitDetails\",\"name\":\"details\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sigDeadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowanceTransfer.PermitSingle\",\"name\":\"permitSingle\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"internalType\":\"struct IAllowanceTransfer.AllowanceTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Requires user's token approval on the Permit2 contract\",\"errors\":{\"AllowanceExpired(uint256)\":[{\"params\":{\"deadline\":\"The timestamp at which the allowed amount is no longer valid\"}}],\"InsufficientAllowance(uint256)\":[{\"params\":{\"amount\":\"The maximum amount allowed\"}}]},\"kind\":\"dev\",\"methods\":{\"allowance(address,address,address)\":{\"details\":\"The packed slot holds the allowed amount, expiration at which the allowed amount is no longer valid, and current nonce thats updated on any signature based approvals.\"},\"approve(address,address,uint160,uint48)\":{\"details\":\"The packed allowance also holds a nonce, which will stay unchanged in approveSetting amount to type(uint160).max sets an unlimited approval\",\"params\":{\"amount\":\"The approved amount of the token\",\"expiration\":\"The timestamp at which the approval is no longer valid\",\"spender\":\"The spender address to approve\",\"token\":\"The token to approve\"}},\"invalidateNonces(address,address,uint48)\":{\"details\":\"Can't invalidate more than 2**16 nonces per transaction.\",\"params\":{\"newNonce\":\"The new nonce to set. Invalidates all nonces less than it.\",\"spender\":\"The spender to invalidate nonces for\",\"token\":\"The token to invalidate nonces for\"}},\"lockdown((address,address)[])\":{\"params\":{\"approvals\":\"Array of approvals to revoke.\"}},\"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)\":{\"details\":\"May fail if the owner's nonce was invalidated in-flight by invalidateNonce\",\"params\":{\"owner\":\"The owner of the tokens being approved\",\"permitSingle\":\"Data signed over by the owner specifying the terms of approval\",\"signature\":\"The owner's signature over the permit data\"}},\"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)\":{\"details\":\"May fail if the owner's nonce was invalidated in-flight by invalidateNonce\",\"params\":{\"owner\":\"The owner of the tokens being approved\",\"permitBatch\":\"Data signed over by the owner specifying the terms of approval\",\"signature\":\"The owner's signature over the permit data\"}},\"transferFrom((address,address,uint160,address)[])\":{\"details\":\"Requires the from addresses to have approved at least the desired amount of tokens to msg.sender.\",\"params\":{\"transferDetails\":\"Array of owners, recipients, amounts, and tokens for the transfers\"}},\"transferFrom(address,address,uint160,address)\":{\"details\":\"Requires the from address to have approved at least the desired amount of tokens to msg.sender.\",\"params\":{\"amount\":\"The amount of the token to transfer\",\"from\":\"The address to transfer from\",\"to\":\"The address of the recipient\",\"token\":\"The token address to transfer\"}}},\"title\":\"AllowanceTransfer\",\"version\":1},\"userdoc\":{\"errors\":{\"AllowanceExpired(uint256)\":[{\"notice\":\"Thrown when an allowance on a token has expired.\"}],\"ExcessiveInvalidation()\":[{\"notice\":\"Thrown when too many nonces are invalidated.\"}],\"InsufficientAllowance(uint256)\":[{\"notice\":\"Thrown when an allowance on a token has been depleted.\"}]},\"events\":{\"Approval(address,address,address,uint160,uint48)\":{\"notice\":\"Emits an event when the owner successfully sets permissions on a token for the spender.\"},\"Lockdown(address,address,address)\":{\"notice\":\"Emits an event when the owner sets the allowance back to 0 with the lockdown function.\"},\"NonceInvalidation(address,address,address,uint48,uint48)\":{\"notice\":\"Emits an event when the owner successfully invalidates an ordered nonce.\"},\"Permit(address,address,address,uint160,uint48,uint48)\":{\"notice\":\"Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender.\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address,address)\":{\"notice\":\"A mapping from owner address to token address to spender address to PackedAllowance struct, which contains details and conditions of the approval.The mapping is indexed in the above order see: allowance[ownerAddress][tokenAddress][spenderAddress]\"},\"approve(address,address,uint160,uint48)\":{\"notice\":\"Approves the spender to use up to amount of the specified token up until the expiration\"},\"invalidateNonces(address,address,uint48)\":{\"notice\":\"Invalidate nonces for a given (token, spender) pair\"},\"lockdown((address,address)[])\":{\"notice\":\"Enables performing a \\\"lockdown\\\" of the sender's Permit2 identity by batch revoking approvals\"},\"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)\":{\"notice\":\"Permit a spender to a given amount of the owners token via the owner's EIP-712 signature\"},\"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)\":{\"notice\":\"Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature\"},\"transferFrom((address,address,uint160,address)[])\":{\"notice\":\"Transfer approved tokens in a batch\"},\"transferFrom(address,address,uint160,address)\":{\"notice\":\"Transfer approved tokens from one address to another\"}},\"notice\":\"Handles ERC20 token permissions through signature based allowance setting and ERC20 token transfers by checking allowed amounts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/interfaces/IAllowanceTransfer.sol\":\"IAllowanceTransfer\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x37f0ac203b6ef605c9533e1a739477e8e9dcea90710b40e645a367f8a21ace29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0104d72aeaec1cd66cc232e7de7b7ead08608efcc179491b8a66387614670b0\",\"dweb:/ipfs/QmfAZDyuNC9FXXbnJUwqHNwmAK6uRrXxtWEytLsxjskPsN\"]},\"contracts/contracts/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"AllowanceExpired(uint256)": [
								{
									"notice": "Thrown when an allowance on a token has expired."
								}
							],
							"ExcessiveInvalidation()": [
								{
									"notice": "Thrown when too many nonces are invalidated."
								}
							],
							"InsufficientAllowance(uint256)": [
								{
									"notice": "Thrown when an allowance on a token has been depleted."
								}
							]
						},
						"events": {
							"Approval(address,address,address,uint160,uint48)": {
								"notice": "Emits an event when the owner successfully sets permissions on a token for the spender."
							},
							"Lockdown(address,address,address)": {
								"notice": "Emits an event when the owner sets the allowance back to 0 with the lockdown function."
							},
							"NonceInvalidation(address,address,address,uint48,uint48)": {
								"notice": "Emits an event when the owner successfully invalidates an ordered nonce."
							},
							"Permit(address,address,address,uint160,uint48,uint48)": {
								"notice": "Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender."
							}
						},
						"kind": "user",
						"methods": {
							"allowance(address,address,address)": {
								"notice": "A mapping from owner address to token address to spender address to PackedAllowance struct, which contains details and conditions of the approval.The mapping is indexed in the above order see: allowance[ownerAddress][tokenAddress][spenderAddress]"
							},
							"approve(address,address,uint160,uint48)": {
								"notice": "Approves the spender to use up to amount of the specified token up until the expiration"
							},
							"invalidateNonces(address,address,uint48)": {
								"notice": "Invalidate nonces for a given (token, spender) pair"
							},
							"lockdown((address,address)[])": {
								"notice": "Enables performing a \"lockdown\" of the sender's Permit2 identity by batch revoking approvals"
							},
							"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)": {
								"notice": "Permit a spender to a given amount of the owners token via the owner's EIP-712 signature"
							},
							"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)": {
								"notice": "Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature"
							},
							"transferFrom((address,address,uint160,address)[])": {
								"notice": "Transfer approved tokens in a batch"
							},
							"transferFrom(address,address,uint160,address)": {
								"notice": "Transfer approved tokens from one address to another"
							}
						},
						"notice": "Handles ERC20 token permissions through signature based allowance setting and ERC20 token transfers by checking allowed amounts",
						"version": 1
					}
				}
			},
			"contracts/contracts/interfaces/IEIP712.sol": {
				"IEIP712": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/interfaces/IEIP712.sol\":\"IEIP712\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/interfaces/IERC1271.sol": {
				"IERC1271": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "magicValue",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"isValidSignature(bytes32,bytes)": {
								"details": "Should return whether the signature provided is valid for the provided data",
								"params": {
									"hash": "Hash of the data to be signed",
									"signature": "Signature byte array associated with _data"
								},
								"returns": {
									"magicValue": "The bytes4 magic value 0x1626ba7e"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isValidSignature(bytes32,bytes)": "1626ba7e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"hash\":\"Hash of the data to be signed\",\"signature\":\"Signature byte array associated with _data\"},\"returns\":{\"magicValue\":\"The bytes4 magic value 0x1626ba7e\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/interfaces/IERC1271.sol\":\"IERC1271\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0a546b8535127fb4a49d36d5f306fd5a8bbe6125a1852f935b9bb85a04c1acef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b99651e2df98e283a97c46d8d1ac4eff0d6a3618e25f7f85294472a670b541c\",\"dweb:/ipfs/QmYRy5G8fXE8BfmyvGEbESEYZPPg3zJEFxHzR5GJZEMMTk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/interfaces/ISignatureTransfer.sol": {
				"ISignatureTransfer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "maxAmount",
									"type": "uint256"
								}
							],
							"name": "InvalidAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "LengthMismatch",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "word",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "mask",
									"type": "uint256"
								}
							],
							"name": "UnorderedNonceInvalidation",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "wordPos",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "mask",
									"type": "uint256"
								}
							],
							"name": "invalidateUnorderedNonces",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "nonceBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct ISignatureTransfer.TokenPermissions",
											"name": "permitted",
											"type": "tuple"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.PermitTransferFrom",
									"name": "permit",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "requestedAmount",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.SignatureTransferDetails",
									"name": "transferDetails",
									"type": "tuple"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permitTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct ISignatureTransfer.TokenPermissions[]",
											"name": "permitted",
											"type": "tuple[]"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.PermitBatchTransferFrom",
									"name": "permit",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "requestedAmount",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.SignatureTransferDetails[]",
									"name": "transferDetails",
									"type": "tuple[]"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permitTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct ISignatureTransfer.TokenPermissions",
											"name": "permitted",
											"type": "tuple"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.PermitTransferFrom",
									"name": "permit",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "requestedAmount",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.SignatureTransferDetails",
									"name": "transferDetails",
									"type": "tuple"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "witness",
									"type": "bytes32"
								},
								{
									"internalType": "string",
									"name": "witnessTypeString",
									"type": "string"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permitWitnessTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct ISignatureTransfer.TokenPermissions[]",
											"name": "permitted",
											"type": "tuple[]"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.PermitBatchTransferFrom",
									"name": "permit",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "requestedAmount",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.SignatureTransferDetails[]",
									"name": "transferDetails",
									"type": "tuple[]"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "witness",
									"type": "bytes32"
								},
								{
									"internalType": "string",
									"name": "witnessTypeString",
									"type": "string"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permitWitnessTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Requires user's token approval on the Permit2 contract",
						"errors": {
							"InvalidAmount(uint256)": [
								{
									"params": {
										"maxAmount": "The maximum amount a spender can request to transfer"
									}
								}
							],
							"LengthMismatch()": [
								{
									"details": "If the spender does not need to transfer the number of tokens permitted, the spender can request amount 0 to be transferred"
								}
							]
						},
						"kind": "dev",
						"methods": {
							"invalidateUnorderedNonces(uint256,uint256)": {
								"details": "The wordPos is maxed at type(uint248).max",
								"params": {
									"mask": "A bitmap masked against msg.sender's current bitmap at the word position",
									"wordPos": "A number to index the nonceBitmap at"
								}
							},
							"nonceBitmap(address,uint256)": {
								"details": "Uses unordered nonces so that permit messages do not need to be spent in a certain orderThe mapping is indexed first by the token owner, then by an index specified in the nonceIt returns a uint256 bitmapThe index, or wordPosition is capped at type(uint248).max"
							},
							"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)": {
								"details": "Reverts if the requested amount is greater than the permitted signed amount",
								"params": {
									"owner": "The owner of the tokens to transfer",
									"permit": "The permit data signed over by the owner",
									"signature": "The signature to verify",
									"transferDetails": "The spender's requested transfer details for the permitted token"
								}
							},
							"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)": {
								"params": {
									"owner": "The owner of the tokens to transfer",
									"permit": "The permit data signed over by the owner",
									"signature": "The signature to verify",
									"transferDetails": "Specifies the recipient and requested amount for the token transfer"
								}
							},
							"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)": {
								"details": "The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definitionReverts if the requested amount is greater than the permitted signed amount",
								"params": {
									"owner": "The owner of the tokens to transfer",
									"permit": "The permit data signed over by the owner",
									"signature": "The signature to verify",
									"transferDetails": "The spender's requested transfer details for the permitted token",
									"witness": "Extra data to include when checking the user signature",
									"witnessTypeString": "The EIP-712 type definition for remaining string stub of the typehash"
								}
							},
							"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)": {
								"details": "The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition",
								"params": {
									"owner": "The owner of the tokens to transfer",
									"permit": "The permit data signed over by the owner",
									"signature": "The signature to verify",
									"transferDetails": "Specifies the recipient and requested amount for the token transfer",
									"witness": "Extra data to include when checking the user signature",
									"witnessTypeString": "The EIP-712 type definition for remaining string stub of the typehash"
								}
							}
						},
						"title": "SignatureTransfer",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"invalidateUnorderedNonces(uint256,uint256)": "3ff9dcb1",
							"nonceBitmap(address,uint256)": "4fe02b44",
							"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)": "30f28b7a",
							"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)": "edd9444b",
							"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)": "137c29fe",
							"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)": "fe8ec1a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LengthMismatch\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"word\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mask\",\"type\":\"uint256\"}],\"name\":\"UnorderedNonceInvalidation\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wordPos\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mask\",\"type\":\"uint256\"}],\"name\":\"invalidateUnorderedNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nonceBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions\",\"name\":\"permitted\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails\",\"name\":\"transferDetails\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions[]\",\"name\":\"permitted\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitBatchTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions\",\"name\":\"permitted\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails\",\"name\":\"transferDetails\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypeString\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitWitnessTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions[]\",\"name\":\"permitted\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitBatchTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypeString\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitWitnessTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Requires user's token approval on the Permit2 contract\",\"errors\":{\"InvalidAmount(uint256)\":[{\"params\":{\"maxAmount\":\"The maximum amount a spender can request to transfer\"}}],\"LengthMismatch()\":[{\"details\":\"If the spender does not need to transfer the number of tokens permitted, the spender can request amount 0 to be transferred\"}]},\"kind\":\"dev\",\"methods\":{\"invalidateUnorderedNonces(uint256,uint256)\":{\"details\":\"The wordPos is maxed at type(uint248).max\",\"params\":{\"mask\":\"A bitmap masked against msg.sender's current bitmap at the word position\",\"wordPos\":\"A number to index the nonceBitmap at\"}},\"nonceBitmap(address,uint256)\":{\"details\":\"Uses unordered nonces so that permit messages do not need to be spent in a certain orderThe mapping is indexed first by the token owner, then by an index specified in the nonceIt returns a uint256 bitmapThe index, or wordPosition is capped at type(uint248).max\"},\"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)\":{\"details\":\"Reverts if the requested amount is greater than the permitted signed amount\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"The spender's requested transfer details for the permitted token\"}},\"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)\":{\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"Specifies the recipient and requested amount for the token transfer\"}},\"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)\":{\"details\":\"The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definitionReverts if the requested amount is greater than the permitted signed amount\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"The spender's requested transfer details for the permitted token\",\"witness\":\"Extra data to include when checking the user signature\",\"witnessTypeString\":\"The EIP-712 type definition for remaining string stub of the typehash\"}},\"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)\":{\"details\":\"The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"Specifies the recipient and requested amount for the token transfer\",\"witness\":\"Extra data to include when checking the user signature\",\"witnessTypeString\":\"The EIP-712 type definition for remaining string stub of the typehash\"}}},\"title\":\"SignatureTransfer\",\"version\":1},\"userdoc\":{\"errors\":{\"InvalidAmount(uint256)\":[{\"notice\":\"Thrown when the requested amount for a transfer is larger than the permissioned amount\"}],\"LengthMismatch()\":[{\"notice\":\"Thrown when the number of tokens permissioned to a spender does not match the number of tokens being transferred\"}]},\"events\":{\"UnorderedNonceInvalidation(address,uint256,uint256)\":{\"notice\":\"Emits an event when the owner successfully invalidates an unordered nonce.\"}},\"kind\":\"user\",\"methods\":{\"invalidateUnorderedNonces(uint256,uint256)\":{\"notice\":\"Invalidates the bits specified in mask for the bitmap at the word position\"},\"nonceBitmap(address,uint256)\":{\"notice\":\"A map from token owner address and a caller specified word index to a bitmap. Used to set bits in the bitmap to prevent against signature replay protection\"},\"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)\":{\"notice\":\"Transfers a token using a signed permit message\"},\"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)\":{\"notice\":\"Transfers multiple tokens using a signed permit message\"},\"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)\":{\"notice\":\"Transfers a token using a signed permit messageIncludes extra data provided by the caller to verify signature over\"},\"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)\":{\"notice\":\"Transfers multiple tokens using a signed permit messageIncludes extra data provided by the caller to verify signature over\"}},\"notice\":\"Handles ERC20 token transfers through signature based actions\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/interfaces/ISignatureTransfer.sol\":\"ISignatureTransfer\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]},\"contracts/contracts/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0x16a051e45a3f1ab341a8560aa106c483c3d0a3be4abc52225651c78939b18f93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7cda3c6ed2db1454b4a6ec1e418956d199019085d92163a038d0064615a5acb\",\"dweb:/ipfs/QmWDfZwi8jcGFBuiwHKq6iBWCZq2mA8HmkM9NNTzotMpXH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"InvalidAmount(uint256)": [
								{
									"notice": "Thrown when the requested amount for a transfer is larger than the permissioned amount"
								}
							],
							"LengthMismatch()": [
								{
									"notice": "Thrown when the number of tokens permissioned to a spender does not match the number of tokens being transferred"
								}
							]
						},
						"events": {
							"UnorderedNonceInvalidation(address,uint256,uint256)": {
								"notice": "Emits an event when the owner successfully invalidates an unordered nonce."
							}
						},
						"kind": "user",
						"methods": {
							"invalidateUnorderedNonces(uint256,uint256)": {
								"notice": "Invalidates the bits specified in mask for the bitmap at the word position"
							},
							"nonceBitmap(address,uint256)": {
								"notice": "A map from token owner address and a caller specified word index to a bitmap. Used to set bits in the bitmap to prevent against signature replay protection"
							},
							"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)": {
								"notice": "Transfers a token using a signed permit message"
							},
							"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)": {
								"notice": "Transfers multiple tokens using a signed permit message"
							},
							"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)": {
								"notice": "Transfers a token using a signed permit messageIncludes extra data provided by the caller to verify signature over"
							},
							"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)": {
								"notice": "Transfers multiple tokens using a signed permit messageIncludes extra data provided by the caller to verify signature over"
							}
						},
						"notice": "Handles ERC20 token transfers through signature based actions",
						"version": 1
					}
				}
			},
			"contracts/contracts/lib/Allowance.sol": {
				"Allowance": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/lib/Allowance.sol\":132:1904  library Allowance {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"contracts/contracts/lib/Allowance.sol\":132:1904  library Allowance {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204ef7bdab722a27c93bf30b6ad82017a13fc88f069274683ed026e4a4bca505c464736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212204ef7bdab722a27c93bf30b6ad82017a13fc88f069274683ed026e4a4bca505c464736f6c63430008140033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E 0xF7 0xBD 0xAB PUSH19 0x2A27C93BF30B6AD82017A13FC88F069274683E 0xD0 0x26 0xE4 LOG4 0xBC 0xA5 SDIV 0xC4 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "132:1772:4:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea26469706673582212204ef7bdab722a27c93bf30b6ad82017a13fc88f069274683ed026e4a4bca505c464736f6c63430008140033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E 0xF7 0xBD 0xAB PUSH19 0x2A27C93BF30B6AD82017A13FC88F069274683E 0xD0 0x26 0xE4 LOG4 0xBC 0xA5 SDIV 0xC4 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "132:1772:4:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"pack(uint160,uint48,uint48)": "infinite",
								"updateAll(struct IAllowanceTransfer.PackedAllowance storage pointer,uint160,uint48,uint48)": "infinite",
								"updateAmountAndExpiration(struct IAllowanceTransfer.PackedAllowance storage pointer,uint160,uint48)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 132,
									"end": 1904,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 132,
									"end": 1904,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 132,
									"end": 1904,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 132,
									"end": 1904,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 132,
									"end": 1904,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 132,
									"end": 1904,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 1904,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 132,
									"end": 1904,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 1904,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 132,
									"end": 1904,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 132,
									"end": 1904,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 1904,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 132,
									"end": 1904,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 132,
									"end": 1904,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 132,
									"end": 1904,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 132,
									"end": 1904,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "library_deploy_address"
								},
								{
									"begin": 132,
									"end": 1904,
									"name": "RETURN",
									"source": 4
								},
								{
									"begin": 132,
									"end": 1904,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 1904,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 132,
									"end": 1904,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 1904,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 132,
									"end": 1904,
									"name": "REVERT",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204ef7bdab722a27c93bf30b6ad82017a13fc88f069274683ed026e4a4bca505c464736f6c63430008140033",
									".code": [
										{
											"begin": 132,
											"end": 1904,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 1904,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 132,
											"end": 1904,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"contracts/contracts/interfaces/IAllowanceTransfer.sol",
								"contracts/contracts/interfaces/IEIP712.sol",
								"contracts/contracts/interfaces/IERC1271.sol",
								"contracts/contracts/interfaces/ISignatureTransfer.sol",
								"contracts/contracts/lib/Allowance.sol",
								"contracts/contracts/lib/PermitHash.sol",
								"contracts/contracts/lib/SignatureVerification.sol",
								"contracts/contracts/permit2/AllowanceTransfer.sol",
								"contracts/contracts/permit2/EIP712.sol",
								"contracts/contracts/permit2/Permit2.sol",
								"contracts/contracts/permit2/PermitErrors.sol",
								"contracts/contracts/permit2/SignatureTransfer.sol",
								"solmate/src/tokens/ERC20.sol",
								"solmate/src/utils/SafeTransferLib.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/lib/Allowance.sol\":\"Allowance\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x37f0ac203b6ef605c9533e1a739477e8e9dcea90710b40e645a367f8a21ace29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0104d72aeaec1cd66cc232e7de7b7ead08608efcc179491b8a66387614670b0\",\"dweb:/ipfs/QmfAZDyuNC9FXXbnJUwqHNwmAK6uRrXxtWEytLsxjskPsN\"]},\"contracts/contracts/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]},\"contracts/contracts/lib/Allowance.sol\":{\"keccak256\":\"0xc44ad59f9c6306b5f3d019ce95e29a5de88862f7bdc51375d44c15fca536bf2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f33f02f549c1d7dcb45a592f1b4082ceabbea5f9a7190567e85ffd23b670788\",\"dweb:/ipfs/QmUnBU5BoudGbN3dtLTci1xb6q5SxpPwTBpAC1cq6nNEg2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/lib/PermitHash.sol": {
				"PermitHash": {
					"abi": [
						{
							"inputs": [],
							"name": "_PERMIT_BATCH_TRANSFER_FROM_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_PERMIT_BATCH_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_PERMIT_DETAILS_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_PERMIT_SINGLE_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_PERMIT_TRANSFER_FROM_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_TOKEN_PERMISSIONS_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_TOKEN_PERMISSIONS_TYPESTRING",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/lib/PermitHash.sol\":205:5770  library PermitHash {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"contracts/contracts/lib/PermitHash.sol\":205:5770  library PermitHash {... */\n      0x80\n      0x40\n      dup2\n      dup2\n      mstore\n      jumpi(tag_2, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_2:\n      0x00\n      swap2\n      dup3\n      calldataload\n      0xe0\n      shr\n      swap1\n      dup2\n      0x3eb8b8fd\n      eq\n      tag_4\n      jumpi\n      pop\n      dup1\n      0x415e982d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6302c3cf\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6e4f2775\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x78f16830\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x84b8efbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x90bbf2f3\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc0c7fa7e\n      eq\n      tag_18\n      jumpi\n      0xc5df4f03\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_22\n      jumpi\n      0x20\n      swap1\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      0xf3841cd1ff0085026a6327b620b67997ce40f282c88a8e905a7a5626e310f3d0\n        /* \"contracts/contracts/lib/PermitHash.sol\":205:5770  library PermitHash {... */\n      dup2\n      mstore\n      return\n    tag_22:\n      pop\n      dup1\n      revert\n    tag_18:\n      pop\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_22\n      jumpi\n      dup1\n      mload\n      swap1\n      0x60\n      dup3\n      add\n      dup3\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_26\n      jumpi\n      tag_28\n      swap4\n      pop\n      dup2\n      mstore\n      0x2e\n      dup3\n      mstore\n      0x546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75\n      0x20\n      dup4\n      add\n      mstore\n      shl(0x90, 0x696e7432353620616d6f756e7429)\n      dup2\n      dup4\n      add\n      mstore\n      mload\n      swap2\n      dup3\n      swap2\n      dup3\n      tag_1\n      jump\t// in\n    tag_28:\n      sub\n      swap1\n      return\n    tag_26:\n      shl(0xe0, 0x4e487b71)\n      dup5\n      mstore\n      mstore(0x04, 0x41)\n      0x24\n      dup5\n      revert\n    tag_16:\n      pop\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_22\n      jumpi\n      dup1\n      mload\n      swap1\n      0xa0\n      dup3\n      add\n      dup3\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_26\n      jumpi\n      tag_28\n      swap4\n      pop\n      dup2\n      mstore\n      0x6b\n      dup3\n      mstore\n      0x5065726d697442617463685769746e6573735472616e7366657246726f6d2854\n      0x20\n      dup4\n      add\n      mstore\n      0x6f6b656e5065726d697373696f6e735b5d207065726d69747465642c61646472\n      dup2\n      dup4\n      add\n      mstore\n      0x657373207370656e6465722c75696e74323536206e6f6e63652c75696e743235\n      0x60\n      dup4\n      add\n      mstore\n      shl(0xaa, 0x0d88191958591b1a5b994b)\n      0x80\n      dup4\n      add\n      mstore\n      mload\n      swap2\n      dup3\n      swap2\n      dup3\n      tag_1\n      jump\t// in\n    tag_14:\n      pop\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_22\n      jumpi\n      dup1\n      mload\n      swap1\n      0xa0\n      dup3\n      add\n      dup3\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_26\n      jumpi\n      tag_28\n      swap4\n      pop\n      dup2\n      mstore\n      0x64\n      dup3\n      mstore\n      0x5065726d69745769746e6573735472616e7366657246726f6d28546f6b656e50\n      0x20\n      dup4\n      add\n      mstore\n      0x65726d697373696f6e73207065726d69747465642c6164647265737320737065\n      dup2\n      dup4\n      add\n      mstore\n      0x6e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c\n      0x60\n      dup4\n      add\n      mstore\n      shl(0xe2, 0x1a5b994b)\n      0x80\n      dup4\n      add\n      mstore\n      mload\n      swap2\n      dup3\n      swap2\n      dup3\n      tag_1\n      jump\t// in\n    tag_12:\n      pop\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_22\n      jumpi\n      0x20\n      swap1\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      0x939c21a48a8dbe3a9a2404a1d46691e4d39f6583d6ec6b35714604c986d80106\n        /* \"contracts/contracts/lib/PermitHash.sol\":205:5770  library PermitHash {... */\n      dup2\n      mstore\n      return\n    tag_10:\n      pop\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_22\n      jumpi\n      0x20\n      swap1\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":289:376  keccak256(\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\") */\n      0x65626cad6cb96493bf6f5ebea28756c966f023ab9e8a83a7101849d5573b3678\n        /* \"contracts/contracts/lib/PermitHash.sol\":205:5770  library PermitHash {... */\n      dup2\n      mstore\n      return\n    tag_8:\n      pop\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_22\n      jumpi\n      0x20\n      swap1\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":661:834  keccak256(... */\n      0xaf1b0d30d2cab0380e68f0689007e3254993c596f2fdd0aaa7f4d04f79440863\n        /* \"contracts/contracts/lib/PermitHash.sol\":205:5770  library PermitHash {... */\n      dup2\n      mstore\n      return\n    tag_6:\n      pop\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_22\n      jumpi\n      0x20\n      swap1\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":895:954  keccak256(\"TokenPermissions(address token,uint256 amount)\") */\n      0x618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a1\n        /* \"contracts/contracts/lib/PermitHash.sol\":205:5770  library PermitHash {... */\n      dup2\n      mstore\n      return\n    tag_4:\n      dup4\n      swap1\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_22\n      jumpi\n      dup1\n        /* \"contracts/contracts/lib/PermitHash.sol\":1254:1427  keccak256(... */\n      0xfcf35f5ac6a2c28868dc44c302166470266239195f02b0ee408334829333b766\n        /* \"contracts/contracts/lib/PermitHash.sol\":205:5770  library PermitHash {... */\n      0x20\n      swap3\n      mstore\n      return\n    tag_1:\n      0x20\n      dup1\n      dup3\n      mstore\n      dup3\n      mload\n      dup2\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n      swap1\n      swap4\n      swap3\n      0x00\n    tag_49:\n      dup3\n      dup2\n      lt\n      tag_50\n      jumpi\n      pop\n      pop\n      0x40\n      swap3\n      swap4\n      pop\n      0x00\n      dup4\n      dup3\n      dup5\n      add\n      add\n      mstore\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      add\n      add\n      swap1\n      jump\t// out\n    tag_50:\n      dup2\n      dup2\n      add\n      dup7\n      add\n      mload\n      dup5\n      dup3\n      add\n      0x40\n      add\n      mstore\n      dup6\n      add\n      jump(tag_49)\n\n    auxdata: 0xa26469706673582212207458af539b487c583a1438aca8451ffb24eaaa05098a415fbc63b4e1e9b9f1b864736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523461001a57610448908161001f823930815050f35b5f80fdfe608060408181526004361015610013575f80fd5b5f91823560e01c9081633eb8b8fd1461039657508063415e982d146103615780636302c3cf1461032c5780636e4f2775146102f757806378f16830146102c257806384b8efbb1461020957806390bbf2f314610149578063c0c7fa7e146100ba5763c5df4f0314610082575f80fd5b816003193601126100b657602090517ff3841cd1ff0085026a6327b620b67997ce40f282c88a8e905a7a5626e310f3d08152f35b5080fd5b50816003193601126100b6578051906060820182811067ffffffffffffffff8211176101355761013193508152602e82527f546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c7560208301526d696e7432353620616d6f756e742960901b8183015251918291826103cb565b0390f35b634e487b7160e01b84526041600452602484fd5b50816003193601126100b65780519060a0820182811067ffffffffffffffff8211176101355761013193508152606b82527f5065726d697442617463685769746e6573735472616e7366657246726f6d285460208301527f6f6b656e5065726d697373696f6e735b5d207065726d69747465642c61646472818301527f657373207370656e6465722c75696e74323536206e6f6e63652c75696e74323560608301526a0d88191958591b1a5b994b60aa1b608083015251918291826103cb565b50816003193601126100b65780519060a0820182811067ffffffffffffffff8211176101355761013193508152606482527f5065726d69745769746e6573735472616e7366657246726f6d28546f6b656e5060208301527f65726d697373696f6e73207065726d69747465642c6164647265737320737065818301527f6e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c6060830152631a5b994b60e21b608083015251918291826103cb565b50816003193601126100b657602090517f939c21a48a8dbe3a9a2404a1d46691e4d39f6583d6ec6b35714604c986d801068152f35b50816003193601126100b657602090517f65626cad6cb96493bf6f5ebea28756c966f023ab9e8a83a7101849d5573b36788152f35b50816003193601126100b657602090517faf1b0d30d2cab0380e68f0689007e3254993c596f2fdd0aaa7f4d04f794408638152f35b50816003193601126100b657602090517f618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a18152f35b8390816003193601126100b657807ffcf35f5ac6a2c28868dc44c302166470266239195f02b0ee408334829333b76660209252f35b602080825282518183018190529093925f5b8281106103fe57505060409293505f838284010152601f8019910116010190565b8181018601518482016040015285016103dd56fea26469706673582212207458af539b487c583a1438aca8451ffb24eaaa05098a415fbc63b4e1e9b9f1b864736f6c63430008140033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x1A JUMPI PUSH2 0x448 SWAP1 DUP2 PUSH2 0x1F DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x3EB8B8FD EQ PUSH2 0x396 JUMPI POP DUP1 PUSH4 0x415E982D EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x6302C3CF EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x6E4F2775 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x78F16830 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x84B8EFBB EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x90BBF2F3 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0xC0C7FA7E EQ PUSH2 0xBA JUMPI PUSH4 0xC5DF4F03 EQ PUSH2 0x82 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0xF3841CD1FF0085026A6327B620B67997CE40F282C88A8E905A7A5626E310F3D0 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x135 JUMPI PUSH2 0x131 SWAP4 POP DUP2 MSTORE PUSH1 0x2E DUP3 MSTORE PUSH32 0x546F6B656E5065726D697373696F6E73286164647265737320746F6B656E2C75 PUSH1 0x20 DUP4 ADD MSTORE PUSH14 0x696E7432353620616D6F756E7429 PUSH1 0x90 SHL DUP2 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3CB JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI DUP1 MLOAD SWAP1 PUSH1 0xA0 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x135 JUMPI PUSH2 0x131 SWAP4 POP DUP2 MSTORE PUSH1 0x6B DUP3 MSTORE PUSH32 0x5065726D697442617463685769746E6573735472616E7366657246726F6D2854 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x6F6B656E5065726D697373696F6E735B5D207065726D69747465642C61646472 DUP2 DUP4 ADD MSTORE PUSH32 0x657373207370656E6465722C75696E74323536206E6F6E63652C75696E743235 PUSH1 0x60 DUP4 ADD MSTORE PUSH11 0xD88191958591B1A5B994B PUSH1 0xAA SHL PUSH1 0x80 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3CB JUMP JUMPDEST POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI DUP1 MLOAD SWAP1 PUSH1 0xA0 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x135 JUMPI PUSH2 0x131 SWAP4 POP DUP2 MSTORE PUSH1 0x64 DUP3 MSTORE PUSH32 0x5065726D69745769746E6573735472616E7366657246726F6D28546F6B656E50 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x65726D697373696F6E73207065726D69747465642C6164647265737320737065 DUP2 DUP4 ADD MSTORE PUSH32 0x6E6465722C75696E74323536206E6F6E63652C75696E7432353620646561646C PUSH1 0x60 DUP4 ADD MSTORE PUSH4 0x1A5B994B PUSH1 0xE2 SHL PUSH1 0x80 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3CB JUMP JUMPDEST POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x939C21A48A8DBE3A9A2404A1D46691E4D39F6583D6EC6B35714604C986D80106 DUP2 MSTORE RETURN JUMPDEST POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x65626CAD6CB96493BF6F5EBEA28756C966F023AB9E8A83A7101849D5573B3678 DUP2 MSTORE RETURN JUMPDEST POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0xAF1B0D30D2CAB0380E68F0689007E3254993C596F2FDD0AAA7F4D04F79440863 DUP2 MSTORE RETURN JUMPDEST POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x618358AC3DB8DC274F0CD8829DA7E234BD48CD73C4A740AEDE1ADEC9846D06A1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI DUP1 PUSH32 0xFCF35F5AC6A2C28868DC44C302166470266239195F02B0EE408334829333B766 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x3FE JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x3DD JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x58AF539B487C583A1438ACA8451FFB24EAAA05098A COINBASE PUSH0 0xBC PUSH4 0xB4E1E9B9 CALL 0xB8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "205:5565:5:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_encode_string": {
									"entryPoint": 971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060408181526004361015610013575f80fd5b5f91823560e01c9081633eb8b8fd1461039657508063415e982d146103615780636302c3cf1461032c5780636e4f2775146102f757806378f16830146102c257806384b8efbb1461020957806390bbf2f314610149578063c0c7fa7e146100ba5763c5df4f0314610082575f80fd5b816003193601126100b657602090517ff3841cd1ff0085026a6327b620b67997ce40f282c88a8e905a7a5626e310f3d08152f35b5080fd5b50816003193601126100b6578051906060820182811067ffffffffffffffff8211176101355761013193508152602e82527f546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c7560208301526d696e7432353620616d6f756e742960901b8183015251918291826103cb565b0390f35b634e487b7160e01b84526041600452602484fd5b50816003193601126100b65780519060a0820182811067ffffffffffffffff8211176101355761013193508152606b82527f5065726d697442617463685769746e6573735472616e7366657246726f6d285460208301527f6f6b656e5065726d697373696f6e735b5d207065726d69747465642c61646472818301527f657373207370656e6465722c75696e74323536206e6f6e63652c75696e74323560608301526a0d88191958591b1a5b994b60aa1b608083015251918291826103cb565b50816003193601126100b65780519060a0820182811067ffffffffffffffff8211176101355761013193508152606482527f5065726d69745769746e6573735472616e7366657246726f6d28546f6b656e5060208301527f65726d697373696f6e73207065726d69747465642c6164647265737320737065818301527f6e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c6060830152631a5b994b60e21b608083015251918291826103cb565b50816003193601126100b657602090517f939c21a48a8dbe3a9a2404a1d46691e4d39f6583d6ec6b35714604c986d801068152f35b50816003193601126100b657602090517f65626cad6cb96493bf6f5ebea28756c966f023ab9e8a83a7101849d5573b36788152f35b50816003193601126100b657602090517faf1b0d30d2cab0380e68f0689007e3254993c596f2fdd0aaa7f4d04f794408638152f35b50816003193601126100b657602090517f618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a18152f35b8390816003193601126100b657807ffcf35f5ac6a2c28868dc44c302166470266239195f02b0ee408334829333b76660209252f35b602080825282518183018190529093925f5b8281106103fe57505060409293505f838284010152601f8019910116010190565b8181018601518482016040015285016103dd56fea26469706673582212207458af539b487c583a1438aca8451ffb24eaaa05098a415fbc63b4e1e9b9f1b864736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x3EB8B8FD EQ PUSH2 0x396 JUMPI POP DUP1 PUSH4 0x415E982D EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x6302C3CF EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x6E4F2775 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x78F16830 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x84B8EFBB EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x90BBF2F3 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0xC0C7FA7E EQ PUSH2 0xBA JUMPI PUSH4 0xC5DF4F03 EQ PUSH2 0x82 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0xF3841CD1FF0085026A6327B620B67997CE40F282C88A8E905A7A5626E310F3D0 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x135 JUMPI PUSH2 0x131 SWAP4 POP DUP2 MSTORE PUSH1 0x2E DUP3 MSTORE PUSH32 0x546F6B656E5065726D697373696F6E73286164647265737320746F6B656E2C75 PUSH1 0x20 DUP4 ADD MSTORE PUSH14 0x696E7432353620616D6F756E7429 PUSH1 0x90 SHL DUP2 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3CB JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI DUP1 MLOAD SWAP1 PUSH1 0xA0 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x135 JUMPI PUSH2 0x131 SWAP4 POP DUP2 MSTORE PUSH1 0x6B DUP3 MSTORE PUSH32 0x5065726D697442617463685769746E6573735472616E7366657246726F6D2854 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x6F6B656E5065726D697373696F6E735B5D207065726D69747465642C61646472 DUP2 DUP4 ADD MSTORE PUSH32 0x657373207370656E6465722C75696E74323536206E6F6E63652C75696E743235 PUSH1 0x60 DUP4 ADD MSTORE PUSH11 0xD88191958591B1A5B994B PUSH1 0xAA SHL PUSH1 0x80 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3CB JUMP JUMPDEST POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI DUP1 MLOAD SWAP1 PUSH1 0xA0 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x135 JUMPI PUSH2 0x131 SWAP4 POP DUP2 MSTORE PUSH1 0x64 DUP3 MSTORE PUSH32 0x5065726D69745769746E6573735472616E7366657246726F6D28546F6B656E50 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x65726D697373696F6E73207065726D69747465642C6164647265737320737065 DUP2 DUP4 ADD MSTORE PUSH32 0x6E6465722C75696E74323536206E6F6E63652C75696E7432353620646561646C PUSH1 0x60 DUP4 ADD MSTORE PUSH4 0x1A5B994B PUSH1 0xE2 SHL PUSH1 0x80 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3CB JUMP JUMPDEST POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x939C21A48A8DBE3A9A2404A1D46691E4D39F6583D6EC6B35714604C986D80106 DUP2 MSTORE RETURN JUMPDEST POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x65626CAD6CB96493BF6F5EBEA28756C966F023AB9E8A83A7101849D5573B3678 DUP2 MSTORE RETURN JUMPDEST POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0xAF1B0D30D2CAB0380E68F0689007E3254993C596F2FDD0AAA7F4D04F79440863 DUP2 MSTORE RETURN JUMPDEST POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x618358AC3DB8DC274F0CD8829DA7E234BD48CD73C4A740AEDE1ADEC9846D06A1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI DUP1 PUSH32 0xFCF35F5AC6A2C28868DC44C302166470266239195F02B0EE408334829333B766 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x3FE JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x3DD JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x58AF539B487C583A1438ACA8451FFB24EAAA05098A COINBASE PUSH0 0xBC PUSH4 0xB4E1E9B9 CALL 0xB8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "205:5565:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;433:172;205:5565;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;205:5565:5;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;205:5565:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;205:5565:5;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;205:5565:5;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1018:166;205:5565;;;;;;;;;;;;;;;;289:87;205:5565;;;;;;;;;;;;;;;;661:173;205:5565;;;;;;;;;;;;;;;;895:59;205:5565;;;;;;;;;;;;;;;1254:173;205:5565;;;;;;;;;;;;;;;;;;;;-1:-1:-1;205:5565:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "219200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_PERMIT_BATCH_TRANSFER_FROM_TYPEHASH()": "149",
								"_PERMIT_BATCH_TYPEHASH()": "194",
								"_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB()": "infinite",
								"_PERMIT_DETAILS_TYPEHASH()": "216",
								"_PERMIT_SINGLE_TYPEHASH()": "321",
								"_PERMIT_TRANSFER_FROM_TYPEHASH()": "238",
								"_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB()": "infinite",
								"_TOKEN_PERMISSIONS_TYPEHASH()": "172",
								"_TOKEN_PERMISSIONS_TYPESTRING()": "infinite"
							},
							"internal": {
								"_hashPermitDetails(struct IAllowanceTransfer.PermitDetails memory)": "infinite",
								"_hashTokenPermissions(struct ISignatureTransfer.TokenPermissions memory)": "infinite",
								"hash(struct IAllowanceTransfer.PermitBatch memory)": "infinite",
								"hash(struct IAllowanceTransfer.PermitSingle memory)": "infinite",
								"hash(struct ISignatureTransfer.PermitBatchTransferFrom memory)": "infinite",
								"hash(struct ISignatureTransfer.PermitTransferFrom memory)": "infinite",
								"hashWithWitness(struct ISignatureTransfer.PermitBatchTransferFrom memory,bytes32,string calldata)": "infinite",
								"hashWithWitness(struct ISignatureTransfer.PermitTransferFrom memory,bytes32,string calldata)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 205,
									"end": 5770,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "library_deploy_address"
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "RETURN",
									"source": 5
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "REVERT",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207458af539b487c583a1438aca8451ffb24eaaa05098a415fbc63b4e1e9b9f1b864736f6c63430008140033",
									".code": [
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "3EB8B8FD"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "415E982D"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "6302C3CF"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "6E4F2775"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "78F16830"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "84B8EFBB"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "90BBF2F3"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "C0C7FA7E"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "C5DF4F03"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "PUSH",
											"source": 5,
											"value": "F3841CD1FF0085026A6327B620B67997CE40F282C88A8E905A7A5626E310F3D0"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "2E"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "546F6B656E5065726D697373696F6E73286164647265737320746F6B656E2C75"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "696E7432353620616D6F756E7429"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 205,
											"end": 5770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "6B"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "5065726D697442617463685769746E6573735472616E7366657246726F6D2854"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "6F6B656E5065726D697373696F6E735B5D207065726D69747465642C61646472"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "657373207370656E6465722C75696E74323536206E6F6E63652C75696E743235"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D88191958591B1A5B994B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 205,
											"end": 5770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "5065726D69745769746E6573735472616E7366657246726F6D28546F6B656E50"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "65726D697373696F6E73207065726D69747465642C6164647265737320737065"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "6E6465722C75696E74323536206E6F6E63652C75696E7432353620646561646C"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5B994B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 205,
											"end": 5770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "PUSH",
											"source": 5,
											"value": "939C21A48A8DBE3A9A2404A1D46691E4D39F6583D6EC6B35714604C986D80106"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 289,
											"end": 376,
											"name": "PUSH",
											"source": 5,
											"value": "65626CAD6CB96493BF6F5EBEA28756C966F023AB9E8A83A7101849D5573B3678"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "AF1B0D30D2CAB0380E68F0689007E3254993C596F2FDD0AAA7F4D04F79440863"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 895,
											"end": 954,
											"name": "PUSH",
											"source": 5,
											"value": "618358AC3DB8DC274F0CD8829DA7E234BD48CD73C4A740AEDE1ADEC9846D06A1"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "PUSH",
											"source": 5,
											"value": "FCF35F5AC6A2C28868DC44C302166470266239195F02B0EE408334829333B766"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"contracts/contracts/interfaces/IAllowanceTransfer.sol",
								"contracts/contracts/interfaces/IEIP712.sol",
								"contracts/contracts/interfaces/IERC1271.sol",
								"contracts/contracts/interfaces/ISignatureTransfer.sol",
								"contracts/contracts/lib/Allowance.sol",
								"contracts/contracts/lib/PermitHash.sol",
								"contracts/contracts/lib/SignatureVerification.sol",
								"contracts/contracts/permit2/AllowanceTransfer.sol",
								"contracts/contracts/permit2/EIP712.sol",
								"contracts/contracts/permit2/Permit2.sol",
								"contracts/contracts/permit2/PermitErrors.sol",
								"contracts/contracts/permit2/SignatureTransfer.sol",
								"solmate/src/tokens/ERC20.sol",
								"solmate/src/utils/SafeTransferLib.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_PERMIT_BATCH_TRANSFER_FROM_TYPEHASH()": "3eb8b8fd",
							"_PERMIT_BATCH_TYPEHASH()": "6302c3cf",
							"_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB()": "90bbf2f3",
							"_PERMIT_DETAILS_TYPEHASH()": "6e4f2775",
							"_PERMIT_SINGLE_TYPEHASH()": "c5df4f03",
							"_PERMIT_TRANSFER_FROM_TYPEHASH()": "78f16830",
							"_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB()": "84b8efbb",
							"_TOKEN_PERMISSIONS_TYPEHASH()": "415e982d",
							"_TOKEN_PERMISSIONS_TYPESTRING()": "c0c7fa7e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"_PERMIT_BATCH_TRANSFER_FROM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_PERMIT_BATCH_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_PERMIT_DETAILS_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_PERMIT_SINGLE_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_PERMIT_TRANSFER_FROM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_TOKEN_PERMISSIONS_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_TOKEN_PERMISSIONS_TYPESTRING\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/lib/PermitHash.sol\":\"PermitHash\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x37f0ac203b6ef605c9533e1a739477e8e9dcea90710b40e645a367f8a21ace29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0104d72aeaec1cd66cc232e7de7b7ead08608efcc179491b8a66387614670b0\",\"dweb:/ipfs/QmfAZDyuNC9FXXbnJUwqHNwmAK6uRrXxtWEytLsxjskPsN\"]},\"contracts/contracts/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]},\"contracts/contracts/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0x16a051e45a3f1ab341a8560aa106c483c3d0a3be4abc52225651c78939b18f93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7cda3c6ed2db1454b4a6ec1e418956d199019085d92163a038d0064615a5acb\",\"dweb:/ipfs/QmWDfZwi8jcGFBuiwHKq6iBWCZq2mA8HmkM9NNTzotMpXH\"]},\"contracts/contracts/lib/PermitHash.sol\":{\"keccak256\":\"0xbd0fcb52a5a753f77b10f30d653e638bf40705a0aa10cf96978ef82ea926e637\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de007b53ff2757733e919d17d53dc0c0b1e1f856132e0004dd9f79272472a093\",\"dweb:/ipfs/QmST5dKQYMZWD6magJPUXsJSWf57Rr5nWi1AgethhAvoCj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/lib/SignatureVerification.sol": {
				"SignatureVerification": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidContractSignature",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidSignature",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidSigner",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/lib/SignatureVerification.sol\":112:1811  library SignatureVerification {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":112:1811  library SignatureVerification {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d5520f83f07dde8298d3205e3b88577dbabcf774a105c8271c3e5123ea70b61764736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220d5520f83f07dde8298d3205e3b88577dbabcf774a105c8271c3e5123ea70b61764736f6c63430008140033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 MSTORE 0xF DUP4 CREATE PUSH30 0xDE8298D3205E3B88577DBABCF774A105C8271C3E5123EA70B61764736F6C PUSH4 0x43000814 STOP CALLER ",
							"sourceMap": "112:1699:6:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea2646970667358221220d5520f83f07dde8298d3205e3b88577dbabcf774a105c8271c3e5123ea70b61764736f6c63430008140033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 MSTORE 0xF DUP4 CREATE PUSH30 0xDE8298D3205E3B88577DBABCF774A105C8271C3E5123EA70B61764736F6C PUSH4 0x43000814 STOP CALLER ",
							"sourceMap": "112:1699:6:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"verify(bytes calldata,bytes32,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 112,
									"end": 1811,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 112,
									"end": 1811,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 112,
									"end": 1811,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 112,
									"end": 1811,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 112,
									"end": 1811,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 112,
									"end": 1811,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 112,
									"end": 1811,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 112,
									"end": 1811,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 112,
									"end": 1811,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 112,
									"end": 1811,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 112,
									"end": 1811,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 112,
									"end": 1811,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 112,
									"end": 1811,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 112,
									"end": 1811,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 112,
									"end": 1811,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 112,
									"end": 1811,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "library_deploy_address"
								},
								{
									"begin": 112,
									"end": 1811,
									"name": "RETURN",
									"source": 6
								},
								{
									"begin": 112,
									"end": 1811,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 112,
									"end": 1811,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 112,
									"end": 1811,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 112,
									"end": 1811,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 112,
									"end": 1811,
									"name": "REVERT",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d5520f83f07dde8298d3205e3b88577dbabcf774a105c8271c3e5123ea70b61764736f6c63430008140033",
									".code": [
										{
											"begin": 112,
											"end": 1811,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 112,
											"end": 1811,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 112,
											"end": 1811,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"contracts/contracts/interfaces/IAllowanceTransfer.sol",
								"contracts/contracts/interfaces/IEIP712.sol",
								"contracts/contracts/interfaces/IERC1271.sol",
								"contracts/contracts/interfaces/ISignatureTransfer.sol",
								"contracts/contracts/lib/Allowance.sol",
								"contracts/contracts/lib/PermitHash.sol",
								"contracts/contracts/lib/SignatureVerification.sol",
								"contracts/contracts/permit2/AllowanceTransfer.sol",
								"contracts/contracts/permit2/EIP712.sol",
								"contracts/contracts/permit2/Permit2.sol",
								"contracts/contracts/permit2/PermitErrors.sol",
								"contracts/contracts/permit2/SignatureTransfer.sol",
								"solmate/src/tokens/ERC20.sol",
								"solmate/src/utils/SafeTransferLib.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidContractSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSigner\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidContractSignature()\":[{\"notice\":\"Thrown when the recovered contract signature is incorrect\"}],\"InvalidSignature()\":[{\"notice\":\"Thrown when the recovered signer is equal to the zero address\"}],\"InvalidSignatureLength()\":[{\"notice\":\"Thrown when the passed in signature is not a valid length\"}],\"InvalidSigner()\":[{\"notice\":\"Thrown when the recovered signer does not equal the claimedSigner\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/lib/SignatureVerification.sol\":\"SignatureVerification\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0a546b8535127fb4a49d36d5f306fd5a8bbe6125a1852f935b9bb85a04c1acef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b99651e2df98e283a97c46d8d1ac4eff0d6a3618e25f7f85294472a670b541c\",\"dweb:/ipfs/QmYRy5G8fXE8BfmyvGEbESEYZPPg3zJEFxHzR5GJZEMMTk\"]},\"contracts/contracts/lib/SignatureVerification.sol\":{\"keccak256\":\"0xb5cf5e3c9407dc26f95d01170dbc2c82cd5c210ecc39ad3559b314df0c0c90d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a5929df7b7ad16e2a429e5e76712f95d914d1e72d8350cd3b445e84058bbb2\",\"dweb:/ipfs/QmXBnuFKWjK3huwN9qoePSyxT9qwpdGXfpTgjApRPiQsrd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"InvalidContractSignature()": [
								{
									"notice": "Thrown when the recovered contract signature is incorrect"
								}
							],
							"InvalidSignature()": [
								{
									"notice": "Thrown when the recovered signer is equal to the zero address"
								}
							],
							"InvalidSignatureLength()": [
								{
									"notice": "Thrown when the passed in signature is not a valid length"
								}
							],
							"InvalidSigner()": [
								{
									"notice": "Thrown when the recovered signer does not equal the claimedSigner"
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/permit2/AllowanceTransfer.sol": {
				"AllowanceTransfer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "AllowanceExpired",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExcessiveInvalidation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidContractSignature",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidSignature",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "signatureDeadline",
									"type": "uint256"
								}
							],
							"name": "SignatureExpired",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "expiration",
									"type": "uint48"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "Lockdown",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "newNonce",
									"type": "uint48"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "oldNonce",
									"type": "uint48"
								}
							],
							"name": "NonceInvalidation",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "expiration",
									"type": "uint48"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "nonce",
									"type": "uint48"
								}
							],
							"name": "Permit",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"internalType": "uint48",
									"name": "expiration",
									"type": "uint48"
								},
								{
									"internalType": "uint48",
									"name": "nonce",
									"type": "uint48"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"internalType": "uint48",
									"name": "expiration",
									"type": "uint48"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint48",
									"name": "newNonce",
									"type": "uint48"
								}
							],
							"name": "invalidateNonces",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "spender",
											"type": "address"
										}
									],
									"internalType": "struct IAllowanceTransfer.TokenSpenderPair[]",
									"name": "approvals",
									"type": "tuple[]"
								}
							],
							"name": "lockdown",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint160",
													"name": "amount",
													"type": "uint160"
												},
												{
													"internalType": "uint48",
													"name": "expiration",
													"type": "uint48"
												},
												{
													"internalType": "uint48",
													"name": "nonce",
													"type": "uint48"
												}
											],
											"internalType": "struct IAllowanceTransfer.PermitDetails[]",
											"name": "details",
											"type": "tuple[]"
										},
										{
											"internalType": "address",
											"name": "spender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "sigDeadline",
											"type": "uint256"
										}
									],
									"internalType": "struct IAllowanceTransfer.PermitBatch",
									"name": "permitBatch",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint160",
													"name": "amount",
													"type": "uint160"
												},
												{
													"internalType": "uint48",
													"name": "expiration",
													"type": "uint48"
												},
												{
													"internalType": "uint48",
													"name": "nonce",
													"type": "uint48"
												}
											],
											"internalType": "struct IAllowanceTransfer.PermitDetails",
											"name": "details",
											"type": "tuple"
										},
										{
											"internalType": "address",
											"name": "spender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "sigDeadline",
											"type": "uint256"
										}
									],
									"internalType": "struct IAllowanceTransfer.PermitSingle",
									"name": "permitSingle",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "from",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint160",
											"name": "amount",
											"type": "uint160"
										},
										{
											"internalType": "address",
											"name": "token",
											"type": "address"
										}
									],
									"internalType": "struct IAllowanceTransfer.AllowanceTransferDetails[]",
									"name": "transferDetails",
									"type": "tuple[]"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AllowanceExpired(uint256)": [
								{
									"params": {
										"deadline": "The timestamp at which the allowed amount is no longer valid"
									}
								}
							],
							"InsufficientAllowance(uint256)": [
								{
									"params": {
										"amount": "The maximum amount allowed"
									}
								}
							],
							"SignatureExpired(uint256)": [
								{
									"params": {
										"signatureDeadline": "The timestamp at which a signature is no longer valid"
									}
								}
							]
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Uses cached version if chainid and address are unchanged from construction."
							},
							"approve(address,address,uint160,uint48)": {
								"details": "The packed allowance also holds a nonce, which will stay unchanged in approveSetting amount to type(uint160).max sets an unlimited approval",
								"params": {
									"amount": "The approved amount of the token",
									"expiration": "The timestamp at which the approval is no longer valid",
									"spender": "The spender address to approve",
									"token": "The token to approve"
								}
							},
							"invalidateNonces(address,address,uint48)": {
								"details": "Can't invalidate more than 2**16 nonces per transaction.",
								"params": {
									"newNonce": "The new nonce to set. Invalidates all nonces less than it.",
									"spender": "The spender to invalidate nonces for",
									"token": "The token to invalidate nonces for"
								}
							},
							"lockdown((address,address)[])": {
								"params": {
									"approvals": "Array of approvals to revoke."
								}
							},
							"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)": {
								"details": "May fail if the owner's nonce was invalidated in-flight by invalidateNonce",
								"params": {
									"owner": "The owner of the tokens being approved",
									"permitSingle": "Data signed over by the owner specifying the terms of approval",
									"signature": "The owner's signature over the permit data"
								}
							},
							"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)": {
								"details": "May fail if the owner's nonce was invalidated in-flight by invalidateNonce",
								"params": {
									"owner": "The owner of the tokens being approved",
									"permitBatch": "Data signed over by the owner specifying the terms of approval",
									"signature": "The owner's signature over the permit data"
								}
							},
							"transferFrom((address,address,uint160,address)[])": {
								"details": "Requires the from addresses to have approved at least the desired amount of tokens to msg.sender.",
								"params": {
									"transferDetails": "Array of owners, recipients, amounts, and tokens for the transfers"
								}
							},
							"transferFrom(address,address,uint160,address)": {
								"details": "Requires the from address to have approved at least the desired amount of tokens to msg.sender.",
								"params": {
									"amount": "The amount of the token to transfer",
									"from": "The address to transfer from",
									"to": "The address of the recipient",
									"token": "The token address to transfer"
								}
							}
						},
						"stateVariables": {
							"allowance": {
								"details": "Indexed in the order of token owner address, token address, spender addressThe stored word saves the allowed amount, expiration on the allowance, and nonce"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n  0xc0\n  jumpi(tag_1, callvalue)\n    /* \"contracts/contracts/permit2/EIP712.sol\":919:932  block.chainid */\n  chainid\n    /* \"contracts/contracts/permit2/EIP712.sol\":900:932  _CACHED_CHAIN_ID = block.chainid */\n  0xa0\n  mstore\n    /* \"contracts/contracts/permit2/EIP712.sol\":1632:1692  abi.encode(typeHash, nameHash, block.chainid, address(this)) */\n  0x20\n  dup2\n  add\n    /* \"contracts/contracts/permit2/EIP712.sol\":789:869  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n  0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n    /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n  dup2\n  mstore\n    /* \"contracts/contracts/permit2/EIP712.sol\":717:737  keccak256(\"Permit2\") */\n  0x9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a\n    /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n  0x40\n  dup4\n  add\n  mstore\n    /* \"contracts/contracts/permit2/EIP712.sol\":919:932  block.chainid */\n  chainid\n    /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n  0x60\n  dup4\n  add\n  mstore\n    /* \"contracts/contracts/permit2/EIP712.sol\":1686:1690  this */\n  address\n    /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n  0x80\n  dup4\n  add\n  mstore\n  0x80\n    /* \"contracts/contracts/permit2/EIP712.sol\":1632:1692  abi.encode(typeHash, nameHash, block.chainid, address(this)) */\n  dup3\n  mstore\n    /* \"contracts/contracts/permit2/EIP712.sol\":900:932  _CACHED_CHAIN_ID = block.chainid */\n  0xa0\n    /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n  dup3\n  add\n  swap2\n  dup1\n  dup4\n  lt\n  0x01\n  dup1\n  0x40\n  shl\n  sub\n  dup5\n  gt\n  or\n  tag_3\n  jumpi\n  dup3\n  0x40\n  mstore\n  mload\n    /* \"contracts/contracts/permit2/EIP712.sol\":1622:1693  keccak256(abi.encode(typeHash, nameHash, block.chainid, address(this))) */\n  swap1\n  keccak256\n    /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n  0x80\n    /* \"contracts/contracts/permit2/EIP712.sol\":942:1016  _CACHED_DOMAIN_SEPARATOR = _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME) */\n  mstore\n    /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  mload(0x80)\n  dup2\n  assignImmutable(\"0x4f4ac30ff8bfcef8cd1068d1427faf7fb52fa3a1610b1f430e1f69a91ebb9673\")\n    /* \"contracts/contracts/permit2/EIP712.sol\":900:932  _CACHED_CHAIN_ID = block.chainid */\n  0xa0\n    /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n  mload\n  dup2\n  assignImmutable(\"0x3ab4fb69c8e122442af87ae588015f836e7cde3029bbb6dab1983bc840231d63\")\n  return\ntag_3:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_23, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_23:\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0d58b1db\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x2a2d80d1\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x2b67b570\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_31\n      jumpi\n      dup1\n      0x36c78516\n      eq\n      tag_33\n      jumpi\n      dup1\n      0x65d9723c\n      eq\n      tag_35\n      jumpi\n      dup1\n      0x87517c45\n      eq\n      tag_37\n      jumpi\n      dup1\n      0x927da105\n      eq\n      tag_39\n      jumpi\n      0xcc53287f\n      eq\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      jumpi(tag_53, callvalue)\n      0x20\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_53\n      jumpi\n      0xffffffffffffffff\n      swap1\n      calldataload(0x04)\n      dup3\n      dup2\n      gt\n      tag_53\n      jumpi\n      calldatasize\n      0x23\n      dup3\n      add\n      slt\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x04\n      add\n      calldataload\n      swap3\n      dup4\n      gt\n      tag_53\n      jumpi\n      0x24\n      dup2\n      add\n      swap1\n      0x24\n      calldatasize\n      swap2\n      dup6\n      0x06\n      shl\n      add\n      add\n      gt\n      tag_53\n      jumpi\n      0x00\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4515:4525  i < length */\n    tag_55:\n      dup4\n      dup2\n      lt\n      tag_56\n      jumpi\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      stop\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4527:4530  ++i */\n    tag_56:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4566:4578  approvals[i] */\n      dup1\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4566:4584  approvals[i].token */\n      tag_58\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4566:4578  approvals[i] */\n      tag_59\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x01\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4566:4578  approvals[i] */\n      swap4\n      dup8\n      dup7\n      tag_18\n      jump\t// in\n    tag_59:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4566:4584  approvals[i].token */\n      tag_19\n      jump\t// in\n    tag_58:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4620:4640  approvals[i].spender */\n      tag_60\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4620:4632  approvals[i] */\n      dup6\n      tag_61\n      dup5\n      dup10\n      dup9\n      tag_18\n      jump\t// in\n    tag_61:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4620:4640  approvals[i].spender */\n      add\n      tag_19\n      jump\t// in\n    tag_60:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4337:4347  msg.sender */\n      caller\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x00\n      mstore\n      0x00\n      dup7\n      mstore\n      keccak256(0x00, 0x40)\n      swap2\n      dup5\n      dup1\n      0xa0\n      shl\n      sub\n      dup1\n      swap2\n      and\n      swap3\n      dup4\n      0x00\n      mstore\n      dup8\n      mstore\n      keccak256(0x00, 0x40)\n      swap2\n      and\n      swap1\n      dup2\n      0x00\n      mstore\n      dup7\n      mstore\n      keccak256(0x00, 0x40)\n      shl(0xa0, 0xffffffffffffffffffffffff)\n      dup2\n      sload\n      and\n      swap1\n      sstore\n      mload(0x40)\n      swap2\n      dup3\n      mstore\n      dup6\n      dup3\n      add\n      mstore\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4725:4756  Lockdown(owner, token, spender) */\n      0x89b1add15eff56b3dfe299ad94e01f2b52fbcb80ae1a3baea6ae8c04cb2b98a4\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x40\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4337:4347  msg.sender */\n      caller\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4725:4756  Lockdown(owner, token, spender) */\n      swap3\n      log2\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      add\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4500:4513  uint256 i = 0 */\n      jump(tag_55)\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n    tag_53:\n      0x00\n      dup1\n      revert\n    tag_39:\n      jumpi(tag_53, callvalue)\n      jumpi(tag_53, slt(add(not(0x03), calldatasize), 0x60))\n      tag_66\n      tag_1\n      jump\t// in\n    tag_66:\n      tag_67\n      tag_2\n      jump\t// in\n    tag_67:\n      tag_68\n      tag_3\n      jump\t// in\n    tag_68:\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      swap5\n      dup7\n      and\n      dup4\n      mstore\n      swap4\n      dup2\n      mstore\n      dup4\n      dup3\n      keccak256\n      swap3\n      dup6\n      and\n      dup3\n      mstore\n      swap2\n      dup3\n      mstore\n      dup3\n      swap1\n      keccak256\n      sload\n      dup3\n      mload\n      swap4\n      dup2\n      and\n      dup5\n      mstore\n      0xffffffffffff\n      0xa0\n      dup3\n      swap1\n      shr\n      and\n      swap2\n      dup5\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0xd0\n      shr\n      swap1\n      dup3\n      add\n      mstore\n      0x60\n      swap1\n      return\n    tag_37:\n      jumpi(tag_53, callvalue)\n      jumpi(tag_53, slt(add(not(0x03), calldatasize), 0x80))\n      tag_74\n      tag_1\n      jump\t// in\n    tag_74:\n      tag_75\n      tag_2\n      jump\t// in\n    tag_75:\n      swap1\n      tag_76\n      tag_3\n      jump\t// in\n    tag_76:\n      0xffffffffffff\n      swap2\n      calldataload(0x64)\n      dup4\n      dup2\n      and\n      swap2\n      dup3\n      dup3\n      sub\n      tag_53\n      jumpi\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1364:1374  msg.sender */\n      caller\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n      keccak256(0x00, 0x40)\n      swap5\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup1\n      swap3\n      and\n      swap6\n      dup7\n      0x00\n      mstore\n      0x20\n      mstore\n      dup2\n      keccak256(0x00, 0x40)\n      swap8\n      and\n      swap7\n      dup8\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/contracts/lib/Allowance.sol\":1510:1564  expiration == 0 ? uint48(block.timestamp) : expiration */\n      swap3\n        /* \"contracts/contracts/lib/Allowance.sol\":1510:1525  expiration == 0 */\n      dup5\n      iszero\n        /* \"contracts/contracts/lib/Allowance.sol\":1510:1564  expiration == 0 ? uint48(block.timestamp) : expiration */\n      0x00\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      eq\n      tag_79\n      jumpi\n        /* \"contracts/contracts/lib/Allowance.sol\":1535:1550  block.timestamp */\n      pop\n      timestamp\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      and\n        /* \"contracts/contracts/lib/Allowance.sol\":1510:1564  expiration == 0 ? uint48(block.timestamp) : expiration */\n      swap1\n    tag_81:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      dup3\n      sload\n      swap5\n      and\n      swap4\n      dup5\n      swap2\n      shl(0xa0, 0xffffffffffff)\n      swap1\n      0xa0\n      shl\n      and\n      swap1\n      shl(0xd0, 0xffffffffffff)\n      and\n      or\n      or\n      swap1\n      sstore\n      mload(0x40)\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1469:1525  Approval(msg.sender, token, spender, amount, expiration) */\n      0xda9fa7c1b00402c17d0161b249b1ab8bbec047c5a52207b9c112deffd817036b\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x40\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1364:1374  msg.sender */\n      caller\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1469:1525  Approval(msg.sender, token, spender, amount, expiration) */\n      swap3\n      log4\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      stop\n        /* \"contracts/contracts/lib/Allowance.sol\":1510:1564  expiration == 0 ? uint48(block.timestamp) : expiration */\n    tag_79:\n      swap1\n      pop\n      swap1\n      jump(tag_81)\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n    tag_35:\n      jumpi(tag_53, callvalue)\n      jumpi(tag_53, slt(add(not(0x03), calldatasize), 0x60))\n      tag_86\n      tag_1\n      jump\t// in\n    tag_86:\n      tag_87\n      tag_2\n      jump\t// in\n    tag_87:\n      swap1\n      calldataload(0x44)\n      0xffffffffffff\n      dup1\n      dup3\n      and\n      swap2\n      dup3\n      dup2\n      sub\n      tag_53\n      jumpi\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4954:4964  msg.sender */\n      caller\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x00\n      mstore\n      0x20\n      swap1\n      0x00\n      dup3\n      mstore\n      keccak256(0x00, 0x40)\n      swap5\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup1\n      swap2\n      and\n      swap6\n      dup7\n      0x00\n      mstore\n      dup4\n      mstore\n      keccak256(0x00, 0x40)\n      swap7\n      and\n      swap6\n      dup7\n      0x00\n      mstore\n      dup3\n      mstore\n      shr(0xd0, sload(keccak256(0x00, 0x40)))\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5002:5022  newNonce <= oldNonce */\n      swap3\n      dup4\n      dup6\n      gt\n      iszero\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4998:5045  if (newNonce <= oldNonce) revert InvalidNonce() */\n      tag_90\n      jumpi\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0xffff\n      swap1\n      dup5\n      dup4\n      sub\n      and\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5214:5238  delta > type(uint16).max */\n      gt\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5210:5270  if (delta > type(uint16).max) revert ExcessiveInvalidation() */\n      tag_92\n      jumpi\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4954:4964  msg.sender */\n      caller\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x00\n      mstore\n      0x00\n      dup3\n      mstore\n      keccak256(0x00, 0x40)\n      dup6\n      0x00\n      mstore\n      dup3\n      mstore\n      keccak256(0x00, 0x40)\n      dup7\n      0x00\n      mstore\n      dup3\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      dup2\n      sload\n      swap1\n      shl(0xd0, 0xffffffffffff)\n      swap1\n      0xd0\n      shl\n      and\n      swap1\n      0x01\n      dup1\n      0xd0\n      shl\n      sub\n      and\n      or\n      swap1\n      sstore\n      mload(0x40)\n      swap3\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5360:5425  NonceInvalidation(msg.sender, token, spender, newNonce, oldNonce) */\n      0x55eb90d810e1700b35a8e7e25395ff7f2b2259abd7415ca2284dfb1c246418f3\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x40\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4954:4964  msg.sender */\n      caller\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5360:5425  NonceInvalidation(msg.sender, token, spender, newNonce, oldNonce) */\n      swap3\n      log4\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      stop\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5210:5270  if (delta > type(uint16).max) revert ExcessiveInvalidation() */\n    tag_92:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mload(0x40)\n      shl(0xe1, 0x1269ad13)\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5247:5270  ExcessiveInvalidation() */\n      dup2\n      mstore\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x04\n      swap1\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5247:5270  ExcessiveInvalidation() */\n      revert\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4998:5045  if (newNonce <= oldNonce) revert InvalidNonce() */\n    tag_90:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mload(0x40)\n      shl(0xe1, 0x3ab3447f)\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5031:5045  InvalidNonce() */\n      dup2\n      mstore\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x04\n      swap1\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5031:5045  InvalidNonce() */\n      revert\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n    tag_33:\n      jumpi(tag_53, callvalue)\n      jumpi(tag_53, slt(add(not(0x03), calldatasize), 0x80))\n      tag_98\n      tag_1\n      jump\t// in\n    tag_98:\n      tag_99\n      tag_2\n      jump\t// in\n    tag_99:\n      tag_100\n      tag_3\n      jump\t// in\n    tag_100:\n      calldataload(0x64)\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      dup4\n      sub\n      tag_53\n      jumpi\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2822:2827  token */\n      tag_103\n      swap4\n      tag_17\n      jump\t// in\n    tag_103:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      stop\n    tag_31:\n      jumpi(tag_53, callvalue)\n      jumpi(tag_53, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      tag_108\n      tag_21\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_29:\n      jumpi(tag_53, callvalue)\n      jumpi(tag_53, slt(add(not(0x03), calldatasize), 0x0100))\n      tag_113\n      tag_1\n      jump\t// in\n    tag_113:\n      add(not(0x23), calldatasize)\n      swap1\n      0xc0\n      dup3\n      slt\n      tag_53\n      jumpi\n      0x80\n      mload(0x40)\n      swap3\n      tag_116\n      dup5\n      tag_6\n      jump\t// in\n    tag_116:\n      slt\n      tag_53\n      jumpi\n      mload(0x40)\n      swap1\n      tag_119\n      dup3\n      tag_5\n      jump\t// in\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n      swap2\n      calldataload(0x24)\n      dup4\n      dup2\n      and\n      dup2\n      sub\n      tag_53\n      jumpi\n      dup2\n      mstore\n      calldataload(0x44)\n      dup4\n      dup2\n      and\n      dup2\n      sub\n      tag_53\n      jumpi\n      0x20\n      dup3\n      add\n      mstore\n      0xffffffffffff\n      calldataload(0x64)\n      dup2\n      dup2\n      and\n      dup2\n      sub\n      tag_53\n      jumpi\n      0x40\n      dup4\n      add\n      mstore\n      calldataload(0x84)\n      swap1\n      dup2\n      and\n      dup2\n      sub\n      tag_53\n      jumpi\n      0x60\n      dup3\n      add\n      mstore\n      dup4\n      mstore\n      calldataload(0xa4)\n      swap2\n      dup1\n      dup4\n      and\n      dup4\n      sub\n      tag_53\n      jumpi\n      0x20\n      dup5\n      add\n      swap3\n      dup4\n      mstore\n      calldataload(0xc4)\n      swap4\n      0x40\n      dup2\n      add\n      dup6\n      dup2\n      mstore\n      calldataload(0xe4)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_53\n      jumpi\n      tag_132\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_11\n      jump\t// in\n    tag_132:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1691:1706  block.timestamp */\n      swap2\n      swap1\n      swap7\n      dup1\n      timestamp\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1691:1733  block.timestamp > permitSingle.sigDeadline */\n      gt\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1687:1784  if (block.timestamp > permitSingle.sigDeadline) revert SignatureExpired(permitSingle.sigDeadline) */\n      tag_133\n      jumpi\n        /* \"contracts/contracts/lib/PermitHash.sol\":2078:2098  permitSingle.details */\n      pop\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1968:1988  permitSingle.spender */\n      tag_103\n        /* \"contracts/contracts/lib/PermitHash.sol\":2078:2098  permitSingle.details */\n      swap7\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1906:1911  owner */\n      tag_136\n        /* \"contracts/contracts/lib/PermitHash.sol\":2078:2098  permitSingle.details */\n      swap3\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1869:1904  _hashTypedData(permitSingle.hash()) */\n      tag_137\n        /* \"contracts/contracts/lib/PermitHash.sol\":2078:2098  permitSingle.details */\n      dup8\n      swap4\n        /* \"contracts/contracts/lib/PermitHash.sol\":2059:2099  _hashPermitDetails(permitSingle.details) */\n      tag_138\n        /* \"contracts/contracts/lib/PermitHash.sol\":2078:2098  permitSingle.details */\n      dup8\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":2059:2099  _hashPermitDetails(permitSingle.details) */\n      tag_13\n      jump\t// in\n    tag_138:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      swap1\n      dup9\n      dup12\n      mload\n      and\n      swap1\n      mload\n      mload(0x40)\n        /* \"contracts/contracts/lib/PermitHash.sol\":2138:2233  abi.encode(_PERMIT_SINGLE_TYPEHASH, permitHash, permitSingle.spender, permitSingle.sigDeadline) */\n      swap2\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x20\n        /* \"contracts/contracts/lib/PermitHash.sol\":2138:2233  abi.encode(_PERMIT_SINGLE_TYPEHASH, permitHash, permitSingle.spender, permitSingle.sigDeadline) */\n      dup4\n      add\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      swap4\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      0xf3841cd1ff0085026a6327b620b67997ce40f282c88a8e905a7a5626e310f3d0\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      dup6\n      mstore\n      0x40\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      dup5\n      add\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mstore\n      0x60\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      dup4\n      add\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mstore\n      0x80\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      dup3\n      add\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mstore\n      0x80\n        /* \"contracts/contracts/lib/PermitHash.sol\":2138:2233  abi.encode(_PERMIT_SINGLE_TYPEHASH, permitHash, permitSingle.spender, permitSingle.sigDeadline) */\n      dup2\n      mstore\n      tag_139\n      dup2\n      tag_7\n      jump\t// in\n    tag_139:\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":2128:2234  keccak256(abi.encode(_PERMIT_SINGLE_TYPEHASH, permitHash, permitSingle.spender, permitSingle.sigDeadline)) */\n      swap1\n      keccak256\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1869:1904  _hashTypedData(permitSingle.hash()) */\n      tag_22\n      jump\t// in\n    tag_137:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1906:1911  owner */\n      swap2\n      tag_15\n      jump\t// in\n    tag_136:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1939:1959  permitSingle.details */\n      mload\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      swap3\n      mload\n      and\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1968:1988  permitSingle.spender */\n      swap2\n      tag_20\n      jump\t// in\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1687:1784  if (block.timestamp > permitSingle.sigDeadline) revert SignatureExpired(permitSingle.sigDeadline) */\n    tag_133:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x24\n      swap1\n      mload(0x40)\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2203:2244  SignatureExpired(permitBatch.sigDeadline) */\n      swap1\n      shl(0xe0, 0xcd21db4f)\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1742:1784  SignatureExpired(permitSingle.sigDeadline) */\n      dup3\n      mstore\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x04\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1742:1784  SignatureExpired(permitSingle.sigDeadline) */\n      dup3\n      add\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mstore\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1742:1784  SignatureExpired(permitSingle.sigDeadline) */\n      revert\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n    tag_27:\n      jumpi(tag_53, callvalue)\n      not(0x03)\n      0x60\n      calldatasize\n      dup3\n      add\n      slt\n      tag_53\n      jumpi\n      tag_144\n      tag_1\n      jump\t// in\n    tag_144:\n      swap1\n      calldataload(0x24)\n      swap1\n      0xffffffffffffffff\n      swap1\n      dup2\n      dup4\n      gt\n      tag_53\n      jumpi\n      0x60\n      swap1\n      dup4\n      calldatasize\n      sub\n      add\n      slt\n      tag_53\n      jumpi\n      mload(0x40)\n      swap2\n      tag_149\n      dup4\n      tag_6\n      jump\t// in\n    tag_149:\n      dup1\n      0x04\n      add\n      calldataload\n      dup3\n      dup2\n      gt\n      tag_53\n      jumpi\n      dup2\n      add\n      calldatasize\n      0x23\n      dup3\n      add\n      slt\n      iszero\n      tag_53\n      jumpi\n      0x04\n      dup2\n      add\n      calldataload\n      tag_154\n      dup2\n      tag_9\n      jump\t// in\n    tag_154:\n      swap2\n      tag_155\n      mload(0x40)\n      swap4\n      dup5\n      tag_8\n      jump\t// in\n    tag_155:\n      dup2\n      dup4\n      mstore\n      0x24\n      0x20\n      dup5\n      add\n      swap3\n      0x07\n      shl\n      dup3\n      add\n      add\n      swap1\n      calldatasize\n      dup3\n      gt\n      tag_53\n      jumpi\n      0x24\n      add\n      swap2\n    tag_158:\n      dup2\n      dup4\n      lt\n      tag_159\n      jumpi\n      pop\n      pop\n      pop\n      dup4\n      mstore\n      0x44\n      swap1\n      tag_161\n      0x24\n      dup3\n      add\n      tag_4\n      jump\t// in\n    tag_161:\n      0x20\n      dup6\n      add\n      mstore\n      add\n      calldataload\n      swap1\n      dup2\n      0x40\n      dup5\n      add\n      mstore\n      calldataload(0x44)\n      swap1\n      dup2\n      gt\n      tag_53\n      jumpi\n      tag_164\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_11\n      jump\t// in\n    tag_164:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2153:2168  block.timestamp */\n      swap2\n      dup1\n      timestamp\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2153:2194  block.timestamp > permitBatch.sigDeadline */\n      gt\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2149:2244  if (block.timestamp > permitBatch.sigDeadline) revert SignatureExpired(permitBatch.sigDeadline) */\n      tag_133\n      jumpi\n        /* \"contracts/contracts/lib/PermitHash.sol\":2375:2394  permitBatch.details */\n      pop\n      dup4\n      dup4\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      mload\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      swap2\n      tag_167\n      dup4\n      tag_9\n      jump\t// in\n    tag_167:\n      swap3\n      tag_168\n      mload(0x40)\n      swap5\n      dup6\n      tag_8\n      jump\t// in\n    tag_168:\n      dup1\n      dup5\n      mstore\n      not(0x1f)\n      tag_169\n      dup3\n      tag_9\n      jump\t// in\n    tag_169:\n      add\n      calldatasize\n      0x20\n      dup7\n      add\n      calldatacopy\n      0x00\n        /* \"contracts/contracts/lib/PermitHash.sol\":2498:2512  i < numPermits */\n    tag_170:\n      dup2\n      dup2\n      lt\n      tag_171\n      jumpi\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      pop\n      pop\n      mload(0x40)\n      0x20\n        /* \"contracts/contracts/lib/PermitHash.sol\":2721:2751  abi.encodePacked(permitHashes) */\n      dup2\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":661:834  keccak256(... */\n      swap1\n      dup2\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x20\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      dup7\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":661:834  keccak256(... */\n      swap2\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      swap7\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":661:834  keccak256(... */\n      swap1\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x00\n        /* \"contracts/contracts/lib/PermitHash.sol\":661:834  keccak256(... */\n    tag_173:\n      dup2\n      dup2\n      lt\n      tag_174\n      jumpi\n        /* \"contracts/contracts/lib/PermitHash.sol\":2721:2751  abi.encodePacked(permitHashes) */\n      pop\n      pop\n      pop\n      tag_176\n      dup2\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2365:2370  owner */\n      tag_177\n        /* \"contracts/contracts/lib/PermitHash.sol\":2721:2751  abi.encodePacked(permitHashes) */\n      swap7\n      sub\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      not(0x1f)\n        /* \"contracts/contracts/lib/PermitHash.sol\":2721:2751  abi.encodePacked(permitHashes) */\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_8\n      jump\t// in\n    tag_176:\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":2711:2752  keccak256(abi.encodePacked(permitHashes)) */\n      swap1\n      keccak256\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      swap4\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2329:2363  _hashTypedData(permitBatch.hash()) */\n      tag_137\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap6\n      dup7\n      0x20\n      dup10\n      add\n      mload\n      and\n      0x40\n      dup10\n      add\n      mload\n      mload(0x40)\n        /* \"contracts/contracts/lib/PermitHash.sol\":2643:2844  abi.encode(... */\n      swap2\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x20\n        /* \"contracts/contracts/lib/PermitHash.sol\":2643:2844  abi.encode(... */\n      dup4\n      add\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      swap4\n        /* \"contracts/contracts/lib/PermitHash.sol\":661:834  keccak256(... */\n      0xaf1b0d30d2cab0380e68f0689007e3254993c596f2fdd0aaa7f4d04f79440863\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      dup6\n      mstore\n      0x40\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      dup5\n      add\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mstore\n      0x60\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      dup4\n      add\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mstore\n      0x80\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      dup3\n      add\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mstore\n      0x80\n        /* \"contracts/contracts/lib/PermitHash.sol\":2643:2844  abi.encode(... */\n      dup2\n      mstore\n      tag_139\n      dup2\n      tag_7\n      jump\t// in\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2365:2370  owner */\n    tag_177:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x20\n      dup3\n      add\n      mload\n      and\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2470:2489  permitBatch.details */\n      swap1\n      dup1\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      mload\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2515:2528  uint256 i = 0 */\n      swap2\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x00\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2530:2540  i < length */\n    tag_180:\n      dup4\n      dup2\n      lt\n      tag_181\n      jumpi\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      stop\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2542:2545  ++i */\n    tag_181:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2581:2600  permitBatch.details */\n      dup1\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2612:2619  spender */\n      tag_183\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2581:2600  permitBatch.details */\n      dup4\n      dup8\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2581:2603  permitBatch.details[i] */\n      tag_184\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x01\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2581:2600  permitBatch.details */\n      swap6\n      dup9\n      mload\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2581:2603  permitBatch.details[i] */\n      tag_16\n      jump\t// in\n    tag_184:\n      mload\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2612:2619  spender */\n      tag_20\n      jump\t// in\n    tag_183:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      add\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2515:2528  uint256 i = 0 */\n      jump(tag_180)\n        /* \"contracts/contracts/lib/PermitHash.sol\":661:834  keccak256(... */\n    tag_174:\n      dup3\n      mload\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      dup9\n      mstore\n      0x20\n        /* \"contracts/contracts/lib/PermitHash.sol\":661:834  keccak256(... */\n      swap8\n      dup9\n      add\n      swap8\n      dup12\n      swap8\n      pop\n      swap1\n      swap3\n      add\n      swap2\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x01\n        /* \"contracts/contracts/lib/PermitHash.sol\":661:834  keccak256(... */\n      add\n      jump(tag_173)\n        /* \"contracts/contracts/lib/PermitHash.sol\":2514:2517  ++i */\n    tag_171:\n        /* \"contracts/contracts/lib/PermitHash.sol\":2570:2589  permitBatch.details */\n      swap1\n      swap2\n      swap4\n      swap3\n      pop\n        /* \"contracts/contracts/lib/PermitHash.sol\":2551:2593  _hashPermitDetails(permitBatch.details[i]) */\n      tag_185\n        /* \"contracts/contracts/lib/PermitHash.sol\":2570:2592  permitBatch.details[i] */\n      tag_186\n        /* \"contracts/contracts/lib/PermitHash.sol\":2570:2589  permitBatch.details */\n      dup3\n      dup9\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":2570:2592  permitBatch.details[i] */\n      tag_16\n      jump\t// in\n    tag_186:\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":2551:2593  _hashPermitDetails(permitBatch.details[i]) */\n      tag_13\n      jump\t// in\n    tag_185:\n        /* \"contracts/contracts/lib/PermitHash.sol\":2533:2593  permitHashes[i] = _hashPermitDetails(permitBatch.details[i]) */\n      tag_187\n      dup3\n      dup6\n      tag_16\n      jump\t// in\n    tag_187:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mstore\n      not(0x00)\n      dup2\n      eq\n      tag_188\n      jumpi\n      0x01\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":2483:2496  uint256 i = 0 */\n      swap1\n      dup7\n      swap3\n      swap4\n      swap2\n      jump(tag_170)\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n    tag_188:\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      shl(0xe0, 0x4e487b71)\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x00\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      mstore\n      0x11\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x04\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      mstore\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x24\n      0x00\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      revert\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n    tag_159:\n      0x80\n      dup4\n      calldatasize\n      sub\n      slt\n      tag_53\n      jumpi\n      0x20\n      0x80\n      swap2\n      mload(0x40)\n      tag_192\n      dup2\n      tag_5\n      jump\t// in\n    tag_192:\n      tag_193\n      dup7\n      tag_4\n      jump\t// in\n    tag_193:\n      dup2\n      mstore\n      tag_194\n      dup4\n      dup8\n      add\n      tag_4\n      jump\t// in\n    tag_194:\n      dup4\n      dup3\n      add\n      mstore\n      tag_195\n      0x40\n      dup8\n      add\n      tag_10\n      jump\t// in\n    tag_195:\n      0x40\n      dup3\n      add\n      mstore\n      tag_196\n      0x60\n      dup8\n      add\n      tag_10\n      jump\t// in\n    tag_196:\n      0x60\n      dup3\n      add\n      mstore\n      dup2\n      mstore\n      add\n      swap3\n      add\n      swap2\n      jump(tag_158)\n    tag_25:\n      jumpi(tag_53, callvalue)\n      0x20\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_53\n      jumpi\n      0xffffffffffffffff\n      calldataload(0x04)\n      dup2\n      dup2\n      gt\n      tag_53\n      jumpi\n      calldatasize\n      0x23\n      dup3\n      add\n      slt\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x04\n      add\n      calldataload\n      swap2\n      dup3\n      gt\n      tag_53\n      jumpi\n      0x24\n      swap1\n      0x07\n      calldatasize\n      dup4\n      dup6\n      dup4\n      shl\n      dup5\n      add\n      add\n      gt\n      tag_53\n      jumpi\n      0x00\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3071:3081  i < length */\n    tag_209:\n      dup5\n      dup2\n      lt\n      tag_210\n      jumpi\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      stop\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3083:3086  ++i */\n    tag_210:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      dup1\n      dup3\n      shl\n      dup4\n      add\n      swap1\n      0x80\n      not(0x23)\n      dup4\n      calldatasize\n      sub\n      add\n      slt\n      tag_53\n      jumpi\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3264:3284  transferDetail.token */\n      tag_214\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x01\n      swap3\n      mload(0x40)\n      tag_215\n      dup2\n      tag_5\n      jump\t// in\n    tag_215:\n      tag_216\n      dup9\n      dup4\n      add\n      tag_4\n      jump\t// in\n    tag_216:\n      dup1\n      dup3\n      mstore\n      0x60\n      tag_217\n      0x44\n      dup6\n      add\n      tag_4\n      jump\t// in\n    tag_217:\n      swap3\n      dup4\n      dup14\n      dup3\n      add\n      mstore\n      tag_218\n      0x84\n      tag_219\n      0x64\n      dup9\n      add\n      tag_4\n      jump\t// in\n    tag_219:\n      swap7\n      dup8\n      0x40\n      dup6\n      add\n      mstore\n      add\n      tag_4\n      jump\t// in\n    tag_218:\n      swap2\n      dup3\n      swap2\n      add\n      mstore\n      dup7\n      dup1\n      0xa0\n      shl\n      sub\n      dup1\n      dup1\n      dup1\n      swap4\n      and\n      swap6\n      and\n      swap4\n      and\n      swap2\n      and\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3264:3284  transferDetail.token */\n      tag_17\n      jump\t// in\n    tag_214:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      add\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3056:3069  uint256 i = 0 */\n      jump(tag_209)\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n    tag_1:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_53\n      jumpi\n      jump\t// out\n    tag_2:\n      calldataload(0x24)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_53\n      jumpi\n      jump\t// out\n    tag_3:\n      calldataload(0x44)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_53\n      jumpi\n      jump\t// out\n    tag_4:\n      calldataload\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_53\n      jumpi\n      jump\t// out\n    tag_5:\n      0x80\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_228\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_228:\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      shl(0xe0, 0x4e487b71)\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x00\n      mstore\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_6:\n      0x60\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_228\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_7:\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      0xa0\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_228\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_8:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_228\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_9:\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_228\n      jumpi\n      0x05\n      shl\n      0x20\n      add\n      swap1\n      jump\t// out\n    tag_10:\n      calldataload\n      swap1\n      0xffffffffffff\n      dup3\n      and\n      dup3\n      sub\n      tag_53\n      jumpi\n      jump\t// out\n    tag_11:\n      swap2\n      dup2\n      0x1f\n      dup5\n      add\n      slt\n      iszero\n      tag_53\n      jumpi\n      dup3\n      calldataload\n      swap2\n      0xffffffffffffffff\n      dup4\n      gt\n      tag_53\n      jumpi\n      0x20\n      dup4\n      dup2\n      dup7\n      add\n      swap6\n      add\n      add\n      gt\n      tag_53\n      jumpi\n      jump\t// out\n        /* \"contracts/contracts/lib/PermitHash.sol\":5345:5533  function _hashPermitDetails(IAllowanceTransfer.PermitDetails memory details) private pure returns (bytes32) {... */\n    tag_13:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mload(0x40)\n        /* \"contracts/contracts/lib/PermitHash.sol\":5480:5525  abi.encode(_PERMIT_DETAILS_TYPEHASH, details) */\n      0x20\n      dup2\n      add\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      swap2\n        /* \"contracts/contracts/lib/PermitHash.sol\":289:376  keccak256(\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\") */\n      0x65626cad6cb96493bf6f5ebea28756c966f023ab9e8a83a7101849d5573b3678\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      dup4\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"contracts/contracts/lib/PermitHash.sol\":289:376  keccak256(\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\") */\n      dup1\n      dup3\n      mload\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      and\n      0x40\n        /* \"contracts/contracts/lib/PermitHash.sol\":289:376  keccak256(\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\") */\n      dup5\n      add\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":5480:5525  abi.encode(_PERMIT_DETAILS_TYPEHASH, details) */\n      0x20\n        /* \"contracts/contracts/lib/PermitHash.sol\":289:376  keccak256(\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\") */\n      dup3\n      add\n      mload\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      and\n        /* \"contracts/contracts/lib/PermitHash.sol\":289:376  keccak256(\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\") */\n      0x60\n      dup4\n      add\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":289:376  keccak256(\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\") */\n      0x60\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0xffffffffffff\n        /* \"contracts/contracts/lib/PermitHash.sol\":289:376  keccak256(\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\") */\n      swap2\n      dup3\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x40\n        /* \"contracts/contracts/lib/PermitHash.sol\":289:376  keccak256(\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\") */\n      dup3\n      add\n      mload\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      and\n        /* \"contracts/contracts/lib/PermitHash.sol\":289:376  keccak256(\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\") */\n      0x80\n      dup6\n      add\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":289:376  keccak256(\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\") */\n      add\n      mload\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      and\n      0xa0\n        /* \"contracts/contracts/lib/PermitHash.sol\":289:376  keccak256(\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\") */\n      dup3\n      add\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mstore\n      0xa0\n        /* \"contracts/contracts/lib/PermitHash.sol\":5480:5525  abi.encode(_PERMIT_DETAILS_TYPEHASH, details) */\n      dup2\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":289:376  keccak256(\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\") */\n      0xc0\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      dup2\n      add\n      dup2\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_228\n      jumpi\n      0x40\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":5470:5526  keccak256(abi.encode(_PERMIT_DETAILS_TYPEHASH, details)) */\n      swap1\n      keccak256\n        /* \"contracts/contracts/lib/PermitHash.sol\":5345:5533  function _hashPermitDetails(IAllowanceTransfer.PermitDetails memory details) private pure returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n    tag_14:\n      swap2\n      swap1\n      dup3\n      0x40\n      swap2\n      sub\n      slt\n      tag_53\n      jumpi\n      0x20\n      dup3\n      calldataload\n      swap3\n      add\n      calldataload\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":700:1809  function verify(bytes calldata signature, bytes32 hash, address claimedSigner) internal view {... */\n    tag_15:\n      0x00\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":863:888  claimedSigner.code.length */\n      dup5\n      extcodesize\n      tag_250\n      jumpi\n      pop\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":933:935  65 */\n      0x41\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":913:935  signature.length == 65 */\n      dup3\n      sub\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":933:935  65 */\n      tag_252\n      jumpi\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":964:1005  abi.decode(signature, (bytes32, bytes32)) */\n      tag_254\n      dup3\n      dup3\n      add\n      dup3\n      tag_14\n      jump\t// in\n    tag_254:\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":955:1005  (r, s) = abi.decode(signature, (bytes32, bytes32)) */\n      swap4\n      swap1\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      swap3\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1043:1045  64 */\n      0x40\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      lt\n      iszero\n      tag_255\n      jumpi\n      0x20\n      swap4\n      0x00\n      swap4\n      0xff\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1043:1045  64 */\n      0x40\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      0x80\n      swap6\n      add\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1033:1046  signature[64] */\n      calldataload\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      0xf8\n      shr\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":909:1399  if (signature.length == 65) {... */\n    tag_257:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mload(0x40)\n      swap5\n      dup6\n      mstore\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      and\n      dup7\n      dup5\n      add\n      mstore\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x40\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      dup4\n      add\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mstore\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      0x60\n      dup3\n      add\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mstore\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1429:1453  ecrecover(hash, v, r, s) */\n      dup3\n      dup1\n      mstore\n      0x01\n      gas\n      staticcall\n      iszero\n      tag_258\n      jumpi\n      mload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      swap1\n      dup2\n      and\n      swap2\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1471:1491  signer == address(0) */\n      dup3\n      iszero\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1467:1518  if (signer == address(0)) revert InvalidSignature() */\n      tag_260\n      jumpi\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      and\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1536:1559  signer != claimedSigner */\n      sub\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1532:1583  if (signer != claimedSigner) revert InvalidSigner() */\n      tag_262\n      jumpi\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":700:1809  function verify(bytes calldata signature, bytes32 hash, address claimedSigner) internal view {... */\n      jump\t// out\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1532:1583  if (signer != claimedSigner) revert InvalidSigner() */\n    tag_262:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mload(0x40)\n      shl(0xe2, 0x20578759)\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1568:1583  InvalidSigner() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1467:1518  if (signer == address(0)) revert InvalidSignature() */\n    tag_260:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mload(0x40)\n      shl(0xe0, 0x8baa579f)\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1500:1518  InvalidSignature() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1429:1453  ecrecover(hash, v, r, s) */\n    tag_258:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n    tag_255:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":909:1399  if (signature.length == 65) {... */\n    tag_252:\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1092:1094  64 */\n      0x40\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1072:1094  signature.length == 64 */\n      dup3\n      sub\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1092:1094  64 */\n      tag_265\n      jumpi\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1180:1221  abi.decode(signature, (bytes32, bytes32)) */\n      tag_267\n      swap2\n      dup2\n      add\n      swap1\n      tag_14\n      jump\t// in\n    tag_267:\n      sub(shl(0xff, 0x01), 0x01)\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1243:1262  vs & UPPER_BIT_MASK */\n      dup2\n      and\n      swap3\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":626:692  0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff */\n      0xff\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      swap2\n      dup3\n      shr\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1312:1314  27 */\n      0x1b\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      add\n      swap2\n      dup3\n      gt\n      tag_188\n      jumpi\n      0x20\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1280:1314  v = uint8(uint256(vs >> 255)) + 27 */\n      swap4\n      0x00\n      swap4\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      0xff\n      0x80\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1280:1314  v = uint8(uint256(vs >> 255)) + 27 */\n      swap5\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":909:1399  if (signature.length == 65) {... */\n      jump(tag_257)\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1068:1399  if (signature.length == 64) {... */\n    tag_265:\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1092:1094  64 */\n      0x40\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mload\n      shl(0xe0, 0x4be6321b)\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1360:1384  InvalidSignatureLength() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":859:1803  if (claimedSigner.code.length == 0) {... */\n    tag_250:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      swap2\n      dup1\n      swap4\n      swap5\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1634:1691  IERC1271(claimedSigner).isValidSignature(hash, signature) */\n      0x20\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      swap3\n      0x64\n      mload(0x40)\n      dup1\n      swap8\n      dup2\n      swap6\n      dup3\n      swap5\n      shl(0xe1, 0x0b135d3f)\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1634:1691  IERC1271(claimedSigner).isValidSignature(hash, signature) */\n      swap12\n      dup13\n      dup6\n      mstore\n      0x04\n      dup6\n      add\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mstore\n      0x40\n      0x24\n      dup6\n      add\n      mstore\n      dup2\n      0x44\n      dup6\n      add\n      mstore\n      dup5\n      dup5\n      add\n      calldatacopy\n      dup2\n      dup2\n      add\n      dup4\n      add\n      dup9\n      swap1\n      mstore\n      0x1f\n      add\n      not(0x1f)\n      and\n      dup2\n      add\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1634:1691  IERC1271(claimedSigner).isValidSignature(hash, signature) */\n      sub\n      add\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      and\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1634:1691  IERC1271(claimedSigner).isValidSignature(hash, signature) */\n      gas\n      staticcall\n      swap2\n      dup3\n      iszero\n      tag_270\n      jumpi\n      dup2\n      swap3\n      tag_272\n      jumpi\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":859:1803  if (claimedSigner.code.length == 0) {... */\n    tag_273:\n      pop\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      and\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1709:1757  magicValue != IERC1271.isValidSignature.selector */\n      sub\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1705:1792  if (magicValue != IERC1271.isValidSignature.selector) revert InvalidContractSignature() */\n      tag_274\n      jumpi\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":700:1809  function verify(bytes calldata signature, bytes32 hash, address claimedSigner) internal view {... */\n      jump\t// out\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1705:1792  if (magicValue != IERC1271.isValidSignature.selector) revert InvalidContractSignature() */\n    tag_274:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mload(0x40)\n      shl(0xe2, 0x2c19a72f)\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1766:1792  InvalidContractSignature() */\n      dup2\n      mstore\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1634:1691  IERC1271(claimedSigner).isValidSignature(hash, signature) */\n      0x04\n      swap1\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1766:1792  InvalidContractSignature() */\n      revert\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1634:1691  IERC1271(claimedSigner).isValidSignature(hash, signature) */\n    tag_272:\n      swap1\n      swap2\n      pop\n      0x20\n      dup2\n      returndatasize\n      dup3\n      gt\n      tag_276\n      jumpi\n    tag_277:\n      dup2\n      tag_278\n      0x20\n      swap4\n      dup4\n      tag_8\n      jump\t// in\n    tag_278:\n      dup2\n      add\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      sub\n      slt\n      tag_279\n      jumpi\n      mload\n      swap1\n      not(sub(shl(0xe0, 0x01), 0x01))\n      dup3\n      and\n      dup3\n      sub\n      tag_281\n      jumpi\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1634:1691  IERC1271(claimedSigner).isValidSignature(hash, signature) */\n      pop\n      0x00\n      dup1\n      jump(tag_273)\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n    tag_281:\n      dup1\n      revert\n    tag_279:\n      pop\n      dup1\n      revert\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1634:1691  IERC1271(claimedSigner).isValidSignature(hash, signature) */\n    tag_276:\n      returndatasize\n      swap2\n      pop\n      jump(tag_277)\n    tag_270:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      pop\n      mload(0x40)\n      swap1\n      returndatasize\n      swap1\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_16:\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      dup1\n      mload\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      dup3\n      lt\n      iszero\n      tag_255\n      jumpi\n      0x20\n      swap2\n      0x05\n      shl\n      add\n      add\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3463:4200  function _transfer(address from, address to, uint160 amount, address token) private {... */\n    tag_17:\n      swap1\n      swap3\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup1\n      swap3\n      and\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3591:3600  allowance */\n      swap1\n      0x00\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      swap3\n      dup3\n      dup5\n      mstore\n      dup4\n      0x20\n      mstore\n      0x40\n      swap5\n      dup2\n      dup7\n      dup7\n      keccak256\n      swap4\n      and\n      swap3\n      dup4\n      dup7\n      mstore\n      0x20\n      mstore\n      dup6\n      dup6\n      keccak256\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3614:3624  msg.sender */\n      caller\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      dup7\n      mstore\n      0x20\n      mstore\n      dup6\n      dup6\n      keccak256\n      swap7\n      dup8\n      sload\n      swap8\n      0xffffffffffff\n      dup10\n      0xa0\n      shr\n      and\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3640:3655  block.timestamp */\n      dup1\n      timestamp\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3640:3676  block.timestamp > allowed.expiration */\n      gt\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3636:3721  if (block.timestamp > allowed.expiration) revert AllowanceExpired(allowed.expiration) */\n      tag_285\n      jumpi\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      pop\n      dup4\n      dup10\n      and\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3780:3810  maxAmount != type(uint160).max */\n      swap9\n      dup5\n      dup11\n      sub\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3776:4065  if (maxAmount != type(uint160).max) {... */\n      tag_287\n      jumpi\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3463:4200  function _transfer(address from, address to, uint160 amount, address token) private {... */\n    tag_288:\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1532:3053  assembly {... */\n      pop\n      pop\n      dup7\n      swap8\n      pop\n      swap3\n      dup3\n      dup7\n      swap8\n      swap3\n      dup8\n      swap7\n      swap5\n      0x64\n      swap7\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x20\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1532:3053  assembly {... */\n      swap10\n      swap6\n      mload\n      swap7\n      shl(0xe0, 0x23b872dd)\n      dup9\n      mstore\n      0x04\n      dup9\n      add\n      mstore\n      and\n      0x24\n      dup7\n      add\n      mstore\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      and\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1532:3053  assembly {... */\n      0x44\n      dup5\n      add\n      mstore\n      gas\n      call\n      swap1\n      mload\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x01\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1532:3053  assembly {... */\n      eq\n      gt(returndatasize, 0x1f)\n      and\n      iszero(returndatasize)\n      or\n      and\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      iszero\n      tag_289\n      jumpi\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3463:4200  function _transfer(address from, address to, uint160 amount, address token) private {... */\n      pop\n      jump\t// out\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n    tag_289:\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1532:3053  assembly {... */\n      0x04\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      dup3\n      add\n      mstore\n      0x14\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1532:3053  assembly {... */\n      0x24\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      dup3\n      add\n      mstore\n      shl(0x62, 0x1514905394d1915497d19493d357d19052531151)\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1532:3053  assembly {... */\n      0x44\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      dup3\n      add\n      mstore\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1532:3053  assembly {... */\n      0x64\n      swap1\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      revert\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3776:4065  if (maxAmount != type(uint160).max) {... */\n    tag_287:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      dup10\n      dup6\n      dup6\n      and\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3830:3848  amount > maxAmount */\n      gt\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3826:4055  if (amount > maxAmount) {... */\n      0x00\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3830:3848  amount > maxAmount */\n      eq\n      tag_291\n      jumpi\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      dup9\n      mload\n      shl(0xe0, 0xf96fb071)\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3875:3907  InsufficientAllowance(maxAmount) */\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      dup12\n      swap1\n      mstore\n      0x24\n      swap1\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3875:3907  InsufficientAllowance(maxAmount) */\n      revert\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3826:4055  if (amount > maxAmount) {... */\n    tag_291:\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      and\n      swap9\n      dup4\n      swap1\n      sub\n      dup5\n      and\n      swap9\n      swap1\n      swap9\n      or\n      swap1\n      swap8\n      sstore\n      swap5\n      swap6\n      dup7\n      swap6\n      swap1\n      dup3\n      0x20\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3776:4065  if (maxAmount != type(uint160).max) {... */\n      jump(tag_288)\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3636:3721  if (block.timestamp > allowed.expiration) revert AllowanceExpired(allowed.expiration) */\n    tag_285:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x24\n      swap1\n      dup10\n      mload\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3685:3721  AllowanceExpired(allowed.expiration) */\n      swap1\n      shl(0xe1, 0x6c0d9797)\n      dup3\n      mstore\n      0x04\n      dup3\n      add\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mstore\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3685:3721  AllowanceExpired(allowed.expiration) */\n      revert\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n    tag_18:\n      swap2\n      swap1\n      dup2\n      lt\n      iszero\n      tag_255\n      jumpi\n      0x06\n      shl\n      add\n      swap1\n      jump\t// out\n    tag_19:\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_53\n      jumpi\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5662:6192  function _updateApproval(PermitDetails memory details, address owner, address spender) private {... */\n    tag_20:\n      swap1\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0xffffffffffff\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5782:5795  details.nonce */\n      swap1\n      dup2\n      0x60\n      dup5\n      add\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mload\n      and\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap1\n      dup2\n      dup6\n      mload\n      and\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5861:5875  details.amount */\n      swap5\n      dup3\n      0x20\n      dup3\n      add\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mload\n      and\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5905:5923  details.expiration */\n      swap3\n      dup1\n      dup7\n      0x40\n      dup1\n      swap5\n      add\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mload\n      and\n      swap6\n      and\n      swap6\n      0x00\n      swap2\n      dup8\n      dup4\n      mstore\n      dup3\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5861:5875  details.amount */\n      0x20\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mstore\n      dup4\n      dup4\n      keccak256\n      dup10\n      dup5\n      mstore\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5861:5875  details.amount */\n      0x20\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mstore\n      dup4\n      dup4\n      keccak256\n      swap10\n      and\n      swap9\n      dup10\n      dup4\n      mstore\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5861:5875  details.amount */\n      0x20\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mstore\n      dup3\n      dup3\n      keccak256\n      swap2\n      dup5\n      dup4\n      sload\n      0xd0\n      shr\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":6014:6036  allowed.nonce != nonce */\n      sub\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":6010:6059  if (allowed.nonce != nonce) revert InvalidNonce() */\n      tag_297\n      jumpi\n        /* \"contracts/contracts/lib/Allowance.sol\":843:922  expiration == BLOCK_TIMESTAMP_EXPIRATION ? uint48(block.timestamp) : expiration */\n      swap2\n      dup6\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":6129:6185  Permit(owner, token, spender, amount, expiration, nonce) */\n      tag_299\n        /* \"contracts/contracts/lib/Allowance.sol\":843:922  expiration == BLOCK_TIMESTAMP_EXPIRATION ? uint48(block.timestamp) : expiration */\n      swap5\n      swap3\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":6129:6185  Permit(owner, token, spender, amount, expiration, nonce) */\n      0xc6a377bfc4eb120024a8ac08eef205be16b817020812c73223e81d1bdb9708ec\n        /* \"contracts/contracts/lib/Allowance.sol\":843:922  expiration == BLOCK_TIMESTAMP_EXPIRATION ? uint48(block.timestamp) : expiration */\n      swap9\n      swap8\n      swap7\n      swap5\n        /* \"contracts/contracts/lib/Allowance.sol\":843:883  expiration == BLOCK_TIMESTAMP_EXPIRATION */\n      pop\n      dup8\n      iszero\n        /* \"contracts/contracts/lib/Allowance.sol\":843:922  expiration == BLOCK_TIMESTAMP_EXPIRATION ? uint48(block.timestamp) : expiration */\n      0x00\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      eq\n      tag_300\n      jumpi\n        /* \"contracts/contracts/lib/Allowance.sol\":893:908  block.timestamp */\n      timestamp\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      and\n        /* \"contracts/contracts/lib/Allowance.sol\":843:922  expiration == BLOCK_TIMESTAMP_EXPIRATION ? uint48(block.timestamp) : expiration */\n    tag_302:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x01\n      dup6\n      add\n      0xd0\n      shl\n      not(sub(shl(0xd0, 0x01), 0x01))\n      and\n      0xa0\n      swap2\n      swap1\n      swap2\n      shl\n      shl(0xa0, 0xffffffffffff)\n      and\n        /* \"contracts/contracts/lib/Allowance.sol\":1834:1886  (uint256(nonce) << 208) | uint256(expiration) << 160 */\n      or\n        /* \"contracts/contracts/lib/Allowance.sol\":1834:1895  (uint256(nonce) << 208) | uint256(expiration) << 160 | amount */\n      or\n        /* \"contracts/contracts/lib/Allowance.sol\":1001:1060  assembly {... */\n      swap1\n      sstore\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap4\n      and\n      dup4\n      mstore\n      0xffffffffffff\n      swap4\n      dup5\n      and\n      0x20\n      dup5\n      add\n      mstore\n      swap1\n      swap3\n      and\n      0x40\n      dup3\n      add\n      mstore\n      swap1\n      dup2\n      swap1\n      0x60\n      dup3\n      add\n      swap1\n      jump\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":6129:6185  Permit(owner, token, spender, amount, expiration, nonce) */\n    tag_299:\n      sub\n      swap1\n      log4\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5662:6192  function _updateApproval(PermitDetails memory details, address owner, address spender) private {... */\n      jump\t// out\n        /* \"contracts/contracts/lib/Allowance.sol\":843:922  expiration == BLOCK_TIMESTAMP_EXPIRATION ? uint48(block.timestamp) : expiration */\n    tag_300:\n      pop\n      dup7\n      jump(tag_302)\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":6010:6059  if (allowed.nonce != nonce) revert InvalidNonce() */\n    tag_297:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      dup4\n      mload\n      shl(0xe1, 0x3ab3447f)\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":6045:6059  InvalidNonce() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"contracts/contracts/permit2/EIP712.sol\":1186:1411  function DOMAIN_SEPARATOR() public view override returns (bytes32) {... */\n    tag_21:\n        /* \"contracts/contracts/permit2/EIP712.sol\":1270:1283  block.chainid */\n      chainid\n        /* \"contracts/contracts/permit2/EIP712.sol\":1287:1303  _CACHED_CHAIN_ID */\n      immutable(\"0x3ab4fb69c8e122442af87ae588015f836e7cde3029bbb6dab1983bc840231d63\")\n        /* \"contracts/contracts/permit2/EIP712.sol\":1270:1303  block.chainid == _CACHED_CHAIN_ID */\n      sub\n        /* \"contracts/contracts/permit2/EIP712.sol\":1287:1303  _CACHED_CHAIN_ID */\n      tag_303\n      jumpi\n        /* \"contracts/contracts/permit2/EIP712.sol\":1318:1342  _CACHED_DOMAIN_SEPARATOR */\n      immutable(\"0x4f4ac30ff8bfcef8cd1068d1427faf7fb52fa3a1610b1f430e1f69a91ebb9673\")\n        /* \"contracts/contracts/permit2/EIP712.sol\":1186:1411  function DOMAIN_SEPARATOR() public view override returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/permit2/EIP712.sol\":1270:1404  block.chainid == _CACHED_CHAIN_ID... */\n    tag_303:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      mload(0x40)\n        /* \"contracts/contracts/permit2/EIP712.sol\":1632:1692  abi.encode(typeHash, nameHash, block.chainid, address(this)) */\n      0x20\n      dup2\n      add\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      swap1\n        /* \"contracts/contracts/permit2/EIP712.sol\":789:869  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      dup3\n      mstore\n        /* \"contracts/contracts/permit2/EIP712.sol\":717:737  keccak256(\"Permit2\") */\n      0x9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x40\n      dup3\n      add\n      mstore\n        /* \"contracts/contracts/permit2/EIP712.sol\":1270:1283  block.chainid */\n      chainid\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x60\n      dup3\n      add\n      mstore\n        /* \"contracts/contracts/permit2/EIP712.sol\":1686:1690  this */\n      address\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      0x80\n      dup3\n      add\n      mstore\n      0x80\n        /* \"contracts/contracts/permit2/EIP712.sol\":1632:1692  abi.encode(typeHash, nameHash, block.chainid, address(this)) */\n      dup2\n      mstore\n      tag_306\n      dup2\n      tag_7\n      jump\t// in\n    tag_306:\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      mload\n        /* \"contracts/contracts/permit2/EIP712.sol\":1622:1693  keccak256(abi.encode(typeHash, nameHash, block.chainid, address(this))) */\n      swap1\n      keccak256\n        /* \"contracts/contracts/permit2/EIP712.sol\":1186:1411  function DOMAIN_SEPARATOR() public view override returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/permit2/EIP712.sol\":1757:1924  function _hashTypedData(bytes32 dataHash) internal view returns (bytes32) {... */\n    tag_22:\n        /* \"contracts/contracts/permit2/EIP712.sol\":1887:1905  DOMAIN_SEPARATOR() */\n      tag_307\n      tag_21\n      jump\t// in\n    tag_307:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      swap1\n      mload(0x40)\n        /* \"contracts/contracts/permit2/EIP712.sol\":1858:1916  abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR(), dataHash) */\n      swap1\n      0x20\n      dup3\n      add\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":528:6194  contract AllowanceTransfer is IAllowanceTransfer, EIP712 {... */\n      swap3\n      shl(0xf0, 0x1901)\n      dup5\n      mstore\n      0x22\n      dup4\n      add\n      mstore\n      0x42\n      dup3\n      add\n      mstore\n      0x42\n        /* \"contracts/contracts/permit2/EIP712.sol\":1858:1916  abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR(), dataHash) */\n      dup2\n      mstore\n      tag_306\n      dup2\n      tag_5\n      jump\t// in\n\n    auxdata: 0xa26469706673582212200e26a556a86cb11f96ba51bf12fe8bca1eaf3763c0efeef9b95ce633139907e264736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xC0 CALLVALUE PUSH2 0xB9 JUMPI CHAINID PUSH1 0xA0 MSTORE PUSH1 0x20 DUP2 ADD PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 MSTORE PUSH32 0x9AC997416E8FF9D2FF6BEBEB7149F65CDAE5E32E2B90440B566BB3044041D36A PUSH1 0x40 DUP4 ADD MSTORE CHAINID PUSH1 0x60 DUP4 ADD MSTORE ADDRESS PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x80 DUP3 MSTORE PUSH1 0xA0 DUP3 ADD SWAP2 DUP1 DUP4 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP5 GT OR PUSH2 0xA5 JUMPI DUP3 PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 PUSH1 0x80 MSTORE PUSH2 0x10BC SWAP1 DUP2 PUSH2 0xBE DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0xFC3 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 PUSH2 0xF9D ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD58B1DB EQ PUSH2 0x884 JUMPI DUP1 PUSH4 0x2A2D80D1 EQ PUSH2 0x5CF JUMPI DUP1 PUSH4 0x2B67B570 EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0x36C78516 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x65D9723C EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x87517C45 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x927DA105 EQ PUSH2 0x17C JUMPI PUSH4 0xCC53287F EQ PUSH2 0x7C JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x178 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x178 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x178 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP3 DUP4 GT PUSH2 0x178 JUMPI PUSH1 0x24 DUP2 ADD SWAP1 PUSH1 0x24 CALLDATASIZE SWAP2 DUP6 PUSH1 0x6 SHL ADD ADD GT PUSH2 0x178 JUMPI PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0xD8 JUMPI STOP JUMPDEST DUP1 PUSH2 0xEE PUSH2 0xE9 PUSH1 0x1 SWAP4 DUP8 DUP7 PUSH2 0xE6E JUMP JUMPDEST PUSH2 0xE7E JUMP JUMPDEST PUSH2 0x103 DUP6 PUSH2 0xFD DUP5 DUP10 DUP9 PUSH2 0xE6E JUMP JUMPDEST ADD PUSH2 0xE7E JUMP JUMPDEST CALLER PUSH0 MSTORE PUSH0 DUP7 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP2 DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP3 DUP4 PUSH0 MSTORE DUP8 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP2 AND SWAP1 DUP2 PUSH0 MSTORE DUP7 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE DUP6 DUP3 ADD MSTORE PUSH32 0x89B1ADD15EFF56B3DFE299AD94E01F2B52FBCB80AE1A3BAEA6AE8C04CB2B98A4 PUSH1 0x40 CALLER SWAP3 LOG2 ADD PUSH2 0xCF JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH2 0x195 PUSH2 0x964 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x97A JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x990 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP7 AND DUP4 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP3 KECCAK256 SWAP3 DUP6 AND DUP3 MSTORE SWAP2 DUP3 MSTORE DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD SWAP4 DUP2 AND DUP5 MSTORE PUSH6 0xFFFFFFFFFFFF PUSH1 0xA0 DUP3 SWAP1 SHR AND SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xD0 SHR SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH2 0x215 PUSH2 0x964 JUMP JUMPDEST PUSH2 0x21D PUSH2 0x97A JUMP JUMPDEST SWAP1 PUSH2 0x226 PUSH2 0x990 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP2 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 AND SWAP2 DUP3 DUP3 SUB PUSH2 0x178 JUMPI CALLER PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND SWAP6 DUP7 PUSH0 MSTORE PUSH1 0x20 MSTORE DUP2 PUSH1 0x40 PUSH0 KECCAK256 SWAP8 AND SWAP7 DUP8 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP3 DUP5 ISZERO PUSH0 EQ PUSH2 0x2D2 JUMPI POP TIMESTAMP AND SWAP1 JUMPDEST DUP3 SLOAD SWAP5 AND SWAP4 DUP5 SWAP2 PUSH6 0xFFFFFFFFFFFF PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL AND SWAP1 PUSH6 0xFFFFFFFFFFFF PUSH1 0xD0 SHL AND OR OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xDA9FA7C1B00402C17D0161B249B1AB8BBEC047C5A52207B9C112DEFFD817036B PUSH1 0x40 CALLER SWAP3 LOG4 STOP JUMPDEST SWAP1 POP SWAP1 PUSH2 0x279 JUMP JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH2 0x2F3 PUSH2 0x964 JUMP JUMPDEST PUSH2 0x2FB PUSH2 0x97A JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH6 0xFFFFFFFFFFFF DUP1 DUP3 AND SWAP2 DUP3 DUP2 SUB PUSH2 0x178 JUMPI CALLER PUSH0 MSTORE PUSH1 0x20 SWAP1 PUSH0 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP6 DUP7 PUSH0 MSTORE DUP4 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP7 AND SWAP6 DUP7 PUSH0 MSTORE DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0xD0 SHR SWAP3 DUP4 DUP6 GT ISZERO PUSH2 0x3D7 JUMPI PUSH2 0xFFFF SWAP1 DUP5 DUP4 SUB AND GT PUSH2 0x3C5 JUMPI CALLER PUSH0 MSTORE PUSH0 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP6 PUSH0 MSTORE DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP7 PUSH0 MSTORE DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 DUP2 SLOAD SWAP1 PUSH6 0xFFFFFFFFFFFF PUSH1 0xD0 SHL SWAP1 PUSH1 0xD0 SHL AND SWAP1 PUSH1 0x1 DUP1 PUSH1 0xD0 SHL SUB AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE PUSH32 0x55EB90D810E1700B35A8E7E25395FF7F2B2259ABD7415CA2284DFB1C246418F3 PUSH1 0x40 CALLER SWAP3 LOG4 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1269AD13 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3AB3447F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH2 0x402 PUSH2 0x964 JUMP JUMPDEST PUSH2 0x40A PUSH2 0x97A JUMP JUMPDEST PUSH2 0x412 PUSH2 0x990 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0x178 JUMPI PUSH2 0x42F SWAP4 PUSH2 0xD37 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH2 0x44B PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH2 0x46D PUSH2 0x964 JUMP JUMPDEST CALLDATASIZE PUSH1 0x23 NOT ADD SWAP1 PUSH1 0xC0 DUP3 SLT PUSH2 0x178 JUMPI PUSH1 0x80 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x48A DUP5 PUSH2 0x9EA JUMP JUMPDEST SLT PUSH2 0x178 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x49C DUP3 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x24 CALLDATALOAD DUP4 DUP2 AND DUP2 SUB PUSH2 0x178 JUMPI DUP2 MSTORE PUSH1 0x44 CALLDATALOAD DUP4 DUP2 AND DUP2 SUB PUSH2 0x178 JUMPI PUSH1 0x20 DUP3 ADD MSTORE PUSH6 0xFFFFFFFFFFFF PUSH1 0x64 CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0x178 JUMPI PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x178 JUMPI PUSH1 0x60 DUP3 ADD MSTORE DUP4 MSTORE PUSH1 0xA4 CALLDATALOAD SWAP2 DUP1 DUP4 AND DUP4 SUB PUSH2 0x178 JUMPI PUSH1 0x20 DUP5 ADD SWAP3 DUP4 MSTORE PUSH1 0xC4 CALLDATALOAD SWAP4 PUSH1 0x40 DUP2 ADD DUP6 DUP2 MSTORE PUSH1 0xE4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x178 JUMPI PUSH2 0x52E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xA6F JUMP JUMPDEST SWAP2 SWAP1 SWAP7 DUP1 TIMESTAMP GT PUSH2 0x5B7 JUMPI POP PUSH2 0x42F SWAP7 PUSH2 0x5AD SWAP3 PUSH2 0x5A7 DUP8 SWAP4 PUSH2 0x550 DUP8 MLOAD PUSH2 0xA9D JUMP JUMPDEST SWAP1 DUP9 DUP12 MLOAD AND SWAP1 MLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP4 ADD SWAP4 PUSH32 0xF3841CD1FF0085026A6327B620B67997CE40F282C88A8E905A7A5626E310F3D0 DUP6 MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x80 DUP2 MSTORE PUSH2 0x59F DUP2 PUSH2 0xA06 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x1055 JUMP JUMPDEST SWAP2 PUSH2 0xB3B JUMP JUMPDEST MLOAD SWAP3 MLOAD AND SWAP2 PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xCD21DB4F PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x3 NOT PUSH1 0x60 CALLDATASIZE DUP3 ADD SLT PUSH2 0x178 JUMPI PUSH2 0x5E9 PUSH2 0x964 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP4 GT PUSH2 0x178 JUMPI PUSH1 0x60 SWAP1 DUP4 CALLDATASIZE SUB ADD SLT PUSH2 0x178 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x618 DUP4 PUSH2 0x9EA JUMP JUMPDEST DUP1 PUSH1 0x4 ADD CALLDATALOAD DUP3 DUP2 GT PUSH2 0x178 JUMPI DUP2 ADD CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x178 JUMPI PUSH1 0x4 DUP2 ADD CALLDATALOAD PUSH2 0x63F DUP2 PUSH2 0xA44 JUMP JUMPDEST SWAP2 PUSH2 0x64D PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xA22 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x24 PUSH1 0x20 DUP5 ADD SWAP3 PUSH1 0x7 SHL DUP3 ADD ADD SWAP1 CALLDATASIZE DUP3 GT PUSH2 0x178 JUMPI PUSH1 0x24 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x822 JUMPI POP POP POP DUP4 MSTORE PUSH1 0x44 SWAP1 PUSH2 0x685 PUSH1 0x24 DUP3 ADD PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE ADD CALLDATALOAD SWAP1 DUP2 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x178 JUMPI PUSH2 0x6AB SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xA6F JUMP JUMPDEST SWAP2 DUP1 TIMESTAMP GT PUSH2 0x5B7 JUMPI POP DUP4 DUP4 MLOAD MLOAD SWAP2 PUSH2 0x6C2 DUP4 PUSH2 0xA44 JUMP JUMPDEST SWAP3 PUSH2 0x6D0 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0xA22 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x1F NOT PUSH2 0x6DF DUP3 PUSH2 0xA44 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP7 ADD CALLDATACOPY PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x7D5 JUMPI POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 DUP2 PUSH1 0x20 DUP7 MLOAD SWAP2 SWAP7 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x7BC JUMPI POP POP POP PUSH2 0x724 DUP2 PUSH2 0x787 SWAP7 SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xA22 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP4 PUSH2 0x5A7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 PUSH1 0x20 DUP10 ADD MLOAD AND PUSH1 0x40 DUP10 ADD MLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP4 ADD SWAP4 PUSH32 0xAF1B0D30D2CAB0380E68F0689007E3254993C596F2FDD0AAA7F4D04F79440863 DUP6 MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x80 DUP2 MSTORE PUSH2 0x59F DUP2 PUSH2 0xA06 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD AND SWAP1 DUP1 MLOAD MLOAD SWAP2 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x79D JUMPI STOP JUMPDEST DUP1 PUSH2 0x7B6 DUP4 DUP8 PUSH2 0x7B0 PUSH1 0x1 SWAP6 DUP9 MLOAD PUSH2 0xD23 JUMP JUMPDEST MLOAD PUSH2 0xE92 JUMP JUMPDEST ADD PUSH2 0x794 JUMP JUMPDEST DUP3 MLOAD DUP9 MSTORE PUSH1 0x20 SWAP8 DUP9 ADD SWAP8 DUP12 SWAP8 POP SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x704 JUMP JUMPDEST SWAP1 SWAP2 SWAP4 SWAP3 POP PUSH2 0x7EE PUSH2 0x7E8 DUP3 DUP9 MLOAD PUSH2 0xD23 JUMP JUMPDEST MLOAD PUSH2 0xA9D JUMP JUMPDEST PUSH2 0x7F8 DUP3 DUP6 PUSH2 0xD23 JUMP JUMPDEST MSTORE PUSH0 NOT DUP2 EQ PUSH2 0x80E JUMPI PUSH1 0x1 ADD SWAP1 DUP7 SWAP3 SWAP4 SWAP2 PUSH2 0x6E8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x80 DUP4 CALLDATASIZE SUB SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x80 SWAP2 PUSH1 0x40 MLOAD PUSH2 0x83D DUP2 PUSH2 0x9BA JUMP JUMPDEST PUSH2 0x846 DUP7 PUSH2 0x9A6 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x853 DUP4 DUP8 ADD PUSH2 0x9A6 JUMP JUMPDEST DUP4 DUP3 ADD MSTORE PUSH2 0x863 PUSH1 0x40 DUP8 ADD PUSH2 0xA5C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x874 PUSH1 0x60 DUP8 ADD PUSH2 0xA5C JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x66A JUMP JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x178 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x178 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x178 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x178 JUMPI PUSH1 0x24 SWAP1 PUSH1 0x7 CALLDATASIZE DUP4 DUP6 DUP4 SHL DUP5 ADD ADD GT PUSH2 0x178 JUMPI PUSH0 JUMPDEST DUP5 DUP2 LT PUSH2 0x8DD JUMPI STOP JUMPDEST DUP1 DUP3 SHL DUP4 ADD SWAP1 PUSH1 0x80 PUSH1 0x23 NOT DUP4 CALLDATASIZE SUB ADD SLT PUSH2 0x178 JUMPI PUSH2 0x95E PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x903 DUP2 PUSH2 0x9BA JUMP JUMPDEST PUSH2 0x90E DUP9 DUP4 ADD PUSH2 0x9A6 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x60 PUSH2 0x91F PUSH1 0x44 DUP6 ADD PUSH2 0x9A6 JUMP JUMPDEST SWAP3 DUP4 DUP14 DUP3 ADD MSTORE PUSH2 0x943 PUSH1 0x84 PUSH2 0x936 PUSH1 0x64 DUP9 ADD PUSH2 0x9A6 JUMP JUMPDEST SWAP7 DUP8 PUSH1 0x40 DUP6 ADD MSTORE ADD PUSH2 0x9A6 JUMP JUMPDEST SWAP2 DUP3 SWAP2 ADD MSTORE DUP7 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP1 DUP1 SWAP4 AND SWAP6 AND SWAP4 AND SWAP2 AND PUSH2 0xD37 JUMP JUMPDEST ADD PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x178 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x178 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x178 JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x178 JUMPI JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x9D6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x9D6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x9D6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x9D6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x9D6 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH6 0xFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x178 JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x178 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x178 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x178 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 PUSH32 0x65626CAD6CB96493BF6F5EBEA28756C966F023AB9E8A83A7101849D5573B3678 DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP3 MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x60 PUSH6 0xFFFFFFFFFFFF SWAP2 DUP3 PUSH1 0x40 DUP3 ADD MLOAD AND PUSH1 0x80 DUP6 ADD MSTORE ADD MLOAD AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x9D6 JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x40 SWAP2 SUB SLT PUSH2 0x178 JUMPI PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 DUP5 EXTCODESIZE PUSH2 0xC43 JUMPI POP PUSH1 0x41 DUP3 SUB PUSH2 0xBF4 JUMPI PUSH2 0xB57 DUP3 DUP3 ADD DUP3 PUSH2 0xB25 JUMP JUMPDEST SWAP4 SWAP1 SWAP3 PUSH1 0x40 LT ISZERO PUSH2 0xBE0 JUMPI PUSH1 0x20 SWAP4 PUSH0 SWAP4 PUSH1 0xFF PUSH1 0x40 PUSH1 0x80 SWAP6 ADD CALLDATALOAD PUSH1 0xF8 SHR JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0xBD5 JUMPI PUSH0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0xBC3 JUMPI AND SUB PUSH2 0xBB1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x20578759 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8BAA579F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 DUP3 SUB PUSH2 0xC31 JUMPI PUSH2 0xC08 SWAP2 DUP2 ADD SWAP1 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP2 AND SWAP3 PUSH1 0xFF SWAP2 DUP3 SHR PUSH1 0x1B ADD SWAP2 DUP3 GT PUSH2 0x80E JUMPI PUSH1 0x20 SWAP4 PUSH0 SWAP4 PUSH1 0xFF PUSH1 0x80 SWAP5 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4BE6321B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP2 DUP1 SWAP4 SWAP5 PUSH1 0x20 SWAP3 PUSH1 0x64 PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0xB135D3F PUSH1 0xE1 SHL SWAP12 DUP13 DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP6 ADD MSTORE DUP2 PUSH1 0x44 DUP6 ADD MSTORE DUP5 DUP5 ADD CALLDATACOPY DUP2 DUP2 ADD DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xD16 JUMPI DUP2 SWAP3 PUSH2 0xCC9 JUMPI JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0xCB7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2C19A72F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xD0E JUMPI JUMPDEST DUP2 PUSH2 0xCE4 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xA22 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xD0A JUMPI MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND DUP3 SUB PUSH2 0xD07 JUMPI POP PUSH0 DUP1 PUSH2 0xCA4 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xCD7 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xBE0 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND SWAP1 PUSH0 SWAP3 DUP3 DUP5 MSTORE DUP4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP5 DUP2 DUP7 DUP7 KECCAK256 SWAP4 AND SWAP3 DUP4 DUP7 MSTORE PUSH1 0x20 MSTORE DUP6 DUP6 KECCAK256 CALLER DUP7 MSTORE PUSH1 0x20 MSTORE DUP6 DUP6 KECCAK256 SWAP7 DUP8 SLOAD SWAP8 PUSH6 0xFFFFFFFFFFFF DUP10 PUSH1 0xA0 SHR AND DUP1 TIMESTAMP GT PUSH2 0xE57 JUMPI POP DUP4 DUP10 AND SWAP9 DUP5 DUP11 SUB PUSH2 0xE10 JUMPI JUMPDEST POP POP DUP7 SWAP8 POP SWAP3 DUP3 DUP7 SWAP8 SWAP3 DUP8 SWAP7 SWAP5 PUSH1 0x64 SWAP7 PUSH1 0x20 SWAP10 SWAP6 MLOAD SWAP7 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x4 DUP9 ADD MSTORE AND PUSH1 0x24 DUP7 ADD MSTORE AND PUSH1 0x44 DUP5 ADD MSTORE GAS CALL SWAP1 MLOAD PUSH1 0x1 EQ PUSH1 0x1F RETURNDATASIZE GT AND RETURNDATASIZE ISZERO OR AND ISZERO PUSH2 0xDD6 JUMPI POP JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1514905394D1915497D19493D357D19052531151 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP10 DUP6 DUP6 AND GT PUSH0 EQ PUSH2 0xE33 JUMPI DUP9 MLOAD PUSH4 0xF96FB071 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP9 DUP4 SWAP1 SUB DUP5 AND SWAP9 SWAP1 SWAP9 OR SWAP1 SWAP8 SSTORE SWAP5 SWAP6 DUP7 SWAP6 SWAP1 DUP3 PUSH1 0x20 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x24 SWAP1 DUP10 MLOAD SWAP1 PUSH4 0x6C0D9797 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0xBE0 JUMPI PUSH1 0x6 SHL ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x178 JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH6 0xFFFFFFFFFFFF SWAP1 DUP2 PUSH1 0x60 DUP5 ADD MLOAD AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP6 MLOAD AND SWAP5 DUP3 PUSH1 0x20 DUP3 ADD MLOAD AND SWAP3 DUP1 DUP7 PUSH1 0x40 DUP1 SWAP5 ADD MLOAD AND SWAP6 AND SWAP6 PUSH0 SWAP2 DUP8 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE DUP4 DUP4 KECCAK256 DUP10 DUP5 MSTORE PUSH1 0x20 MSTORE DUP4 DUP4 KECCAK256 SWAP10 AND SWAP9 DUP10 DUP4 MSTORE PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 SWAP2 DUP5 DUP4 SLOAD PUSH1 0xD0 SHR SUB PUSH2 0xF89 JUMPI SWAP2 DUP6 PUSH2 0xF7D SWAP5 SWAP3 PUSH32 0xC6A377BFC4EB120024A8AC08EEF205BE16B817020812C73223E81D1BDB9708EC SWAP9 SWAP8 SWAP7 SWAP5 POP DUP8 ISZERO PUSH0 EQ PUSH2 0xF82 JUMPI TIMESTAMP AND JUMPDEST PUSH1 0x1 DUP6 ADD PUSH1 0xD0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT AND PUSH1 0xA0 SWAP2 SWAP1 SWAP2 SHL PUSH6 0xFFFFFFFFFFFF PUSH1 0xA0 SHL AND OR OR SWAP1 SSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH6 0xFFFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 SWAP3 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x60 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST POP DUP7 PUSH2 0xF28 JUMP JUMPDEST DUP4 MLOAD PUSH4 0x3AB3447F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CHAINID PUSH32 0x0 SUB PUSH2 0xFE5 JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP3 MSTORE PUSH32 0x9AC997416E8FF9D2FF6BEBEB7149F65CDAE5E32E2B90440B566BB3044041D36A PUSH1 0x40 DUP3 ADD MSTORE CHAINID PUSH1 0x60 DUP3 ADD MSTORE ADDRESS PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x80 DUP2 MSTORE PUSH2 0x104F DUP2 PUSH2 0xA06 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x105D PUSH2 0xF9A JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH2 0x1901 PUSH1 0xF0 SHL DUP5 MSTORE PUSH1 0x22 DUP4 ADD MSTORE PUSH1 0x42 DUP3 ADD MSTORE PUSH1 0x42 DUP2 MSTORE PUSH2 0x104F DUP2 PUSH2 0x9BA JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0x26 0xA5 JUMP 0xA8 PUSH13 0xB11F96BA51BF12FE8BCA1EAF37 PUSH4 0xC0EFEEF9 0xB9 0x5C 0xE6 CALLER SGT SWAP10 SMOD 0xE2 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "528:5666:7:-:0;;;;919:13:8;900:32;;1632:60;;;789:80;528:5666:7;;717:20:8;528:5666:7;;;;919:13:8;528:5666:7;;;;1686:4:8;528:5666:7;;;;;1632:60:8;;900:32;528:5666:7;;;;;;;;;;;;;;;;;;;;1622:71:8;;528:5666:7;942:74:8;528:5666:7;;;;;;;;;;;;900:32:8;528:5666:7;;;;;;;;;;-1:-1:-1;528:5666:7;;;;;-1:-1:-1;528:5666:7;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 2470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address_8780": {
									"entryPoint": 2404,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_8787": {
									"entryPoint": 2426,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_8799": {
									"entryPoint": 2448,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_bytes32t_bytes32": {
									"entryPoint": 2853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_bytes_calldata": {
									"entryPoint": 2671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_uint48": {
									"entryPoint": 2652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_uint160_uint48_uint48": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"array_allocation_size_array_struct_PermitDetails_dyn": {
									"entryPoint": 2628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"calldata_array_index_access_struct_TokenSpenderPair_calldata_dyn_calldata": {
									"entryPoint": 3694,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_12068": {
									"entryPoint": 2566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_8779": {
									"entryPoint": 2490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_8781": {
									"entryPoint": 2538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_DOMAIN_SEPARATOR": {
									"entryPoint": 3994,
									"id": 1665,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_hashPermitDetails": {
									"entryPoint": 2717,
									"id": 873,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_hashTypedData": {
									"entryPoint": 4181,
									"id": 1709,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_transfer": {
									"entryPoint": 3383,
									"id": 1408,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"fun_updateApproval": {
									"entryPoint": 3730,
									"id": 1608,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"fun_verify": {
									"entryPoint": 2875,
									"id": 1059,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"memory_array_index_access_struct_PermitDetails_dyn": {
									"entryPoint": 3363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"read_from_calldatat_address": {
									"entryPoint": 3710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"immutableReferences": {
								"1618": [
									{
										"length": 32,
										"start": 4035
									}
								],
								"1620": [
									{
										"length": 32,
										"start": 3997
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD58B1DB EQ PUSH2 0x884 JUMPI DUP1 PUSH4 0x2A2D80D1 EQ PUSH2 0x5CF JUMPI DUP1 PUSH4 0x2B67B570 EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0x36C78516 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x65D9723C EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x87517C45 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x927DA105 EQ PUSH2 0x17C JUMPI PUSH4 0xCC53287F EQ PUSH2 0x7C JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x178 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x178 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x178 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP3 DUP4 GT PUSH2 0x178 JUMPI PUSH1 0x24 DUP2 ADD SWAP1 PUSH1 0x24 CALLDATASIZE SWAP2 DUP6 PUSH1 0x6 SHL ADD ADD GT PUSH2 0x178 JUMPI PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0xD8 JUMPI STOP JUMPDEST DUP1 PUSH2 0xEE PUSH2 0xE9 PUSH1 0x1 SWAP4 DUP8 DUP7 PUSH2 0xE6E JUMP JUMPDEST PUSH2 0xE7E JUMP JUMPDEST PUSH2 0x103 DUP6 PUSH2 0xFD DUP5 DUP10 DUP9 PUSH2 0xE6E JUMP JUMPDEST ADD PUSH2 0xE7E JUMP JUMPDEST CALLER PUSH0 MSTORE PUSH0 DUP7 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP2 DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP3 DUP4 PUSH0 MSTORE DUP8 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP2 AND SWAP1 DUP2 PUSH0 MSTORE DUP7 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE DUP6 DUP3 ADD MSTORE PUSH32 0x89B1ADD15EFF56B3DFE299AD94E01F2B52FBCB80AE1A3BAEA6AE8C04CB2B98A4 PUSH1 0x40 CALLER SWAP3 LOG2 ADD PUSH2 0xCF JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH2 0x195 PUSH2 0x964 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x97A JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x990 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP7 AND DUP4 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP3 KECCAK256 SWAP3 DUP6 AND DUP3 MSTORE SWAP2 DUP3 MSTORE DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD SWAP4 DUP2 AND DUP5 MSTORE PUSH6 0xFFFFFFFFFFFF PUSH1 0xA0 DUP3 SWAP1 SHR AND SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xD0 SHR SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH2 0x215 PUSH2 0x964 JUMP JUMPDEST PUSH2 0x21D PUSH2 0x97A JUMP JUMPDEST SWAP1 PUSH2 0x226 PUSH2 0x990 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP2 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 AND SWAP2 DUP3 DUP3 SUB PUSH2 0x178 JUMPI CALLER PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND SWAP6 DUP7 PUSH0 MSTORE PUSH1 0x20 MSTORE DUP2 PUSH1 0x40 PUSH0 KECCAK256 SWAP8 AND SWAP7 DUP8 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP3 DUP5 ISZERO PUSH0 EQ PUSH2 0x2D2 JUMPI POP TIMESTAMP AND SWAP1 JUMPDEST DUP3 SLOAD SWAP5 AND SWAP4 DUP5 SWAP2 PUSH6 0xFFFFFFFFFFFF PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL AND SWAP1 PUSH6 0xFFFFFFFFFFFF PUSH1 0xD0 SHL AND OR OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xDA9FA7C1B00402C17D0161B249B1AB8BBEC047C5A52207B9C112DEFFD817036B PUSH1 0x40 CALLER SWAP3 LOG4 STOP JUMPDEST SWAP1 POP SWAP1 PUSH2 0x279 JUMP JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH2 0x2F3 PUSH2 0x964 JUMP JUMPDEST PUSH2 0x2FB PUSH2 0x97A JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH6 0xFFFFFFFFFFFF DUP1 DUP3 AND SWAP2 DUP3 DUP2 SUB PUSH2 0x178 JUMPI CALLER PUSH0 MSTORE PUSH1 0x20 SWAP1 PUSH0 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP6 DUP7 PUSH0 MSTORE DUP4 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP7 AND SWAP6 DUP7 PUSH0 MSTORE DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0xD0 SHR SWAP3 DUP4 DUP6 GT ISZERO PUSH2 0x3D7 JUMPI PUSH2 0xFFFF SWAP1 DUP5 DUP4 SUB AND GT PUSH2 0x3C5 JUMPI CALLER PUSH0 MSTORE PUSH0 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP6 PUSH0 MSTORE DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP7 PUSH0 MSTORE DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 DUP2 SLOAD SWAP1 PUSH6 0xFFFFFFFFFFFF PUSH1 0xD0 SHL SWAP1 PUSH1 0xD0 SHL AND SWAP1 PUSH1 0x1 DUP1 PUSH1 0xD0 SHL SUB AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE PUSH32 0x55EB90D810E1700B35A8E7E25395FF7F2B2259ABD7415CA2284DFB1C246418F3 PUSH1 0x40 CALLER SWAP3 LOG4 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1269AD13 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3AB3447F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH2 0x402 PUSH2 0x964 JUMP JUMPDEST PUSH2 0x40A PUSH2 0x97A JUMP JUMPDEST PUSH2 0x412 PUSH2 0x990 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0x178 JUMPI PUSH2 0x42F SWAP4 PUSH2 0xD37 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH2 0x44B PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH2 0x46D PUSH2 0x964 JUMP JUMPDEST CALLDATASIZE PUSH1 0x23 NOT ADD SWAP1 PUSH1 0xC0 DUP3 SLT PUSH2 0x178 JUMPI PUSH1 0x80 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x48A DUP5 PUSH2 0x9EA JUMP JUMPDEST SLT PUSH2 0x178 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x49C DUP3 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x24 CALLDATALOAD DUP4 DUP2 AND DUP2 SUB PUSH2 0x178 JUMPI DUP2 MSTORE PUSH1 0x44 CALLDATALOAD DUP4 DUP2 AND DUP2 SUB PUSH2 0x178 JUMPI PUSH1 0x20 DUP3 ADD MSTORE PUSH6 0xFFFFFFFFFFFF PUSH1 0x64 CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0x178 JUMPI PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x178 JUMPI PUSH1 0x60 DUP3 ADD MSTORE DUP4 MSTORE PUSH1 0xA4 CALLDATALOAD SWAP2 DUP1 DUP4 AND DUP4 SUB PUSH2 0x178 JUMPI PUSH1 0x20 DUP5 ADD SWAP3 DUP4 MSTORE PUSH1 0xC4 CALLDATALOAD SWAP4 PUSH1 0x40 DUP2 ADD DUP6 DUP2 MSTORE PUSH1 0xE4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x178 JUMPI PUSH2 0x52E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xA6F JUMP JUMPDEST SWAP2 SWAP1 SWAP7 DUP1 TIMESTAMP GT PUSH2 0x5B7 JUMPI POP PUSH2 0x42F SWAP7 PUSH2 0x5AD SWAP3 PUSH2 0x5A7 DUP8 SWAP4 PUSH2 0x550 DUP8 MLOAD PUSH2 0xA9D JUMP JUMPDEST SWAP1 DUP9 DUP12 MLOAD AND SWAP1 MLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP4 ADD SWAP4 PUSH32 0xF3841CD1FF0085026A6327B620B67997CE40F282C88A8E905A7A5626E310F3D0 DUP6 MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x80 DUP2 MSTORE PUSH2 0x59F DUP2 PUSH2 0xA06 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x1055 JUMP JUMPDEST SWAP2 PUSH2 0xB3B JUMP JUMPDEST MLOAD SWAP3 MLOAD AND SWAP2 PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xCD21DB4F PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x3 NOT PUSH1 0x60 CALLDATASIZE DUP3 ADD SLT PUSH2 0x178 JUMPI PUSH2 0x5E9 PUSH2 0x964 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP4 GT PUSH2 0x178 JUMPI PUSH1 0x60 SWAP1 DUP4 CALLDATASIZE SUB ADD SLT PUSH2 0x178 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x618 DUP4 PUSH2 0x9EA JUMP JUMPDEST DUP1 PUSH1 0x4 ADD CALLDATALOAD DUP3 DUP2 GT PUSH2 0x178 JUMPI DUP2 ADD CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x178 JUMPI PUSH1 0x4 DUP2 ADD CALLDATALOAD PUSH2 0x63F DUP2 PUSH2 0xA44 JUMP JUMPDEST SWAP2 PUSH2 0x64D PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xA22 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x24 PUSH1 0x20 DUP5 ADD SWAP3 PUSH1 0x7 SHL DUP3 ADD ADD SWAP1 CALLDATASIZE DUP3 GT PUSH2 0x178 JUMPI PUSH1 0x24 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x822 JUMPI POP POP POP DUP4 MSTORE PUSH1 0x44 SWAP1 PUSH2 0x685 PUSH1 0x24 DUP3 ADD PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE ADD CALLDATALOAD SWAP1 DUP2 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x178 JUMPI PUSH2 0x6AB SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xA6F JUMP JUMPDEST SWAP2 DUP1 TIMESTAMP GT PUSH2 0x5B7 JUMPI POP DUP4 DUP4 MLOAD MLOAD SWAP2 PUSH2 0x6C2 DUP4 PUSH2 0xA44 JUMP JUMPDEST SWAP3 PUSH2 0x6D0 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0xA22 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x1F NOT PUSH2 0x6DF DUP3 PUSH2 0xA44 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP7 ADD CALLDATACOPY PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x7D5 JUMPI POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 DUP2 PUSH1 0x20 DUP7 MLOAD SWAP2 SWAP7 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x7BC JUMPI POP POP POP PUSH2 0x724 DUP2 PUSH2 0x787 SWAP7 SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xA22 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP4 PUSH2 0x5A7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 PUSH1 0x20 DUP10 ADD MLOAD AND PUSH1 0x40 DUP10 ADD MLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP4 ADD SWAP4 PUSH32 0xAF1B0D30D2CAB0380E68F0689007E3254993C596F2FDD0AAA7F4D04F79440863 DUP6 MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x80 DUP2 MSTORE PUSH2 0x59F DUP2 PUSH2 0xA06 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD AND SWAP1 DUP1 MLOAD MLOAD SWAP2 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x79D JUMPI STOP JUMPDEST DUP1 PUSH2 0x7B6 DUP4 DUP8 PUSH2 0x7B0 PUSH1 0x1 SWAP6 DUP9 MLOAD PUSH2 0xD23 JUMP JUMPDEST MLOAD PUSH2 0xE92 JUMP JUMPDEST ADD PUSH2 0x794 JUMP JUMPDEST DUP3 MLOAD DUP9 MSTORE PUSH1 0x20 SWAP8 DUP9 ADD SWAP8 DUP12 SWAP8 POP SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x704 JUMP JUMPDEST SWAP1 SWAP2 SWAP4 SWAP3 POP PUSH2 0x7EE PUSH2 0x7E8 DUP3 DUP9 MLOAD PUSH2 0xD23 JUMP JUMPDEST MLOAD PUSH2 0xA9D JUMP JUMPDEST PUSH2 0x7F8 DUP3 DUP6 PUSH2 0xD23 JUMP JUMPDEST MSTORE PUSH0 NOT DUP2 EQ PUSH2 0x80E JUMPI PUSH1 0x1 ADD SWAP1 DUP7 SWAP3 SWAP4 SWAP2 PUSH2 0x6E8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x80 DUP4 CALLDATASIZE SUB SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x80 SWAP2 PUSH1 0x40 MLOAD PUSH2 0x83D DUP2 PUSH2 0x9BA JUMP JUMPDEST PUSH2 0x846 DUP7 PUSH2 0x9A6 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x853 DUP4 DUP8 ADD PUSH2 0x9A6 JUMP JUMPDEST DUP4 DUP3 ADD MSTORE PUSH2 0x863 PUSH1 0x40 DUP8 ADD PUSH2 0xA5C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x874 PUSH1 0x60 DUP8 ADD PUSH2 0xA5C JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x66A JUMP JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x178 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x178 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x178 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x178 JUMPI PUSH1 0x24 SWAP1 PUSH1 0x7 CALLDATASIZE DUP4 DUP6 DUP4 SHL DUP5 ADD ADD GT PUSH2 0x178 JUMPI PUSH0 JUMPDEST DUP5 DUP2 LT PUSH2 0x8DD JUMPI STOP JUMPDEST DUP1 DUP3 SHL DUP4 ADD SWAP1 PUSH1 0x80 PUSH1 0x23 NOT DUP4 CALLDATASIZE SUB ADD SLT PUSH2 0x178 JUMPI PUSH2 0x95E PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x903 DUP2 PUSH2 0x9BA JUMP JUMPDEST PUSH2 0x90E DUP9 DUP4 ADD PUSH2 0x9A6 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x60 PUSH2 0x91F PUSH1 0x44 DUP6 ADD PUSH2 0x9A6 JUMP JUMPDEST SWAP3 DUP4 DUP14 DUP3 ADD MSTORE PUSH2 0x943 PUSH1 0x84 PUSH2 0x936 PUSH1 0x64 DUP9 ADD PUSH2 0x9A6 JUMP JUMPDEST SWAP7 DUP8 PUSH1 0x40 DUP6 ADD MSTORE ADD PUSH2 0x9A6 JUMP JUMPDEST SWAP2 DUP3 SWAP2 ADD MSTORE DUP7 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP1 DUP1 SWAP4 AND SWAP6 AND SWAP4 AND SWAP2 AND PUSH2 0xD37 JUMP JUMPDEST ADD PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x178 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x178 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x178 JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x178 JUMPI JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x9D6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x9D6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x9D6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x9D6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x9D6 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH6 0xFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x178 JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x178 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x178 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x178 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 PUSH32 0x65626CAD6CB96493BF6F5EBEA28756C966F023AB9E8A83A7101849D5573B3678 DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP3 MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x60 PUSH6 0xFFFFFFFFFFFF SWAP2 DUP3 PUSH1 0x40 DUP3 ADD MLOAD AND PUSH1 0x80 DUP6 ADD MSTORE ADD MLOAD AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x9D6 JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x40 SWAP2 SUB SLT PUSH2 0x178 JUMPI PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 DUP5 EXTCODESIZE PUSH2 0xC43 JUMPI POP PUSH1 0x41 DUP3 SUB PUSH2 0xBF4 JUMPI PUSH2 0xB57 DUP3 DUP3 ADD DUP3 PUSH2 0xB25 JUMP JUMPDEST SWAP4 SWAP1 SWAP3 PUSH1 0x40 LT ISZERO PUSH2 0xBE0 JUMPI PUSH1 0x20 SWAP4 PUSH0 SWAP4 PUSH1 0xFF PUSH1 0x40 PUSH1 0x80 SWAP6 ADD CALLDATALOAD PUSH1 0xF8 SHR JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0xBD5 JUMPI PUSH0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0xBC3 JUMPI AND SUB PUSH2 0xBB1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x20578759 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8BAA579F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 DUP3 SUB PUSH2 0xC31 JUMPI PUSH2 0xC08 SWAP2 DUP2 ADD SWAP1 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP2 AND SWAP3 PUSH1 0xFF SWAP2 DUP3 SHR PUSH1 0x1B ADD SWAP2 DUP3 GT PUSH2 0x80E JUMPI PUSH1 0x20 SWAP4 PUSH0 SWAP4 PUSH1 0xFF PUSH1 0x80 SWAP5 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4BE6321B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP2 DUP1 SWAP4 SWAP5 PUSH1 0x20 SWAP3 PUSH1 0x64 PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0xB135D3F PUSH1 0xE1 SHL SWAP12 DUP13 DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP6 ADD MSTORE DUP2 PUSH1 0x44 DUP6 ADD MSTORE DUP5 DUP5 ADD CALLDATACOPY DUP2 DUP2 ADD DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xD16 JUMPI DUP2 SWAP3 PUSH2 0xCC9 JUMPI JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0xCB7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2C19A72F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xD0E JUMPI JUMPDEST DUP2 PUSH2 0xCE4 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xA22 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xD0A JUMPI MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND DUP3 SUB PUSH2 0xD07 JUMPI POP PUSH0 DUP1 PUSH2 0xCA4 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xCD7 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xBE0 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND SWAP1 PUSH0 SWAP3 DUP3 DUP5 MSTORE DUP4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP5 DUP2 DUP7 DUP7 KECCAK256 SWAP4 AND SWAP3 DUP4 DUP7 MSTORE PUSH1 0x20 MSTORE DUP6 DUP6 KECCAK256 CALLER DUP7 MSTORE PUSH1 0x20 MSTORE DUP6 DUP6 KECCAK256 SWAP7 DUP8 SLOAD SWAP8 PUSH6 0xFFFFFFFFFFFF DUP10 PUSH1 0xA0 SHR AND DUP1 TIMESTAMP GT PUSH2 0xE57 JUMPI POP DUP4 DUP10 AND SWAP9 DUP5 DUP11 SUB PUSH2 0xE10 JUMPI JUMPDEST POP POP DUP7 SWAP8 POP SWAP3 DUP3 DUP7 SWAP8 SWAP3 DUP8 SWAP7 SWAP5 PUSH1 0x64 SWAP7 PUSH1 0x20 SWAP10 SWAP6 MLOAD SWAP7 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x4 DUP9 ADD MSTORE AND PUSH1 0x24 DUP7 ADD MSTORE AND PUSH1 0x44 DUP5 ADD MSTORE GAS CALL SWAP1 MLOAD PUSH1 0x1 EQ PUSH1 0x1F RETURNDATASIZE GT AND RETURNDATASIZE ISZERO OR AND ISZERO PUSH2 0xDD6 JUMPI POP JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1514905394D1915497D19493D357D19052531151 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP10 DUP6 DUP6 AND GT PUSH0 EQ PUSH2 0xE33 JUMPI DUP9 MLOAD PUSH4 0xF96FB071 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP9 DUP4 SWAP1 SUB DUP5 AND SWAP9 SWAP1 SWAP9 OR SWAP1 SWAP8 SSTORE SWAP5 SWAP6 DUP7 SWAP6 SWAP1 DUP3 PUSH1 0x20 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x24 SWAP1 DUP10 MLOAD SWAP1 PUSH4 0x6C0D9797 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0xBE0 JUMPI PUSH1 0x6 SHL ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x178 JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH6 0xFFFFFFFFFFFF SWAP1 DUP2 PUSH1 0x60 DUP5 ADD MLOAD AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP6 MLOAD AND SWAP5 DUP3 PUSH1 0x20 DUP3 ADD MLOAD AND SWAP3 DUP1 DUP7 PUSH1 0x40 DUP1 SWAP5 ADD MLOAD AND SWAP6 AND SWAP6 PUSH0 SWAP2 DUP8 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE DUP4 DUP4 KECCAK256 DUP10 DUP5 MSTORE PUSH1 0x20 MSTORE DUP4 DUP4 KECCAK256 SWAP10 AND SWAP9 DUP10 DUP4 MSTORE PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 SWAP2 DUP5 DUP4 SLOAD PUSH1 0xD0 SHR SUB PUSH2 0xF89 JUMPI SWAP2 DUP6 PUSH2 0xF7D SWAP5 SWAP3 PUSH32 0xC6A377BFC4EB120024A8AC08EEF205BE16B817020812C73223E81D1BDB9708EC SWAP9 SWAP8 SWAP7 SWAP5 POP DUP8 ISZERO PUSH0 EQ PUSH2 0xF82 JUMPI TIMESTAMP AND JUMPDEST PUSH1 0x1 DUP6 ADD PUSH1 0xD0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT AND PUSH1 0xA0 SWAP2 SWAP1 SWAP2 SHL PUSH6 0xFFFFFFFFFFFF PUSH1 0xA0 SHL AND OR OR SWAP1 SSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH6 0xFFFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 SWAP3 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x60 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST POP DUP7 PUSH2 0xF28 JUMP JUMPDEST DUP4 MLOAD PUSH4 0x3AB3447F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CHAINID PUSH32 0x0 SUB PUSH2 0xFE5 JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP3 MSTORE PUSH32 0x9AC997416E8FF9D2FF6BEBEB7149F65CDAE5E32E2B90440B566BB3044041D36A PUSH1 0x40 DUP3 ADD MSTORE CHAINID PUSH1 0x60 DUP3 ADD MSTORE ADDRESS PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x80 DUP2 MSTORE PUSH2 0x104F DUP2 PUSH2 0xA06 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x105D PUSH2 0xF9A JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH2 0x1901 PUSH1 0xF0 SHL DUP5 MSTORE PUSH1 0x22 DUP4 ADD MSTORE PUSH1 0x42 DUP3 ADD MSTORE PUSH1 0x42 DUP2 MSTORE PUSH2 0x104F DUP2 PUSH2 0x9BA JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0x26 0xA5 JUMP 0xA8 PUSH13 0xB11F96BA51BF12FE8BCA1EAF37 PUSH4 0xC0EFEEF9 0xB9 0x5C 0xE6 CALLER SGT SWAP10 SMOD 0xE2 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "528:5666:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4515:10;;;;;;528:5666;4527:3;4566:12;:18;:12;528:5666;4566:12;;;;:::i;:::-;:18;:::i;:::-;4620:20;:12;;;;;;:::i;:::-;:20;;:::i;:::-;4337:10;528:5666;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4725:31;528:5666;4337:10;4725:31;;528:5666;4500:13;;528:5666;;;;;;;;;;-1:-1:-1;;528:5666:7;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;528:5666:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;528:5666:7;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;1364:10;528:5666;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1510:54:4;:15;;:54;528:5666:7;;;1535:15:4;;528:5666:7;1510:54:4;;528:5666:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1469:56;528:5666;1364:10;1469:56;;528:5666;1510:54:4;;;;;;528:5666:7;;;;;;-1:-1:-1;;528:5666:7;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;4954:10;528:5666;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5002:20;;;;;4998:47;;528:5666;;;;;;5214:24;5210:60;;4954:10;528:5666;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5360:65;528:5666;4954:10;5360:65;;528:5666;5210:60;528:5666;;-1:-1:-1;;;5247:23:7;;528:5666;;5247:23;4998:47;528:5666;;-1:-1:-1;;;5031:14:7;;528:5666;;5031:14;528:5666;;;;;;-1:-1:-1;;528:5666:7;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;-1:-1:-1;;;;;528:5666:7;;;;;;2822:5;;;:::i;:::-;528:5666;;;;;;;-1:-1:-1;;528:5666:7;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;528:5666:7;;;;;;:::i;:::-;;-1:-1:-1;;528:5666:7;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;528:5666:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1691:15;;;;;:42;1687:97;;2078:20:5;1968::7;2078::5;1906:5:7;2078:20:5;1869:35:7;2078:20:5;;2059:40;2078:20;;2059:40;:::i;:::-;528:5666:7;;;;;;;;;2138:95:5;528:5666:7;2138:95:5;;528:5666:7;433:172:5;528:5666:7;;;433:172:5;;528:5666:7;;433:172:5;;528:5666:7;;433:172:5;;528:5666:7;;2138:95:5;;;;;:::i;:::-;433:172;2128:106;;1869:35:7;:::i;:::-;1906:5;;:::i;:::-;1939:20;528:5666;;;1968:20;;:::i;1687:97::-;528:5666;;;;2203:41;;;;1742:42;;528:5666;1742:42;;528:5666;1742:42;528:5666;;;;-1:-1:-1;;528:5666:7;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;528:5666:7;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2153:15;;;:41;2149:95;;2375:19:5;;;;433:172;528:5666:7;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;528:5666:7;;;:::i;:::-;;;;;;;;2498:14:5;;;;;;528:5666:7;;;;;2721:30:5;;661:173;;528:5666:7;433:172:5;;661:173;528:5666:7;;661:173:5;528:5666:7;661:173:5;;;;;;2721:30;;;;;2365:5:7;2721:30:5;;528:5666:7;;2721:30:5;;;;;;:::i;:::-;433:172;2711:41;;528:5666:7;2329:34;528:5666;;;;;;;;;;;;;;;;;;2643:201:5;528:5666:7;2643:201:5;;528:5666:7;661:173:5;528:5666:7;;;433:172:5;;528:5666:7;;433:172:5;;528:5666:7;;433:172:5;;528:5666:7;;2643:201:5;;;;;:::i;2365:5:7:-;528:5666;;;;;2470:19;;;433:172:5;2515:13:7;528:5666;2530:10;;;;;;528:5666;2542:3;2581:19;2612:7;2581:19;;:22;528:5666;2581:19;;;:22;:::i;:::-;;2612:7;:::i;:::-;528:5666;2515:13;;661:173:5;;;528:5666:7;;;661:173:5;;;;;;-1:-1:-1;661:173:5;;;;528:5666:7;661:173:5;;;2514:3;2570:19;;;;;2551:42;2570:22;:19;;;:22;:::i;:::-;;2551:42;:::i;:::-;2533:60;;;;:::i;:::-;528:5666:7;-1:-1:-1;;528:5666:7;;;;;;2483:13:5;;;;;;;528:5666:7;625:68:6;;;528:5666:7;625:68:6;;528:5666:7;625:68:6;528:5666:7;;625:68:6;528:5666:7;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3071:10;;;;;;528:5666;3083:3;528:5666;;;;;;;;;;;;;;;;3264:20;528:5666;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3264:20;:::i;:::-;528:5666;3056:13;;528:5666;;;;-1:-1:-1;;;;;528:5666:7;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;528:5666:7;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;528:5666:7;;;;;;:::o;:::-;;;-1:-1:-1;;;;;528:5666:7;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;625:68:6;;;528:5666:7;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;433:172:5;528:5666:7;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5345:188:5:-;528:5666:7;;5480:45:5;;;528:5666:7;289:87:5;528:5666:7;;;;;;;289:87:5;;;528:5666:7;;289:87:5;;528:5666:7;5480:45:5;289:87;;;528:5666:7;289:87:5;;;528:5666:7;289:87:5;528:5666:7;289:87:5;;528:5666:7;289:87:5;;;528:5666:7;289:87:5;;;528:5666:7;289:87:5;;528:5666:7;;289:87:5;;528:5666:7;;5480:45:5;;289:87;528:5666:7;;;;;;;;;;;;;433:172:5;5470:56;;5345:188;:::o;528:5666:7:-;;;;;;;;;;;;;;;;;:::o;700:1109:6:-;-1:-1:-1;863:25:6;;;;-1:-1:-1;933:2:6;913:22;;933:2;;964:41;;;;;;:::i;:::-;955:50;;625:68;1043:2;625:68;;;;;;-1:-1:-1;625:68:6;;1043:2;625:68;;;1033:13;625:68;;909:490;528:5666:7;;;;;625:68:6;;;;;528:5666:7;625:68:6;;528:5666:7;625:68:6;;;528:5666:7;1429:24:6;;;;;;;;;-1:-1:-1;1429:24:6;-1:-1:-1;;;;;528:5666:7;;;;1471:20:6;;1467:51;;528:5666:7;1536:23:6;1532:51;;700:1109::o;1532:51::-;528:5666:7;;-1:-1:-1;;;1568:15:6;;;;;1467:51;528:5666:7;;-1:-1:-1;;;1500:18:6;;;;;1429:24;528:5666:7;;;-1:-1:-1;528:5666:7;;;;;625:68:6;;;;-1:-1:-1;625:68:6;;;;;-1:-1:-1;625:68:6;909:490;1092:2;1072:22;;1092:2;;1180:41;;;;;;:::i;:::-;-1:-1:-1;;;;;1243:19:6;;;626:66;625:68;;;1312:2;625:68;;;;;;;1280:34;-1:-1:-1;1280:34:6;625:68;;1280:34;909:490;;1068:331;1092:2;528:5666:7;-1:-1:-1;;;1360:24:6;;;;;859:944;528:5666:7;;;;1634:57:6;528:5666:7;;;;;;;;;;;;;1634:57:6;;;;;;;528:5666:7;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;528:5666:7;;;1634:57:6;;;-1:-1:-1;;;;;528:5666:7;1634:57:6;;;;;;;;;;;859:944;-1:-1:-1;;;;;;;;528:5666:7;1709:48:6;1705:87;;700:1109::o;1705:87::-;528:5666:7;;-1:-1:-1;;;1766:26:6;;1634:57;;1766:26;1634:57;;;;;;;;;;;;;;;;;;:::i;:::-;;;528:5666:7;;;;;;-1:-1:-1;;;;;;528:5666:7;;;;;;1634:57:6;;;;;528:5666:7;;;;;;;1634:57:6;;;-1:-1:-1;1634:57:6;;;528:5666:7;;;;;;;;;;;;433:172:5;;528:5666:7;;;;;;;;;;;;:::o;3463:737::-;;;528:5666;;;;;;;;3591:9;;528:5666;;;;;;;;;;;;;;;;;;;;;;;;3614:10;528:5666;;;;;;;;;;;;;;;;3640:15;;:36;3636:85;;528:5666;;;;3780:30;;;;3776:289;;3463:737;1532:1521:13;;;;;;;;;;;;;;;528:5666:7;1532:1521:13;;;;;;;;;;;;;;;;;;528:5666:7;1532:1521:13;;;;;;;;528:5666:7;1532:1521:13;;;;;;;;;528:5666:7;;;3463:737;:::o;528:5666::-;;-1:-1:-1;;;528:5666:7;;;1532:1521:13;528:5666:7;;;;1532:1521:13;528:5666:7;;;-1:-1:-1;;;1532:1521:13;528:5666:7;;;1532:1521:13;;528:5666:7;3776:289;528:5666;;;;3830:18;3826:229;3830:18;;;528:5666;;-1:-1:-1;;;3875:32:7;;;;;528:5666;;;;;3875:32;3826:229;-1:-1:-1;;;;;;528:5666:7;;;;;;;;;;;;;;;;;;;;;3776:289;;3636:85;528:5666;;;;3685:36;;;;;;;;;528:5666;3685:36;528:5666;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;;;;528:5666:7;;;;;;;:::o;5662:530::-;;528:5666;5782:13;;;;;528:5666;;;;;;;;;;;;5861:14;;;;;528:5666;;5905:18;;;;;;;528:5666;;;;-1:-1:-1;;528:5666:7;;;;;5861:14;528:5666;;;;;;;5861:14;528:5666;;;;;;;;;;5861:14;528:5666;;;;;;;;;;6014:22;6010:49;;843:79:4;;6129:56:7;843:79:4;;6129:56:7;843:79:4;;;;:40;;;:79;528:5666:7;;;893:15:4;528:5666:7;843:79:4;528:5666:7;;;;;-1:-1:-1;;;;;;528:5666:7;;;;;;-1:-1:-1;;;528:5666:7;1834:52:4;:61;1001:59;;528:5666:7;-1:-1:-1;;;;;528:5666:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;6129:56;;;;5662:530::o;843:79:4:-;;;;;6010:49:7;528:5666;;-1:-1:-1;;;6045:14:7;;;;;1186:225:8;1270:13;1287:16;1270:33;1287:16;;1318:24;1186:225;:::o;1270:134::-;528:5666:7;;1632:60:8;;;528:5666:7;789:80:8;528:5666:7;;717:20:8;528:5666:7;;;;1270:13:8;528:5666:7;;;;1686:4:8;528:5666:7;;;;;1632:60:8;;;;;:::i;:::-;433:172:5;1622:71:8;;1186:225;:::o;1757:167::-;1887:18;;:::i;:::-;528:5666:7;;;1858:58:8;;;;528:5666:7;;;;;;;;;;;;;;;1858:58:8;;;;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "856800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "infinite",
								"allowance(address,address,address)": "2933",
								"approve(address,address,uint160,uint48)": "27493",
								"invalidateNonces(address,address,uint48)": "29693",
								"lockdown((address,address)[])": "infinite",
								"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)": "infinite",
								"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)": "infinite",
								"transferFrom((address,address,uint160,address)[])": "infinite",
								"transferFrom(address,address,uint160,address)": "infinite"
							},
							"internal": {
								"_transfer(address,address,uint160,address)": "infinite",
								"_updateApproval(struct IAllowanceTransfer.PermitDetails memory,address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 528,
									"end": 6194,
									"name": "PUSH",
									"source": 7,
									"value": "C0"
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 919,
									"end": 932,
									"name": "CHAINID",
									"source": 8
								},
								{
									"begin": 900,
									"end": 932,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 900,
									"end": 932,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1632,
									"end": 1692,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1632,
									"end": 1692,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1632,
									"end": 1692,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 789,
									"end": 869,
									"name": "PUSH",
									"source": 8,
									"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 717,
									"end": 737,
									"name": "PUSH",
									"source": 8,
									"value": "9AC997416E8FF9D2FF6BEBEB7149F65CDAE5E32E2B90440B566BB3044041D36A"
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 919,
									"end": 932,
									"name": "CHAINID",
									"source": 8
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1686,
									"end": 1690,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 1632,
									"end": 1692,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1632,
									"end": 1692,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 900,
									"end": 932,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1622,
									"end": 1693,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1622,
									"end": 1693,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 942,
									"end": 1016,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "1618"
								},
								{
									"begin": 900,
									"end": 932,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "1620"
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "RETURN",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 528,
									"end": 6194,
									"name": "REVERT",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200e26a556a86cb11f96ba51bf12fe8bca1eaf3763c0efeef9b95ce633139907e264736f6c63430008140033",
									".code": [
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "D58B1DB"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "2A2D80D1"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "2B67B570"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "3644E515"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "36C78516"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "65D9723C"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "87517C45"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "927DA105"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "CC53287F"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4515,
											"end": 4525,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 4515,
											"end": 4525,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4525,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4525,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4525,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 4515,
											"end": 4525,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4527,
											"end": 4530,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 4527,
											"end": 4530,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4566,
											"end": 4578,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4566,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 4566,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4566,
											"end": 4578,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4566,
											"end": 4578,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4566,
											"end": 4578,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4566,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 4566,
											"end": 4578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4566,
											"end": 4578,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 4566,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4566,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 4566,
											"end": 4584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4566,
											"end": 4584,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 4566,
											"end": 4584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4620,
											"end": 4632,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 4620,
											"end": 4632,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4632,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4632,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 4620,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4632,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 4620,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4640,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 4620,
											"end": 4640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4640,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4620,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4347,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4725,
											"end": 4756,
											"name": "PUSH",
											"source": 7,
											"value": "89B1ADD15EFF56B3DFE299AD94E01F2B52FBCB80AE1A3BAEA6AE8C04CB2B98A4"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4337,
											"end": 4347,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4725,
											"end": 4756,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4725,
											"end": 4756,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4500,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 4500,
											"end": 4513,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "D0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1364,
											"end": 1374,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1510,
											"end": 1564,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1510,
											"end": 1525,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1510,
											"end": 1525,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1510,
											"end": 1564,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1535,
											"end": 1550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1535,
											"end": 1550,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1510,
											"end": 1564,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1510,
											"end": 1564,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1510,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "D0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1469,
											"end": 1525,
											"name": "PUSH",
											"source": 7,
											"value": "DA9FA7C1B00402C17D0161B249B1AB8BBEC047C5A52207B9C112DEFFD817036B"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1374,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1469,
											"end": 1525,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1469,
											"end": 1525,
											"name": "LOG4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1510,
											"end": 1564,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1510,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1510,
											"end": 1564,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1510,
											"end": 1564,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1510,
											"end": 1564,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1510,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1510,
											"end": 1564,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4954,
											"end": 4964,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "D0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 5002,
											"end": 5022,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5002,
											"end": 5022,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5002,
											"end": 5022,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5002,
											"end": 5022,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5002,
											"end": 5022,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4998,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 4998,
											"end": 5045,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5214,
											"end": 5238,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5210,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 5210,
											"end": 5270,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4954,
											"end": 4964,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "D0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "D0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "D0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5360,
											"end": 5425,
											"name": "PUSH",
											"source": 7,
											"value": "55EB90D810E1700B35A8E7E25395FF7F2B2259ABD7415CA2284DFB1C246418F3"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4954,
											"end": 4964,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5360,
											"end": 5425,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5360,
											"end": 5425,
											"name": "LOG4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 5210,
											"end": 5270,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 5210,
											"end": 5270,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1269AD13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5247,
											"end": 5270,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5247,
											"end": 5270,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5247,
											"end": 5270,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4998,
											"end": 5045,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 4998,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3AB3447F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5031,
											"end": 5045,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5031,
											"end": 5045,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5031,
											"end": 5045,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2822,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 2822,
											"end": 2827,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2822,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 2822,
											"end": 2827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2822,
											"end": 2827,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 2822,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "A4"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "C4"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "E4"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1691,
											"end": 1706,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1691,
											"end": 1706,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1691,
											"end": 1706,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 1691,
											"end": 1706,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1691,
											"end": 1706,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 1691,
											"end": 1733,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1687,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 1687,
											"end": 1784,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1968,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 1906,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1869,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2059,
											"end": 2099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2099,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2059,
											"end": 2099,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2233,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2138,
											"end": 2233,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2233,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 433,
											"end": 605,
											"name": "PUSH",
											"source": 5,
											"value": "F3841CD1FF0085026A6327B620B67997CE40F282C88A8E905A7A5626E310F3D0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 605,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 433,
											"end": 605,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 433,
											"end": 605,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2138,
											"end": 2233,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2233,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2138,
											"end": 2233,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2138,
											"end": 2233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2233,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2138,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2128,
											"end": 2234,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2128,
											"end": 2234,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1869,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 1869,
											"end": 1904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1904,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 1869,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1906,
											"end": 1911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1906,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1906,
											"end": 1911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1906,
											"end": 1911,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 1906,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1939,
											"end": 1959,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1988,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1968,
											"end": 1988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1687,
											"end": 1784,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 1687,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2203,
											"end": 2244,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2203,
											"end": 2244,
											"name": "PUSH",
											"source": 7,
											"value": "CD21DB4F"
										},
										{
											"begin": 2203,
											"end": 2244,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2203,
											"end": 2244,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1742,
											"end": 1784,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1742,
											"end": 1784,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1742,
											"end": 1784,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1742,
											"end": 1784,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1742,
											"end": 1784,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2168,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2168,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2168,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2194,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2149,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 2149,
											"end": 2244,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2375,
											"end": 2394,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2394,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2394,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2394,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2498,
											"end": 2512,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2498,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2498,
											"end": 2512,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2498,
											"end": 2512,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2498,
											"end": 2512,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2498,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2498,
											"end": 2512,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2721,
											"end": 2751,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2721,
											"end": 2751,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 433,
											"end": 605,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 661,
											"end": 834,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 834,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 661,
											"end": 834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 661,
											"end": 834,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2721,
											"end": 2751,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2721,
											"end": 2751,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2721,
											"end": 2751,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2721,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2721,
											"end": 2751,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2721,
											"end": 2751,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 2721,
											"end": 2751,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2751,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2721,
											"end": 2751,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2721,
											"end": 2751,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2721,
											"end": 2751,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2721,
											"end": 2751,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2721,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2721,
											"end": 2751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2721,
											"end": 2751,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2721,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2752,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2329,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2643,
											"end": 2844,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2643,
											"end": 2844,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2844,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 661,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "AF1B0D30D2CAB0380E68F0689007E3254993C596F2FDD0AAA7F4D04F79440863"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 605,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 433,
											"end": 605,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 433,
											"end": 605,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2643,
											"end": 2844,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2844,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2643,
											"end": 2844,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2643,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2370,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2365,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 433,
											"end": 605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2528,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2540,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 2530,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2540,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2540,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2540,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2530,
											"end": 2540,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2545,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2542,
											"end": 2545,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2612,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 2581,
											"end": 2603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2603,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 2581,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2603,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2612,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2612,
											"end": 2619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2612,
											"end": 2619,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 2612,
											"end": 2619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2515,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 2515,
											"end": 2528,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 661,
											"end": 834,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 661,
											"end": 834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 661,
											"end": 834,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 661,
											"end": 834,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 661,
											"end": 834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 661,
											"end": 834,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2514,
											"end": 2517,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2514,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2589,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2589,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2589,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2589,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2589,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2551,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2570,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 2570,
											"end": 2589,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2589,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2589,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2570,
											"end": 2592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2592,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 2570,
											"end": 2592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2592,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2551,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2551,
											"end": 2593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2551,
											"end": 2593,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2551,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 2533,
											"end": 2593,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2593,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2533,
											"end": 2593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2593,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 2533,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2483,
											"end": 2496,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2496,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2496,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2496,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2496,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2483,
											"end": 2496,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3083,
											"end": 3086,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 3083,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP14",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 3264,
											"end": 3284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3284,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 3264,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3056,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 3056,
											"end": 3069,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 433,
											"end": 605,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5345,
											"end": 5533,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 5345,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5480,
											"end": 5525,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5480,
											"end": 5525,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5525,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 289,
											"end": 376,
											"name": "PUSH",
											"source": 5,
											"value": "65626CAD6CB96493BF6F5EBEA28756C966F023AB9E8A83A7101849D5573B3678"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 289,
											"end": 376,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 376,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 289,
											"end": 376,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 289,
											"end": 376,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 289,
											"end": 376,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5480,
											"end": 5525,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 289,
											"end": 376,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 289,
											"end": 376,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 289,
											"end": 376,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 289,
											"end": 376,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 289,
											"end": 376,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 289,
											"end": 376,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 289,
											"end": 376,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 289,
											"end": 376,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 289,
											"end": 376,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 289,
											"end": 376,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 289,
											"end": 376,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 289,
											"end": 376,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 289,
											"end": 376,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 289,
											"end": 376,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 289,
											"end": 376,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 289,
											"end": 376,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 289,
											"end": 376,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 289,
											"end": 376,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 289,
											"end": 376,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 5480,
											"end": 5525,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5525,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 289,
											"end": 376,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 433,
											"end": 605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5470,
											"end": 5526,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5470,
											"end": 5526,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5345,
											"end": 5533,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5345,
											"end": 5533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 700,
											"end": 1809,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 700,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 863,
											"end": 888,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 863,
											"end": 888,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 863,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 863,
											"end": 888,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 933,
											"end": 935,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 913,
											"end": 935,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 913,
											"end": 935,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 933,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 933,
											"end": 935,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 964,
											"end": 1005,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1005,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1005,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1005,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 964,
											"end": 1005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1005,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 964,
											"end": 1005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1005,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1005,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1043,
											"end": 1045,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1043,
											"end": 1045,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1033,
											"end": 1046,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "F8"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 909,
											"end": 1399,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 909,
											"end": 1399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 625,
											"end": 693,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1471,
											"end": 1491,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1491,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 1467,
											"end": 1518,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1536,
											"end": 1559,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1532,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 1532,
											"end": 1583,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 700,
											"end": 1809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1532,
											"end": 1583,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 1532,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20578759"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1568,
											"end": 1583,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1568,
											"end": 1583,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1568,
											"end": 1583,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1568,
											"end": 1583,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1568,
											"end": 1583,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1518,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 1467,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8BAA579F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 625,
											"end": 693,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 909,
											"end": 1399,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 909,
											"end": 1399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1092,
											"end": 1094,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1092,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 1092,
											"end": 1094,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1180,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 1180,
											"end": 1221,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1180,
											"end": 1221,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1180,
											"end": 1221,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1180,
											"end": 1221,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1180,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1180,
											"end": 1221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1180,
											"end": 1221,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 1180,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1243,
											"end": 1262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1243,
											"end": 1262,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1243,
											"end": 1262,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 626,
											"end": 692,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1314,
											"name": "PUSH",
											"source": 6,
											"value": "1B"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1280,
											"end": 1314,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1314,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1280,
											"end": 1314,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 909,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 909,
											"end": 1399,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1068,
											"end": 1399,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 1068,
											"end": 1399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1092,
											"end": 1094,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4BE6321B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1360,
											"end": 1384,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1360,
											"end": 1384,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1360,
											"end": 1384,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1360,
											"end": 1384,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1360,
											"end": 1384,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 859,
											"end": 1803,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 859,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "B135D3F"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "E1"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "SWAP12",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 859,
											"end": 1803,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 859,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1709,
											"end": 1757,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 1705,
											"end": 1792,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 700,
											"end": 1809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1792,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 1705,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2C19A72F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1766,
											"end": 1792,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1766,
											"end": 1792,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1766,
											"end": 1792,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1634,
											"end": 1691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 433,
											"end": 605,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 4200,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 3463,
											"end": 4200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 4200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 4200,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3591,
											"end": 3600,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3591,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3614,
											"end": 3624,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3655,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3655,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3676,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3636,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 3636,
											"end": 3721,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3780,
											"end": 3810,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 3780,
											"end": 3810,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3780,
											"end": 3810,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 3780,
											"end": 3810,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 3776,
											"end": 4065,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 4200,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 3463,
											"end": 4200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "SWAP10",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "23B872DD"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 4200,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 4200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1514905394D1915497D19493D357D19052531151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 4065,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 3776,
											"end": 4065,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3848,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 4055,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3830,
											"end": 3848,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 3830,
											"end": 3848,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F96FB071"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3875,
											"end": 3907,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3875,
											"end": 3907,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3875,
											"end": 3907,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3875,
											"end": 3907,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3875,
											"end": 3907,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3875,
											"end": 3907,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 4055,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 3826,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3776,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 3776,
											"end": 4065,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3636,
											"end": 3721,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 3636,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3721,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3721,
											"name": "PUSH",
											"source": 7,
											"value": "6C0D9797"
										},
										{
											"begin": 3685,
											"end": 3721,
											"name": "PUSH",
											"source": 7,
											"value": "E1"
										},
										{
											"begin": 3685,
											"end": 3721,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3721,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3721,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3721,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3685,
											"end": 3721,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3721,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3721,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5662,
											"end": 6192,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5662,
											"end": 6192,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5662,
											"end": 6192,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 5782,
											"end": 5795,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5782,
											"end": 5795,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5782,
											"end": 5795,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5782,
											"end": 5795,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5782,
											"end": 5795,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5861,
											"end": 5875,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5861,
											"end": 5875,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5861,
											"end": 5875,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5861,
											"end": 5875,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5861,
											"end": 5875,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5905,
											"end": 5923,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5905,
											"end": 5923,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5905,
											"end": 5923,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5905,
											"end": 5923,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5905,
											"end": 5923,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5905,
											"end": 5923,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5905,
											"end": 5923,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5861,
											"end": 5875,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5861,
											"end": 5875,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP10",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5861,
											"end": 5875,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "D0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6036,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 6010,
											"end": 6059,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 843,
											"end": 922,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 843,
											"end": 922,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6129,
											"end": 6185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 843,
											"end": 922,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 843,
											"end": 922,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6129,
											"end": 6185,
											"name": "PUSH",
											"source": 7,
											"value": "C6A377BFC4EB120024A8AC08EEF205BE16B817020812C73223E81D1BDB9708EC"
										},
										{
											"begin": 843,
											"end": 922,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 843,
											"end": 922,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 843,
											"end": 922,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 843,
											"end": 922,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 843,
											"end": 883,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 843,
											"end": 883,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 843,
											"end": 883,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 843,
											"end": 922,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 893,
											"end": 908,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 843,
											"end": 922,
											"name": "tag",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 843,
											"end": 922,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "D0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 1886,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1834,
											"end": 1895,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1060,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1060,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6129,
											"end": 6185,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 6129,
											"end": 6185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6129,
											"end": 6185,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6129,
											"end": 6185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6129,
											"end": 6185,
											"name": "LOG4",
											"source": 7
										},
										{
											"begin": 5662,
											"end": 6192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 843,
											"end": 922,
											"name": "tag",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 843,
											"end": 922,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 843,
											"end": 922,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 843,
											"end": 922,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 843,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 843,
											"end": 922,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6059,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 6010,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3AB3447F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6045,
											"end": 6059,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6045,
											"end": 6059,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6045,
											"end": 6059,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6045,
											"end": 6059,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6045,
											"end": 6059,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1270,
											"end": 1283,
											"name": "CHAINID",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1303,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1620"
										},
										{
											"begin": 1270,
											"end": 1303,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 1287,
											"end": 1303,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1342,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1618"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1186,
											"end": 1411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1270,
											"end": 1404,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 1270,
											"end": 1404,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 789,
											"end": 869,
											"name": "PUSH",
											"source": 8,
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 717,
											"end": 737,
											"name": "PUSH",
											"source": 8,
											"value": "9AC997416E8FF9D2FF6BEBEB7149F65CDAE5E32E2B90440B566BB3044041D36A"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1270,
											"end": 1283,
											"name": "CHAINID",
											"source": 8
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1686,
											"end": 1690,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1632,
											"end": 1692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 433,
											"end": 605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1186,
											"end": 1411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1757,
											"end": 1924,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 1757,
											"end": 1924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1887,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 1887,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1887,
											"end": 1905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1887,
											"end": 1905,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 1887,
											"end": 1905,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 1916,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1858,
											"end": 1916,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1858,
											"end": 1916,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1858,
											"end": 1916,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "1901"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "F0"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1858,
											"end": 1916,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1858,
											"end": 1916,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1858,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 1858,
											"end": 1916,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1858,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1858,
											"end": 1916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"contracts/contracts/interfaces/IAllowanceTransfer.sol",
								"contracts/contracts/interfaces/IEIP712.sol",
								"contracts/contracts/interfaces/IERC1271.sol",
								"contracts/contracts/interfaces/ISignatureTransfer.sol",
								"contracts/contracts/lib/Allowance.sol",
								"contracts/contracts/lib/PermitHash.sol",
								"contracts/contracts/lib/SignatureVerification.sol",
								"contracts/contracts/permit2/AllowanceTransfer.sol",
								"contracts/contracts/permit2/EIP712.sol",
								"contracts/contracts/permit2/Permit2.sol",
								"contracts/contracts/permit2/PermitErrors.sol",
								"contracts/contracts/permit2/SignatureTransfer.sol",
								"solmate/src/tokens/ERC20.sol",
								"solmate/src/utils/SafeTransferLib.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address,address)": "927da105",
							"approve(address,address,uint160,uint48)": "87517c45",
							"invalidateNonces(address,address,uint48)": "65d9723c",
							"lockdown((address,address)[])": "cc53287f",
							"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)": "2b67b570",
							"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)": "2a2d80d1",
							"transferFrom((address,address,uint160,address)[])": "0d58b1db",
							"transferFrom(address,address,uint160,address)": "36c78516"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"AllowanceExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExcessiveInvalidation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidContractSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"signatureDeadline\",\"type\":\"uint256\"}],\"name\":\"SignatureExpired\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"Lockdown\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"newNonce\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"oldNonce\",\"type\":\"uint48\"}],\"name\":\"NonceInvalidation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"name\":\"Permit\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"newNonce\",\"type\":\"uint48\"}],\"name\":\"invalidateNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"internalType\":\"struct IAllowanceTransfer.TokenSpenderPair[]\",\"name\":\"approvals\",\"type\":\"tuple[]\"}],\"name\":\"lockdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IAllowanceTransfer.PermitDetails[]\",\"name\":\"details\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sigDeadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowanceTransfer.PermitBatch\",\"name\":\"permitBatch\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IAllowanceTransfer.PermitDetails\",\"name\":\"details\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sigDeadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowanceTransfer.PermitSingle\",\"name\":\"permitSingle\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"internalType\":\"struct IAllowanceTransfer.AllowanceTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AllowanceExpired(uint256)\":[{\"params\":{\"deadline\":\"The timestamp at which the allowed amount is no longer valid\"}}],\"InsufficientAllowance(uint256)\":[{\"params\":{\"amount\":\"The maximum amount allowed\"}}],\"SignatureExpired(uint256)\":[{\"params\":{\"signatureDeadline\":\"The timestamp at which a signature is no longer valid\"}}]},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Uses cached version if chainid and address are unchanged from construction.\"},\"approve(address,address,uint160,uint48)\":{\"details\":\"The packed allowance also holds a nonce, which will stay unchanged in approveSetting amount to type(uint160).max sets an unlimited approval\",\"params\":{\"amount\":\"The approved amount of the token\",\"expiration\":\"The timestamp at which the approval is no longer valid\",\"spender\":\"The spender address to approve\",\"token\":\"The token to approve\"}},\"invalidateNonces(address,address,uint48)\":{\"details\":\"Can't invalidate more than 2**16 nonces per transaction.\",\"params\":{\"newNonce\":\"The new nonce to set. Invalidates all nonces less than it.\",\"spender\":\"The spender to invalidate nonces for\",\"token\":\"The token to invalidate nonces for\"}},\"lockdown((address,address)[])\":{\"params\":{\"approvals\":\"Array of approvals to revoke.\"}},\"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)\":{\"details\":\"May fail if the owner's nonce was invalidated in-flight by invalidateNonce\",\"params\":{\"owner\":\"The owner of the tokens being approved\",\"permitSingle\":\"Data signed over by the owner specifying the terms of approval\",\"signature\":\"The owner's signature over the permit data\"}},\"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)\":{\"details\":\"May fail if the owner's nonce was invalidated in-flight by invalidateNonce\",\"params\":{\"owner\":\"The owner of the tokens being approved\",\"permitBatch\":\"Data signed over by the owner specifying the terms of approval\",\"signature\":\"The owner's signature over the permit data\"}},\"transferFrom((address,address,uint160,address)[])\":{\"details\":\"Requires the from addresses to have approved at least the desired amount of tokens to msg.sender.\",\"params\":{\"transferDetails\":\"Array of owners, recipients, amounts, and tokens for the transfers\"}},\"transferFrom(address,address,uint160,address)\":{\"details\":\"Requires the from address to have approved at least the desired amount of tokens to msg.sender.\",\"params\":{\"amount\":\"The amount of the token to transfer\",\"from\":\"The address to transfer from\",\"to\":\"The address of the recipient\",\"token\":\"The token address to transfer\"}}},\"stateVariables\":{\"allowance\":{\"details\":\"Indexed in the order of token owner address, token address, spender addressThe stored word saves the allowed amount, expiration on the allowance, and nonce\"}},\"version\":1},\"userdoc\":{\"errors\":{\"AllowanceExpired(uint256)\":[{\"notice\":\"Thrown when an allowance on a token has expired.\"}],\"ExcessiveInvalidation()\":[{\"notice\":\"Thrown when too many nonces are invalidated.\"}],\"InsufficientAllowance(uint256)\":[{\"notice\":\"Thrown when an allowance on a token has been depleted.\"}],\"InvalidContractSignature()\":[{\"notice\":\"Thrown when the recovered contract signature is incorrect\"}],\"InvalidNonce()\":[{\"notice\":\"Thrown when validating that the inputted nonce has not been used\"}],\"InvalidSignature()\":[{\"notice\":\"Thrown when the recovered signer is equal to the zero address\"}],\"InvalidSignatureLength()\":[{\"notice\":\"Thrown when the passed in signature is not a valid length\"}],\"InvalidSigner()\":[{\"notice\":\"Thrown when the recovered signer does not equal the claimedSigner\"}],\"SignatureExpired(uint256)\":[{\"notice\":\"Thrown when validating an inputted signature that is stale\"}]},\"events\":{\"Approval(address,address,address,uint160,uint48)\":{\"notice\":\"Emits an event when the owner successfully sets permissions on a token for the spender.\"},\"Lockdown(address,address,address)\":{\"notice\":\"Emits an event when the owner sets the allowance back to 0 with the lockdown function.\"},\"NonceInvalidation(address,address,address,uint48,uint48)\":{\"notice\":\"Emits an event when the owner successfully invalidates an ordered nonce.\"},\"Permit(address,address,address,uint160,uint48,uint48)\":{\"notice\":\"Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender.\"}},\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"Returns the domain separator for the current chain.\"},\"allowance(address,address,address)\":{\"notice\":\"Maps users to tokens to spender addresses and information about the approval on the token\"},\"approve(address,address,uint160,uint48)\":{\"notice\":\"Approves the spender to use up to amount of the specified token up until the expiration\"},\"invalidateNonces(address,address,uint48)\":{\"notice\":\"Invalidate nonces for a given (token, spender) pair\"},\"lockdown((address,address)[])\":{\"notice\":\"Enables performing a \\\"lockdown\\\" of the sender's Permit2 identity by batch revoking approvals\"},\"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)\":{\"notice\":\"Permit a spender to a given amount of the owners token via the owner's EIP-712 signature\"},\"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)\":{\"notice\":\"Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature\"},\"transferFrom((address,address,uint160,address)[])\":{\"notice\":\"Transfer approved tokens in a batch\"},\"transferFrom(address,address,uint160,address)\":{\"notice\":\"Transfer approved tokens from one address to another\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/permit2/AllowanceTransfer.sol\":\"AllowanceTransfer\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x37f0ac203b6ef605c9533e1a739477e8e9dcea90710b40e645a367f8a21ace29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0104d72aeaec1cd66cc232e7de7b7ead08608efcc179491b8a66387614670b0\",\"dweb:/ipfs/QmfAZDyuNC9FXXbnJUwqHNwmAK6uRrXxtWEytLsxjskPsN\"]},\"contracts/contracts/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]},\"contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0a546b8535127fb4a49d36d5f306fd5a8bbe6125a1852f935b9bb85a04c1acef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b99651e2df98e283a97c46d8d1ac4eff0d6a3618e25f7f85294472a670b541c\",\"dweb:/ipfs/QmYRy5G8fXE8BfmyvGEbESEYZPPg3zJEFxHzR5GJZEMMTk\"]},\"contracts/contracts/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0x16a051e45a3f1ab341a8560aa106c483c3d0a3be4abc52225651c78939b18f93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7cda3c6ed2db1454b4a6ec1e418956d199019085d92163a038d0064615a5acb\",\"dweb:/ipfs/QmWDfZwi8jcGFBuiwHKq6iBWCZq2mA8HmkM9NNTzotMpXH\"]},\"contracts/contracts/lib/Allowance.sol\":{\"keccak256\":\"0xc44ad59f9c6306b5f3d019ce95e29a5de88862f7bdc51375d44c15fca536bf2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f33f02f549c1d7dcb45a592f1b4082ceabbea5f9a7190567e85ffd23b670788\",\"dweb:/ipfs/QmUnBU5BoudGbN3dtLTci1xb6q5SxpPwTBpAC1cq6nNEg2\"]},\"contracts/contracts/lib/PermitHash.sol\":{\"keccak256\":\"0xbd0fcb52a5a753f77b10f30d653e638bf40705a0aa10cf96978ef82ea926e637\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de007b53ff2757733e919d17d53dc0c0b1e1f856132e0004dd9f79272472a093\",\"dweb:/ipfs/QmST5dKQYMZWD6magJPUXsJSWf57Rr5nWi1AgethhAvoCj\"]},\"contracts/contracts/lib/SignatureVerification.sol\":{\"keccak256\":\"0xb5cf5e3c9407dc26f95d01170dbc2c82cd5c210ecc39ad3559b314df0c0c90d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a5929df7b7ad16e2a429e5e76712f95d914d1e72d8350cd3b445e84058bbb2\",\"dweb:/ipfs/QmXBnuFKWjK3huwN9qoePSyxT9qwpdGXfpTgjApRPiQsrd\"]},\"contracts/contracts/permit2/AllowanceTransfer.sol\":{\"keccak256\":\"0x24707e751d61cb52795c451160129d50e164695918474e64d1f1f35cac90f18e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b262f113e538b677bcdb90403d8b2697b71f7a382824c3957f9641047489792b\",\"dweb:/ipfs/QmXr23z5Ks4jrPiFM9JSqi8J54Pp3Levz9y3Qdngx1uqVk\"]},\"contracts/contracts/permit2/EIP712.sol\":{\"keccak256\":\"0x8bf0e994a040c5de83f9848dca37b71b45bf09d6b8028a925a76d1c917654b6d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0435626dccaaa530a392320a9099d489e6d28155c8a20cb86579517f5336a2\",\"dweb:/ipfs/QmbVkXYsMxqYoiTH5WLNjhToJWbjMSuqGLGVBj7SU69khP\"]},\"contracts/contracts/permit2/PermitErrors.sol\":{\"keccak256\":\"0x42d48b78944c43d75496f49a62e1a9b858c2ecacc09f016a68204f7cac9ab014\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ed8221dc84848fd5aa1234b68d31adf9bded04a56175e545fe0119a5a886674\",\"dweb:/ipfs/QmQQGA8GFVvTDdism9JxAFqFoy37fokryqwnzixeQNenui\"]},\"solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x6ab948013c2c7ca6351e593600425b0ec6df9035320280c678e735bce16e996b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2ab977d0eeb2bf458f9798250215c646d2f3b1f90b5a7e2b506fdf3335c0f060\",\"dweb:/ipfs/QmYPRoPhNtBAmCSq7imN1scMVpKNQvMTpoqab3tXUx5Tnv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1112,
								"contract": "contracts/contracts/permit2/AllowanceTransfer.sol:AllowanceTransfer",
								"label": "allowance",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_struct(PackedAllowance)106_storage)))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_struct(PackedAllowance)106_storage)))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance)))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_mapping(t_address,t_struct(PackedAllowance)106_storage))"
							},
							"t_mapping(t_address,t_mapping(t_address,t_struct(PackedAllowance)106_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(PackedAllowance)106_storage)"
							},
							"t_mapping(t_address,t_struct(PackedAllowance)106_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct IAllowanceTransfer.PackedAllowance)",
								"numberOfBytes": "32",
								"value": "t_struct(PackedAllowance)106_storage"
							},
							"t_struct(PackedAllowance)106_storage": {
								"encoding": "inplace",
								"label": "struct IAllowanceTransfer.PackedAllowance",
								"members": [
									{
										"astId": 101,
										"contract": "contracts/contracts/permit2/AllowanceTransfer.sol:AllowanceTransfer",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint160"
									},
									{
										"astId": 103,
										"contract": "contracts/contracts/permit2/AllowanceTransfer.sol:AllowanceTransfer",
										"label": "expiration",
										"offset": 20,
										"slot": "0",
										"type": "t_uint48"
									},
									{
										"astId": 105,
										"contract": "contracts/contracts/permit2/AllowanceTransfer.sol:AllowanceTransfer",
										"label": "nonce",
										"offset": 26,
										"slot": "0",
										"type": "t_uint48"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint160": {
								"encoding": "inplace",
								"label": "uint160",
								"numberOfBytes": "20"
							},
							"t_uint48": {
								"encoding": "inplace",
								"label": "uint48",
								"numberOfBytes": "6"
							}
						}
					},
					"userdoc": {
						"errors": {
							"AllowanceExpired(uint256)": [
								{
									"notice": "Thrown when an allowance on a token has expired."
								}
							],
							"ExcessiveInvalidation()": [
								{
									"notice": "Thrown when too many nonces are invalidated."
								}
							],
							"InsufficientAllowance(uint256)": [
								{
									"notice": "Thrown when an allowance on a token has been depleted."
								}
							],
							"InvalidContractSignature()": [
								{
									"notice": "Thrown when the recovered contract signature is incorrect"
								}
							],
							"InvalidNonce()": [
								{
									"notice": "Thrown when validating that the inputted nonce has not been used"
								}
							],
							"InvalidSignature()": [
								{
									"notice": "Thrown when the recovered signer is equal to the zero address"
								}
							],
							"InvalidSignatureLength()": [
								{
									"notice": "Thrown when the passed in signature is not a valid length"
								}
							],
							"InvalidSigner()": [
								{
									"notice": "Thrown when the recovered signer does not equal the claimedSigner"
								}
							],
							"SignatureExpired(uint256)": [
								{
									"notice": "Thrown when validating an inputted signature that is stale"
								}
							]
						},
						"events": {
							"Approval(address,address,address,uint160,uint48)": {
								"notice": "Emits an event when the owner successfully sets permissions on a token for the spender."
							},
							"Lockdown(address,address,address)": {
								"notice": "Emits an event when the owner sets the allowance back to 0 with the lockdown function."
							},
							"NonceInvalidation(address,address,address,uint48,uint48)": {
								"notice": "Emits an event when the owner successfully invalidates an ordered nonce."
							},
							"Permit(address,address,address,uint160,uint48,uint48)": {
								"notice": "Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender."
							}
						},
						"kind": "user",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"notice": "Returns the domain separator for the current chain."
							},
							"allowance(address,address,address)": {
								"notice": "Maps users to tokens to spender addresses and information about the approval on the token"
							},
							"approve(address,address,uint160,uint48)": {
								"notice": "Approves the spender to use up to amount of the specified token up until the expiration"
							},
							"invalidateNonces(address,address,uint48)": {
								"notice": "Invalidate nonces for a given (token, spender) pair"
							},
							"lockdown((address,address)[])": {
								"notice": "Enables performing a \"lockdown\" of the sender's Permit2 identity by batch revoking approvals"
							},
							"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)": {
								"notice": "Permit a spender to a given amount of the owners token via the owner's EIP-712 signature"
							},
							"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)": {
								"notice": "Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature"
							},
							"transferFrom((address,address,uint160,address)[])": {
								"notice": "Transfer approved tokens in a batch"
							},
							"transferFrom(address,address,uint160,address)": {
								"notice": "Transfer approved tokens from one address to another"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/contracts/permit2/EIP712.sol": {
				"EIP712": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Maintains cross-chain replay protection in the event of a forkReference: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/EIP712.sol",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Uses cached version if chainid and address are unchanged from construction."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/permit2/EIP712.sol\":347:1926  contract EIP712 is IEIP712 {... */\n  0xc0\n  jumpi(tag_1, callvalue)\n    /* \"contracts/contracts/permit2/EIP712.sol\":919:932  block.chainid */\n  chainid\n    /* \"contracts/contracts/permit2/EIP712.sol\":900:932  _CACHED_CHAIN_ID = block.chainid */\n  0xa0\n  mstore\n    /* \"contracts/contracts/permit2/EIP712.sol\":1632:1692  abi.encode(typeHash, nameHash, block.chainid, address(this)) */\n  0x20\n  dup2\n  add\n    /* \"contracts/contracts/permit2/EIP712.sol\":789:869  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n  0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n    /* \"contracts/contracts/permit2/EIP712.sol\":347:1926  contract EIP712 is IEIP712 {... */\n  dup2\n  mstore\n    /* \"contracts/contracts/permit2/EIP712.sol\":717:737  keccak256(\"Permit2\") */\n  0x9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a\n    /* \"contracts/contracts/permit2/EIP712.sol\":347:1926  contract EIP712 is IEIP712 {... */\n  0x40\n  dup4\n  add\n  mstore\n    /* \"contracts/contracts/permit2/EIP712.sol\":919:932  block.chainid */\n  chainid\n    /* \"contracts/contracts/permit2/EIP712.sol\":347:1926  contract EIP712 is IEIP712 {... */\n  0x60\n  dup4\n  add\n  mstore\n    /* \"contracts/contracts/permit2/EIP712.sol\":1686:1690  this */\n  address\n    /* \"contracts/contracts/permit2/EIP712.sol\":347:1926  contract EIP712 is IEIP712 {... */\n  0x80\n  dup4\n  add\n  mstore\n  0x80\n    /* \"contracts/contracts/permit2/EIP712.sol\":1632:1692  abi.encode(typeHash, nameHash, block.chainid, address(this)) */\n  dup3\n  mstore\n    /* \"contracts/contracts/permit2/EIP712.sol\":900:932  _CACHED_CHAIN_ID = block.chainid */\n  0xa0\n    /* \"contracts/contracts/permit2/EIP712.sol\":347:1926  contract EIP712 is IEIP712 {... */\n  dup3\n  add\n  swap2\n  dup1\n  dup4\n  lt\n  0x01\n  dup1\n  0x40\n  shl\n  sub\n  dup5\n  gt\n  or\n  tag_3\n  jumpi\n  dup3\n  0x40\n  mstore\n  mload\n    /* \"contracts/contracts/permit2/EIP712.sol\":1622:1693  keccak256(abi.encode(typeHash, nameHash, block.chainid, address(this))) */\n  swap1\n  keccak256\n    /* \"contracts/contracts/permit2/EIP712.sol\":347:1926  contract EIP712 is IEIP712 {... */\n  0x80\n    /* \"contracts/contracts/permit2/EIP712.sol\":942:1016  _CACHED_DOMAIN_SEPARATOR = _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME) */\n  mstore\n    /* \"contracts/contracts/permit2/EIP712.sol\":347:1926  contract EIP712 is IEIP712 {... */\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  mload(0x80)\n  dup2\n  assignImmutable(\"0x4f4ac30ff8bfcef8cd1068d1427faf7fb52fa3a1610b1f430e1f69a91ebb9673\")\n    /* \"contracts/contracts/permit2/EIP712.sol\":900:932  _CACHED_CHAIN_ID = block.chainid */\n  0xa0\n    /* \"contracts/contracts/permit2/EIP712.sol\":347:1926  contract EIP712 is IEIP712 {... */\n  mload\n  dup2\n  assignImmutable(\"0x3ab4fb69c8e122442af87ae588015f836e7cde3029bbb6dab1983bc840231d63\")\n  return\ntag_3:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"contracts/contracts/permit2/EIP712.sol\":347:1926  contract EIP712 is IEIP712 {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_1, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_1:\n      0x00\n      swap1\n      dup2\n      calldataload\n      0xe0\n      shr\n      0x3644e515\n      eq\n      tag_3\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_3:\n      jumpi(tag_7, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_7\n      jumpi\n        /* \"contracts/contracts/permit2/EIP712.sol\":1270:1283  block.chainid */\n      chainid\n        /* \"contracts/contracts/permit2/EIP712.sol\":1287:1303  _CACHED_CHAIN_ID */\n      immutable(\"0x3ab4fb69c8e122442af87ae588015f836e7cde3029bbb6dab1983bc840231d63\")\n        /* \"contracts/contracts/permit2/EIP712.sol\":1270:1303  block.chainid == _CACHED_CHAIN_ID */\n      sub\n        /* \"contracts/contracts/permit2/EIP712.sol\":1287:1303  _CACHED_CHAIN_ID */\n      tag_9\n      jumpi\n        /* \"contracts/contracts/permit2/EIP712.sol\":1318:1342  _CACHED_DOMAIN_SEPARATOR */\n      pop\n      pop\n        /* \"contracts/contracts/permit2/EIP712.sol\":347:1926  contract EIP712 is IEIP712 {... */\n      0x20\n        /* \"contracts/contracts/permit2/EIP712.sol\":1318:1342  _CACHED_DOMAIN_SEPARATOR */\n      immutable(\"0x4f4ac30ff8bfcef8cd1068d1427faf7fb52fa3a1610b1f430e1f69a91ebb9673\")\n        /* \"contracts/contracts/permit2/EIP712.sol\":1270:1404  block.chainid == _CACHED_CHAIN_ID... */\n    tag_11:\n        /* \"contracts/contracts/permit2/EIP712.sol\":347:1926  contract EIP712 is IEIP712 {... */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n        /* \"contracts/contracts/permit2/EIP712.sol\":1270:1404  block.chainid == _CACHED_CHAIN_ID... */\n    tag_9:\n        /* \"contracts/contracts/permit2/EIP712.sol\":1632:1692  abi.encode(typeHash, nameHash, block.chainid, address(this)) */\n      0x20\n      dup2\n      add\n        /* \"contracts/contracts/permit2/EIP712.sol\":347:1926  contract EIP712 is IEIP712 {... */\n      swap1\n        /* \"contracts/contracts/permit2/EIP712.sol\":789:869  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n        /* \"contracts/contracts/permit2/EIP712.sol\":347:1926  contract EIP712 is IEIP712 {... */\n      dup3\n      mstore\n        /* \"contracts/contracts/permit2/EIP712.sol\":717:737  keccak256(\"Permit2\") */\n      0x9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a\n        /* \"contracts/contracts/permit2/EIP712.sol\":347:1926  contract EIP712 is IEIP712 {... */\n      0x40\n      dup3\n      add\n      mstore\n        /* \"contracts/contracts/permit2/EIP712.sol\":1270:1283  block.chainid */\n      chainid\n        /* \"contracts/contracts/permit2/EIP712.sol\":347:1926  contract EIP712 is IEIP712 {... */\n      0x60\n      dup3\n      add\n      mstore\n        /* \"contracts/contracts/permit2/EIP712.sol\":1686:1690  this */\n      address\n        /* \"contracts/contracts/permit2/EIP712.sol\":347:1926  contract EIP712 is IEIP712 {... */\n      0x80\n      dup3\n      add\n      mstore\n      0x80\n        /* \"contracts/contracts/permit2/EIP712.sol\":1632:1692  abi.encode(typeHash, nameHash, block.chainid, address(this)) */\n      dup2\n      mstore\n        /* \"contracts/contracts/permit2/EIP712.sol\":347:1926  contract EIP712 is IEIP712 {... */\n      0xa0\n      dup2\n      add\n      dup2\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_12\n      jumpi\n      0x20\n      swap4\n      pop\n      0x40\n      mstore\n      mload\n        /* \"contracts/contracts/permit2/EIP712.sol\":1622:1693  keccak256(abi.encode(typeHash, nameHash, block.chainid, address(this))) */\n      swap1\n      keccak256\n        /* \"contracts/contracts/permit2/EIP712.sol\":1270:1404  block.chainid == _CACHED_CHAIN_ID... */\n      jump(tag_11)\n        /* \"contracts/contracts/permit2/EIP712.sol\":347:1926  contract EIP712 is IEIP712 {... */\n    tag_12:\n      shl(0xe0, 0x4e487b71)\n      dup5\n      mstore\n      mstore(0x04, 0x41)\n      0x24\n      dup5\n      revert\n    tag_7:\n      pop\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122020061a74e9c86841611f90f70ac386c1327e8aa785b7c323b0afb4a389050cda64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60c0346100b7574660a052602081017f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681527f9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a60408301524660608301523060808301526080825260a082019180831060018060401b038411176100a3578260405251902060805261015e90816100bc8239608051816064015260a05181603a0152f35b634e487b7160e01b5f52604160045260245ffd5b5f80fdfe6080806040526004361015610012575f80fd5b5f90813560e01c633644e51514610027575f80fd5b34610124578160031936011261012457467f00000000000000000000000000000000000000000000000000000000000000000361008c57505060207f00000000000000000000000000000000000000000000000000000000000000005b604051908152f35b60208101907f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86682527f9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a60408201524660608201523060808201526080815260a0810181811067ffffffffffffffff8211176101105760209350604052519020610084565b634e487b7160e01b84526041600452602484fd5b5080fdfea264697066735822122020061a74e9c86841611f90f70ac386c1327e8aa785b7c323b0afb4a389050cda64736f6c63430008140033",
							"opcodes": "PUSH1 0xC0 CALLVALUE PUSH2 0xB7 JUMPI CHAINID PUSH1 0xA0 MSTORE PUSH1 0x20 DUP2 ADD PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 MSTORE PUSH32 0x9AC997416E8FF9D2FF6BEBEB7149F65CDAE5E32E2B90440B566BB3044041D36A PUSH1 0x40 DUP4 ADD MSTORE CHAINID PUSH1 0x60 DUP4 ADD MSTORE ADDRESS PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x80 DUP3 MSTORE PUSH1 0xA0 DUP3 ADD SWAP2 DUP1 DUP4 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP5 GT OR PUSH2 0xA3 JUMPI DUP3 PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 PUSH1 0x80 MSTORE PUSH2 0x15E SWAP1 DUP2 PUSH2 0xBC DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH1 0x64 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 PUSH1 0x3A ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x3644E515 EQ PUSH2 0x27 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x124 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x124 JUMPI CHAINID PUSH32 0x0 SUB PUSH2 0x8C JUMPI POP POP PUSH1 0x20 PUSH32 0x0 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP3 MSTORE PUSH32 0x9AC997416E8FF9D2FF6BEBEB7149F65CDAE5E32E2B90440B566BB3044041D36A PUSH1 0x40 DUP3 ADD MSTORE CHAINID PUSH1 0x60 DUP3 ADD MSTORE ADDRESS PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x80 DUP2 MSTORE PUSH1 0xA0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x110 JUMPI PUSH1 0x20 SWAP4 POP PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 PUSH2 0x84 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 MOD BYTE PUSH21 0xE9C86841611F90F70AC386C1327E8AA785B7C323B0 0xAF 0xB4 LOG3 DUP10 SDIV 0xC 0xDA PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "347:1579:8:-:0;;;;919:13;900:32;;1632:60;;;789:80;347:1579;;717:20;347:1579;;;;919:13;347:1579;;;;1686:4;347:1579;;;;;1632:60;;900:32;347:1579;;;;;;;;;;;;;;;;;;;;1622:71;;347:1579;942:74;347:1579;;;;;;;;;;;;900:32;347:1579;;;;;;;;;;-1:-1:-1;347:1579:8;;;;;-1:-1:-1;347:1579:8;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {
								"1618": [
									{
										"length": 32,
										"start": 100
									}
								],
								"1620": [
									{
										"length": 32,
										"start": 58
									}
								]
							},
							"linkReferences": {},
							"object": "6080806040526004361015610012575f80fd5b5f90813560e01c633644e51514610027575f80fd5b34610124578160031936011261012457467f00000000000000000000000000000000000000000000000000000000000000000361008c57505060207f00000000000000000000000000000000000000000000000000000000000000005b604051908152f35b60208101907f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86682527f9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a60408201524660608201523060808201526080815260a0810181811067ffffffffffffffff8211176101105760209350604052519020610084565b634e487b7160e01b84526041600452602484fd5b5080fdfea264697066735822122020061a74e9c86841611f90f70ac386c1327e8aa785b7c323b0afb4a389050cda64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x3644E515 EQ PUSH2 0x27 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x124 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x124 JUMPI CHAINID PUSH32 0x0 SUB PUSH2 0x8C JUMPI POP POP PUSH1 0x20 PUSH32 0x0 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP3 MSTORE PUSH32 0x9AC997416E8FF9D2FF6BEBEB7149F65CDAE5E32E2B90440B566BB3044041D36A PUSH1 0x40 DUP3 ADD MSTORE CHAINID PUSH1 0x60 DUP3 ADD MSTORE ADDRESS PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x80 DUP2 MSTORE PUSH1 0xA0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x110 JUMPI PUSH1 0x20 SWAP4 POP PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 PUSH2 0x84 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 MOD BYTE PUSH21 0xE9C86841611F90F70AC386C1327E8AA785B7C323B0 0xAF 0xB4 LOG3 DUP10 SDIV 0xC 0xDA PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "347:1579:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1270:13;1287:16;1270:33;1287:16;;1318:24;;347:1579;1318:24;1270:134;347:1579;;;;;;1270:134;1632:60;;;347:1579;789:80;347:1579;;717:20;347:1579;;;;1270:13;347:1579;;;;1686:4;347:1579;;;;;1632:60;;347:1579;;;;;;;;;;;;;;;;;;1622:71;;1270:134;;347:1579;-1:-1:-1;;;347:1579:8;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "70000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "infinite"
							},
							"internal": {
								"_buildDomainSeparator(bytes32,bytes32)": "infinite",
								"_hashTypedData(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 347,
									"end": 1926,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 919,
									"end": 932,
									"name": "CHAINID",
									"source": 8
								},
								{
									"begin": 900,
									"end": 932,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 900,
									"end": 932,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1632,
									"end": 1692,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1632,
									"end": 1692,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1632,
									"end": 1692,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 789,
									"end": 869,
									"name": "PUSH",
									"source": 8,
									"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 717,
									"end": 737,
									"name": "PUSH",
									"source": 8,
									"value": "9AC997416E8FF9D2FF6BEBEB7149F65CDAE5E32E2B90440B566BB3044041D36A"
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 919,
									"end": 932,
									"name": "CHAINID",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1686,
									"end": 1690,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1632,
									"end": 1692,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1632,
									"end": 1692,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 900,
									"end": 932,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1622,
									"end": 1693,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1622,
									"end": 1693,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 942,
									"end": 1016,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "1618"
								},
								{
									"begin": 900,
									"end": 932,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "1620"
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "RETURN",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 347,
									"end": 1926,
									"name": "REVERT",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122020061a74e9c86841611f90f70ac386c1327e8aa785b7c323b0afb4a389050cda64736f6c63430008140033",
									".code": [
										{
											"begin": 347,
											"end": 1926,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "PUSH",
											"source": 8,
											"value": "3644E515"
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1270,
											"end": 1283,
											"name": "CHAINID",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1303,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1620"
										},
										{
											"begin": 1270,
											"end": 1303,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1287,
											"end": 1303,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1342,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1342,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1318,
											"end": 1342,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1618"
										},
										{
											"begin": 1270,
											"end": 1404,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1270,
											"end": 1404,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1270,
											"end": 1404,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1270,
											"end": 1404,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 789,
											"end": 869,
											"name": "PUSH",
											"source": 8,
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 717,
											"end": 737,
											"name": "PUSH",
											"source": 8,
											"value": "9AC997416E8FF9D2FF6BEBEB7149F65CDAE5E32E2B90440B566BB3044041D36A"
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1270,
											"end": 1283,
											"name": "CHAINID",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1686,
											"end": 1690,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1270,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1270,
											"end": 1404,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 347,
											"end": 1926,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"contracts/contracts/interfaces/IAllowanceTransfer.sol",
								"contracts/contracts/interfaces/IEIP712.sol",
								"contracts/contracts/interfaces/IERC1271.sol",
								"contracts/contracts/interfaces/ISignatureTransfer.sol",
								"contracts/contracts/lib/Allowance.sol",
								"contracts/contracts/lib/PermitHash.sol",
								"contracts/contracts/lib/SignatureVerification.sol",
								"contracts/contracts/permit2/AllowanceTransfer.sol",
								"contracts/contracts/permit2/EIP712.sol",
								"contracts/contracts/permit2/Permit2.sol",
								"contracts/contracts/permit2/PermitErrors.sol",
								"contracts/contracts/permit2/SignatureTransfer.sol",
								"solmate/src/tokens/ERC20.sol",
								"solmate/src/utils/SafeTransferLib.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Maintains cross-chain replay protection in the event of a forkReference: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/EIP712.sol\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Uses cached version if chainid and address are unchanged from construction.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"Returns the domain separator for the current chain.\"}},\"notice\":\"EIP712 helpers for permit2\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/permit2/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]},\"contracts/contracts/permit2/EIP712.sol\":{\"keccak256\":\"0x8bf0e994a040c5de83f9848dca37b71b45bf09d6b8028a925a76d1c917654b6d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0435626dccaaa530a392320a9099d489e6d28155c8a20cb86579517f5336a2\",\"dweb:/ipfs/QmbVkXYsMxqYoiTH5WLNjhToJWbjMSuqGLGVBj7SU69khP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"notice": "Returns the domain separator for the current chain."
							}
						},
						"notice": "EIP712 helpers for permit2",
						"version": 1
					}
				}
			},
			"contracts/contracts/permit2/Permit2.sol": {
				"Permit2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "AllowanceExpired",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExcessiveInvalidation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "maxAmount",
									"type": "uint256"
								}
							],
							"name": "InvalidAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidContractSignature",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidSignature",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "LengthMismatch",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "signatureDeadline",
									"type": "uint256"
								}
							],
							"name": "SignatureExpired",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "expiration",
									"type": "uint48"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "Lockdown",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "newNonce",
									"type": "uint48"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "oldNonce",
									"type": "uint48"
								}
							],
							"name": "NonceInvalidation",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "expiration",
									"type": "uint48"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "nonce",
									"type": "uint48"
								}
							],
							"name": "Permit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "word",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "mask",
									"type": "uint256"
								}
							],
							"name": "UnorderedNonceInvalidation",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"internalType": "uint48",
									"name": "expiration",
									"type": "uint48"
								},
								{
									"internalType": "uint48",
									"name": "nonce",
									"type": "uint48"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"internalType": "uint48",
									"name": "expiration",
									"type": "uint48"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint48",
									"name": "newNonce",
									"type": "uint48"
								}
							],
							"name": "invalidateNonces",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "wordPos",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "mask",
									"type": "uint256"
								}
							],
							"name": "invalidateUnorderedNonces",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "spender",
											"type": "address"
										}
									],
									"internalType": "struct IAllowanceTransfer.TokenSpenderPair[]",
									"name": "approvals",
									"type": "tuple[]"
								}
							],
							"name": "lockdown",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "nonceBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint160",
													"name": "amount",
													"type": "uint160"
												},
												{
													"internalType": "uint48",
													"name": "expiration",
													"type": "uint48"
												},
												{
													"internalType": "uint48",
													"name": "nonce",
													"type": "uint48"
												}
											],
											"internalType": "struct IAllowanceTransfer.PermitDetails[]",
											"name": "details",
											"type": "tuple[]"
										},
										{
											"internalType": "address",
											"name": "spender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "sigDeadline",
											"type": "uint256"
										}
									],
									"internalType": "struct IAllowanceTransfer.PermitBatch",
									"name": "permitBatch",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint160",
													"name": "amount",
													"type": "uint160"
												},
												{
													"internalType": "uint48",
													"name": "expiration",
													"type": "uint48"
												},
												{
													"internalType": "uint48",
													"name": "nonce",
													"type": "uint48"
												}
											],
											"internalType": "struct IAllowanceTransfer.PermitDetails",
											"name": "details",
											"type": "tuple"
										},
										{
											"internalType": "address",
											"name": "spender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "sigDeadline",
											"type": "uint256"
										}
									],
									"internalType": "struct IAllowanceTransfer.PermitSingle",
									"name": "permitSingle",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct ISignatureTransfer.TokenPermissions",
											"name": "permitted",
											"type": "tuple"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.PermitTransferFrom",
									"name": "permit",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "requestedAmount",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.SignatureTransferDetails",
									"name": "transferDetails",
									"type": "tuple"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permitTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct ISignatureTransfer.TokenPermissions[]",
											"name": "permitted",
											"type": "tuple[]"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.PermitBatchTransferFrom",
									"name": "permit",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "requestedAmount",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.SignatureTransferDetails[]",
									"name": "transferDetails",
									"type": "tuple[]"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permitTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct ISignatureTransfer.TokenPermissions",
											"name": "permitted",
											"type": "tuple"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.PermitTransferFrom",
									"name": "permit",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "requestedAmount",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.SignatureTransferDetails",
									"name": "transferDetails",
									"type": "tuple"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "witness",
									"type": "bytes32"
								},
								{
									"internalType": "string",
									"name": "witnessTypeString",
									"type": "string"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permitWitnessTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct ISignatureTransfer.TokenPermissions[]",
											"name": "permitted",
											"type": "tuple[]"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.PermitBatchTransferFrom",
									"name": "permit",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "requestedAmount",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.SignatureTransferDetails[]",
									"name": "transferDetails",
									"type": "tuple[]"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "witness",
									"type": "bytes32"
								},
								{
									"internalType": "string",
									"name": "witnessTypeString",
									"type": "string"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permitWitnessTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "from",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint160",
											"name": "amount",
											"type": "uint160"
										},
										{
											"internalType": "address",
											"name": "token",
											"type": "address"
										}
									],
									"internalType": "struct IAllowanceTransfer.AllowanceTransferDetails[]",
									"name": "transferDetails",
									"type": "tuple[]"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Users must approve Permit2 before calling any of the transfer functions.",
						"errors": {
							"AllowanceExpired(uint256)": [
								{
									"params": {
										"deadline": "The timestamp at which the allowed amount is no longer valid"
									}
								}
							],
							"InsufficientAllowance(uint256)": [
								{
									"params": {
										"amount": "The maximum amount allowed"
									}
								}
							],
							"InvalidAmount(uint256)": [
								{
									"params": {
										"maxAmount": "The maximum amount a spender can request to transfer"
									}
								}
							],
							"LengthMismatch()": [
								{
									"details": "If the spender does not need to transfer the number of tokens permitted, the spender can request amount 0 to be transferred"
								}
							],
							"SignatureExpired(uint256)": [
								{
									"params": {
										"signatureDeadline": "The timestamp at which a signature is no longer valid"
									}
								}
							]
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Uses cached version if chainid and address are unchanged from construction."
							},
							"approve(address,address,uint160,uint48)": {
								"details": "The packed allowance also holds a nonce, which will stay unchanged in approveSetting amount to type(uint160).max sets an unlimited approval",
								"params": {
									"amount": "The approved amount of the token",
									"expiration": "The timestamp at which the approval is no longer valid",
									"spender": "The spender address to approve",
									"token": "The token to approve"
								}
							},
							"invalidateNonces(address,address,uint48)": {
								"details": "Can't invalidate more than 2**16 nonces per transaction.",
								"params": {
									"newNonce": "The new nonce to set. Invalidates all nonces less than it.",
									"spender": "The spender to invalidate nonces for",
									"token": "The token to invalidate nonces for"
								}
							},
							"invalidateUnorderedNonces(uint256,uint256)": {
								"details": "The wordPos is maxed at type(uint248).max",
								"params": {
									"mask": "A bitmap masked against msg.sender's current bitmap at the word position",
									"wordPos": "A number to index the nonceBitmap at"
								}
							},
							"lockdown((address,address)[])": {
								"params": {
									"approvals": "Array of approvals to revoke."
								}
							},
							"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)": {
								"details": "May fail if the owner's nonce was invalidated in-flight by invalidateNonce",
								"params": {
									"owner": "The owner of the tokens being approved",
									"permitSingle": "Data signed over by the owner specifying the terms of approval",
									"signature": "The owner's signature over the permit data"
								}
							},
							"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)": {
								"details": "May fail if the owner's nonce was invalidated in-flight by invalidateNonce",
								"params": {
									"owner": "The owner of the tokens being approved",
									"permitBatch": "Data signed over by the owner specifying the terms of approval",
									"signature": "The owner's signature over the permit data"
								}
							},
							"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)": {
								"details": "Reverts if the requested amount is greater than the permitted signed amount",
								"params": {
									"owner": "The owner of the tokens to transfer",
									"permit": "The permit data signed over by the owner",
									"signature": "The signature to verify",
									"transferDetails": "The spender's requested transfer details for the permitted token"
								}
							},
							"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)": {
								"params": {
									"owner": "The owner of the tokens to transfer",
									"permit": "The permit data signed over by the owner",
									"signature": "The signature to verify",
									"transferDetails": "Specifies the recipient and requested amount for the token transfer"
								}
							},
							"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)": {
								"details": "The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definitionReverts if the requested amount is greater than the permitted signed amount",
								"params": {
									"owner": "The owner of the tokens to transfer",
									"permit": "The permit data signed over by the owner",
									"signature": "The signature to verify",
									"transferDetails": "The spender's requested transfer details for the permitted token",
									"witness": "Extra data to include when checking the user signature",
									"witnessTypeString": "The EIP-712 type definition for remaining string stub of the typehash"
								}
							},
							"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)": {
								"details": "The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition",
								"params": {
									"owner": "The owner of the tokens to transfer",
									"permit": "The permit data signed over by the owner",
									"signature": "The signature to verify",
									"transferDetails": "Specifies the recipient and requested amount for the token transfer",
									"witness": "Extra data to include when checking the user signature",
									"witnessTypeString": "The EIP-712 type definition for remaining string stub of the typehash"
								}
							},
							"transferFrom((address,address,uint160,address)[])": {
								"details": "Requires the from addresses to have approved at least the desired amount of tokens to msg.sender.",
								"params": {
									"transferDetails": "Array of owners, recipients, amounts, and tokens for the transfers"
								}
							},
							"transferFrom(address,address,uint160,address)": {
								"details": "Requires the from address to have approved at least the desired amount of tokens to msg.sender.",
								"params": {
									"amount": "The amount of the token to transfer",
									"from": "The address to transfer from",
									"to": "The address of the recipient",
									"token": "The token address to transfer"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n  0xc0\n  jumpi(tag_1, callvalue)\n    /* \"contracts/contracts/permit2/EIP712.sol\":919:932  block.chainid */\n  chainid\n    /* \"contracts/contracts/permit2/EIP712.sol\":900:932  _CACHED_CHAIN_ID = block.chainid */\n  0xa0\n  mstore\n    /* \"contracts/contracts/permit2/EIP712.sol\":1632:1692  abi.encode(typeHash, nameHash, block.chainid, address(this)) */\n  0x20\n  dup2\n  add\n    /* \"contracts/contracts/permit2/EIP712.sol\":789:869  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n  0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n    /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n  dup2\n  mstore\n    /* \"contracts/contracts/permit2/EIP712.sol\":717:737  keccak256(\"Permit2\") */\n  0x9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a\n    /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n  0x40\n  dup4\n  add\n  mstore\n    /* \"contracts/contracts/permit2/EIP712.sol\":919:932  block.chainid */\n  chainid\n    /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n  0x60\n  dup4\n  add\n  mstore\n    /* \"contracts/contracts/permit2/EIP712.sol\":1686:1690  this */\n  address\n    /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n  0x80\n  dup4\n  add\n  mstore\n  0x80\n    /* \"contracts/contracts/permit2/EIP712.sol\":1632:1692  abi.encode(typeHash, nameHash, block.chainid, address(this)) */\n  dup3\n  mstore\n    /* \"contracts/contracts/permit2/EIP712.sol\":900:932  _CACHED_CHAIN_ID = block.chainid */\n  0xa0\n    /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n  dup3\n  add\n  swap2\n  dup1\n  dup4\n  lt\n  0x01\n  dup1\n  0x40\n  shl\n  sub\n  dup5\n  gt\n  or\n  tag_3\n  jumpi\n  dup3\n  0x40\n  mstore\n  mload\n    /* \"contracts/contracts/permit2/EIP712.sol\":1622:1693  keccak256(abi.encode(typeHash, nameHash, block.chainid, address(this))) */\n  swap1\n  keccak256\n    /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n  0x80\n    /* \"contracts/contracts/permit2/EIP712.sol\":942:1016  _CACHED_DOMAIN_SEPARATOR = _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME) */\n  mstore\n    /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  mload(0x80)\n  dup2\n  assignImmutable(\"0x4f4ac30ff8bfcef8cd1068d1427faf7fb52fa3a1610b1f430e1f69a91ebb9673\")\n    /* \"contracts/contracts/permit2/EIP712.sol\":900:932  _CACHED_CHAIN_ID = block.chainid */\n  0xa0\n    /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n  mload\n  dup2\n  assignImmutable(\"0x3ab4fb69c8e122442af87ae588015f836e7cde3029bbb6dab1983bc840231d63\")\n  return\ntag_3:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      0x40\n      0x80\n      dup2\n      mstore\n      0x04\n      swap1\n      dup2\n      calldatasize\n      lt\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      0x00\n      swap1\n      dup2\n      calldataload\n      0xe0\n      shr\n      dup1\n      0x0d58b1db\n      eq\n      tag_40\n      jumpi\n      dup1\n      0x137c29fe\n      eq\n      tag_42\n      jumpi\n      dup1\n      0x2a2d80d1\n      eq\n      tag_44\n      jumpi\n      dup1\n      0x2b67b570\n      eq\n      tag_46\n      jumpi\n      dup1\n      0x30f28b7a\n      eq\n      tag_48\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_50\n      jumpi\n      dup1\n      0x36c78516\n      eq\n      tag_52\n      jumpi\n      dup1\n      0x3ff9dcb1\n      eq\n      tag_54\n      jumpi\n      dup1\n      0x4fe02b44\n      eq\n      tag_56\n      jumpi\n      dup1\n      0x65d9723c\n      eq\n      tag_58\n      jumpi\n      dup1\n      0x87517c45\n      eq\n      tag_60\n      jumpi\n      dup1\n      0x927da105\n      eq\n      tag_62\n      jumpi\n      dup1\n      0xcc53287f\n      eq\n      tag_64\n      jumpi\n      dup1\n      0xedd9444b\n      eq\n      tag_66\n      jumpi\n      0xfe8ec1a7\n      eq\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      jumpi(tag_72, callvalue)\n      jumpi(tag_72, slt(add(not(0x03), calldatasize), 0xc0))\n      sub(shl(0x40, 0x01), 0x01)\n      dup4\n      calldataload\n      dup2\n      dup2\n      gt\n      tag_74\n      jumpi\n      tag_76\n      swap1\n      calldatasize\n      swap1\n      dup7\n      add\n      tag_17\n      jump\t// in\n    tag_76:\n      calldataload(0x24)\n      dup3\n      dup2\n      gt\n      tag_77\n      jumpi\n      tag_79\n      swap1\n      calldatasize\n      swap1\n      dup8\n      add\n      tag_16\n      jump\t// in\n    tag_79:\n      tag_80\n      tag_9\n      jump\t// in\n    tag_80:\n      swap2\n      calldataload(0x84)\n      dup6\n      dup2\n      gt\n      tag_81\n      jumpi\n      tag_83\n      swap1\n      calldatasize\n      swap1\n      dup11\n      add\n      tag_12\n      jump\t// in\n    tag_83:\n      swap9\n      swap1\n      swap6\n      calldataload(0xa4)\n      swap1\n      dup2\n      gt\n      tag_84\n      jumpi\n      tag_86\n      swap2\n      calldatasize\n      swap2\n      add\n      tag_12\n      jump\t// in\n    tag_86:\n      swap7\n      swap1\n      swap6\n      dup2\n      mload\n      swap1\n      tag_87\n      dup3\n      tag_3\n      jump\t// in\n    tag_87:\n      0x6b\n      dup3\n      mstore\n      0x5065726d697442617463685769746e6573735472616e7366657246726f6d2854\n      0x20\n      dup4\n      add\n      mstore\n      0x6f6b656e5065726d697373696f6e735b5d207065726d69747465642c61646472\n      dup4\n      dup4\n      add\n      mstore\n      0x657373207370656e6465722c75696e74323536206e6f6e63652c75696e743235\n      0x60\n      dup4\n      add\n      mstore\n      shl(0xaa, 0x0d88191958591b1a5b994b)\n      0x80\n      dup4\n      add\n      mstore\n      dup3\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":4678:4764  abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString) */\n      swap11\n      dup12\n      swap2\n      dup2\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      tag_88\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      0x20\n        /* \"contracts/contracts/lib/PermitHash.sol\":4678:4764  abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString) */\n      dup6\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      dup1\n      swap7\n      tag_32\n      jump\t// in\n    tag_88:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap2\n      dup3\n      calldatacopy\n      add\n      dup11\n      dup2\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":4678:4764  abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString) */\n      sub\n        /* \"contracts/contracts/lib/PermitHash.sol\":4133:4213  abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString) */\n      swap10\n        /* \"contracts/contracts/lib/PermitHash.sol\":4678:4764  abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString) */\n      tag_89\n        /* \"contracts/contracts/lib/PermitHash.sol\":4133:4213  abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString) */\n      not(0x1f)\n        /* \"contracts/contracts/lib/PermitHash.sol\":4678:4764  abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString) */\n      swap12\n      dup13\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_5\n      jump\t// in\n    tag_89:\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":4668:4765  keccak256(abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString)) */\n      swap1\n      keccak256\n        /* \"contracts/contracts/lib/PermitHash.sol\":4799:4815  permit.permitted */\n      swap1\n      dup6\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":4873:4900  new bytes32[](numPermitted) */\n      tag_90\n      dup2\n      tag_22\n      jump\t// in\n    tag_90:\n        /* \"contracts/contracts/lib/PermitHash.sol\":4916:4929  uint256 i = 0 */\n      swap1\n      dup11\n        /* \"contracts/contracts/lib/PermitHash.sol\":4931:4947  i < numPermitted */\n    tag_91:\n      dup2\n      dup2\n      lt\n      tag_92\n      jumpi\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      pop\n      pop\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":3572:3581  signature */\n      tag_94\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap10\n      swap11\n        /* \"contracts/contracts/lib/PermitHash.sol\":5088:5322  abi.encode(... */\n      tag_95\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap2\n      dup4\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":5152:5191  abi.encodePacked(tokenPermissionHashes) */\n      tag_96\n      dup2\n        /* \"contracts/contracts/lib/PermitHash.sol\":661:834  keccak256(... */\n      tag_97\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      0x20\n        /* \"contracts/contracts/lib/PermitHash.sol\":5152:5191  abi.encodePacked(tokenPermissionHashes) */\n      dup3\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":661:834  keccak256(... */\n      dup1\n      swap6\n      tag_24\n      jump\t// in\n    tag_97:\n        /* \"contracts/contracts/lib/PermitHash.sol\":5152:5191  abi.encodePacked(tokenPermissionHashes) */\n      sub\n      dup5\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_5\n      jump\t// in\n    tag_96:\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":5142:5192  keccak256(abi.encodePacked(tokenPermissionHashes)) */\n      swap1\n      keccak256\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      0x20\n        /* \"contracts/contracts/lib/PermitHash.sol\":5238:5250  permit.nonce */\n      dup10\n      dup2\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":5268:5283  permit.deadline */\n      dup6\n      dup12\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload\n      swap6\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":5088:5322  abi.encode(... */\n      swap2\n      dup3\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap7\n      dup8\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      0x40\n      dup3\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":5210:5220  msg.sender */\n      caller\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      0x60\n      dup3\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      0x80\n      dup2\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap2\n      swap1\n      swap2\n      mstore\n      0xa0\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      dup2\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap4\n      swap1\n      swap4\n      mstore\n      calldataload(0x64)\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      0xc0\n      dup5\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n      dup3\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      0xe0\n      dup2\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":5088:5322  abi.encode(... */\n    tag_98:\n      sub\n      swap1\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_5\n      jump\t// in\n    tag_95:\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":5065:5332  keccak256(... */\n      swap1\n      keccak256\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":3572:3581  signature */\n      swap4\n      tag_35\n      jump\t// in\n    tag_94:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup1\n      return\n        /* \"contracts/contracts/lib/PermitHash.sol\":4949:4952  ++i */\n    tag_92:\n        /* \"contracts/contracts/lib/PermitHash.sol\":5017:5033  permit.permitted */\n      dup1\n        /* \"contracts/contracts/lib/PermitHash.sol\":4995:5037  _hashTokenPermissions(permit.permitted[i]) */\n      tag_99\n        /* \"contracts/contracts/lib/PermitHash.sol\":5017:5036  permit.permitted[i] */\n      tag_100\n        /* \"contracts/contracts/lib/PermitHash.sol\":4949:4952  ++i */\n      tag_101\n        /* \"contracts/contracts/lib/PermitHash.sol\":5017:5033  permit.permitted */\n      swap4\n      dup13\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":5017:5036  permit.permitted[i] */\n      tag_21\n      jump\t// in\n    tag_100:\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":4995:5037  _hashTokenPermissions(permit.permitted[i]) */\n      tag_31\n      jump\t// in\n    tag_99:\n        /* \"contracts/contracts/lib/PermitHash.sol\":4968:5037  tokenPermissionHashes[i] = _hashTokenPermissions(permit.permitted[i]) */\n      tag_102\n      dup3\n      dup7\n      tag_21\n      jump\t// in\n    tag_102:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":4949:4952  ++i */\n      tag_23\n      jump\t// in\n    tag_101:\n        /* \"contracts/contracts/lib/PermitHash.sol\":4916:4929  uint256 i = 0 */\n      jump(tag_91)\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n    tag_84:\n      dup9\n      dup1\n      revert\n    tag_81:\n      dup8\n      dup1\n      revert\n    tag_77:\n      dup5\n      dup1\n      revert\n    tag_74:\n      dup4\n      dup1\n      revert\n    tag_72:\n      pop\n      dup1\n      revert\n    tag_66:\n      pop\n      swap2\n      jumpi(tag_72, callvalue)\n      jumpi(tag_72, slt(add(not(0x03), calldatasize), 0x80))\n      sub(shl(0x40, 0x01), 0x01)\n      swap1\n      dup1\n      calldataload\n      dup3\n      dup2\n      gt\n      tag_74\n      jumpi\n      tag_109\n      swap1\n      calldatasize\n      swap1\n      dup4\n      add\n      tag_17\n      jump\t// in\n    tag_109:\n      calldataload(0x24)\n      dup4\n      dup2\n      gt\n      tag_77\n      jumpi\n      tag_112\n      swap1\n      calldatasize\n      swap1\n      dup5\n      add\n      tag_16\n      jump\t// in\n    tag_112:\n      swap4\n      swap1\n      swap3\n      tag_113\n      tag_9\n      jump\t// in\n    tag_113:\n      swap2\n      calldataload(0x64)\n      swap1\n      dup2\n      gt\n      tag_114\n      jumpi\n      tag_116\n      swap2\n      calldatasize\n      swap2\n      add\n      tag_12\n      jump\t// in\n    tag_116:\n        /* \"contracts/contracts/lib/PermitHash.sol\":3353:3369  permit.permitted */\n      swap5\n      swap1\n      swap4\n      dup4\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":3427:3454  new bytes32[](numPermitted) */\n      swap8\n      tag_117\n      dup10\n      tag_22\n      jump\t// in\n    tag_117:\n        /* \"contracts/contracts/lib/PermitHash.sol\":3470:3483  uint256 i = 0 */\n      swap9\n      dup9\n        /* \"contracts/contracts/lib/PermitHash.sol\":3485:3501  i < numPermitted */\n    tag_118:\n      dup2\n      dup2\n      lt\n      tag_119\n      jumpi\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      pop\n      pop\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":3100:3109  signature */\n      tag_94\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap8\n      swap9\n      dup2\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":3734:3773  abi.encodePacked(tokenPermissionHashes) */\n      tag_122\n      dup2\n        /* \"contracts/contracts/lib/PermitHash.sol\":661:834  keccak256(... */\n      tag_123\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      0x20\n        /* \"contracts/contracts/lib/PermitHash.sol\":3734:3773  abi.encodePacked(tokenPermissionHashes) */\n      dup3\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":661:834  keccak256(... */\n      dup1\n      swap6\n      tag_24\n      jump\t// in\n    tag_123:\n        /* \"contracts/contracts/lib/PermitHash.sol\":3734:3773  abi.encodePacked(tokenPermissionHashes) */\n      sub\n        /* \"contracts/contracts/lib/PermitHash.sol\":4133:4213  abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString) */\n      not(0x1f)\n        /* \"contracts/contracts/lib/PermitHash.sol\":3734:3773  abi.encodePacked(tokenPermissionHashes) */\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_5\n      jump\t// in\n    tag_122:\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":3724:3774  keccak256(abi.encodePacked(tokenPermissionHashes)) */\n      swap1\n      keccak256\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      0x20\n        /* \"contracts/contracts/lib/PermitHash.sol\":3820:3832  permit.nonce */\n      dup7\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":3850:3865  permit.deadline */\n      dup3\n      dup8\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload\n      swap1\n      dup4\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":3642:3879  abi.encode(... */\n      swap3\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      0x20\n        /* \"contracts/contracts/lib/PermitHash.sol\":3642:3879  abi.encode(... */\n      dup5\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap5\n        /* \"contracts/contracts/lib/PermitHash.sol\":1254:1427  keccak256(... */\n      0xfcf35f5ac6a2c28868dc44c302166470266239195f02b0ee408334829333b766\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup7\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      dup5\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":3792:3802  msg.sender */\n      caller\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      0x60\n      dup5\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n      0x80\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      dup4\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      0xa0\n      dup3\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      0xa0\n        /* \"contracts/contracts/lib/PermitHash.sol\":3642:3879  abi.encode(... */\n      dup2\n      mstore\n      tag_95\n      dup2\n      tag_4\n      jump\t// in\n        /* \"contracts/contracts/lib/PermitHash.sol\":3503:3506  ++i */\n    tag_119:\n        /* \"contracts/contracts/lib/PermitHash.sol\":3571:3587  permit.permitted */\n      dup1\n      dup12\n        /* \"contracts/contracts/lib/PermitHash.sol\":3522:3591  tokenPermissionHashes[i] = _hashTokenPermissions(permit.permitted[i]) */\n      tag_102\n        /* \"contracts/contracts/lib/PermitHash.sol\":3571:3587  permit.permitted */\n      dup3\n        /* \"contracts/contracts/lib/PermitHash.sol\":3549:3591  _hashTokenPermissions(permit.permitted[i]) */\n      tag_126\n        /* \"contracts/contracts/lib/PermitHash.sol\":3571:3590  permit.permitted[i] */\n      tag_100\n        /* \"contracts/contracts/lib/PermitHash.sol\":3503:3506  ++i */\n      tag_128\n        /* \"contracts/contracts/lib/PermitHash.sol\":3571:3587  permit.permitted */\n      swap7\n      dup14\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":3571:3590  permit.permitted[i] */\n      tag_21\n      jump\t// in\n        /* \"contracts/contracts/lib/PermitHash.sol\":3549:3591  _hashTokenPermissions(permit.permitted[i]) */\n    tag_126:\n        /* \"contracts/contracts/lib/PermitHash.sol\":3522:3591  tokenPermissionHashes[i] = _hashTokenPermissions(permit.permitted[i]) */\n      swap3\n      tag_21\n      jump\t// in\n        /* \"contracts/contracts/lib/PermitHash.sol\":3503:3506  ++i */\n    tag_128:\n        /* \"contracts/contracts/lib/PermitHash.sol\":3470:3483  uint256 i = 0 */\n      jump(tag_118)\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n    tag_114:\n      dup7\n      dup1\n      revert\n    tag_64:\n      pop\n      dup3\n      jumpi(tag_129, callvalue)\n      0x20\n      swap1\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_74\n      jumpi\n      dup1\n      calldataload\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      tag_77\n      jumpi\n      tag_135\n      swap2\n      calldatasize\n      swap2\n      add\n      tag_16\n      jump\t// in\n    tag_135:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4500:4513  uint256 i = 0 */\n      swap3\n      swap1\n      swap2\n      dup5\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4515:4525  i < length */\n    tag_136:\n      dup5\n      dup2\n      lt\n      tag_137\n      jumpi\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup6\n      dup1\n      return\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4527:4530  ++i */\n    tag_137:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4566:4578  approvals[i] */\n      dup1\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4566:4584  approvals[i].token */\n      tag_139\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4566:4578  approvals[i] */\n      tag_140\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      0x01\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4566:4578  approvals[i] */\n      swap4\n      dup9\n      dup9\n      tag_26\n      jump\t// in\n    tag_140:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4566:4584  approvals[i].token */\n      tag_27\n      jump\t// in\n    tag_139:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4620:4640  approvals[i].spender */\n      tag_141\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4620:4632  approvals[i] */\n      dup5\n      tag_142\n      dup5\n      dup11\n      dup11\n      tag_26\n      jump\t// in\n    tag_142:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4620:4640  approvals[i].spender */\n      add\n      tag_27\n      jump\t// in\n    tag_141:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4337:4347  msg.sender */\n      caller\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup10\n      mstore\n      dup4\n      dup6\n      mstore\n      dup6\n      dup10\n      keccak256\n      swap2\n      dup5\n      dup1\n      0xa0\n      shl\n      sub\n      dup1\n      swap2\n      and\n      swap3\n      dup4\n      dup12\n      mstore\n      dup7\n      mstore\n      dup7\n      dup11\n      keccak256\n      swap2\n      and\n      swap1\n      dup2\n      dup11\n      mstore\n      dup6\n      mstore\n      dup6\n      dup10\n      keccak256\n      shl(0xa0, 0xffffffffffffffffffffffff)\n      dup2\n      sload\n      and\n      swap1\n      sstore\n      dup6\n      mload\n      swap2\n      dup3\n      mstore\n      dup5\n      dup3\n      add\n      mstore\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4725:4756  Lockdown(owner, token, spender) */\n      0x89b1add15eff56b3dfe299ad94e01f2b52fbcb80ae1a3baea6ae8c04cb2b98a4\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4337:4347  msg.sender */\n      dup6\n      caller\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4725:4756  Lockdown(owner, token, spender) */\n      swap3\n      log2\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      add\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4500:4513  uint256 i = 0 */\n      jump(tag_136)\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n    tag_129:\n      dup3\n      dup1\n      revert\n    tag_62:\n      pop\n      jumpi(tag_72, callvalue)\n      jumpi(tag_72, slt(add(not(0x03), calldatasize), 0x60))\n      tag_147\n      dup2\n      tag_148\n      tag_7\n      jump\t// in\n    tag_148:\n      swap4\n      tag_149\n      tag_8\n      jump\t// in\n    tag_149:\n      tag_150\n      tag_9\n      jump\t// in\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n      swap7\n      dup8\n      and\n      dup4\n      mstore\n      0x01\n      0x20\n      swap1\n      dup2\n      mstore\n      dup5\n      dup5\n      keccak256\n      swap3\n      dup9\n      and\n      dup5\n      mstore\n      swap2\n      dup3\n      mstore\n      dup4\n      dup4\n      keccak256\n      swap1\n      dup8\n      and\n      dup4\n      mstore\n      dup2\n      mstore\n      swap2\n      swap1\n      keccak256\n      sload\n      swap3\n      mload\n      swap4\n      dup4\n      and\n      dup5\n      mstore\n      0xa0\n      dup4\n      swap1\n      shr\n      0xffffffffffff\n      and\n      swap1\n      dup5\n      add\n      mstore\n      0xd0\n      swap2\n      swap1\n      swap2\n      shr\n      0x40\n      dup4\n      add\n      mstore\n      dup2\n      swap1\n      0x60\n      dup3\n      add\n      swap1\n      jump\n    tag_147:\n      sub\n      swap1\n      return\n    tag_60:\n      pop\n      jumpi(tag_72, callvalue)\n      jumpi(tag_72, slt(add(not(0x03), calldatasize), 0x80))\n      tag_155\n      tag_7\n      jump\t// in\n    tag_155:\n      swap1\n      tag_156\n      tag_8\n      jump\t// in\n    tag_156:\n      swap2\n      tag_157\n      tag_9\n      jump\t// in\n    tag_157:\n      swap1\n      calldataload(0x64)\n      swap3\n      0xffffffffffff\n      swap4\n      dup5\n      dup2\n      and\n      swap1\n      dup2\n      dup2\n      sub\n      tag_81\n      jumpi\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1469:1525  Approval(msg.sender, token, spender, amount, expiration) */\n      0xda9fa7c1b00402c17d0161b249b1ab8bbec047c5a52207b9c112deffd817036b\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1364:1374  msg.sender */\n      swap4\n      caller\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup10\n      mstore\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1354:1363  allowance */\n      0x01\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      0x20\n      mstore\n      dup4\n      dup10\n      keccak256\n      swap7\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup1\n      swap3\n      and\n      swap8\n      dup9\n      dup12\n      mstore\n      0x20\n      mstore\n      dup2\n      dup6\n      dup12\n      keccak256\n      swap10\n      and\n      swap9\n      dup10\n      dup12\n      mstore\n      0x20\n      mstore\n      dup5\n      dup11\n      keccak256\n        /* \"contracts/contracts/lib/Allowance.sol\":1510:1564  expiration == 0 ? uint48(block.timestamp) : expiration */\n      swap3\n        /* \"contracts/contracts/lib/Allowance.sol\":1510:1525  expiration == 0 */\n      dup5\n      iszero\n        /* \"contracts/contracts/lib/Allowance.sol\":1510:1564  expiration == 0 ? uint48(block.timestamp) : expiration */\n      0x00\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      eq\n      tag_160\n      jumpi\n        /* \"contracts/contracts/lib/Allowance.sol\":1535:1550  block.timestamp */\n      pop\n      timestamp\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      and\n        /* \"contracts/contracts/lib/Allowance.sol\":1510:1564  expiration == 0 ? uint48(block.timestamp) : expiration */\n      swap1\n    tag_162:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup3\n      sload\n      not(sub(shl(0xd0, 0x01), 0x01))\n      and\n      0xa0\n      swap3\n      swap1\n      swap3\n      shl\n      shl(0xa0, 0xffffffffffff)\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap6\n      and\n      swap5\n      dup6\n      or\n      swap1\n      sstore\n      dup2\n      mload\n      swap4\n      dup5\n      mstore\n      0x20\n      dup5\n      add\n      mstore\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1364:1374  msg.sender */\n      caller\n      swap3\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1469:1525  Approval(msg.sender, token, spender, amount, expiration) */\n      log4\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup1\n      return\n        /* \"contracts/contracts/lib/Allowance.sol\":1510:1564  expiration == 0 ? uint48(block.timestamp) : expiration */\n    tag_160:\n      swap1\n      pop\n      swap1\n      jump(tag_162)\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n    tag_58:\n      pop\n      dup3\n      jumpi(tag_129, callvalue)\n      jumpi(tag_129, slt(add(not(0x03), calldatasize), 0x60))\n      tag_167\n      tag_7\n      jump\t// in\n    tag_167:\n      swap1\n      tag_168\n      tag_8\n      jump\t// in\n    tag_168:\n      swap3\n      0xffffffffffff\n      calldataload(0x44)\n      dup2\n      dup2\n      and\n      swap4\n      swap1\n      dup5\n      dup2\n      sub\n      tag_81\n      jumpi\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4954:4964  msg.sender */\n      caller\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup9\n      mstore\n      0x20\n      swap2\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4944:4953  allowance */\n      0x01\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup4\n      mstore\n      dup5\n      dup10\n      keccak256\n      swap7\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup1\n      swap2\n      and\n      swap8\n      dup9\n      dup12\n      mstore\n      dup5\n      mstore\n      dup6\n      dup11\n      keccak256\n      swap9\n      and\n      swap8\n      dup9\n      dup11\n      mstore\n      dup4\n      mstore\n      dup5\n      dup10\n      keccak256\n      sload\n      0xd0\n      shr\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5002:5022  newNonce <= oldNonce */\n      swap4\n      dup5\n      dup8\n      gt\n      iszero\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4998:5045  if (newNonce <= oldNonce) revert InvalidNonce() */\n      tag_171\n      jumpi\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      0xffff\n      swap1\n      dup6\n      dup5\n      sub\n      and\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5214:5238  delta > type(uint16).max */\n      gt\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5210:5270  if (delta > type(uint16).max) revert ExcessiveInvalidation() */\n      tag_173\n      jumpi\n      pop\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4954:4964  msg.sender */\n      caller\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup1\n      dup10\n      mstore\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4944:4953  allowance */\n      0x01\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup4\n      mstore\n      dup5\n      dup10\n      keccak256\n      dup8\n      dup11\n      mstore\n      dup4\n      mstore\n      dup5\n      dup10\n      keccak256\n      dup9\n      dup11\n      mstore\n      dup4\n      mstore\n      dup5\n      dup10\n      keccak256\n      dup1\n      sload\n      sub(shl(0xd0, 0x01), 0x01)\n      and\n      0xd0\n      swap4\n      swap1\n      swap4\n      shl\n      not(sub(shl(0xd0, 0x01), 0x01))\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n      dup4\n      mload\n      swap5\n      dup6\n      mstore\n      swap1\n      dup5\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4954:4964  msg.sender */\n      swap2\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5360:5425  NonceInvalidation(msg.sender, token, spender, newNonce, oldNonce) */\n      0x55eb90d810e1700b35a8e7e25395ff7f2b2259abd7415ca2284dfb1c246418f3\n      swap2\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4954:4964  msg.sender */\n      swap1\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5360:5425  NonceInvalidation(msg.sender, token, spender, newNonce, oldNonce) */\n      log4\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup1\n      return\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5210:5270  if (delta > type(uint16).max) revert ExcessiveInvalidation() */\n    tag_173:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup5\n      mload\n      shl(0xe1, 0x1269ad13)\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5247:5270  ExcessiveInvalidation() */\n      dup2\n      mstore\n      revert\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4998:5045  if (newNonce <= oldNonce) revert InvalidNonce() */\n    tag_171:\n      pop\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup5\n      mload\n      shl(0xe1, 0x3ab3447f)\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5031:5045  InvalidNonce() */\n      dup2\n      mstore\n      revert\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n    tag_56:\n      pop\n      jumpi(tag_72, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_72\n      jumpi\n      0x20\n      swap2\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      tag_179\n      tag_7\n      jump\t// in\n    tag_179:\n      and\n      dup2\n      mstore\n      dup1\n      dup5\n      mstore\n      dup2\n      dup2\n      keccak256\n      calldataload(0x24)\n      dup3\n      mstore\n      dup5\n      mstore\n      keccak256\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_54:\n      pop\n      dup3\n      jumpi(tag_129, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_129\n      jumpi\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":5308:5361  UnorderedNonceInvalidation(msg.sender, wordPos, mask) */\n      0x3704902f963766a4e561bbaab6e6cdc1b1dd12f6e9e99648da8843b3f46b918d\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap1\n      calldataload\n      swap2\n      calldataload(0x24)\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":5264:5274  msg.sender */\n      caller\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup6\n      mstore\n      dup5\n      0x20\n      mstore\n      dup2\n      dup6\n      keccak256\n      dup5\n      dup7\n      mstore\n      0x20\n      mstore\n      dup2\n      dup6\n      keccak256\n      dup2\n      dup2\n      sload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":5252:5292  nonceBitmap[msg.sender][wordPos] |= mask */\n      or\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap1\n      sstore\n      dup2\n      mload\n      swap4\n      dup5\n      mstore\n      0x20\n      dup5\n      add\n      mstore\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":5264:5274  msg.sender */\n      caller\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":5308:5361  UnorderedNonceInvalidation(msg.sender, wordPos, mask) */\n      swap3\n      log2\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup1\n      return\n    tag_52:\n      dup3\n      jumpi(tag_186, callvalue)\n      jumpi(tag_186, slt(add(not(0x03), calldatasize), 0x80))\n      tag_188\n      tag_7\n      jump\t// in\n    tag_188:\n      tag_189\n      tag_8\n      jump\t// in\n    tag_189:\n      tag_190\n      tag_9\n      jump\t// in\n    tag_190:\n      calldataload(0x64)\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      dup4\n      sub\n      tag_77\n      jumpi\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2822:2827  token */\n      tag_94\n      swap4\n      tag_25\n      jump\t// in\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n    tag_186:\n      dup1\n      revert\n    tag_50:\n      pop\n      jumpi(tag_72, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_72\n      jumpi\n      0x20\n      swap1\n      tag_198\n      tag_29\n      jump\t// in\n    tag_198:\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_48:\n      pop\n      dup3\n      swap1\n      jumpi(tag_129, callvalue)\n      jumpi(tag_129, slt(add(not(0x03), calldatasize), 0x0100))\n      tag_203\n      calldatasize\n      tag_11\n      jump\t// in\n    tag_203:\n      swap1\n      dup1\n      add(calldatasize, not(0x83))\n      slt\n      tag_74\n      jumpi\n      tag_206\n      tag_6\n      jump\t// in\n    tag_206:\n      swap2\n      calldataload(0xe4)\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_207\n      jumpi\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":1148:1157  signature */\n      tag_94\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap5\n      tag_210\n      swap2\n      calldatasize\n      swap2\n      add\n      tag_12\n      jump\t// in\n    tag_210:\n        /* \"contracts/contracts/lib/PermitHash.sol\":3029:3045  permit.permitted */\n      swap4\n      swap1\n      swap3\n        /* \"contracts/contracts/lib/PermitHash.sol\":3007:3046  _hashTokenPermissions(permit.permitted) */\n      tag_211\n        /* \"contracts/contracts/lib/PermitHash.sol\":3029:3045  permit.permitted */\n      dup4\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":3007:3046  _hashTokenPermissions(permit.permitted) */\n      tag_31\n      jump\t// in\n    tag_211:\n        /* \"contracts/contracts/lib/PermitHash.sol\":3163:3175  permit.nonce */\n      0x20\n      dup5\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":3177:3192  permit.deadline */\n      dup3\n      dup6\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload\n      swap1\n      dup4\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":3086:3193  abi.encode(_PERMIT_TRANSFER_FROM_TYPEHASH, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline) */\n      swap3\n        /* \"contracts/contracts/lib/PermitHash.sol\":3163:3175  permit.nonce */\n      0x20\n        /* \"contracts/contracts/lib/PermitHash.sol\":3086:3193  abi.encode(_PERMIT_TRANSFER_FROM_TYPEHASH, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline) */\n      dup5\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap5\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      0x939c21a48a8dbe3a9a2404a1d46691e4d39f6583d6ec6b35714604c986d80106\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup7\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      dup5\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":3151:3161  msg.sender */\n      caller\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      0x60\n      dup5\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      0x80\n      dup4\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      0xa0\n      dup3\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      0xa0\n        /* \"contracts/contracts/lib/PermitHash.sol\":3086:3193  abi.encode(_PERMIT_TRANSFER_FROM_TYPEHASH, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline) */\n      dup2\n      mstore\n      tag_212\n      dup2\n      tag_4\n      jump\t// in\n    tag_212:\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":3063:3203  keccak256(... */\n      swap1\n      keccak256\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":1148:1157  signature */\n      swap2\n      tag_34\n      jump\t// in\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n    tag_207:\n      dup6\n      dup1\n      revert\n    tag_46:\n      pop\n      swap2\n      jumpi(tag_72, callvalue)\n      jumpi(tag_72, slt(add(not(0x03), calldatasize), 0x0100))\n      tag_217\n      tag_7\n      jump\t// in\n    tag_217:\n      add(not(0x23), calldatasize)\n      0xc0\n      dup2\n      slt\n      tag_74\n      jumpi\n      0x80\n      dup6\n      mload\n      swap2\n      tag_220\n      dup4\n      tag_2\n      jump\t// in\n    tag_220:\n      slt\n      tag_74\n      jumpi\n      dup5\n      mload\n      swap1\n      tag_223\n      dup3\n      tag_1\n      jump\t// in\n    tag_223:\n      sub(shl(0xa0, 0x01), 0x01)\n      swap2\n      calldataload(0x24)\n      dup4\n      dup2\n      and\n      dup2\n      sub\n      tag_114\n      jumpi\n      dup2\n      mstore\n      calldataload(0x44)\n      dup4\n      dup2\n      and\n      dup2\n      sub\n      tag_114\n      jumpi\n      0x20\n      dup3\n      add\n      mstore\n      0xffffffffffff\n      calldataload(0x64)\n      dup2\n      dup2\n      and\n      dup2\n      sub\n      tag_81\n      jumpi\n      dup9\n      dup4\n      add\n      mstore\n      calldataload(0x84)\n      swap1\n      dup2\n      and\n      dup2\n      sub\n      tag_114\n      jumpi\n      0x60\n      dup3\n      add\n      mstore\n      dup2\n      mstore\n      calldataload(0xa4)\n      swap4\n      dup3\n      dup6\n      and\n      dup6\n      sub\n      tag_207\n      jumpi\n      0x20\n      dup3\n      add\n      swap5\n      dup6\n      mstore\n      calldataload(0xc4)\n      swap1\n      dup8\n      dup4\n      add\n      dup3\n      dup2\n      mstore\n      calldataload(0xe4)\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_84\n      jumpi\n      tag_236\n      swap1\n      calldatasize\n      swap1\n      dup5\n      add\n      tag_12\n      jump\t// in\n    tag_236:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1691:1706  block.timestamp */\n      swap3\n      swap1\n      swap4\n      dup1\n      timestamp\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1691:1733  block.timestamp > permitSingle.sigDeadline */\n      gt\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1687:1784  if (block.timestamp > permitSingle.sigDeadline) revert SignatureExpired(permitSingle.sigDeadline) */\n      tag_237\n      jumpi\n        /* \"contracts/contracts/lib/PermitHash.sol\":2078:2098  permitSingle.details */\n      pop\n      pop\n      swap2\n      dup6\n      swap2\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1869:1904  _hashTypedData(permitSingle.hash()) */\n      tag_239\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1968:1988  permitSingle.spender */\n      tag_94\n        /* \"contracts/contracts/lib/PermitHash.sol\":2078:2098  permitSingle.details */\n      swap10\n      swap11\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1906:1911  owner */\n      tag_241\n        /* \"contracts/contracts/lib/PermitHash.sol\":2078:2098  permitSingle.details */\n      swap6\n        /* \"contracts/contracts/lib/PermitHash.sol\":2059:2099  _hashPermitDetails(permitSingle.details) */\n      tag_242\n        /* \"contracts/contracts/lib/PermitHash.sol\":2078:2098  permitSingle.details */\n      dup9\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":2059:2099  _hashPermitDetails(permitSingle.details) */\n      tag_18\n      jump\t// in\n    tag_242:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap1\n      dup10\n      dup13\n      mload\n      and\n      swap1\n      mload\n      swap1\n      dup4\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":2138:2233  abi.encode(_PERMIT_SINGLE_TYPEHASH, permitHash, permitSingle.spender, permitSingle.sigDeadline) */\n      swap3\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      0x20\n        /* \"contracts/contracts/lib/PermitHash.sol\":2138:2233  abi.encode(_PERMIT_SINGLE_TYPEHASH, permitHash, permitSingle.spender, permitSingle.sigDeadline) */\n      dup5\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap5\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      0xf3841cd1ff0085026a6327b620b67997ce40f282c88a8e905a7a5626e310f3d0\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup7\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      dup5\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n      0x60\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      dup4\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n      0x80\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      dup3\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n      0x80\n        /* \"contracts/contracts/lib/PermitHash.sol\":2138:2233  abi.encode(_PERMIT_SINGLE_TYPEHASH, permitHash, permitSingle.spender, permitSingle.sigDeadline) */\n      dup2\n      mstore\n      tag_243\n      dup2\n      tag_3\n      jump\t// in\n    tag_243:\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":2128:2234  keccak256(abi.encode(_PERMIT_SINGLE_TYPEHASH, permitHash, permitSingle.spender, permitSingle.sigDeadline)) */\n      swap1\n      keccak256\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1869:1904  _hashTypedData(permitSingle.hash()) */\n      tag_30\n      jump\t// in\n    tag_239:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1906:1911  owner */\n      swap2\n      tag_20\n      jump\t// in\n    tag_241:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1939:1959  permitSingle.details */\n      mload\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap3\n      mload\n      and\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1968:1988  permitSingle.spender */\n      swap2\n      tag_28\n      jump\t// in\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1687:1784  if (block.timestamp > permitSingle.sigDeadline) revert SignatureExpired(permitSingle.sigDeadline) */\n    tag_237:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup11\n      mload\n      shl(0xe0, 0xcd21db4f)\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1742:1784  SignatureExpired(permitSingle.sigDeadline) */\n      dup2\n      mstore\n      swap2\n      dup3\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n      0x24\n      swap2\n      pop\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":1742:1784  SignatureExpired(permitSingle.sigDeadline) */\n      revert\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n    tag_44:\n      pop\n      swap2\n      jumpi(tag_72, callvalue)\n      0x60\n      not(0x03)\n      swap2\n      dup2\n      dup4\n      calldatasize\n      add\n      slt\n      tag_74\n      jumpi\n      tag_248\n      tag_7\n      jump\t// in\n    tag_248:\n      swap3\n      calldataload(0x24)\n      swap2\n      sub(shl(0x40, 0x01), 0x01)\n      swap2\n      dup3\n      dup5\n      gt\n      tag_114\n      jumpi\n      dup5\n      swap1\n      dup5\n      calldatasize\n      sub\n      add\n      slt\n      tag_207\n      jumpi\n      dup7\n      mload\n      swap7\n      tag_253\n      dup9\n      tag_2\n      jump\t// in\n    tag_253:\n      dup4\n      dup3\n      add\n      calldataload\n      dup4\n      dup2\n      gt\n      tag_81\n      jumpi\n      dup5\n      add\n      calldatasize\n      0x23\n      dup3\n      add\n      slt\n      iszero\n      tag_81\n      jumpi\n      dup3\n      dup2\n      add\n      calldataload\n      swap1\n      tag_258\n      dup3\n      tag_13\n      jump\t// in\n    tag_258:\n      swap1\n      tag_259\n      dup5\n      mload\n      swap3\n      dup4\n      tag_5\n      jump\t// in\n    tag_259:\n      dup3\n      dup3\n      mstore\n      0x20\n      swap3\n      0x24\n      dup5\n      dup5\n      add\n      swap2\n      0x07\n      shl\n      dup4\n      add\n      add\n      swap2\n      calldatasize\n      dup4\n      gt\n      tag_289\n      jumpi\n      0x24\n      add\n      swap1\n    tag_262:\n      dup3\n      dup3\n      lt\n      tag_263\n      jumpi\n      pop\n      pop\n      pop\n      dup10\n      mstore\n      0x44\n      tag_265\n      0x24\n      dup8\n      add\n      tag_10\n      jump\t// in\n    tag_265:\n      swap6\n      dup3\n      dup12\n      add\n      swap7\n      dup8\n      mstore\n      add\n      calldataload\n      swap4\n      dup3\n      dup11\n      add\n      swap1\n      dup6\n      dup3\n      mstore\n      calldataload(0x44)\n      swap1\n      dup2\n      gt\n      tag_266\n      jumpi\n      tag_268\n      swap1\n      calldatasize\n      swap1\n      dup7\n      add\n      tag_12\n      jump\t// in\n    tag_268:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2153:2168  block.timestamp */\n      swap5\n      swap1\n      swap6\n      dup1\n      timestamp\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2153:2194  block.timestamp > permitBatch.sigDeadline */\n      gt\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2149:2244  if (block.timestamp > permitBatch.sigDeadline) revert SignatureExpired(permitBatch.sigDeadline) */\n      tag_269\n      jumpi\n        /* \"contracts/contracts/lib/PermitHash.sol\":2375:2394  permitBatch.details */\n      pop\n      pop\n      dup10\n      swap9\n      swap10\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":2443:2468  new bytes32[](numPermits) */\n      tag_271\n      dup2\n      tag_22\n      jump\t// in\n    tag_271:\n        /* \"contracts/contracts/lib/PermitHash.sol\":2483:2496  uint256 i = 0 */\n      swap1\n      dup12\n        /* \"contracts/contracts/lib/PermitHash.sol\":2498:2512  i < numPermits */\n    tag_272:\n      dup2\n      dup2\n      lt\n      tag_273\n      jumpi\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      pop\n      pop\n      swap3\n      dup9\n      swap5\n      swap3\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2329:2363  _hashTypedData(permitBatch.hash()) */\n      tag_239\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap3\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2365:2370  owner */\n      tag_276\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap8\n      swap6\n      dup4\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":2721:2751  abi.encodePacked(permitHashes) */\n      tag_277\n      dup2\n        /* \"contracts/contracts/lib/PermitHash.sol\":661:834  keccak256(... */\n      tag_123\n        /* \"contracts/contracts/lib/PermitHash.sol\":2721:2751  abi.encodePacked(permitHashes) */\n      dup7\n      dup3\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":661:834  keccak256(... */\n      dup1\n      swap6\n      tag_24\n      jump\t// in\n        /* \"contracts/contracts/lib/PermitHash.sol\":2721:2751  abi.encodePacked(permitHashes) */\n    tag_277:\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":2711:2752  keccak256(abi.encodePacked(permitHashes)) */\n      swap1\n      keccak256\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap1\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap11\n      dup12\n      dup12\n      mload\n      and\n      swap2\n      mload\n      swap3\n      dup6\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":2643:2844  abi.encode(... */\n      swap5\n      dup6\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap6\n        /* \"contracts/contracts/lib/PermitHash.sol\":661:834  keccak256(... */\n      0xaf1b0d30d2cab0380e68f0689007e3254993c596f2fdd0aaa7f4d04f79440863\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup8\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      dup6\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      dup4\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n      0x80\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      dup3\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n      0x80\n        /* \"contracts/contracts/lib/PermitHash.sol\":2643:2844  abi.encode(... */\n      dup2\n      mstore\n      tag_243\n      dup2\n      tag_3\n      jump\t// in\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2365:2370  owner */\n    tag_276:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload\n      and\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2470:2489  permitBatch.details */\n      swap1\n      dup3\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      mload\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2515:2528  uint256 i = 0 */\n      swap3\n      dup5\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2530:2540  i < length */\n    tag_280:\n      dup5\n      dup2\n      lt\n      tag_281\n      jumpi\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup6\n      dup1\n      return\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2542:2545  ++i */\n    tag_281:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2581:2600  permitBatch.details */\n      dup1\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2612:2619  spender */\n      tag_283\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2581:2600  permitBatch.details */\n      dup6\n      dup6\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2581:2603  permitBatch.details[i] */\n      tag_284\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      0x01\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2581:2600  permitBatch.details */\n      swap6\n      dup8\n      mload\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2581:2603  permitBatch.details[i] */\n      tag_21\n      jump\t// in\n    tag_284:\n      mload\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2612:2619  spender */\n      tag_28\n      jump\t// in\n    tag_283:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      add\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2515:2528  uint256 i = 0 */\n      jump(tag_280)\n        /* \"contracts/contracts/lib/PermitHash.sol\":2514:2517  ++i */\n    tag_273:\n        /* \"contracts/contracts/lib/PermitHash.sol\":2570:2589  permitBatch.details */\n      dup1\n        /* \"contracts/contracts/lib/PermitHash.sol\":2551:2593  _hashPermitDetails(permitBatch.details[i]) */\n      tag_99\n        /* \"contracts/contracts/lib/PermitHash.sol\":2570:2592  permitBatch.details[i] */\n      tag_286\n        /* \"contracts/contracts/lib/PermitHash.sol\":2570:2589  permitBatch.details */\n      dup15\n      swap16\n      swap15\n      swap4\n        /* \"contracts/contracts/lib/PermitHash.sol\":2514:2517  ++i */\n      tag_287\n        /* \"contracts/contracts/lib/PermitHash.sol\":2570:2589  permitBatch.details */\n      swap5\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":2570:2592  permitBatch.details[i] */\n      tag_21\n      jump\t// in\n    tag_286:\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":2551:2593  _hashPermitDetails(permitBatch.details[i]) */\n      tag_18\n      jump\t// in\n        /* \"contracts/contracts/lib/PermitHash.sol\":2514:2517  ++i */\n    tag_287:\n        /* \"contracts/contracts/lib/PermitHash.sol\":2483:2496  uint256 i = 0 */\n      swap12\n      swap11\n      swap12\n      jump(tag_272)\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2149:2244  if (block.timestamp > permitBatch.sigDeadline) revert SignatureExpired(permitBatch.sigDeadline) */\n    tag_269:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup5\n      mload\n      shl(0xe0, 0xcd21db4f)\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2203:2244  SignatureExpired(permitBatch.sigDeadline) */\n      dup2\n      mstore\n      swap2\n      dup3\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n      0x24\n      swap2\n      pop\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2203:2244  SignatureExpired(permitBatch.sigDeadline) */\n      revert\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n    tag_266:\n      dup10\n      dup1\n      revert\n    tag_263:\n      0x80\n      dup3\n      calldatasize\n      sub\n      slt\n      tag_289\n      jumpi\n      dup5\n      0x80\n      swap2\n      dup8\n      mload\n      tag_291\n      dup2\n      tag_1\n      jump\t// in\n    tag_291:\n      tag_292\n      dup6\n      tag_10\n      jump\t// in\n    tag_292:\n      dup2\n      mstore\n      tag_293\n      dup4\n      dup7\n      add\n      tag_10\n      jump\t// in\n    tag_293:\n      dup4\n      dup3\n      add\n      mstore\n      tag_294\n      dup10\n      dup7\n      add\n      tag_14\n      jump\t// in\n    tag_294:\n      dup10\n      dup3\n      add\n      mstore\n      tag_295\n      dup14\n      dup7\n      add\n      tag_14\n      jump\t// in\n    tag_295:\n      dup14\n      dup3\n      add\n      mstore\n      dup2\n      mstore\n      add\n      swap2\n      add\n      swap1\n      jump(tag_262)\n    tag_289:\n      dup12\n      dup1\n      revert\n    tag_42:\n      pop\n      dup3\n      jumpi(tag_129, callvalue)\n      jumpi(tag_129, slt(add(not(0x03), calldatasize), 0x0140))\n      tag_300\n      calldatasize\n      tag_11\n      jump\t// in\n    tag_300:\n      swap2\n      dup1\n      add(calldatasize, not(0x83))\n      slt\n      tag_74\n      jumpi\n      tag_303\n      tag_6\n      jump\t// in\n    tag_303:\n      sub(shl(0x40, 0x01), 0x01)\n      swap4\n      swap1\n      calldataload(0x0104)\n      dup6\n      dup2\n      gt\n      tag_114\n      jumpi\n      tag_306\n      swap1\n      calldatasize\n      swap1\n      dup7\n      add\n      tag_12\n      jump\t// in\n    tag_306:\n      swap1\n      swap4\n      calldataload(0x0124)\n      swap7\n      dup8\n      gt\n      tag_81\n      jumpi\n      tag_309\n        /* \"contracts/contracts/lib/PermitHash.sol\":4322:4416  abi.encode(typeHash, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline, witness) */\n      tag_212\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap7\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":1613:1622  signature */\n      tag_94\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap9\n      calldatasize\n      swap2\n      add\n      tag_12\n      jump\t// in\n    tag_309:\n      swap7\n      swap1\n      swap6\n      dup3\n      mload\n      swap1\n      tag_312\n      dup3\n      tag_3\n      jump\t// in\n    tag_312:\n      0x64\n      dup3\n      mstore\n      0x5065726d69745769746e6573735472616e7366657246726f6d28546f6b656e50\n      0x20\n      dup4\n      add\n      mstore\n      0x65726d697373696f6e73207065726d69747465642c6164647265737320737065\n      dup5\n      dup4\n      add\n      mstore\n      0x6e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c\n      0x60\n      dup4\n      add\n      mstore\n      shl(0xe2, 0x1a5b994b)\n      0x80\n      dup4\n      add\n      mstore\n      dup4\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":4133:4213  abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString) */\n      swap5\n      dup6\n      swap2\n      dup2\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      tag_313\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      0x20\n        /* \"contracts/contracts/lib/PermitHash.sol\":4133:4213  abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString) */\n      dup6\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      dup1\n      swap7\n      tag_32\n      jump\t// in\n    tag_313:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap2\n      dup3\n      calldatacopy\n      add\n      dup12\n      dup2\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":4133:4213  abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString) */\n      sub\n      swap4\n      tag_314\n      not(0x1f)\n      swap6\n      dup7\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_5\n      jump\t// in\n    tag_314:\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":4123:4214  keccak256(abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString)) */\n      swap1\n      keccak256\n        /* \"contracts/contracts/lib/PermitHash.sol\":4278:4294  permit.permitted */\n      swap3\n        /* \"contracts/contracts/lib/PermitHash.sol\":4256:4295  _hashTokenPermissions(permit.permitted) */\n      tag_315\n        /* \"contracts/contracts/lib/PermitHash.sol\":4278:4294  permit.permitted */\n      dup7\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":4256:4295  _hashTokenPermissions(permit.permitted) */\n      tag_31\n      jump\t// in\n    tag_315:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      0x20\n        /* \"contracts/contracts/lib/PermitHash.sol\":4377:4389  permit.nonce */\n      dup8\n      dup2\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":4391:4406  permit.deadline */\n      dup6\n      dup10\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload\n      swap6\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":4322:4416  abi.encode(typeHash, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline, witness) */\n      swap2\n      dup3\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap7\n      dup8\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      0x40\n      dup3\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":4365:4375  msg.sender */\n      caller\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      0x60\n      dup3\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      0x80\n      dup2\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap2\n      swap1\n      swap2\n      mstore\n      0xa0\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      dup2\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap4\n      swap1\n      swap4\n      mstore\n      calldataload(0xe4)\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      0xc0\n      dup5\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n      dup3\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      0xe0\n      dup2\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":4322:4416  abi.encode(typeHash, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline, witness) */\n      tag_98\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      jump\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n    tag_40:\n      pop\n      dup3\n      jumpi(tag_129, callvalue)\n      0x20\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_74\n      jumpi\n      dup2\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n      swap3\n      dup4\n      dup3\n      gt\n      tag_207\n      jumpi\n      calldatasize\n      0x23\n      dup4\n      add\n      slt\n      iszero\n      tag_207\n      jumpi\n      dup2\n      add\n      calldataload\n      swap3\n      dup4\n      gt\n      tag_77\n      jumpi\n      0x24\n      swap1\n      0x07\n      calldatasize\n      dup4\n      dup7\n      dup4\n      shl\n      dup5\n      add\n      add\n      gt\n      tag_114\n      jumpi\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3056:3069  uint256 i = 0 */\n      dup7\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3071:3081  i < length */\n    tag_329:\n      dup6\n      dup2\n      lt\n      tag_330\n      jumpi\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup8\n      dup1\n      return\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3083:3086  ++i */\n    tag_330:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup1\n      dup3\n      shl\n      dup4\n      add\n      swap1\n      0x80\n      not(0x23)\n      dup4\n      calldatasize\n      sub\n      add\n      slt\n      tag_84\n      jumpi\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3264:3284  transferDetail.token */\n      tag_334\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup9\n      dup8\n      0x01\n      swap5\n      0x60\n      dup4\n      mload\n      tag_335\n      dup2\n      tag_1\n      jump\t// in\n    tag_335:\n      tag_336\n      0x84\n      tag_337\n      dup14\n      dup7\n      add\n      tag_10\n      jump\t// in\n    tag_337:\n      swap5\n      dup6\n      dup5\n      mstore\n      tag_338\n      0x44\n      dup3\n      add\n      tag_10\n      jump\t// in\n    tag_338:\n      dup1\n      swap8\n      dup6\n      add\n      mstore\n      tag_339\n      0x64\n      dup3\n      add\n      tag_10\n      jump\t// in\n    tag_339:\n      dup1\n      swap9\n      dup6\n      add\n      mstore\n      add\n      tag_10\n      jump\t// in\n    tag_336:\n      swap2\n      dup3\n      swap2\n      add\n      mstore\n      dup7\n      dup1\n      0xa0\n      shl\n      sub\n      dup1\n      dup1\n      dup1\n      swap4\n      and\n      swap6\n      and\n      swap4\n      and\n      swap2\n      and\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3264:3284  transferDetail.token */\n      tag_25\n      jump\t// in\n    tag_334:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      add\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3056:3069  uint256 i = 0 */\n      jump(tag_329)\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n    tag_1:\n      0x80\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      or\n      tag_340\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_340:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_2:\n      0x60\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      or\n      tag_340\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_3:\n      0xa0\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      or\n      tag_340\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_4:\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      0xc0\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      or\n      tag_340\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_5:\n      swap1\n        /* \"contracts/contracts/lib/PermitHash.sol\":4133:4213  abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString) */\n      0x1f\n      dup1\n      not\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      or\n      tag_340\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_6:\n      calldataload(0xc4)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_350\n      jumpi\n      jump\t// out\n    tag_350:\n      0x00\n      dup1\n      revert\n    tag_7:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_350\n      jumpi\n      jump\t// out\n    tag_8:\n      calldataload(0x24)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_350\n      jumpi\n      jump\t// out\n    tag_9:\n      calldataload(0x44)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_350\n      jumpi\n      jump\t// out\n    tag_10:\n      calldataload\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_350\n      jumpi\n      jump\t// out\n    tag_11:\n      not(0x03)\n      add\n      swap1\n      0x80\n      dup3\n      slt\n      tag_350\n      jumpi\n      0x40\n      dup1\n      mload\n      swap1\n      tag_362\n      dup3\n      tag_2\n      jump\t// in\n    tag_362:\n      dup1\n      dup3\n      swap5\n      slt\n      tag_350\n      jumpi\n      dup1\n      mload\n      dup2\n      dup2\n      add\n      dup2\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      or\n      tag_340\n      jumpi\n      dup3\n      mstore\n      calldataload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_350\n      jumpi\n      dup2\n      mstore\n      calldataload(0x24)\n      0x20\n      dup3\n      add\n      mstore\n      dup3\n      mstore\n      calldataload(0x44)\n      0x20\n      dup4\n      add\n      mstore\n      calldataload(0x64)\n      swap2\n      add\n      mstore\n      jump\t// out\n    tag_12:\n      swap2\n      dup2\n      0x1f\n      dup5\n      add\n      slt\n      iszero\n      tag_350\n      jumpi\n      dup3\n      calldataload\n      swap2\n      sub(shl(0x40, 0x01), 0x01)\n      dup4\n      gt\n      tag_350\n      jumpi\n      0x20\n      dup4\n      dup2\n      dup7\n      add\n      swap6\n      add\n      add\n      gt\n      tag_350\n      jumpi\n      jump\t// out\n    tag_13:\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_340\n      jumpi\n      0x05\n      shl\n      0x20\n      add\n      swap1\n      jump\t// out\n    tag_14:\n      calldataload\n      swap1\n      0xffffffffffff\n      dup3\n      and\n      dup3\n      sub\n      tag_350\n      jumpi\n      jump\t// out\n    tag_16:\n      swap2\n      dup2\n      0x1f\n      dup5\n      add\n      slt\n      iszero\n      tag_350\n      jumpi\n      dup3\n      calldataload\n      swap2\n      sub(shl(0x40, 0x01), 0x01)\n      dup4\n      gt\n      tag_350\n      jumpi\n      0x20\n      dup1\n      dup6\n      add\n      swap5\n      dup5\n      0x06\n      shl\n      add\n      add\n      gt\n      tag_350\n      jumpi\n      jump\t// out\n    tag_17:\n      swap2\n      swap1\n      swap2\n      0x60\n      dup2\n      dup5\n      sub\n      slt\n      tag_350\n      jumpi\n      0x40\n      dup1\n      mload\n      swap2\n      tag_387\n      dup4\n      tag_2\n      jump\t// in\n    tag_387:\n      dup3\n      swap5\n      dup2\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n      swap1\n      dup2\n      dup2\n      gt\n      tag_350\n      jumpi\n      dup4\n      add\n      dup3\n      0x1f\n      dup3\n      add\n      slt\n      iszero\n      tag_350\n      jumpi\n      dup1\n      calldataload\n      tag_392\n      dup2\n      tag_13\n      jump\t// in\n    tag_392:\n      swap3\n      tag_393\n      dup8\n      mload\n      swap5\n      dup6\n      tag_5\n      jump\t// in\n    tag_393:\n      dup2\n      dup5\n      mstore\n      0x20\n      swap5\n      dup6\n      dup1\n      dup7\n      add\n      swap4\n      0x06\n      shl\n      dup6\n      add\n      add\n      swap4\n      dup2\n      dup6\n      gt\n      tag_350\n      jumpi\n      swap1\n      dup7\n      dup10\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      add\n      swap3\n    tag_396:\n      dup5\n      dup5\n      lt\n      tag_397\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup6\n      mstore\n      dup1\n      dup3\n      add\n      calldataload\n      swap1\n      dup6\n      add\n      mstore\n      add\n      calldataload\n      swap2\n      add\n      mstore\n      jump\t// out\n    tag_397:\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      swap8\n      dup5\n      dup4\n      sub\n      slt\n      tag_350\n      jumpi\n      dup9\n      mload\n      swap1\n      dup10\n      dup3\n      add\n      swap1\n      dup3\n      dup3\n      lt\n      dup6\n      dup4\n      gt\n      or\n      tag_401\n      jumpi\n      dup11\n      swap3\n      dup10\n      swap3\n      dup5\n      mstore\n      tag_403\n      dup8\n      tag_10\n      jump\t// in\n    tag_403:\n      dup2\n      mstore\n      dup3\n      dup8\n      add\n      calldataload\n      dup4\n      dup3\n      add\n      mstore\n      dup2\n      mstore\n      add\n      swap4\n      add\n      swap2\n      swap1\n      dup9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      jump(tag_396)\n    tag_401:\n      0x24\n      0x00\n      shl(0xe0, 0x4e487b71)\n      dup2\n      mstore\n      mstore(0x04, 0x41)\n      revert\n        /* \"contracts/contracts/lib/PermitHash.sol\":5345:5533  function _hashPermitDetails(IAllowanceTransfer.PermitDetails memory details) private pure returns (bytes32) {... */\n    tag_18:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload(0x40)\n        /* \"contracts/contracts/lib/PermitHash.sol\":5480:5525  abi.encode(_PERMIT_DETAILS_TYPEHASH, details) */\n      0x20\n      dup2\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap2\n        /* \"contracts/contracts/lib/PermitHash.sol\":289:376  keccak256(\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\") */\n      0x65626cad6cb96493bf6f5ebea28756c966f023ab9e8a83a7101849d5573b3678\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup4\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"contracts/contracts/lib/PermitHash.sol\":289:376  keccak256(\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\") */\n      dup1\n      dup3\n      mload\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      and\n      0x40\n        /* \"contracts/contracts/lib/PermitHash.sol\":289:376  keccak256(\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\") */\n      dup5\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":5480:5525  abi.encode(_PERMIT_DETAILS_TYPEHASH, details) */\n      0x20\n        /* \"contracts/contracts/lib/PermitHash.sol\":289:376  keccak256(\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\") */\n      dup3\n      add\n      mload\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      and\n        /* \"contracts/contracts/lib/PermitHash.sol\":289:376  keccak256(\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\") */\n      0x60\n      dup4\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":289:376  keccak256(\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\") */\n      0x60\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      0xffffffffffff\n        /* \"contracts/contracts/lib/PermitHash.sol\":289:376  keccak256(\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\") */\n      swap2\n      dup3\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      0x40\n        /* \"contracts/contracts/lib/PermitHash.sol\":289:376  keccak256(\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\") */\n      dup3\n      add\n      mload\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      and\n        /* \"contracts/contracts/lib/PermitHash.sol\":289:376  keccak256(\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\") */\n      0x80\n      dup6\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":289:376  keccak256(\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\") */\n      add\n      mload\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      and\n      0xa0\n        /* \"contracts/contracts/lib/PermitHash.sol\":289:376  keccak256(\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\") */\n      dup3\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n      0xa0\n        /* \"contracts/contracts/lib/PermitHash.sol\":5480:5525  abi.encode(_PERMIT_DETAILS_TYPEHASH, details) */\n      dup2\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":289:376  keccak256(\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\") */\n      0xc0\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup2\n      add\n      dup2\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      or\n      tag_340\n      jumpi\n      0x40\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":5470:5526  keccak256(abi.encode(_PERMIT_DETAILS_TYPEHASH, details)) */\n      swap1\n      keccak256\n        /* \"contracts/contracts/lib/PermitHash.sol\":5345:5533  function _hashPermitDetails(IAllowanceTransfer.PermitDetails memory details) private pure returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n    tag_19:\n      swap2\n      swap1\n      dup3\n      0x40\n      swap2\n      sub\n      slt\n      tag_350\n      jumpi\n      0x20\n      dup3\n      calldataload\n      swap3\n      add\n      calldataload\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":700:1809  function verify(bytes calldata signature, bytes32 hash, address claimedSigner) internal view {... */\n    tag_20:\n      0x00\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":863:888  claimedSigner.code.length */\n      dup5\n      extcodesize\n      tag_408\n      jumpi\n      pop\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":933:935  65 */\n      0x41\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":913:935  signature.length == 65 */\n      dup3\n      sub\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":933:935  65 */\n      tag_410\n      jumpi\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":964:1005  abi.decode(signature, (bytes32, bytes32)) */\n      tag_412\n      dup3\n      dup3\n      add\n      dup3\n      tag_19\n      jump\t// in\n    tag_412:\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":955:1005  (r, s) = abi.decode(signature, (bytes32, bytes32)) */\n      swap4\n      swap1\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      swap3\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1043:1045  64 */\n      0x40\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      lt\n      iszero\n      tag_413\n      jumpi\n      0x20\n      swap4\n      0x00\n      swap4\n      0xff\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1043:1045  64 */\n      0x40\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      0x80\n      swap6\n      add\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1033:1046  signature[64] */\n      calldataload\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      0xf8\n      shr\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":909:1399  if (signature.length == 65) {... */\n    tag_415:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload(0x40)\n      swap5\n      dup6\n      mstore\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      and\n      dup7\n      dup5\n      add\n      mstore\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      0x40\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      dup4\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      0x60\n      dup3\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1429:1453  ecrecover(hash, v, r, s) */\n      dup3\n      dup1\n      mstore\n      0x01\n      gas\n      staticcall\n      iszero\n      tag_416\n      jumpi\n      mload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap1\n      dup2\n      and\n      swap2\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1471:1491  signer == address(0) */\n      dup3\n      iszero\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1467:1518  if (signer == address(0)) revert InvalidSignature() */\n      tag_418\n      jumpi\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      and\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1536:1559  signer != claimedSigner */\n      sub\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1532:1583  if (signer != claimedSigner) revert InvalidSigner() */\n      tag_420\n      jumpi\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":700:1809  function verify(bytes calldata signature, bytes32 hash, address claimedSigner) internal view {... */\n      jump\t// out\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1532:1583  if (signer != claimedSigner) revert InvalidSigner() */\n    tag_420:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload(0x40)\n      shl(0xe2, 0x20578759)\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1568:1583  InvalidSigner() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1467:1518  if (signer == address(0)) revert InvalidSignature() */\n    tag_418:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload(0x40)\n      shl(0xe0, 0x8baa579f)\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1500:1518  InvalidSignature() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1429:1453  ecrecover(hash, v, r, s) */\n    tag_416:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n    tag_413:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      shl(0xe0, 0x4e487b71)\n      0x00\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      mstore\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":909:1399  if (signature.length == 65) {... */\n    tag_410:\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1092:1094  64 */\n      0x40\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1072:1094  signature.length == 64 */\n      dup3\n      sub\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1092:1094  64 */\n      tag_423\n      jumpi\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1180:1221  abi.decode(signature, (bytes32, bytes32)) */\n      tag_425\n      swap2\n      dup2\n      add\n      swap1\n      tag_19\n      jump\t// in\n    tag_425:\n      sub(shl(0xff, 0x01), 0x01)\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1243:1262  vs & UPPER_BIT_MASK */\n      dup2\n      and\n      swap3\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":626:692  0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff */\n      0xff\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap2\n      dup3\n      shr\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1312:1314  27 */\n      0x1b\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      add\n      swap2\n      dup3\n      gt\n      tag_426\n      jumpi\n      0x20\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1280:1314  v = uint8(uint256(vs >> 255)) + 27 */\n      swap4\n      0x00\n      swap4\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      0xff\n      0x80\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1280:1314  v = uint8(uint256(vs >> 255)) + 27 */\n      swap5\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":909:1399  if (signature.length == 65) {... */\n      jump(tag_415)\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n    tag_426:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      shl(0xe0, 0x4e487b71)\n      0x00\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      mstore\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1068:1399  if (signature.length == 64) {... */\n    tag_423:\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1092:1094  64 */\n      0x40\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload\n      shl(0xe0, 0x4be6321b)\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1360:1384  InvalidSignatureLength() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":859:1803  if (claimedSigner.code.length == 0) {... */\n    tag_408:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap2\n      dup1\n      swap4\n      swap5\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1634:1691  IERC1271(claimedSigner).isValidSignature(hash, signature) */\n      0x20\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap3\n      0x64\n      mload(0x40)\n      dup1\n      swap8\n      dup2\n      swap6\n      dup3\n      swap5\n      shl(0xe1, 0x0b135d3f)\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1634:1691  IERC1271(claimedSigner).isValidSignature(hash, signature) */\n      swap12\n      dup13\n      dup6\n      mstore\n      0x04\n      dup6\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n      0x40\n      0x24\n      dup6\n      add\n      mstore\n      dup2\n      0x44\n      dup6\n      add\n      mstore\n      dup5\n      dup5\n      add\n      calldatacopy\n      dup2\n      dup2\n      add\n      dup4\n      add\n      dup9\n      swap1\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":4133:4213  abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString) */\n      0x1f\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      add\n      not(0x1f)\n      and\n      dup2\n      add\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1634:1691  IERC1271(claimedSigner).isValidSignature(hash, signature) */\n      sub\n      add\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      and\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1634:1691  IERC1271(claimedSigner).isValidSignature(hash, signature) */\n      gas\n      staticcall\n      swap2\n      dup3\n      iszero\n      tag_428\n      jumpi\n      dup2\n      swap3\n      tag_430\n      jumpi\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":859:1803  if (claimedSigner.code.length == 0) {... */\n    tag_431:\n      pop\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      and\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1709:1757  magicValue != IERC1271.isValidSignature.selector */\n      sub\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1705:1792  if (magicValue != IERC1271.isValidSignature.selector) revert InvalidContractSignature() */\n      tag_432\n      jumpi\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":700:1809  function verify(bytes calldata signature, bytes32 hash, address claimedSigner) internal view {... */\n      jump\t// out\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1705:1792  if (magicValue != IERC1271.isValidSignature.selector) revert InvalidContractSignature() */\n    tag_432:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload(0x40)\n      shl(0xe2, 0x2c19a72f)\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1766:1792  InvalidContractSignature() */\n      dup2\n      mstore\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1634:1691  IERC1271(claimedSigner).isValidSignature(hash, signature) */\n      0x04\n      swap1\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1766:1792  InvalidContractSignature() */\n      revert\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1634:1691  IERC1271(claimedSigner).isValidSignature(hash, signature) */\n    tag_430:\n      swap1\n      swap2\n      pop\n      0x20\n      dup2\n      returndatasize\n      dup3\n      gt\n      tag_434\n      jumpi\n    tag_435:\n      dup2\n      tag_436\n      0x20\n      swap4\n      dup4\n      tag_5\n      jump\t// in\n    tag_436:\n      dup2\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      sub\n      slt\n      tag_72\n      jumpi\n      mload\n      swap1\n      not(sub(shl(0xe0, 0x01), 0x01))\n      dup3\n      and\n      dup3\n      sub\n      tag_186\n      jumpi\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1634:1691  IERC1271(claimedSigner).isValidSignature(hash, signature) */\n      pop\n      0x00\n      dup1\n      jump(tag_431)\n    tag_434:\n      returndatasize\n      swap2\n      pop\n      jump(tag_435)\n    tag_428:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      pop\n      mload(0x40)\n      swap1\n      returndatasize\n      swap1\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_21:\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      dup1\n      mload\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup3\n      lt\n      iszero\n      tag_413\n      jumpi\n      0x20\n      swap2\n      0x05\n      shl\n      add\n      add\n      swap1\n      jump\t// out\n    tag_22:\n      swap1\n      tag_443\n      dup3\n      tag_13\n      jump\t// in\n    tag_443:\n      tag_444\n      mload(0x40)\n      swap2\n      dup3\n      tag_5\n      jump\t// in\n    tag_444:\n      dup3\n      dup2\n      mstore\n      dup1\n        /* \"contracts/contracts/lib/PermitHash.sol\":4133:4213  abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString) */\n      swap3\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      tag_445\n        /* \"contracts/contracts/lib/PermitHash.sol\":4133:4213  abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString) */\n      not(0x1f)\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap2\n      tag_13\n      jump\t// in\n    tag_445:\n      add\n      swap1\n      0x20\n      calldatasize\n      swap2\n      add\n      calldatacopy\n      jump\t// out\n    tag_23:\n      not(0x00)\n      dup2\n      eq\n      tag_426\n      jumpi\n      0x01\n      add\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/lib/PermitHash.sol\":661:834  keccak256(... */\n    tag_24:\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      dup1\n      mload\n      0x20\n      dup1\n      swap3\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":661:834  keccak256(... */\n      swap2\n      0x00\n    tag_448:\n      dup3\n      dup2\n      lt\n      tag_449\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      swap1\n      jump\t// out\n    tag_449:\n      dup4\n      mload\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup6\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":661:834  keccak256(... */\n      swap4\n      dup2\n      add\n      swap4\n      swap3\n      dup2\n      add\n      swap3\n      0x01\n      add\n      jump(tag_448)\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3463:4200  function _transfer(address from, address to, uint160 amount, address token) private {... */\n    tag_25:\n      swap3\n      swap2\n      swap3\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      0x40\n      0x00\n      dup3\n      dup5\n      and\n      dup2\n      mstore\n      mstore(0x20, 0x01)\n      dup3\n      dup3\n      dup3\n      keccak256\n      swap7\n      and\n      swap6\n      dup7\n      dup3\n      mstore\n      0x20\n      mstore\n      dup2\n      dup2\n      keccak256\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3614:3624  msg.sender */\n      caller\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup3\n      mstore\n      0x20\n      mstore\n      keccak256\n      swap5\n      dup6\n      sload\n      swap6\n      0xffffffffffff\n      dup8\n      0xa0\n      shr\n      and\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3640:3655  block.timestamp */\n      dup1\n      timestamp\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3640:3676  block.timestamp > allowed.expiration */\n      gt\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3636:3721  if (block.timestamp > allowed.expiration) revert AllowanceExpired(allowed.expiration) */\n      tag_451\n      jumpi\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      pop\n      dup3\n      dup8\n      and\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3780:3810  maxAmount != type(uint160).max */\n      swap7\n      dup4\n      dup9\n      sub\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3776:4065  if (maxAmount != type(uint160).max) {... */\n      tag_453\n      jumpi\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3463:4200  function _transfer(address from, address to, uint160 amount, address token) private {... */\n    tag_454:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      pop\n      pop\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4146:4193  ERC20(token).safeTransferFrom(from, to, amount) */\n      tag_455\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap6\n      pop\n      and\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4146:4193  ERC20(token).safeTransferFrom(from, to, amount) */\n      swap3\n      tag_37\n      jump\t// in\n    tag_455:\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3463:4200  function _transfer(address from, address to, uint160 amount, address token) private {... */\n      jump\t// out\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3776:4065  if (maxAmount != type(uint160).max) {... */\n    tag_453:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup8\n      dup5\n      dup5\n      and\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3830:3848  amount > maxAmount */\n      gt\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3826:4055  if (amount > maxAmount) {... */\n      0x00\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3830:3848  amount > maxAmount */\n      eq\n      tag_456\n      jumpi\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload(0x40)\n      shl(0xe0, 0xf96fb071)\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3875:3907  InsufficientAllowance(maxAmount) */\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup10\n      swap1\n      mstore\n      0x24\n      swap1\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3875:3907  InsufficientAllowance(maxAmount) */\n      revert\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3826:4055  if (amount > maxAmount) {... */\n    tag_456:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup4\n      dup4\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":4146:4193  ERC20(token).safeTransferFrom(from, to, amount) */\n      tag_455\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap10\n      sub\n      and\n      swap1\n      shl(0xa0, 0xffffffffffffffffffffffff)\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3776:4065  if (maxAmount != type(uint160).max) {... */\n      0x00\n      dup1\n      jump(tag_454)\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3636:3721  if (block.timestamp > allowed.expiration) revert AllowanceExpired(allowed.expiration) */\n    tag_451:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      0x24\n      swap1\n      mload(0x40)\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3685:3721  AllowanceExpired(allowed.expiration) */\n      swap1\n      shl(0xe1, 0x6c0d9797)\n      dup3\n      mstore\n      0x04\n      dup3\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":3685:3721  AllowanceExpired(allowed.expiration) */\n      revert\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n    tag_26:\n      swap2\n      swap1\n      dup2\n      lt\n      iszero\n      tag_413\n      jumpi\n      0x06\n      shl\n      add\n      swap1\n      jump\t// out\n    tag_27:\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_350\n      jumpi\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5662:6192  function _updateApproval(PermitDetails memory details, address owner, address spender) private {... */\n    tag_28:\n      swap1\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      0xffffffffffff\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5782:5795  details.nonce */\n      swap1\n      dup2\n      0x60\n      dup5\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload\n      and\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap1\n      dup2\n      dup6\n      mload\n      and\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5861:5875  details.amount */\n      swap5\n      dup3\n      0x20\n      dup3\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload\n      and\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5905:5923  details.expiration */\n      swap3\n      dup1\n      dup7\n      0x40\n      dup1\n      swap5\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload\n      and\n      swap6\n      and\n      swap6\n      0x00\n      swap2\n      dup8\n      dup4\n      mstore\n      0x01\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5861:5875  details.amount */\n      0x20\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n      dup4\n      dup4\n      keccak256\n      dup10\n      dup5\n      mstore\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5861:5875  details.amount */\n      0x20\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n      dup4\n      dup4\n      keccak256\n      swap10\n      and\n      swap9\n      dup10\n      dup4\n      mstore\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5861:5875  details.amount */\n      0x20\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n      dup3\n      dup3\n      keccak256\n      swap2\n      dup5\n      dup4\n      sload\n      0xd0\n      shr\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":6014:6036  allowed.nonce != nonce */\n      sub\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":6010:6059  if (allowed.nonce != nonce) revert InvalidNonce() */\n      tag_462\n      jumpi\n        /* \"contracts/contracts/lib/Allowance.sol\":843:922  expiration == BLOCK_TIMESTAMP_EXPIRATION ? uint48(block.timestamp) : expiration */\n      swap2\n      dup6\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":6129:6185  Permit(owner, token, spender, amount, expiration, nonce) */\n      tag_464\n        /* \"contracts/contracts/lib/Allowance.sol\":843:922  expiration == BLOCK_TIMESTAMP_EXPIRATION ? uint48(block.timestamp) : expiration */\n      swap5\n      swap3\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":6129:6185  Permit(owner, token, spender, amount, expiration, nonce) */\n      0xc6a377bfc4eb120024a8ac08eef205be16b817020812c73223e81d1bdb9708ec\n        /* \"contracts/contracts/lib/Allowance.sol\":843:922  expiration == BLOCK_TIMESTAMP_EXPIRATION ? uint48(block.timestamp) : expiration */\n      swap9\n      swap8\n      swap7\n      swap5\n        /* \"contracts/contracts/lib/Allowance.sol\":843:883  expiration == BLOCK_TIMESTAMP_EXPIRATION */\n      pop\n      dup8\n      iszero\n        /* \"contracts/contracts/lib/Allowance.sol\":843:922  expiration == BLOCK_TIMESTAMP_EXPIRATION ? uint48(block.timestamp) : expiration */\n      0x00\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      eq\n      tag_465\n      jumpi\n        /* \"contracts/contracts/lib/Allowance.sol\":893:908  block.timestamp */\n      timestamp\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      and\n        /* \"contracts/contracts/lib/Allowance.sol\":843:922  expiration == BLOCK_TIMESTAMP_EXPIRATION ? uint48(block.timestamp) : expiration */\n    tag_467:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      0x01\n      dup6\n      add\n      0xd0\n      shl\n      not(sub(shl(0xd0, 0x01), 0x01))\n      and\n      0xa0\n      swap2\n      swap1\n      swap2\n      shl\n      shl(0xa0, 0xffffffffffff)\n      and\n        /* \"contracts/contracts/lib/Allowance.sol\":1834:1886  (uint256(nonce) << 208) | uint256(expiration) << 160 */\n      or\n        /* \"contracts/contracts/lib/Allowance.sol\":1834:1895  (uint256(nonce) << 208) | uint256(expiration) << 160 | amount */\n      or\n        /* \"contracts/contracts/lib/Allowance.sol\":1001:1060  assembly {... */\n      swap1\n      sstore\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap4\n      and\n      dup4\n      mstore\n      0xffffffffffff\n      swap4\n      dup5\n      and\n      0x20\n      dup5\n      add\n      mstore\n      swap1\n      swap3\n      and\n      0x40\n      dup3\n      add\n      mstore\n      swap1\n      dup2\n      swap1\n      0x60\n      dup3\n      add\n      swap1\n      jump\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":6129:6185  Permit(owner, token, spender, amount, expiration, nonce) */\n    tag_464:\n      sub\n      swap1\n      log4\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":5662:6192  function _updateApproval(PermitDetails memory details, address owner, address spender) private {... */\n      jump\t// out\n        /* \"contracts/contracts/lib/Allowance.sol\":843:922  expiration == BLOCK_TIMESTAMP_EXPIRATION ? uint48(block.timestamp) : expiration */\n    tag_465:\n      pop\n      dup7\n      jump(tag_467)\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":6010:6059  if (allowed.nonce != nonce) revert InvalidNonce() */\n    tag_462:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup4\n      mload\n      shl(0xe1, 0x3ab3447f)\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":6045:6059  InvalidNonce() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"contracts/contracts/permit2/EIP712.sol\":1186:1411  function DOMAIN_SEPARATOR() public view override returns (bytes32) {... */\n    tag_29:\n        /* \"contracts/contracts/permit2/EIP712.sol\":1270:1283  block.chainid */\n      chainid\n        /* \"contracts/contracts/permit2/EIP712.sol\":1287:1303  _CACHED_CHAIN_ID */\n      immutable(\"0x3ab4fb69c8e122442af87ae588015f836e7cde3029bbb6dab1983bc840231d63\")\n        /* \"contracts/contracts/permit2/EIP712.sol\":1270:1303  block.chainid == _CACHED_CHAIN_ID */\n      sub\n        /* \"contracts/contracts/permit2/EIP712.sol\":1287:1303  _CACHED_CHAIN_ID */\n      tag_468\n      jumpi\n        /* \"contracts/contracts/permit2/EIP712.sol\":1318:1342  _CACHED_DOMAIN_SEPARATOR */\n      immutable(\"0x4f4ac30ff8bfcef8cd1068d1427faf7fb52fa3a1610b1f430e1f69a91ebb9673\")\n        /* \"contracts/contracts/permit2/EIP712.sol\":1186:1411  function DOMAIN_SEPARATOR() public view override returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/permit2/EIP712.sol\":1270:1404  block.chainid == _CACHED_CHAIN_ID... */\n    tag_468:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload(0x40)\n        /* \"contracts/contracts/permit2/EIP712.sol\":1632:1692  abi.encode(typeHash, nameHash, block.chainid, address(this)) */\n      0x20\n      dup2\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap1\n        /* \"contracts/contracts/permit2/EIP712.sol\":789:869  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup3\n      mstore\n        /* \"contracts/contracts/permit2/EIP712.sol\":717:737  keccak256(\"Permit2\") */\n      0x9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      0x40\n      dup3\n      add\n      mstore\n        /* \"contracts/contracts/permit2/EIP712.sol\":1270:1283  block.chainid */\n      chainid\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      0x60\n      dup3\n      add\n      mstore\n        /* \"contracts/contracts/permit2/EIP712.sol\":1686:1690  this */\n      address\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      0x80\n      dup3\n      add\n      mstore\n      0x80\n        /* \"contracts/contracts/permit2/EIP712.sol\":1632:1692  abi.encode(typeHash, nameHash, block.chainid, address(this)) */\n      dup2\n      mstore\n      tag_471\n      dup2\n      tag_3\n      jump\t// in\n    tag_471:\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      mload\n        /* \"contracts/contracts/permit2/EIP712.sol\":1622:1693  keccak256(abi.encode(typeHash, nameHash, block.chainid, address(this))) */\n      swap1\n      keccak256\n        /* \"contracts/contracts/permit2/EIP712.sol\":1186:1411  function DOMAIN_SEPARATOR() public view override returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/permit2/EIP712.sol\":1757:1924  function _hashTypedData(bytes32 dataHash) internal view returns (bytes32) {... */\n    tag_30:\n        /* \"contracts/contracts/permit2/EIP712.sol\":1887:1905  DOMAIN_SEPARATOR() */\n      tag_472\n      tag_29\n      jump\t// in\n    tag_472:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap1\n      mload(0x40)\n        /* \"contracts/contracts/permit2/EIP712.sol\":1858:1916  abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR(), dataHash) */\n      swap1\n      0x20\n      dup3\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap3\n      shl(0xf0, 0x1901)\n      dup5\n      mstore\n      0x22\n      dup4\n      add\n      mstore\n      0x42\n      dup3\n      add\n      mstore\n      0x42\n        /* \"contracts/contracts/permit2/EIP712.sol\":1858:1916  abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR(), dataHash) */\n      dup2\n      mstore\n      tag_471\n      dup2\n      tag_1\n      jump\t// in\n        /* \"contracts/contracts/lib/PermitHash.sol\":5539:5768  function _hashTokenPermissions(ISignatureTransfer.TokenPermissions memory permitted)... */\n    tag_31:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload(0x40)\n        /* \"contracts/contracts/lib/PermitHash.sol\":5710:5760  abi.encode(_TOKEN_PERMISSIONS_TYPEHASH, permitted) */\n      0x20\n      dup1\n      dup3\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap3\n        /* \"contracts/contracts/lib/PermitHash.sol\":895:954  keccak256(\"TokenPermissions(address token,uint256 amount)\") */\n      0x618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a1\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup5\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"contracts/contracts/lib/PermitHash.sol\":895:954  keccak256(\"TokenPermissions(address token,uint256 amount)\") */\n      dup2\n      mload\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      and\n      0x40\n        /* \"contracts/contracts/lib/PermitHash.sol\":895:954  keccak256(\"TokenPermissions(address token,uint256 amount)\") */\n      dup5\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":895:954  keccak256(\"TokenPermissions(address token,uint256 amount)\") */\n      add\n      mload\n      0x60\n      dup3\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":895:954  keccak256(\"TokenPermissions(address token,uint256 amount)\") */\n      0x60\n        /* \"contracts/contracts/lib/PermitHash.sol\":5710:5760  abi.encode(_TOKEN_PERMISSIONS_TYPEHASH, permitted) */\n      dup2\n      mstore\n      tag_471\n      dup2\n      tag_1\n      jump\t// in\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n    tag_32:\n      swap1\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      dup2\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      swap2\n      0x00\n    tag_475:\n      dup4\n      dup2\n      lt\n      tag_476\n      jumpi\n      pop\n      pop\n      add\n      0x00\n      dup2\n      mstore\n      swap1\n      jump\t// out\n    tag_476:\n      dup1\n      0x20\n      dup1\n      swap3\n      dup5\n      add\n      add\n      mload\n      dup2\n      dup6\n      add\n      mstore\n      add\n      jump(tag_475)\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2066:2770  function _permitTransferFrom(... */\n    tag_34:\n      swap2\n      swap3\n      swap1\n      swap4\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2329:2360  transferDetails.requestedAmount */\n      0xa4\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      calldataload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2393:2408  permit.deadline */\n      swap4\n      0x40\n      dup5\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2375:2390  block.timestamp */\n      dup1\n      timestamp\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2375:2408  block.timestamp > permit.deadline */\n      gt\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2371:2450  if (block.timestamp > permit.deadline) revert SignatureExpired(permit.deadline) */\n      tag_478\n      jumpi\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2482:2498  permit.permitted */\n      pop\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2329:2360  transferDetails.requestedAmount */\n      0x20\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2482:2498  permit.permitted */\n      dup5\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2482:2505  permit.permitted.amount */\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2464:2505  requestedAmount > permit.permitted.amount */\n      dup1\n      dup7\n      gt\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2460:2552  if (requestedAmount > permit.permitted.amount) revert InvalidAmount(permit.permitted.amount) */\n      tag_480\n      jumpi\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2589:2601  permit.nonce */\n      pop\n      swap2\n      dup6\n      swap2\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2630:2654  _hashTypedData(dataHash) */\n      tag_239\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2656:2661  owner */\n      tag_483\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2589:2601  permit.nonce */\n      swap5\n      tag_484\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2329:2360  transferDetails.requestedAmount */\n      0x20\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2589:2601  permit.nonce */\n      dup9\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2589:2601  permit.nonce */\n      dup7\n      tag_36\n      jump\t// in\n    tag_484:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2630:2654  _hashTypedData(dataHash) */\n      tag_30\n      jump\t// in\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2656:2661  owner */\n    tag_483:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2679:2695  permit.permitted */\n      mload\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap3\n      calldataload(0x84)\n      swap2\n      dup3\n      and\n      dup3\n      sub\n      tag_350\n      jumpi\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2747:2762  requestedAmount */\n      tag_455\n      swap4\n      tag_37\n      jump\t// in\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2460:2552  if (requestedAmount > permit.permitted.amount) revert InvalidAmount(permit.permitted.amount) */\n    tag_480:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      0x24\n      swap1\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2393:2408  permit.deadline */\n      0x40\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2514:2552  InvalidAmount(permit.permitted.amount) */\n      swap1\n      shl(0xe0, 0x3728b83d)\n      dup3\n      mstore\n      0x04\n      dup3\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2514:2552  InvalidAmount(permit.permitted.amount) */\n      revert\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2371:2450  if (block.timestamp > permit.deadline) revert SignatureExpired(permit.deadline) */\n    tag_478:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      0x24\n      swap1\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2393:2408  permit.deadline */\n      0x40\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2203:2244  SignatureExpired(permitBatch.sigDeadline) */\n      swap1\n      shl(0xe0, 0xcd21db4f)\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2417:2450  SignatureExpired(permit.deadline) */\n      dup3\n      mstore\n      0x04\n      dup3\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2417:2450  SignatureExpired(permit.deadline) */\n      revert\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":3928:5122  function _permitTransferFrom(... */\n    tag_35:\n      swap6\n      swap1\n      swap4\n      swap6\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4195:4211  permit.permitted */\n      dup1\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4251:4266  permit.deadline */\n      swap6\n      0x40\n      swap3\n      dup4\n      dup4\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4233:4248  block.timestamp */\n      dup1\n      timestamp\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4233:4266  block.timestamp > permit.deadline */\n      gt\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4229:4308  if (block.timestamp > permit.deadline) revert SignatureExpired(permit.deadline) */\n      tag_488\n      jumpi\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4322:4360  numPermitted != transferDetails.length */\n      pop\n      dup5\n      dup9\n      sub\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4318:4385  if (numPermitted != transferDetails.length) revert LengthMismatch() */\n      tag_490\n      jumpi\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4488:4493  owner */\n      tag_492\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4422:4434  permit.nonce */\n      swap2\n      dup7\n      swap2\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4462:4486  _hashTypedData(dataHash) */\n      tag_239\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4422:4434  permit.nonce */\n      0x20\n      swap12\n      tag_484\n      dup14\n      dup9\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4422:4434  permit.nonce */\n      dup7\n      tag_36\n      jump\t// in\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4488:4493  owner */\n    tag_492:\n      0x00\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4549:4565  i < numPermitted */\n    tag_495:\n      dup7\n      dup2\n      lt\n      tag_496\n      jumpi\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":3928:5122  function _permitTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4567:4570  ++i */\n    tag_496:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4626:4645  permit.permitted[i] */\n      tag_498\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4626:4642  permit.permitted */\n      dup2\n      dup4\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4626:4645  permit.permitted[i] */\n      tag_21\n      jump\t// in\n    tag_498:\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4689:4707  transferDetails[i] */\n      dup9\n      tag_499\n      dup4\n      dup8\n      dup11\n      tag_26\n      jump\t// in\n    tag_499:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4689:4723  transferDetails[i].requestedAmount */\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      calldataload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4764:4780  permitted.amount */\n      swap1\n      dup10\n      dup2\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4746:4780  requestedAmount > permitted.amount */\n      dup1\n      dup4\n      gt\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4742:4820  if (requestedAmount > permitted.amount) revert InvalidAmount(permitted.amount) */\n      tag_500\n      jumpi\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4843:4863  requestedAmount != 0 */\n      pop\n      swap2\n      dup2\n      dup9\n      dup9\n      dup9\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      0x01\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4843:4863  requestedAmount != 0 */\n      swap7\n      dup6\n      swap7\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4839:5092  if (requestedAmount != 0) {... */\n      tag_502\n      jumpi\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4567:4570  ++i */\n    tag_503:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4534:4547  uint256 i = 0 */\n      jump(tag_495)\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4839:5092  if (requestedAmount != 0) {... */\n    tag_502:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":5057:5072  requestedAmount */\n      tag_504\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap6\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":5034:5055  transferDetails[i].to */\n      tag_505\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap3\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":5034:5052  transferDetails[i] */\n      tag_140\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      swap3\n      dup11\n      dup1\n      0xa0\n      shl\n      sub\n      swap1\n      mload\n      and\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":5034:5052  transferDetails[i] */\n      swap6\n      tag_26\n      jump\t// in\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":5034:5055  transferDetails[i].to */\n    tag_505:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":5057:5072  requestedAmount */\n      swap2\n      tag_37\n      jump\t// in\n    tag_504:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4839:5092  if (requestedAmount != 0) {... */\n      dup1\n      0x00\n      dup9\n      dup9\n      dup9\n      dup4\n      jump(tag_503)\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4742:4820  if (requestedAmount > permitted.amount) revert InvalidAmount(permitted.amount) */\n    tag_500:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      0x24\n      swap1\n      dup7\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2514:2552  InvalidAmount(permit.permitted.amount) */\n      swap1\n      shl(0xe0, 0x3728b83d)\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4789:4820  InvalidAmount(permitted.amount) */\n      dup3\n      mstore\n      0x04\n      dup3\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4789:4820  InvalidAmount(permitted.amount) */\n      revert\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4318:4385  if (numPermitted != transferDetails.length) revert LengthMismatch() */\n    tag_490:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup4\n      mload\n      not(sub(shl(0xe3, 0x1398b9), 0x01))\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4369:4385  LengthMismatch() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4229:4308  if (block.timestamp > permit.deadline) revert SignatureExpired(permit.deadline) */\n    tag_488:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      0x24\n      swap1\n      dup6\n      mload\n        /* \"contracts/contracts/permit2/AllowanceTransfer.sol\":2203:2244  SignatureExpired(permitBatch.sigDeadline) */\n      swap1\n      shl(0xe0, 0xcd21db4f)\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4275:4308  SignatureExpired(permit.deadline) */\n      dup3\n      mstore\n      0x04\n      dup3\n      add\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mstore\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4275:4308  SignatureExpired(permit.deadline) */\n      revert\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":6241:6534  function _useUnorderedNonce(address from, uint256 nonce) internal {... */\n    tag_36:\n      swap1\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":6399:6400  1 */\n      0x01\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      0xff\n      dup3\n      and\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      shl\n      swap2\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n      keccak256(0x00, 0x40)\n      swap1\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":5983:5984  8 */\n      0x08\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      shr\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":6438:6471  nonceBitmap[from][wordPos] ^= bit */\n      xor\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup1\n      swap2\n      sstore\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":6486:6499  flipped & bit */\n      and\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":6486:6504  flipped & bit == 0 */\n      iszero\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":6482:6527  if (flipped & bit == 0) revert InvalidNonce() */\n      tag_507\n      jumpi\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":6241:6534  function _useUnorderedNonce(address from, uint256 nonce) internal {... */\n      jump\t// out\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":6482:6527  if (flipped & bit == 0) revert InvalidNonce() */\n    tag_507:\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload(0x40)\n      shl(0xe1, 0x3ab3447f)\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":6513:6527  InvalidNonce() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1328:3110  function safeTransferFrom(... */\n    tag_37:\n      swap2\n      0x00\n      dup1\n      swap4\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1532:3053  assembly {... */\n      0x20\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1328:3110  function safeTransferFrom(... */\n      swap6\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1532:3053  assembly {... */\n      0x64\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1328:3110  function safeTransferFrom(... */\n      swap5\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1532:3053  assembly {... */\n      mload(0x40)\n      swap5\n      shl(0xe0, 0x23b872dd)\n      dup7\n      mstore\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1532:3053  assembly {... */\n      dup1\n      swap3\n      and\n      0x04\n      dup8\n      add\n      mstore\n      and\n      0x24\n      dup6\n      add\n      mstore\n      0x44\n      dup5\n      add\n      mstore\n      gas\n      call\n      iszero(returndatasize)\n      gt(returndatasize, 0x1f)\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      0x01\n      0x00\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1532:3053  assembly {... */\n      mload\n      eq\n      and\n      or\n      and\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      iszero\n      tag_509\n      jumpi\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1328:3110  function safeTransferFrom(... */\n      jump\t// out\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n    tag_509:\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1532:3053  assembly {... */\n      0x40\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1532:3053  assembly {... */\n      0x20\n      0x04\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup3\n      add\n      mstore\n      0x14\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1532:3053  assembly {... */\n      0x24\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup3\n      add\n      mstore\n      shl(0x62, 0x1514905394d1915497d19493d357d19052531151)\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1532:3053  assembly {... */\n      0x44\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      dup3\n      add\n      mstore\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1532:3053  assembly {... */\n      0x64\n      swap1\n        /* \"contracts/contracts/permit2/Permit2.sol\":385:537  contract Permit2 is SignatureTransfer, AllowanceTransfer {... */\n      revert\n\n    auxdata: 0xa26469706673582212202b49b0ab3fbf91560017c9cd7c1dd1a4ec7ac6c8afb6eb3a4ce5998949280af764736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60c0346100b9574660a052602081017f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681527f9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a60408301524660608301523060808301526080825260a082019180831060018060401b038411176100a55782604052519020608052611b5590816100be823960805181611789015260a051816117630152f35b634e487b7160e01b5f52604160045260245ffd5b5f80fdfe60406080815260049081361015610014575f80fd5b5f90813560e01c80630d58b1db14610e84578063137c29fe14610d015780632a2d80d114610ab95780632b67b5701461094357806330f28b7a146108805780633644e5151461085d57806336c78516146108135780633ff9dcb1146107b15780634fe02b441461077257806365d9723c1461066257806387517c4514610581578063927da105146104f5578063cc53287f14610414578063edd9444b146102e85763fe8ec1a7146100c3575f80fd5b346102e45760c03660031901126102e4576001600160401b0383358181116102e0576100f29036908601611167565b6024358281116102dc576101099036908701611137565b61011161104b565b916084358581116102d8576101299036908a016110e0565b98909560a4359081116102d457610142913691016110e0565b96909581519061015182610fae565b606b82527f5065726d697442617463685769746e6573735472616e7366657246726f6d285460208301527f6f6b656e5065726d697373696f6e735b5d207065726d69747465642c61646472838301527f657373207370656e6465722c75696e74323536206e6f6e63652c75696e74323560608301526a0d88191958591b1a5b994b60aa1b608083015282519a8b91816101ee60208501809661189b565b918237018a81520399610209601f199b8c8101835282610fe4565b5190209085515161021981611505565b908a5b8181106102a75750506102a4999a61029b91835161024e81610242602082018095611545565b03848101835282610fe4565b519020602089810151858b015195519182019687526040820192909252336060820152608081019190915260a081019390935260643560c08401528260e081015b03908101835282610fe4565b51902093611957565b80f35b806102bf6102b96102cf938c516114f1565b5161184c565b6102c982866114f1565b52611537565b61021c565b8880fd5b8780fd5b8480fd5b8380fd5b5080fd5b5091346102e45760803660031901126102e4576001600160401b039080358281116102e05761031a9036908301611167565b6024358381116102dc576103319036908401611137565b93909261033c61104b565b9160643590811161041057610353913691016110e0565b9490938351519761036389611505565b98885b8181106103ee5750506102a49798815161039681610388602082018095611545565b03601f198101835282610fe4565b5190206020860151828701519083519260208401947ffcf35f5ac6a2c28868dc44c302166470266239195f02b0ee408334829333b7668652840152336060840152608083015260a082015260a0815261029b81610fc9565b808b6102c9826104056102b961040b968d516114f1565b926114f1565b610366565b8680fd5b5082346104f157602090816003193601126102e0578035906001600160401b0382116102dc5761044691369101611137565b929091845b848110610456578580f35b8061046c6104676001938888611633565b611643565b6104818461047b848a8a611633565b01611643565b33895283855285892091848060a01b0380911692838b528652868a20911690818a5285528589206bffffffffffffffffffffffff60a01b81541690558551918252848201527f89b1add15eff56b3dfe299ad94e01f2b52fbcb80ae1a3baea6ae8c04cb2b98a4853392a20161044b565b8280fd5b50346102e45760603660031901126102e45761057d8161051361101f565b9361051c611035565b61052461104b565b6001600160a01b03968716835260016020908152848420928816845291825283832090871683528152919020549251938316845260a083901c65ffffffffffff169084015260d09190911c604083015281906060820190565b0390f35b50346102e45760803660031901126102e45761059b61101f565b906105a4611035565b916105ad61104b565b906064359265ffffffffffff93848116908181036102d8577fda9fa7c1b00402c17d0161b249b1ab8bbec047c5a52207b9c112deffd817036b9333895260016020528389209660018060a01b0380921697888b5260205281858b20991698898b52602052848a209284155f1461065a57504216905b82546001600160d01b03191660a09290921b65ffffffffffff60a01b169190911795169485179055815193845260208401523392a480f35b905090610622565b5082346104f15760603660031901126104f15761067d61101f565b90610686611035565b9265ffffffffffff60443581811693908481036102d857338852602091600183528489209660018060a01b0380911697888b528452858a20981697888a5283528489205460d01c93848711156107635761ffff90858403161161075557503380895260018352848920878a528352848920888a52835284892080546001600160d01b031660d09390931b6001600160d01b03191692909217909155835194855290840191909152917f55eb90d810e1700b35a8e7e25395ff7f2b2259abd7415ca2284dfb1c246418f39190a480f35b8451631269ad1360e11b8152fd5b508451633ab3447f60e11b8152fd5b50346102e457806003193601126102e45760209181906001600160a01b0361079861101f565b1681528084528181206024358252845220549051908152f35b5082346104f157816003193601126104f1577f3704902f963766a4e561bbaab6e6cdc1b1dd12f6e9e99648da8843b3f46b918d90359160243533855284602052818520848652602052818520818154179055815193845260208401523392a280f35b823461085a57608036600319011261085a5761082d61101f565b610835611035565b61083d61104b565b606435916001600160a01b03831683036102dc576102a493611571565b80fd5b50346102e457816003193601126102e457602090610879611760565b9051908152f35b508290346104f1576101003660031901126104f15761089e36611075565b90806083193601126102e0576108b2611005565b9160e4356001600160401b03811161093f576102a4946108d4913691016110e0565b9390926108e1835161184c565b6020840151828501519083519260208401947f939c21a48a8dbe3a9a2404a1d46691e4d39f6583d6ec6b35714604c986d801068652840152336060840152608083015260a082015260a0815261093681610fc9565b519020916118c4565b8580fd5b5091346102e4576101003660031901126102e45761095f61101f565b366023190160c081126102e057608085519161097a83610f93565b126102e05784519061098b82610f64565b6001600160a01b03916024358381168103610410578152604435838116810361041057602082015265ffffffffffff60643581811681036102d857888301526084359081168103610410576060820152815260a43593828516850361093f576020820194855260c4359087830182815260e4356001600160401b0381116102d457610a1990369084016110e0565b929093804211610aa3575050918591610a936102a4999a610a9995610a3e885161125f565b90898c511690519083519260208401947ff3841cd1ff0085026a6327b620b67997ce40f282c88a8e905a7a5626e310f3d086528401526060830152608082015260808152610a8b81610fae565b51902061181b565b916112fc565b5192511691611657565b8a5163cd21db4f60e01b81529182015260249150fd5b5091346102e45760606003199181833601126102e057610ad761101f565b92602435916001600160401b0391828411610410578490843603011261093f57865196610b0388610f93565b838201358381116102d8578401366023820112156102d8578281013590610b298261110d565b90610b3684519283610fe4565b82825260209260248484019160071b83010191368311610cfd57602401905b828210610ca15750505089526044610b6f60248701611061565b95828b01968752013593828a0190858252604435908111610c9d57610b9790369086016110e0565b949095804211610c875750508998995151610bb181611505565b908b5b818110610c6457505092889492610a9392610c3197958351610bdd816103888682018095611545565b5190209060018060a01b039a8b8b51169151928551948501957faf1b0d30d2cab0380e68f0689007e3254993c596f2fdd0aaa7f4d04f794408638752850152830152608082015260808152610a8b81610fae565b51169082515192845b848110610c45578580f35b80610c5e8585610c5860019587516114f1565b51611657565b01610c3a565b806102bf610c798e9f9e93610c7f94516114f1565b5161125f565b9b9a9b610bb4565b845163cd21db4f60e01b81529182015260249150fd5b8980fd5b608082360312610cfd57846080918751610cba81610f64565b610cc385611061565b8152610cd0838601611061565b83820152610cdf898601611124565b89820152610cee8d8601611124565b8d820152815201910190610b55565b8b80fd5b5082346104f1576101403660031901126104f157610d1e36611075565b91806083193601126102e057610d32611005565b6001600160401b0393906101043585811161041057610d5490369086016110e0565b9093610124359687116102d857610d74610936966102a4983691016110e0565b969095825190610d8382610fae565b606482527f5065726d69745769746e6573735472616e7366657246726f6d28546f6b656e5060208301527f65726d697373696f6e73207065726d69747465642c6164647265737320737065848301527f6e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c6060830152631a5b994b60e21b6080830152835194859181610e1960208501809661189b565b918237018b81520393610e34601f1995868101835282610fe4565b51902092610e42865161184c565b6020878101518589015195519182019687526040820192909252336060820152608081019190915260a081019390935260e43560c08401528260e0810161028f565b5082346104f1576020806003193601126102e05781356001600160401b039283821161093f573660238301121561093f578101359283116102dc576024906007368386831b8401011161041057865b858110610ede578780f35b80821b830190608060231983360301126102d457610f5e888760019460608351610f0781610f64565b610f436084610f178d8601611061565b94858452610f2760448201611061565b8097850152610f3860648201611061565b809885015201611061565b9182910152868060a01b038080809316951693169116611571565b01610ed3565b608081019081106001600160401b03821117610f7f57604052565b634e487b7160e01b5f52604160045260245ffd5b606081019081106001600160401b03821117610f7f57604052565b60a081019081106001600160401b03821117610f7f57604052565b60c081019081106001600160401b03821117610f7f57604052565b90601f801991011681019081106001600160401b03821117610f7f57604052565b60c435906001600160a01b038216820361101b57565b5f80fd5b600435906001600160a01b038216820361101b57565b602435906001600160a01b038216820361101b57565b604435906001600160a01b038216820361101b57565b35906001600160a01b038216820361101b57565b60031901906080821261101b57604080519061109082610f93565b8082941261101b5780518181018181106001600160401b03821117610f7f5782526004356001600160a01b038116810361101b578152602435602082015282526044356020830152606435910152565b9181601f8401121561101b578235916001600160401b03831161101b576020838186019501011161101b57565b6001600160401b038111610f7f5760051b60200190565b359065ffffffffffff8216820361101b57565b9181601f8401121561101b578235916001600160401b03831161101b576020808501948460061b01011161101b57565b91909160608184031261101b57604080519161118283610f93565b829481356001600160401b039081811161101b57830182601f8201121561101b5780356111ae8161110d565b926111bb87519485610fe4565b818452602094858086019360061b8501019381851161101b579086899897969594939201925b8484106111fe575050505050855280820135908501520135910152565b90919293949596978483031261101b57885190898201908282108583111761124b578a928992845261122f87611061565b81528287013583820152815201930191908897969594936111e1565b60245f634e487b7160e01b81526041600452fd5b60405160208101917f65626cad6cb96493bf6f5ebea28756c966f023ab9e8a83a7101849d5573b3678835260018060a01b038082511660408401526020820151166060830152606065ffffffffffff9182604082015116608085015201511660a082015260a0815260c081018181106001600160401b03821117610f7f5760405251902090565b919082604091031261101b576020823592013590565b5f843b6114185750604182036113b557611318828201826112e6565b939092604010156113a1576020935f9360ff6040608095013560f81c5b60405194855216868401526040830152606082015282805260015afa15611396575f516001600160a01b0390811691821561138457160361137257565b604051632057875960e21b8152600490fd5b604051638baa579f60e01b8152600490fd5b6040513d5f823e3d90fd5b634e487b7160e01b5f52603260045260245ffd5b60408203611406576113c9918101906112e6565b6001600160ff1b0381169260ff91821c601b019182116113f2576020935f9360ff608094611335565b634e487b7160e01b5f52601160045260245ffd5b604051634be6321b60e01b8152600490fd5b918093946020926064604051809781958294630b135d3f60e11b9b8c8552600485015260406024850152816044850152848401378181018301889052601f01601f191681010301916001600160a01b03165afa9182156114e457819261149e575b50506001600160e01b0319160361148c57565b604051632c19a72f60e21b8152600490fd5b9091506020813d82116114dc575b816114b960209383610fe4565b810103126102e45751906001600160e01b03198216820361085a57505f80611479565b3d91506114ac565b50604051903d90823e3d90fd5b80518210156113a15760209160051b010190565b9061150f8261110d565b61151c6040519182610fe4565b828152809261152d601f199161110d565b0190602036910137565b5f1981146113f25760010190565b80516020809201915f5b82811061155d575050505090565b83518552938101939281019260010161154f565b92919260018060a01b0360405f8284168152600160205282828220961695868252602052818120338252602052209485549565ffffffffffff8760a01c1680421161161b5750828716968388036115d3575b50506115d195501692611a9a565b565b87848416115f146115f75760405163f96fb07160e01b815260048101899052602490fd5b83836115d1990316906bffffffffffffffffffffffff60a01b161790555f806115c3565b60249060405190636c0d979760e11b82526004820152fd5b91908110156113a15760061b0190565b356001600160a01b038116810361101b5790565b9065ffffffffffff908160608401511660018060a01b0390818551169482602082015116928086604080940151169516955f9187835260016020528383208984526020528383209916988983526020528282209184835460d01c0361174f57918561174394927fc6a377bfc4eb120024a8ac08eef205be16b817020812c73223e81d1bdb9708ec989796945087155f146117485742165b6001850160d01b6001600160d01b03191660a09190911b65ffffffffffff60a01b1617179055516001600160a01b03909316835265ffffffffffff938416602084015290921660408201529081906060820190565b0390a4565b50866116ee565b8351633ab3447f60e11b8152600490fd5b467f0000000000000000000000000000000000000000000000000000000000000000036117ab577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86682527f9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a60408201524660608201523060808201526080815261181581610fae565b51902090565b611823611760565b9060405190602082019261190160f01b8452602283015260428201526042815261181581610f64565b6040516020808201927f618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a1845260018060a01b038151166040840152015160608201526060815261181581610f64565b908151915f5b8381106118b1575050015f815290565b80602080928401015181850152016118a1565b9192909360a43593604084015180421161193f57506020845101518086116119275750918591610a93611904946118ff602088015186611a51565b61181b565b51516001600160a01b0390811692608435918216820361101b576115d193611a9a565b60249060405190633728b83d60e01b82526004820152fd5b6024906040519063cd21db4f60e01b82526004820152fd5b959093958051519560409283830151804211611a3a5750848803611a265761198e918691610a9360209b6118ff8d88015186611a51565b5f5b8681106119a1575050505050505050565b6119ac8183516114f1565b51886119b983878a611633565b01359089810151808311611a0f5750918188888860019685966119e3575b50505050505001611990565b611a04956119fe92610467928a8060a01b0390511695611633565b91611a9a565b805f888888836119d7565b602490865190633728b83d60e01b82526004820152fd5b83516001621398b960e31b03198152600490fd5b60249085519063cd21db4f60e01b82526004820152fd5b90600160ff82161b9160018060a01b03165f525f60205260405f209060081c5f5260205260405f20818154188091551615611a8857565b604051633ab3447f60e11b8152600490fd5b915f8093602095606494604051946323b872dd60e01b865260018060a01b03809216600487015216602485015260448401525af13d15601f3d1160015f511416171615611ae357565b60405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606490fdfea26469706673582212202b49b0ab3fbf91560017c9cd7c1dd1a4ec7ac6c8afb6eb3a4ce5998949280af764736f6c63430008140033",
							"opcodes": "PUSH1 0xC0 CALLVALUE PUSH2 0xB9 JUMPI CHAINID PUSH1 0xA0 MSTORE PUSH1 0x20 DUP2 ADD PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 MSTORE PUSH32 0x9AC997416E8FF9D2FF6BEBEB7149F65CDAE5E32E2B90440B566BB3044041D36A PUSH1 0x40 DUP4 ADD MSTORE CHAINID PUSH1 0x60 DUP4 ADD MSTORE ADDRESS PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x80 DUP3 MSTORE PUSH1 0xA0 DUP3 ADD SWAP2 DUP1 DUP4 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP5 GT OR PUSH2 0xA5 JUMPI DUP3 PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 PUSH1 0x80 MSTORE PUSH2 0x1B55 SWAP1 DUP2 PUSH2 0xBE DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0x1789 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 PUSH2 0x1763 ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD58B1DB EQ PUSH2 0xE84 JUMPI DUP1 PUSH4 0x137C29FE EQ PUSH2 0xD01 JUMPI DUP1 PUSH4 0x2A2D80D1 EQ PUSH2 0xAB9 JUMPI DUP1 PUSH4 0x2B67B570 EQ PUSH2 0x943 JUMPI DUP1 PUSH4 0x30F28B7A EQ PUSH2 0x880 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x85D JUMPI DUP1 PUSH4 0x36C78516 EQ PUSH2 0x813 JUMPI DUP1 PUSH4 0x3FF9DCB1 EQ PUSH2 0x7B1 JUMPI DUP1 PUSH4 0x4FE02B44 EQ PUSH2 0x772 JUMPI DUP1 PUSH4 0x65D9723C EQ PUSH2 0x662 JUMPI DUP1 PUSH4 0x87517C45 EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0x927DA105 EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0xCC53287F EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0xEDD9444B EQ PUSH2 0x2E8 JUMPI PUSH4 0xFE8EC1A7 EQ PUSH2 0xC3 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2E4 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2E4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x2E0 JUMPI PUSH2 0xF2 SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x2DC JUMPI PUSH2 0x109 SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x1137 JUMP JUMPDEST PUSH2 0x111 PUSH2 0x104B JUMP JUMPDEST SWAP2 PUSH1 0x84 CALLDATALOAD DUP6 DUP2 GT PUSH2 0x2D8 JUMPI PUSH2 0x129 SWAP1 CALLDATASIZE SWAP1 DUP11 ADD PUSH2 0x10E0 JUMP JUMPDEST SWAP9 SWAP1 SWAP6 PUSH1 0xA4 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x2D4 JUMPI PUSH2 0x142 SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x10E0 JUMP JUMPDEST SWAP7 SWAP1 SWAP6 DUP2 MLOAD SWAP1 PUSH2 0x151 DUP3 PUSH2 0xFAE JUMP JUMPDEST PUSH1 0x6B DUP3 MSTORE PUSH32 0x5065726D697442617463685769746E6573735472616E7366657246726F6D2854 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x6F6B656E5065726D697373696F6E735B5D207065726D69747465642C61646472 DUP4 DUP4 ADD MSTORE PUSH32 0x657373207370656E6465722C75696E74323536206E6F6E63652C75696E743235 PUSH1 0x60 DUP4 ADD MSTORE PUSH11 0xD88191958591B1A5B994B PUSH1 0xAA SHL PUSH1 0x80 DUP4 ADD MSTORE DUP3 MLOAD SWAP11 DUP12 SWAP2 DUP2 PUSH2 0x1EE PUSH1 0x20 DUP6 ADD DUP1 SWAP7 PUSH2 0x189B JUMP JUMPDEST SWAP2 DUP3 CALLDATACOPY ADD DUP11 DUP2 MSTORE SUB SWAP10 PUSH2 0x209 PUSH1 0x1F NOT SWAP12 DUP13 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xFE4 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 DUP6 MLOAD MLOAD PUSH2 0x219 DUP2 PUSH2 0x1505 JUMP JUMPDEST SWAP1 DUP11 JUMPDEST DUP2 DUP2 LT PUSH2 0x2A7 JUMPI POP POP PUSH2 0x2A4 SWAP10 SWAP11 PUSH2 0x29B SWAP2 DUP4 MLOAD PUSH2 0x24E DUP2 PUSH2 0x242 PUSH1 0x20 DUP3 ADD DUP1 SWAP6 PUSH2 0x1545 JUMP JUMPDEST SUB DUP5 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xFE4 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x20 DUP10 DUP2 ADD MLOAD DUP6 DUP12 ADD MLOAD SWAP6 MLOAD SWAP2 DUP3 ADD SWAP7 DUP8 MSTORE PUSH1 0x40 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0xC0 DUP5 ADD MSTORE DUP3 PUSH1 0xE0 DUP2 ADD JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xFE4 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP4 PUSH2 0x1957 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP1 PUSH2 0x2BF PUSH2 0x2B9 PUSH2 0x2CF SWAP4 DUP13 MLOAD PUSH2 0x14F1 JUMP JUMPDEST MLOAD PUSH2 0x184C JUMP JUMPDEST PUSH2 0x2C9 DUP3 DUP7 PUSH2 0x14F1 JUMP JUMPDEST MSTORE PUSH2 0x1537 JUMP JUMPDEST PUSH2 0x21C JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x2E4 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2E4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP1 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x2E0 JUMPI PUSH2 0x31A SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x2DC JUMPI PUSH2 0x331 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x1137 JUMP JUMPDEST SWAP4 SWAP1 SWAP3 PUSH2 0x33C PUSH2 0x104B JUMP JUMPDEST SWAP2 PUSH1 0x64 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x410 JUMPI PUSH2 0x353 SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x10E0 JUMP JUMPDEST SWAP5 SWAP1 SWAP4 DUP4 MLOAD MLOAD SWAP8 PUSH2 0x363 DUP10 PUSH2 0x1505 JUMP JUMPDEST SWAP9 DUP9 JUMPDEST DUP2 DUP2 LT PUSH2 0x3EE JUMPI POP POP PUSH2 0x2A4 SWAP8 SWAP9 DUP2 MLOAD PUSH2 0x396 DUP2 PUSH2 0x388 PUSH1 0x20 DUP3 ADD DUP1 SWAP6 PUSH2 0x1545 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xFE4 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x20 DUP7 ADD MLOAD DUP3 DUP8 ADD MLOAD SWAP1 DUP4 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP5 PUSH32 0xFCF35F5AC6A2C28868DC44C302166470266239195F02B0EE408334829333B766 DUP7 MSTORE DUP5 ADD MSTORE CALLER PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH2 0x29B DUP2 PUSH2 0xFC9 JUMP JUMPDEST DUP1 DUP12 PUSH2 0x2C9 DUP3 PUSH2 0x405 PUSH2 0x2B9 PUSH2 0x40B SWAP7 DUP14 MLOAD PUSH2 0x14F1 JUMP JUMPDEST SWAP3 PUSH2 0x14F1 JUMP JUMPDEST PUSH2 0x366 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2E0 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2DC JUMPI PUSH2 0x446 SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x1137 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 DUP5 JUMPDEST DUP5 DUP2 LT PUSH2 0x456 JUMPI DUP6 DUP1 RETURN JUMPDEST DUP1 PUSH2 0x46C PUSH2 0x467 PUSH1 0x1 SWAP4 DUP9 DUP9 PUSH2 0x1633 JUMP JUMPDEST PUSH2 0x1643 JUMP JUMPDEST PUSH2 0x481 DUP5 PUSH2 0x47B DUP5 DUP11 DUP11 PUSH2 0x1633 JUMP JUMPDEST ADD PUSH2 0x1643 JUMP JUMPDEST CALLER DUP10 MSTORE DUP4 DUP6 MSTORE DUP6 DUP10 KECCAK256 SWAP2 DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP3 DUP4 DUP12 MSTORE DUP7 MSTORE DUP7 DUP11 KECCAK256 SWAP2 AND SWAP1 DUP2 DUP11 MSTORE DUP6 MSTORE DUP6 DUP10 KECCAK256 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP2 SLOAD AND SWAP1 SSTORE DUP6 MLOAD SWAP2 DUP3 MSTORE DUP5 DUP3 ADD MSTORE PUSH32 0x89B1ADD15EFF56B3DFE299AD94E01F2B52FBCB80AE1A3BAEA6AE8C04CB2B98A4 DUP6 CALLER SWAP3 LOG2 ADD PUSH2 0x44B JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2E4 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2E4 JUMPI PUSH2 0x57D DUP2 PUSH2 0x513 PUSH2 0x101F JUMP JUMPDEST SWAP4 PUSH2 0x51C PUSH2 0x1035 JUMP JUMPDEST PUSH2 0x524 PUSH2 0x104B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP5 DUP5 KECCAK256 SWAP3 DUP9 AND DUP5 MSTORE SWAP2 DUP3 MSTORE DUP4 DUP4 KECCAK256 SWAP1 DUP8 AND DUP4 MSTORE DUP2 MSTORE SWAP2 SWAP1 KECCAK256 SLOAD SWAP3 MLOAD SWAP4 DUP4 AND DUP5 MSTORE PUSH1 0xA0 DUP4 SWAP1 SHR PUSH6 0xFFFFFFFFFFFF AND SWAP1 DUP5 ADD MSTORE PUSH1 0xD0 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x40 DUP4 ADD MSTORE DUP2 SWAP1 PUSH1 0x60 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x2E4 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2E4 JUMPI PUSH2 0x59B PUSH2 0x101F JUMP JUMPDEST SWAP1 PUSH2 0x5A4 PUSH2 0x1035 JUMP JUMPDEST SWAP2 PUSH2 0x5AD PUSH2 0x104B JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD SWAP3 PUSH6 0xFFFFFFFFFFFF SWAP4 DUP5 DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x2D8 JUMPI PUSH32 0xDA9FA7C1B00402C17D0161B249B1AB8BBEC047C5A52207B9C112DEFFD817036B SWAP4 CALLER DUP10 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP4 DUP10 KECCAK256 SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND SWAP8 DUP9 DUP12 MSTORE PUSH1 0x20 MSTORE DUP2 DUP6 DUP12 KECCAK256 SWAP10 AND SWAP9 DUP10 DUP12 MSTORE PUSH1 0x20 MSTORE DUP5 DUP11 KECCAK256 SWAP3 DUP5 ISZERO PUSH0 EQ PUSH2 0x65A JUMPI POP TIMESTAMP AND SWAP1 JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT AND PUSH1 0xA0 SWAP3 SWAP1 SWAP3 SHL PUSH6 0xFFFFFFFFFFFF PUSH1 0xA0 SHL AND SWAP2 SWAP1 SWAP2 OR SWAP6 AND SWAP5 DUP6 OR SWAP1 SSTORE DUP2 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE CALLER SWAP3 LOG4 DUP1 RETURN JUMPDEST SWAP1 POP SWAP1 PUSH2 0x622 JUMP JUMPDEST POP DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0x67D PUSH2 0x101F JUMP JUMPDEST SWAP1 PUSH2 0x686 PUSH2 0x1035 JUMP JUMPDEST SWAP3 PUSH6 0xFFFFFFFFFFFF PUSH1 0x44 CALLDATALOAD DUP2 DUP2 AND SWAP4 SWAP1 DUP5 DUP2 SUB PUSH2 0x2D8 JUMPI CALLER DUP9 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x1 DUP4 MSTORE DUP5 DUP10 KECCAK256 SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP8 DUP9 DUP12 MSTORE DUP5 MSTORE DUP6 DUP11 KECCAK256 SWAP9 AND SWAP8 DUP9 DUP11 MSTORE DUP4 MSTORE DUP5 DUP10 KECCAK256 SLOAD PUSH1 0xD0 SHR SWAP4 DUP5 DUP8 GT ISZERO PUSH2 0x763 JUMPI PUSH2 0xFFFF SWAP1 DUP6 DUP5 SUB AND GT PUSH2 0x755 JUMPI POP CALLER DUP1 DUP10 MSTORE PUSH1 0x1 DUP4 MSTORE DUP5 DUP10 KECCAK256 DUP8 DUP11 MSTORE DUP4 MSTORE DUP5 DUP10 KECCAK256 DUP9 DUP11 MSTORE DUP4 MSTORE DUP5 DUP10 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND PUSH1 0xD0 SWAP4 SWAP1 SWAP4 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE DUP4 MLOAD SWAP5 DUP6 MSTORE SWAP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 PUSH32 0x55EB90D810E1700B35A8E7E25395FF7F2B2259ABD7415CA2284DFB1C246418F3 SWAP2 SWAP1 LOG4 DUP1 RETURN JUMPDEST DUP5 MLOAD PUSH4 0x1269AD13 PUSH1 0xE1 SHL DUP2 MSTORE REVERT JUMPDEST POP DUP5 MLOAD PUSH4 0x3AB3447F PUSH1 0xE1 SHL DUP2 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x2E4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2E4 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x798 PUSH2 0x101F JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x4F1 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH32 0x3704902F963766A4E561BBAAB6E6CDC1B1DD12F6E9E99648DA8843B3F46B918D SWAP1 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD CALLER DUP6 MSTORE DUP5 PUSH1 0x20 MSTORE DUP2 DUP6 KECCAK256 DUP5 DUP7 MSTORE PUSH1 0x20 MSTORE DUP2 DUP6 KECCAK256 DUP2 DUP2 SLOAD OR SWAP1 SSTORE DUP2 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x85A JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x85A JUMPI PUSH2 0x82D PUSH2 0x101F JUMP JUMPDEST PUSH2 0x835 PUSH2 0x1035 JUMP JUMPDEST PUSH2 0x83D PUSH2 0x104B JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0x2DC JUMPI PUSH2 0x2A4 SWAP4 PUSH2 0x1571 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2E4 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2E4 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x879 PUSH2 0x1760 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x4F1 JUMPI PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0x89E CALLDATASIZE PUSH2 0x1075 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x83 NOT CALLDATASIZE ADD SLT PUSH2 0x2E0 JUMPI PUSH2 0x8B2 PUSH2 0x1005 JUMP JUMPDEST SWAP2 PUSH1 0xE4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x93F JUMPI PUSH2 0x2A4 SWAP5 PUSH2 0x8D4 SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x10E0 JUMP JUMPDEST SWAP4 SWAP1 SWAP3 PUSH2 0x8E1 DUP4 MLOAD PUSH2 0x184C JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD DUP3 DUP6 ADD MLOAD SWAP1 DUP4 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP5 PUSH32 0x939C21A48A8DBE3A9A2404A1D46691E4D39F6583D6EC6B35714604C986D80106 DUP7 MSTORE DUP5 ADD MSTORE CALLER PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH2 0x936 DUP2 PUSH2 0xFC9 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 PUSH2 0x18C4 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x2E4 JUMPI PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2E4 JUMPI PUSH2 0x95F PUSH2 0x101F JUMP JUMPDEST CALLDATASIZE PUSH1 0x23 NOT ADD PUSH1 0xC0 DUP2 SLT PUSH2 0x2E0 JUMPI PUSH1 0x80 DUP6 MLOAD SWAP2 PUSH2 0x97A DUP4 PUSH2 0xF93 JUMP JUMPDEST SLT PUSH2 0x2E0 JUMPI DUP5 MLOAD SWAP1 PUSH2 0x98B DUP3 PUSH2 0xF64 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x24 CALLDATALOAD DUP4 DUP2 AND DUP2 SUB PUSH2 0x410 JUMPI DUP2 MSTORE PUSH1 0x44 CALLDATALOAD DUP4 DUP2 AND DUP2 SUB PUSH2 0x410 JUMPI PUSH1 0x20 DUP3 ADD MSTORE PUSH6 0xFFFFFFFFFFFF PUSH1 0x64 CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0x2D8 JUMPI DUP9 DUP4 ADD MSTORE PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x410 JUMPI PUSH1 0x60 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0xA4 CALLDATALOAD SWAP4 DUP3 DUP6 AND DUP6 SUB PUSH2 0x93F JUMPI PUSH1 0x20 DUP3 ADD SWAP5 DUP6 MSTORE PUSH1 0xC4 CALLDATALOAD SWAP1 DUP8 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2D4 JUMPI PUSH2 0xA19 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x10E0 JUMP JUMPDEST SWAP3 SWAP1 SWAP4 DUP1 TIMESTAMP GT PUSH2 0xAA3 JUMPI POP POP SWAP2 DUP6 SWAP2 PUSH2 0xA93 PUSH2 0x2A4 SWAP10 SWAP11 PUSH2 0xA99 SWAP6 PUSH2 0xA3E DUP9 MLOAD PUSH2 0x125F JUMP JUMPDEST SWAP1 DUP10 DUP13 MLOAD AND SWAP1 MLOAD SWAP1 DUP4 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP5 PUSH32 0xF3841CD1FF0085026A6327B620B67997CE40F282C88A8E905A7A5626E310F3D0 DUP7 MSTORE DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x80 DUP2 MSTORE PUSH2 0xA8B DUP2 PUSH2 0xFAE JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x181B JUMP JUMPDEST SWAP2 PUSH2 0x12FC JUMP JUMPDEST MLOAD SWAP3 MLOAD AND SWAP2 PUSH2 0x1657 JUMP JUMPDEST DUP11 MLOAD PUSH4 0xCD21DB4F PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x24 SWAP2 POP REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x2E4 JUMPI PUSH1 0x60 PUSH1 0x3 NOT SWAP2 DUP2 DUP4 CALLDATASIZE ADD SLT PUSH2 0x2E0 JUMPI PUSH2 0xAD7 PUSH2 0x101F JUMP JUMPDEST SWAP3 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 DUP5 GT PUSH2 0x410 JUMPI DUP5 SWAP1 DUP5 CALLDATASIZE SUB ADD SLT PUSH2 0x93F JUMPI DUP7 MLOAD SWAP7 PUSH2 0xB03 DUP9 PUSH2 0xF93 JUMP JUMPDEST DUP4 DUP3 ADD CALLDATALOAD DUP4 DUP2 GT PUSH2 0x2D8 JUMPI DUP5 ADD CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x2D8 JUMPI DUP3 DUP2 ADD CALLDATALOAD SWAP1 PUSH2 0xB29 DUP3 PUSH2 0x110D JUMP JUMPDEST SWAP1 PUSH2 0xB36 DUP5 MLOAD SWAP3 DUP4 PUSH2 0xFE4 JUMP JUMPDEST DUP3 DUP3 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x24 DUP5 DUP5 ADD SWAP2 PUSH1 0x7 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0xCFD JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xCA1 JUMPI POP POP POP DUP10 MSTORE PUSH1 0x44 PUSH2 0xB6F PUSH1 0x24 DUP8 ADD PUSH2 0x1061 JUMP JUMPDEST SWAP6 DUP3 DUP12 ADD SWAP7 DUP8 MSTORE ADD CALLDATALOAD SWAP4 DUP3 DUP11 ADD SWAP1 DUP6 DUP3 MSTORE PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0xC9D JUMPI PUSH2 0xB97 SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x10E0 JUMP JUMPDEST SWAP5 SWAP1 SWAP6 DUP1 TIMESTAMP GT PUSH2 0xC87 JUMPI POP POP DUP10 SWAP9 SWAP10 MLOAD MLOAD PUSH2 0xBB1 DUP2 PUSH2 0x1505 JUMP JUMPDEST SWAP1 DUP12 JUMPDEST DUP2 DUP2 LT PUSH2 0xC64 JUMPI POP POP SWAP3 DUP9 SWAP5 SWAP3 PUSH2 0xA93 SWAP3 PUSH2 0xC31 SWAP8 SWAP6 DUP4 MLOAD PUSH2 0xBDD DUP2 PUSH2 0x388 DUP7 DUP3 ADD DUP1 SWAP6 PUSH2 0x1545 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP11 DUP12 DUP12 MLOAD AND SWAP2 MLOAD SWAP3 DUP6 MLOAD SWAP5 DUP6 ADD SWAP6 PUSH32 0xAF1B0D30D2CAB0380E68F0689007E3254993C596F2FDD0AAA7F4D04F79440863 DUP8 MSTORE DUP6 ADD MSTORE DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x80 DUP2 MSTORE PUSH2 0xA8B DUP2 PUSH2 0xFAE JUMP JUMPDEST MLOAD AND SWAP1 DUP3 MLOAD MLOAD SWAP3 DUP5 JUMPDEST DUP5 DUP2 LT PUSH2 0xC45 JUMPI DUP6 DUP1 RETURN JUMPDEST DUP1 PUSH2 0xC5E DUP6 DUP6 PUSH2 0xC58 PUSH1 0x1 SWAP6 DUP8 MLOAD PUSH2 0x14F1 JUMP JUMPDEST MLOAD PUSH2 0x1657 JUMP JUMPDEST ADD PUSH2 0xC3A JUMP JUMPDEST DUP1 PUSH2 0x2BF PUSH2 0xC79 DUP15 SWAP16 SWAP15 SWAP4 PUSH2 0xC7F SWAP5 MLOAD PUSH2 0x14F1 JUMP JUMPDEST MLOAD PUSH2 0x125F JUMP JUMPDEST SWAP12 SWAP11 SWAP12 PUSH2 0xBB4 JUMP JUMPDEST DUP5 MLOAD PUSH4 0xCD21DB4F PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x24 SWAP2 POP REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST PUSH1 0x80 DUP3 CALLDATASIZE SUB SLT PUSH2 0xCFD JUMPI DUP5 PUSH1 0x80 SWAP2 DUP8 MLOAD PUSH2 0xCBA DUP2 PUSH2 0xF64 JUMP JUMPDEST PUSH2 0xCC3 DUP6 PUSH2 0x1061 JUMP JUMPDEST DUP2 MSTORE PUSH2 0xCD0 DUP4 DUP7 ADD PUSH2 0x1061 JUMP JUMPDEST DUP4 DUP3 ADD MSTORE PUSH2 0xCDF DUP10 DUP7 ADD PUSH2 0x1124 JUMP JUMPDEST DUP10 DUP3 ADD MSTORE PUSH2 0xCEE DUP14 DUP7 ADD PUSH2 0x1124 JUMP JUMPDEST DUP14 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0xB55 JUMP JUMPDEST DUP12 DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH2 0x140 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0xD1E CALLDATASIZE PUSH2 0x1075 JUMP JUMPDEST SWAP2 DUP1 PUSH1 0x83 NOT CALLDATASIZE ADD SLT PUSH2 0x2E0 JUMPI PUSH2 0xD32 PUSH2 0x1005 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 SWAP1 PUSH2 0x104 CALLDATALOAD DUP6 DUP2 GT PUSH2 0x410 JUMPI PUSH2 0xD54 SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x10E0 JUMP JUMPDEST SWAP1 SWAP4 PUSH2 0x124 CALLDATALOAD SWAP7 DUP8 GT PUSH2 0x2D8 JUMPI PUSH2 0xD74 PUSH2 0x936 SWAP7 PUSH2 0x2A4 SWAP9 CALLDATASIZE SWAP2 ADD PUSH2 0x10E0 JUMP JUMPDEST SWAP7 SWAP1 SWAP6 DUP3 MLOAD SWAP1 PUSH2 0xD83 DUP3 PUSH2 0xFAE JUMP JUMPDEST PUSH1 0x64 DUP3 MSTORE PUSH32 0x5065726D69745769746E6573735472616E7366657246726F6D28546F6B656E50 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x65726D697373696F6E73207065726D69747465642C6164647265737320737065 DUP5 DUP4 ADD MSTORE PUSH32 0x6E6465722C75696E74323536206E6F6E63652C75696E7432353620646561646C PUSH1 0x60 DUP4 ADD MSTORE PUSH4 0x1A5B994B PUSH1 0xE2 SHL PUSH1 0x80 DUP4 ADD MSTORE DUP4 MLOAD SWAP5 DUP6 SWAP2 DUP2 PUSH2 0xE19 PUSH1 0x20 DUP6 ADD DUP1 SWAP7 PUSH2 0x189B JUMP JUMPDEST SWAP2 DUP3 CALLDATACOPY ADD DUP12 DUP2 MSTORE SUB SWAP4 PUSH2 0xE34 PUSH1 0x1F NOT SWAP6 DUP7 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xFE4 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP3 PUSH2 0xE42 DUP7 MLOAD PUSH2 0x184C JUMP JUMPDEST PUSH1 0x20 DUP8 DUP2 ADD MLOAD DUP6 DUP10 ADD MLOAD SWAP6 MLOAD SWAP2 DUP3 ADD SWAP7 DUP8 MSTORE PUSH1 0x40 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0xC0 DUP5 ADD MSTORE DUP3 PUSH1 0xE0 DUP2 ADD PUSH2 0x28F JUMP JUMPDEST POP DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2E0 JUMPI DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 DUP3 GT PUSH2 0x93F JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x93F JUMPI DUP2 ADD CALLDATALOAD SWAP3 DUP4 GT PUSH2 0x2DC JUMPI PUSH1 0x24 SWAP1 PUSH1 0x7 CALLDATASIZE DUP4 DUP7 DUP4 SHL DUP5 ADD ADD GT PUSH2 0x410 JUMPI DUP7 JUMPDEST DUP6 DUP2 LT PUSH2 0xEDE JUMPI DUP8 DUP1 RETURN JUMPDEST DUP1 DUP3 SHL DUP4 ADD SWAP1 PUSH1 0x80 PUSH1 0x23 NOT DUP4 CALLDATASIZE SUB ADD SLT PUSH2 0x2D4 JUMPI PUSH2 0xF5E DUP9 DUP8 PUSH1 0x1 SWAP5 PUSH1 0x60 DUP4 MLOAD PUSH2 0xF07 DUP2 PUSH2 0xF64 JUMP JUMPDEST PUSH2 0xF43 PUSH1 0x84 PUSH2 0xF17 DUP14 DUP7 ADD PUSH2 0x1061 JUMP JUMPDEST SWAP5 DUP6 DUP5 MSTORE PUSH2 0xF27 PUSH1 0x44 DUP3 ADD PUSH2 0x1061 JUMP JUMPDEST DUP1 SWAP8 DUP6 ADD MSTORE PUSH2 0xF38 PUSH1 0x64 DUP3 ADD PUSH2 0x1061 JUMP JUMPDEST DUP1 SWAP9 DUP6 ADD MSTORE ADD PUSH2 0x1061 JUMP JUMPDEST SWAP2 DUP3 SWAP2 ADD MSTORE DUP7 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP1 DUP1 SWAP4 AND SWAP6 AND SWAP4 AND SWAP2 AND PUSH2 0x1571 JUMP JUMPDEST ADD PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xF7F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xF7F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xF7F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xF7F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xF7F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x101B JUMPI JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x101B JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x101B JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x101B JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x101B JUMPI JUMP JUMPDEST PUSH1 0x3 NOT ADD SWAP1 PUSH1 0x80 DUP3 SLT PUSH2 0x101B JUMPI PUSH1 0x40 DUP1 MLOAD SWAP1 PUSH2 0x1090 DUP3 PUSH2 0xF93 JUMP JUMPDEST DUP1 DUP3 SWAP5 SLT PUSH2 0x101B JUMPI DUP1 MLOAD DUP2 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xF7F JUMPI DUP3 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x101B JUMPI DUP2 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE DUP3 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x64 CALLDATALOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x101B JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x101B JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x101B JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xF7F JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH6 0xFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x101B JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x101B JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x101B JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x6 SHL ADD ADD GT PUSH2 0x101B JUMPI JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x60 DUP2 DUP5 SUB SLT PUSH2 0x101B JUMPI PUSH1 0x40 DUP1 MLOAD SWAP2 PUSH2 0x1182 DUP4 PUSH2 0xF93 JUMP JUMPDEST DUP3 SWAP5 DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP2 GT PUSH2 0x101B JUMPI DUP4 ADD DUP3 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x101B JUMPI DUP1 CALLDATALOAD PUSH2 0x11AE DUP2 PUSH2 0x110D JUMP JUMPDEST SWAP3 PUSH2 0x11BB DUP8 MLOAD SWAP5 DUP6 PUSH2 0xFE4 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 SWAP5 DUP6 DUP1 DUP7 ADD SWAP4 PUSH1 0x6 SHL DUP6 ADD ADD SWAP4 DUP2 DUP6 GT PUSH2 0x101B JUMPI SWAP1 DUP7 DUP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 ADD SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x11FE JUMPI POP POP POP POP POP DUP6 MSTORE DUP1 DUP3 ADD CALLDATALOAD SWAP1 DUP6 ADD MSTORE ADD CALLDATALOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 DUP5 DUP4 SUB SLT PUSH2 0x101B JUMPI DUP9 MLOAD SWAP1 DUP10 DUP3 ADD SWAP1 DUP3 DUP3 LT DUP6 DUP4 GT OR PUSH2 0x124B JUMPI DUP11 SWAP3 DUP10 SWAP3 DUP5 MSTORE PUSH2 0x122F DUP8 PUSH2 0x1061 JUMP JUMPDEST DUP2 MSTORE DUP3 DUP8 ADD CALLDATALOAD DUP4 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP4 ADD SWAP2 SWAP1 DUP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 PUSH2 0x11E1 JUMP JUMPDEST PUSH1 0x24 PUSH0 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 PUSH32 0x65626CAD6CB96493BF6F5EBEA28756C966F023AB9E8A83A7101849D5573B3678 DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP3 MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x60 PUSH6 0xFFFFFFFFFFFF SWAP2 DUP3 PUSH1 0x40 DUP3 ADD MLOAD AND PUSH1 0x80 DUP6 ADD MSTORE ADD MLOAD AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xF7F JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x40 SWAP2 SUB SLT PUSH2 0x101B JUMPI PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 DUP5 EXTCODESIZE PUSH2 0x1418 JUMPI POP PUSH1 0x41 DUP3 SUB PUSH2 0x13B5 JUMPI PUSH2 0x1318 DUP3 DUP3 ADD DUP3 PUSH2 0x12E6 JUMP JUMPDEST SWAP4 SWAP1 SWAP3 PUSH1 0x40 LT ISZERO PUSH2 0x13A1 JUMPI PUSH1 0x20 SWAP4 PUSH0 SWAP4 PUSH1 0xFF PUSH1 0x40 PUSH1 0x80 SWAP6 ADD CALLDATALOAD PUSH1 0xF8 SHR JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x1396 JUMPI PUSH0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x1384 JUMPI AND SUB PUSH2 0x1372 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x20578759 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8BAA579F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 DUP3 SUB PUSH2 0x1406 JUMPI PUSH2 0x13C9 SWAP2 DUP2 ADD SWAP1 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP2 AND SWAP3 PUSH1 0xFF SWAP2 DUP3 SHR PUSH1 0x1B ADD SWAP2 DUP3 GT PUSH2 0x13F2 JUMPI PUSH1 0x20 SWAP4 PUSH0 SWAP4 PUSH1 0xFF PUSH1 0x80 SWAP5 PUSH2 0x1335 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4BE6321B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP2 DUP1 SWAP4 SWAP5 PUSH1 0x20 SWAP3 PUSH1 0x64 PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0xB135D3F PUSH1 0xE1 SHL SWAP12 DUP13 DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP6 ADD MSTORE DUP2 PUSH1 0x44 DUP6 ADD MSTORE DUP5 DUP5 ADD CALLDATACOPY DUP2 DUP2 ADD DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x14E4 JUMPI DUP2 SWAP3 PUSH2 0x149E JUMPI JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x148C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2C19A72F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x14DC JUMPI JUMPDEST DUP2 PUSH2 0x14B9 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xFE4 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2E4 JUMPI MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND DUP3 SUB PUSH2 0x85A JUMPI POP PUSH0 DUP1 PUSH2 0x1479 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x14AC JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x13A1 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x150F DUP3 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x151C PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0xFE4 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x152D PUSH1 0x1F NOT SWAP2 PUSH2 0x110D JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH0 NOT DUP2 EQ PUSH2 0x13F2 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 SWAP3 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x155D JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x154F JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 DUP3 DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP3 DUP3 DUP3 KECCAK256 SWAP7 AND SWAP6 DUP7 DUP3 MSTORE PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 CALLER DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SWAP5 DUP6 SLOAD SWAP6 PUSH6 0xFFFFFFFFFFFF DUP8 PUSH1 0xA0 SHR AND DUP1 TIMESTAMP GT PUSH2 0x161B JUMPI POP DUP3 DUP8 AND SWAP7 DUP4 DUP9 SUB PUSH2 0x15D3 JUMPI JUMPDEST POP POP PUSH2 0x15D1 SWAP6 POP AND SWAP3 PUSH2 0x1A9A JUMP JUMPDEST JUMP JUMPDEST DUP8 DUP5 DUP5 AND GT PUSH0 EQ PUSH2 0x15F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF96FB071 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP4 DUP4 PUSH2 0x15D1 SWAP10 SUB AND SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL AND OR SWAP1 SSTORE PUSH0 DUP1 PUSH2 0x15C3 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x6C0D9797 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x13A1 JUMPI PUSH1 0x6 SHL ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x101B JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH6 0xFFFFFFFFFFFF SWAP1 DUP2 PUSH1 0x60 DUP5 ADD MLOAD AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP6 MLOAD AND SWAP5 DUP3 PUSH1 0x20 DUP3 ADD MLOAD AND SWAP3 DUP1 DUP7 PUSH1 0x40 DUP1 SWAP5 ADD MLOAD AND SWAP6 AND SWAP6 PUSH0 SWAP2 DUP8 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP4 DUP4 KECCAK256 DUP10 DUP5 MSTORE PUSH1 0x20 MSTORE DUP4 DUP4 KECCAK256 SWAP10 AND SWAP9 DUP10 DUP4 MSTORE PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 SWAP2 DUP5 DUP4 SLOAD PUSH1 0xD0 SHR SUB PUSH2 0x174F JUMPI SWAP2 DUP6 PUSH2 0x1743 SWAP5 SWAP3 PUSH32 0xC6A377BFC4EB120024A8AC08EEF205BE16B817020812C73223E81D1BDB9708EC SWAP9 SWAP8 SWAP7 SWAP5 POP DUP8 ISZERO PUSH0 EQ PUSH2 0x1748 JUMPI TIMESTAMP AND JUMPDEST PUSH1 0x1 DUP6 ADD PUSH1 0xD0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT AND PUSH1 0xA0 SWAP2 SWAP1 SWAP2 SHL PUSH6 0xFFFFFFFFFFFF PUSH1 0xA0 SHL AND OR OR SWAP1 SSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH6 0xFFFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 SWAP3 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x60 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST POP DUP7 PUSH2 0x16EE JUMP JUMPDEST DUP4 MLOAD PUSH4 0x3AB3447F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CHAINID PUSH32 0x0 SUB PUSH2 0x17AB JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP3 MSTORE PUSH32 0x9AC997416E8FF9D2FF6BEBEB7149F65CDAE5E32E2B90440B566BB3044041D36A PUSH1 0x40 DUP3 ADD MSTORE CHAINID PUSH1 0x60 DUP3 ADD MSTORE ADDRESS PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x80 DUP2 MSTORE PUSH2 0x1815 DUP2 PUSH2 0xFAE JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1823 PUSH2 0x1760 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH2 0x1901 PUSH1 0xF0 SHL DUP5 MSTORE PUSH1 0x22 DUP4 ADD MSTORE PUSH1 0x42 DUP3 ADD MSTORE PUSH1 0x42 DUP2 MSTORE PUSH2 0x1815 DUP2 PUSH2 0xF64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP3 PUSH32 0x618358AC3DB8DC274F0CD8829DA7E234BD48CD73C4A740AEDE1ADEC9846D06A1 DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x60 DUP2 MSTORE PUSH2 0x1815 DUP2 PUSH2 0xF64 JUMP JUMPDEST SWAP1 DUP2 MLOAD SWAP2 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x18B1 JUMPI POP POP ADD PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP2 DUP6 ADD MSTORE ADD PUSH2 0x18A1 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP4 PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH1 0x40 DUP5 ADD MLOAD DUP1 TIMESTAMP GT PUSH2 0x193F JUMPI POP PUSH1 0x20 DUP5 MLOAD ADD MLOAD DUP1 DUP7 GT PUSH2 0x1927 JUMPI POP SWAP2 DUP6 SWAP2 PUSH2 0xA93 PUSH2 0x1904 SWAP5 PUSH2 0x18FF PUSH1 0x20 DUP9 ADD MLOAD DUP7 PUSH2 0x1A51 JUMP JUMPDEST PUSH2 0x181B JUMP JUMPDEST MLOAD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 PUSH1 0x84 CALLDATALOAD SWAP2 DUP3 AND DUP3 SUB PUSH2 0x101B JUMPI PUSH2 0x15D1 SWAP4 PUSH2 0x1A9A JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x3728B83D PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xCD21DB4F PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP6 SWAP1 SWAP4 SWAP6 DUP1 MLOAD MLOAD SWAP6 PUSH1 0x40 SWAP3 DUP4 DUP4 ADD MLOAD DUP1 TIMESTAMP GT PUSH2 0x1A3A JUMPI POP DUP5 DUP9 SUB PUSH2 0x1A26 JUMPI PUSH2 0x198E SWAP2 DUP7 SWAP2 PUSH2 0xA93 PUSH1 0x20 SWAP12 PUSH2 0x18FF DUP14 DUP9 ADD MLOAD DUP7 PUSH2 0x1A51 JUMP JUMPDEST PUSH0 JUMPDEST DUP7 DUP2 LT PUSH2 0x19A1 JUMPI POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x19AC DUP2 DUP4 MLOAD PUSH2 0x14F1 JUMP JUMPDEST MLOAD DUP9 PUSH2 0x19B9 DUP4 DUP8 DUP11 PUSH2 0x1633 JUMP JUMPDEST ADD CALLDATALOAD SWAP1 DUP10 DUP2 ADD MLOAD DUP1 DUP4 GT PUSH2 0x1A0F JUMPI POP SWAP2 DUP2 DUP9 DUP9 DUP9 PUSH1 0x1 SWAP7 DUP6 SWAP7 PUSH2 0x19E3 JUMPI JUMPDEST POP POP POP POP POP POP ADD PUSH2 0x1990 JUMP JUMPDEST PUSH2 0x1A04 SWAP6 PUSH2 0x19FE SWAP3 PUSH2 0x467 SWAP3 DUP11 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND SWAP6 PUSH2 0x1633 JUMP JUMPDEST SWAP2 PUSH2 0x1A9A JUMP JUMPDEST DUP1 PUSH0 DUP9 DUP9 DUP9 DUP4 PUSH2 0x19D7 JUMP JUMPDEST PUSH1 0x24 SWAP1 DUP7 MLOAD SWAP1 PUSH4 0x3728B83D PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH3 0x1398B9 PUSH1 0xE3 SHL SUB NOT DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x24 SWAP1 DUP6 MLOAD SWAP1 PUSH4 0xCD21DB4F PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0xFF DUP3 AND SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x8 SHR PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD XOR DUP1 SWAP2 SSTORE AND ISZERO PUSH2 0x1A88 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3AB3447F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP2 PUSH0 DUP1 SWAP4 PUSH1 0x20 SWAP6 PUSH1 0x64 SWAP5 PUSH1 0x40 MLOAD SWAP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND PUSH1 0x4 DUP8 ADD MSTORE AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE GAS CALL RETURNDATASIZE ISZERO PUSH1 0x1F RETURNDATASIZE GT PUSH1 0x1 PUSH0 MLOAD EQ AND OR AND ISZERO PUSH2 0x1AE3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1514905394D1915497D19493D357D19052531151 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B 0x49 0xB0 0xAB EXTCODEHASH 0xBF SWAP2 JUMP STOP OR 0xC9 0xCD PUSH29 0x1DD1A4EC7AC6C8AFB6EB3A4CE5998949280AF764736F6C634300081400 CALLER ",
							"sourceMap": "385:152:9:-:0;;;;919:13:8;900:32;;1632:60;;;789:80;385:152:9;;717:20:8;385:152:9;;;;919:13:8;385:152:9;;;;1686:4:8;385:152:9;;;;;1632:60:8;;900:32;385:152:9;;;;;;;;;;;;;;;;;;;;1622:71:8;;385:152:9;942:74:8;385:152:9;;;;;;;;;;;;900:32:8;385:152:9;;;;;;;;;;-1:-1:-1;385:152:9;;;;;-1:-1:-1;385:152:9;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 4193,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address_13078": {
									"entryPoint": 4101,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_13081": {
									"entryPoint": 4127,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_13092": {
									"entryPoint": 4149,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_13105": {
									"entryPoint": 4171,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_array_struct_TokenSpenderPair_calldata_dyn_calldata": {
									"entryPoint": 4407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_bytes32t_bytes32": {
									"entryPoint": 4838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_string_calldata": {
									"entryPoint": 4320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_struct_PermitBatchTransferFrom": {
									"entryPoint": 4455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_struct_PermitTransferFrom": {
									"entryPoint": 4213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_uint48": {
									"entryPoint": 4388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_array_bytes32_dyn": {
									"entryPoint": 5445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes32_bytes32_address_uint256_uint256_bytes32": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 6299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_uint160_uint48_uint48": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_and_zero_memory_array_array_bytes32_dyn": {
									"entryPoint": 5381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_struct_PermitDetails_dyn": {
									"entryPoint": 4365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"calldata_array_index_access_struct_TokenSpenderPair_calldata_dyn_calldata": {
									"entryPoint": 5683,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 4068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_13076": {
									"entryPoint": 3940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_13082": {
									"entryPoint": 3987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_19031": {
									"entryPoint": 4014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_21827": {
									"entryPoint": 4041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_DOMAIN_SEPARATOR": {
									"entryPoint": 5984,
									"id": 1665,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_hashPermitDetails": {
									"entryPoint": 4703,
									"id": 873,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_hashTokenPermissions": {
									"entryPoint": 6220,
									"id": 890,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_hashTypedData": {
									"entryPoint": 6171,
									"id": 1709,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_permitTransferFrom": {
									"entryPoint": 6487,
									"id": 2075,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"fun_permitTransferFrom_13080": {
									"entryPoint": 6340,
									"id": 1903,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"fun_safeTransferFrom": {
									"entryPoint": 6810,
									"id": 2602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"fun_transfer": {
									"entryPoint": 5489,
									"id": 1408,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"fun_updateApproval": {
									"entryPoint": 5719,
									"id": 1608,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"fun_useUnorderedNonce": {
									"entryPoint": 6737,
									"id": 2169,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_verify": {
									"entryPoint": 4860,
									"id": 1059,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"increment_uint256": {
									"entryPoint": 5431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"memory_array_index_access_struct_PermitDetails_dyn": {
									"entryPoint": 5361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"read_from_calldatat_address": {
									"entryPoint": 5699,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"immutableReferences": {
								"1618": [
									{
										"length": 32,
										"start": 6025
									}
								],
								"1620": [
									{
										"length": 32,
										"start": 5987
									}
								]
							},
							"linkReferences": {},
							"object": "60406080815260049081361015610014575f80fd5b5f90813560e01c80630d58b1db14610e84578063137c29fe14610d015780632a2d80d114610ab95780632b67b5701461094357806330f28b7a146108805780633644e5151461085d57806336c78516146108135780633ff9dcb1146107b15780634fe02b441461077257806365d9723c1461066257806387517c4514610581578063927da105146104f5578063cc53287f14610414578063edd9444b146102e85763fe8ec1a7146100c3575f80fd5b346102e45760c03660031901126102e4576001600160401b0383358181116102e0576100f29036908601611167565b6024358281116102dc576101099036908701611137565b61011161104b565b916084358581116102d8576101299036908a016110e0565b98909560a4359081116102d457610142913691016110e0565b96909581519061015182610fae565b606b82527f5065726d697442617463685769746e6573735472616e7366657246726f6d285460208301527f6f6b656e5065726d697373696f6e735b5d207065726d69747465642c61646472838301527f657373207370656e6465722c75696e74323536206e6f6e63652c75696e74323560608301526a0d88191958591b1a5b994b60aa1b608083015282519a8b91816101ee60208501809661189b565b918237018a81520399610209601f199b8c8101835282610fe4565b5190209085515161021981611505565b908a5b8181106102a75750506102a4999a61029b91835161024e81610242602082018095611545565b03848101835282610fe4565b519020602089810151858b015195519182019687526040820192909252336060820152608081019190915260a081019390935260643560c08401528260e081015b03908101835282610fe4565b51902093611957565b80f35b806102bf6102b96102cf938c516114f1565b5161184c565b6102c982866114f1565b52611537565b61021c565b8880fd5b8780fd5b8480fd5b8380fd5b5080fd5b5091346102e45760803660031901126102e4576001600160401b039080358281116102e05761031a9036908301611167565b6024358381116102dc576103319036908401611137565b93909261033c61104b565b9160643590811161041057610353913691016110e0565b9490938351519761036389611505565b98885b8181106103ee5750506102a49798815161039681610388602082018095611545565b03601f198101835282610fe4565b5190206020860151828701519083519260208401947ffcf35f5ac6a2c28868dc44c302166470266239195f02b0ee408334829333b7668652840152336060840152608083015260a082015260a0815261029b81610fc9565b808b6102c9826104056102b961040b968d516114f1565b926114f1565b610366565b8680fd5b5082346104f157602090816003193601126102e0578035906001600160401b0382116102dc5761044691369101611137565b929091845b848110610456578580f35b8061046c6104676001938888611633565b611643565b6104818461047b848a8a611633565b01611643565b33895283855285892091848060a01b0380911692838b528652868a20911690818a5285528589206bffffffffffffffffffffffff60a01b81541690558551918252848201527f89b1add15eff56b3dfe299ad94e01f2b52fbcb80ae1a3baea6ae8c04cb2b98a4853392a20161044b565b8280fd5b50346102e45760603660031901126102e45761057d8161051361101f565b9361051c611035565b61052461104b565b6001600160a01b03968716835260016020908152848420928816845291825283832090871683528152919020549251938316845260a083901c65ffffffffffff169084015260d09190911c604083015281906060820190565b0390f35b50346102e45760803660031901126102e45761059b61101f565b906105a4611035565b916105ad61104b565b906064359265ffffffffffff93848116908181036102d8577fda9fa7c1b00402c17d0161b249b1ab8bbec047c5a52207b9c112deffd817036b9333895260016020528389209660018060a01b0380921697888b5260205281858b20991698898b52602052848a209284155f1461065a57504216905b82546001600160d01b03191660a09290921b65ffffffffffff60a01b169190911795169485179055815193845260208401523392a480f35b905090610622565b5082346104f15760603660031901126104f15761067d61101f565b90610686611035565b9265ffffffffffff60443581811693908481036102d857338852602091600183528489209660018060a01b0380911697888b528452858a20981697888a5283528489205460d01c93848711156107635761ffff90858403161161075557503380895260018352848920878a528352848920888a52835284892080546001600160d01b031660d09390931b6001600160d01b03191692909217909155835194855290840191909152917f55eb90d810e1700b35a8e7e25395ff7f2b2259abd7415ca2284dfb1c246418f39190a480f35b8451631269ad1360e11b8152fd5b508451633ab3447f60e11b8152fd5b50346102e457806003193601126102e45760209181906001600160a01b0361079861101f565b1681528084528181206024358252845220549051908152f35b5082346104f157816003193601126104f1577f3704902f963766a4e561bbaab6e6cdc1b1dd12f6e9e99648da8843b3f46b918d90359160243533855284602052818520848652602052818520818154179055815193845260208401523392a280f35b823461085a57608036600319011261085a5761082d61101f565b610835611035565b61083d61104b565b606435916001600160a01b03831683036102dc576102a493611571565b80fd5b50346102e457816003193601126102e457602090610879611760565b9051908152f35b508290346104f1576101003660031901126104f15761089e36611075565b90806083193601126102e0576108b2611005565b9160e4356001600160401b03811161093f576102a4946108d4913691016110e0565b9390926108e1835161184c565b6020840151828501519083519260208401947f939c21a48a8dbe3a9a2404a1d46691e4d39f6583d6ec6b35714604c986d801068652840152336060840152608083015260a082015260a0815261093681610fc9565b519020916118c4565b8580fd5b5091346102e4576101003660031901126102e45761095f61101f565b366023190160c081126102e057608085519161097a83610f93565b126102e05784519061098b82610f64565b6001600160a01b03916024358381168103610410578152604435838116810361041057602082015265ffffffffffff60643581811681036102d857888301526084359081168103610410576060820152815260a43593828516850361093f576020820194855260c4359087830182815260e4356001600160401b0381116102d457610a1990369084016110e0565b929093804211610aa3575050918591610a936102a4999a610a9995610a3e885161125f565b90898c511690519083519260208401947ff3841cd1ff0085026a6327b620b67997ce40f282c88a8e905a7a5626e310f3d086528401526060830152608082015260808152610a8b81610fae565b51902061181b565b916112fc565b5192511691611657565b8a5163cd21db4f60e01b81529182015260249150fd5b5091346102e45760606003199181833601126102e057610ad761101f565b92602435916001600160401b0391828411610410578490843603011261093f57865196610b0388610f93565b838201358381116102d8578401366023820112156102d8578281013590610b298261110d565b90610b3684519283610fe4565b82825260209260248484019160071b83010191368311610cfd57602401905b828210610ca15750505089526044610b6f60248701611061565b95828b01968752013593828a0190858252604435908111610c9d57610b9790369086016110e0565b949095804211610c875750508998995151610bb181611505565b908b5b818110610c6457505092889492610a9392610c3197958351610bdd816103888682018095611545565b5190209060018060a01b039a8b8b51169151928551948501957faf1b0d30d2cab0380e68f0689007e3254993c596f2fdd0aaa7f4d04f794408638752850152830152608082015260808152610a8b81610fae565b51169082515192845b848110610c45578580f35b80610c5e8585610c5860019587516114f1565b51611657565b01610c3a565b806102bf610c798e9f9e93610c7f94516114f1565b5161125f565b9b9a9b610bb4565b845163cd21db4f60e01b81529182015260249150fd5b8980fd5b608082360312610cfd57846080918751610cba81610f64565b610cc385611061565b8152610cd0838601611061565b83820152610cdf898601611124565b89820152610cee8d8601611124565b8d820152815201910190610b55565b8b80fd5b5082346104f1576101403660031901126104f157610d1e36611075565b91806083193601126102e057610d32611005565b6001600160401b0393906101043585811161041057610d5490369086016110e0565b9093610124359687116102d857610d74610936966102a4983691016110e0565b969095825190610d8382610fae565b606482527f5065726d69745769746e6573735472616e7366657246726f6d28546f6b656e5060208301527f65726d697373696f6e73207065726d69747465642c6164647265737320737065848301527f6e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c6060830152631a5b994b60e21b6080830152835194859181610e1960208501809661189b565b918237018b81520393610e34601f1995868101835282610fe4565b51902092610e42865161184c565b6020878101518589015195519182019687526040820192909252336060820152608081019190915260a081019390935260e43560c08401528260e0810161028f565b5082346104f1576020806003193601126102e05781356001600160401b039283821161093f573660238301121561093f578101359283116102dc576024906007368386831b8401011161041057865b858110610ede578780f35b80821b830190608060231983360301126102d457610f5e888760019460608351610f0781610f64565b610f436084610f178d8601611061565b94858452610f2760448201611061565b8097850152610f3860648201611061565b809885015201611061565b9182910152868060a01b038080809316951693169116611571565b01610ed3565b608081019081106001600160401b03821117610f7f57604052565b634e487b7160e01b5f52604160045260245ffd5b606081019081106001600160401b03821117610f7f57604052565b60a081019081106001600160401b03821117610f7f57604052565b60c081019081106001600160401b03821117610f7f57604052565b90601f801991011681019081106001600160401b03821117610f7f57604052565b60c435906001600160a01b038216820361101b57565b5f80fd5b600435906001600160a01b038216820361101b57565b602435906001600160a01b038216820361101b57565b604435906001600160a01b038216820361101b57565b35906001600160a01b038216820361101b57565b60031901906080821261101b57604080519061109082610f93565b8082941261101b5780518181018181106001600160401b03821117610f7f5782526004356001600160a01b038116810361101b578152602435602082015282526044356020830152606435910152565b9181601f8401121561101b578235916001600160401b03831161101b576020838186019501011161101b57565b6001600160401b038111610f7f5760051b60200190565b359065ffffffffffff8216820361101b57565b9181601f8401121561101b578235916001600160401b03831161101b576020808501948460061b01011161101b57565b91909160608184031261101b57604080519161118283610f93565b829481356001600160401b039081811161101b57830182601f8201121561101b5780356111ae8161110d565b926111bb87519485610fe4565b818452602094858086019360061b8501019381851161101b579086899897969594939201925b8484106111fe575050505050855280820135908501520135910152565b90919293949596978483031261101b57885190898201908282108583111761124b578a928992845261122f87611061565b81528287013583820152815201930191908897969594936111e1565b60245f634e487b7160e01b81526041600452fd5b60405160208101917f65626cad6cb96493bf6f5ebea28756c966f023ab9e8a83a7101849d5573b3678835260018060a01b038082511660408401526020820151166060830152606065ffffffffffff9182604082015116608085015201511660a082015260a0815260c081018181106001600160401b03821117610f7f5760405251902090565b919082604091031261101b576020823592013590565b5f843b6114185750604182036113b557611318828201826112e6565b939092604010156113a1576020935f9360ff6040608095013560f81c5b60405194855216868401526040830152606082015282805260015afa15611396575f516001600160a01b0390811691821561138457160361137257565b604051632057875960e21b8152600490fd5b604051638baa579f60e01b8152600490fd5b6040513d5f823e3d90fd5b634e487b7160e01b5f52603260045260245ffd5b60408203611406576113c9918101906112e6565b6001600160ff1b0381169260ff91821c601b019182116113f2576020935f9360ff608094611335565b634e487b7160e01b5f52601160045260245ffd5b604051634be6321b60e01b8152600490fd5b918093946020926064604051809781958294630b135d3f60e11b9b8c8552600485015260406024850152816044850152848401378181018301889052601f01601f191681010301916001600160a01b03165afa9182156114e457819261149e575b50506001600160e01b0319160361148c57565b604051632c19a72f60e21b8152600490fd5b9091506020813d82116114dc575b816114b960209383610fe4565b810103126102e45751906001600160e01b03198216820361085a57505f80611479565b3d91506114ac565b50604051903d90823e3d90fd5b80518210156113a15760209160051b010190565b9061150f8261110d565b61151c6040519182610fe4565b828152809261152d601f199161110d565b0190602036910137565b5f1981146113f25760010190565b80516020809201915f5b82811061155d575050505090565b83518552938101939281019260010161154f565b92919260018060a01b0360405f8284168152600160205282828220961695868252602052818120338252602052209485549565ffffffffffff8760a01c1680421161161b5750828716968388036115d3575b50506115d195501692611a9a565b565b87848416115f146115f75760405163f96fb07160e01b815260048101899052602490fd5b83836115d1990316906bffffffffffffffffffffffff60a01b161790555f806115c3565b60249060405190636c0d979760e11b82526004820152fd5b91908110156113a15760061b0190565b356001600160a01b038116810361101b5790565b9065ffffffffffff908160608401511660018060a01b0390818551169482602082015116928086604080940151169516955f9187835260016020528383208984526020528383209916988983526020528282209184835460d01c0361174f57918561174394927fc6a377bfc4eb120024a8ac08eef205be16b817020812c73223e81d1bdb9708ec989796945087155f146117485742165b6001850160d01b6001600160d01b03191660a09190911b65ffffffffffff60a01b1617179055516001600160a01b03909316835265ffffffffffff938416602084015290921660408201529081906060820190565b0390a4565b50866116ee565b8351633ab3447f60e11b8152600490fd5b467f0000000000000000000000000000000000000000000000000000000000000000036117ab577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86682527f9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a60408201524660608201523060808201526080815261181581610fae565b51902090565b611823611760565b9060405190602082019261190160f01b8452602283015260428201526042815261181581610f64565b6040516020808201927f618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a1845260018060a01b038151166040840152015160608201526060815261181581610f64565b908151915f5b8381106118b1575050015f815290565b80602080928401015181850152016118a1565b9192909360a43593604084015180421161193f57506020845101518086116119275750918591610a93611904946118ff602088015186611a51565b61181b565b51516001600160a01b0390811692608435918216820361101b576115d193611a9a565b60249060405190633728b83d60e01b82526004820152fd5b6024906040519063cd21db4f60e01b82526004820152fd5b959093958051519560409283830151804211611a3a5750848803611a265761198e918691610a9360209b6118ff8d88015186611a51565b5f5b8681106119a1575050505050505050565b6119ac8183516114f1565b51886119b983878a611633565b01359089810151808311611a0f5750918188888860019685966119e3575b50505050505001611990565b611a04956119fe92610467928a8060a01b0390511695611633565b91611a9a565b805f888888836119d7565b602490865190633728b83d60e01b82526004820152fd5b83516001621398b960e31b03198152600490fd5b60249085519063cd21db4f60e01b82526004820152fd5b90600160ff82161b9160018060a01b03165f525f60205260405f209060081c5f5260205260405f20818154188091551615611a8857565b604051633ab3447f60e11b8152600490fd5b915f8093602095606494604051946323b872dd60e01b865260018060a01b03809216600487015216602485015260448401525af13d15601f3d1160015f511416171615611ae357565b60405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606490fdfea26469706673582212202b49b0ab3fbf91560017c9cd7c1dd1a4ec7ac6c8afb6eb3a4ce5998949280af764736f6c63430008140033",
							"opcodes": "PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD58B1DB EQ PUSH2 0xE84 JUMPI DUP1 PUSH4 0x137C29FE EQ PUSH2 0xD01 JUMPI DUP1 PUSH4 0x2A2D80D1 EQ PUSH2 0xAB9 JUMPI DUP1 PUSH4 0x2B67B570 EQ PUSH2 0x943 JUMPI DUP1 PUSH4 0x30F28B7A EQ PUSH2 0x880 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x85D JUMPI DUP1 PUSH4 0x36C78516 EQ PUSH2 0x813 JUMPI DUP1 PUSH4 0x3FF9DCB1 EQ PUSH2 0x7B1 JUMPI DUP1 PUSH4 0x4FE02B44 EQ PUSH2 0x772 JUMPI DUP1 PUSH4 0x65D9723C EQ PUSH2 0x662 JUMPI DUP1 PUSH4 0x87517C45 EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0x927DA105 EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0xCC53287F EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0xEDD9444B EQ PUSH2 0x2E8 JUMPI PUSH4 0xFE8EC1A7 EQ PUSH2 0xC3 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2E4 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2E4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x2E0 JUMPI PUSH2 0xF2 SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x2DC JUMPI PUSH2 0x109 SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x1137 JUMP JUMPDEST PUSH2 0x111 PUSH2 0x104B JUMP JUMPDEST SWAP2 PUSH1 0x84 CALLDATALOAD DUP6 DUP2 GT PUSH2 0x2D8 JUMPI PUSH2 0x129 SWAP1 CALLDATASIZE SWAP1 DUP11 ADD PUSH2 0x10E0 JUMP JUMPDEST SWAP9 SWAP1 SWAP6 PUSH1 0xA4 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x2D4 JUMPI PUSH2 0x142 SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x10E0 JUMP JUMPDEST SWAP7 SWAP1 SWAP6 DUP2 MLOAD SWAP1 PUSH2 0x151 DUP3 PUSH2 0xFAE JUMP JUMPDEST PUSH1 0x6B DUP3 MSTORE PUSH32 0x5065726D697442617463685769746E6573735472616E7366657246726F6D2854 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x6F6B656E5065726D697373696F6E735B5D207065726D69747465642C61646472 DUP4 DUP4 ADD MSTORE PUSH32 0x657373207370656E6465722C75696E74323536206E6F6E63652C75696E743235 PUSH1 0x60 DUP4 ADD MSTORE PUSH11 0xD88191958591B1A5B994B PUSH1 0xAA SHL PUSH1 0x80 DUP4 ADD MSTORE DUP3 MLOAD SWAP11 DUP12 SWAP2 DUP2 PUSH2 0x1EE PUSH1 0x20 DUP6 ADD DUP1 SWAP7 PUSH2 0x189B JUMP JUMPDEST SWAP2 DUP3 CALLDATACOPY ADD DUP11 DUP2 MSTORE SUB SWAP10 PUSH2 0x209 PUSH1 0x1F NOT SWAP12 DUP13 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xFE4 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 DUP6 MLOAD MLOAD PUSH2 0x219 DUP2 PUSH2 0x1505 JUMP JUMPDEST SWAP1 DUP11 JUMPDEST DUP2 DUP2 LT PUSH2 0x2A7 JUMPI POP POP PUSH2 0x2A4 SWAP10 SWAP11 PUSH2 0x29B SWAP2 DUP4 MLOAD PUSH2 0x24E DUP2 PUSH2 0x242 PUSH1 0x20 DUP3 ADD DUP1 SWAP6 PUSH2 0x1545 JUMP JUMPDEST SUB DUP5 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xFE4 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x20 DUP10 DUP2 ADD MLOAD DUP6 DUP12 ADD MLOAD SWAP6 MLOAD SWAP2 DUP3 ADD SWAP7 DUP8 MSTORE PUSH1 0x40 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0xC0 DUP5 ADD MSTORE DUP3 PUSH1 0xE0 DUP2 ADD JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xFE4 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP4 PUSH2 0x1957 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP1 PUSH2 0x2BF PUSH2 0x2B9 PUSH2 0x2CF SWAP4 DUP13 MLOAD PUSH2 0x14F1 JUMP JUMPDEST MLOAD PUSH2 0x184C JUMP JUMPDEST PUSH2 0x2C9 DUP3 DUP7 PUSH2 0x14F1 JUMP JUMPDEST MSTORE PUSH2 0x1537 JUMP JUMPDEST PUSH2 0x21C JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x2E4 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2E4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP1 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x2E0 JUMPI PUSH2 0x31A SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x2DC JUMPI PUSH2 0x331 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x1137 JUMP JUMPDEST SWAP4 SWAP1 SWAP3 PUSH2 0x33C PUSH2 0x104B JUMP JUMPDEST SWAP2 PUSH1 0x64 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x410 JUMPI PUSH2 0x353 SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x10E0 JUMP JUMPDEST SWAP5 SWAP1 SWAP4 DUP4 MLOAD MLOAD SWAP8 PUSH2 0x363 DUP10 PUSH2 0x1505 JUMP JUMPDEST SWAP9 DUP9 JUMPDEST DUP2 DUP2 LT PUSH2 0x3EE JUMPI POP POP PUSH2 0x2A4 SWAP8 SWAP9 DUP2 MLOAD PUSH2 0x396 DUP2 PUSH2 0x388 PUSH1 0x20 DUP3 ADD DUP1 SWAP6 PUSH2 0x1545 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xFE4 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x20 DUP7 ADD MLOAD DUP3 DUP8 ADD MLOAD SWAP1 DUP4 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP5 PUSH32 0xFCF35F5AC6A2C28868DC44C302166470266239195F02B0EE408334829333B766 DUP7 MSTORE DUP5 ADD MSTORE CALLER PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH2 0x29B DUP2 PUSH2 0xFC9 JUMP JUMPDEST DUP1 DUP12 PUSH2 0x2C9 DUP3 PUSH2 0x405 PUSH2 0x2B9 PUSH2 0x40B SWAP7 DUP14 MLOAD PUSH2 0x14F1 JUMP JUMPDEST SWAP3 PUSH2 0x14F1 JUMP JUMPDEST PUSH2 0x366 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2E0 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2DC JUMPI PUSH2 0x446 SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x1137 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 DUP5 JUMPDEST DUP5 DUP2 LT PUSH2 0x456 JUMPI DUP6 DUP1 RETURN JUMPDEST DUP1 PUSH2 0x46C PUSH2 0x467 PUSH1 0x1 SWAP4 DUP9 DUP9 PUSH2 0x1633 JUMP JUMPDEST PUSH2 0x1643 JUMP JUMPDEST PUSH2 0x481 DUP5 PUSH2 0x47B DUP5 DUP11 DUP11 PUSH2 0x1633 JUMP JUMPDEST ADD PUSH2 0x1643 JUMP JUMPDEST CALLER DUP10 MSTORE DUP4 DUP6 MSTORE DUP6 DUP10 KECCAK256 SWAP2 DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP3 DUP4 DUP12 MSTORE DUP7 MSTORE DUP7 DUP11 KECCAK256 SWAP2 AND SWAP1 DUP2 DUP11 MSTORE DUP6 MSTORE DUP6 DUP10 KECCAK256 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP2 SLOAD AND SWAP1 SSTORE DUP6 MLOAD SWAP2 DUP3 MSTORE DUP5 DUP3 ADD MSTORE PUSH32 0x89B1ADD15EFF56B3DFE299AD94E01F2B52FBCB80AE1A3BAEA6AE8C04CB2B98A4 DUP6 CALLER SWAP3 LOG2 ADD PUSH2 0x44B JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2E4 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2E4 JUMPI PUSH2 0x57D DUP2 PUSH2 0x513 PUSH2 0x101F JUMP JUMPDEST SWAP4 PUSH2 0x51C PUSH2 0x1035 JUMP JUMPDEST PUSH2 0x524 PUSH2 0x104B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP5 DUP5 KECCAK256 SWAP3 DUP9 AND DUP5 MSTORE SWAP2 DUP3 MSTORE DUP4 DUP4 KECCAK256 SWAP1 DUP8 AND DUP4 MSTORE DUP2 MSTORE SWAP2 SWAP1 KECCAK256 SLOAD SWAP3 MLOAD SWAP4 DUP4 AND DUP5 MSTORE PUSH1 0xA0 DUP4 SWAP1 SHR PUSH6 0xFFFFFFFFFFFF AND SWAP1 DUP5 ADD MSTORE PUSH1 0xD0 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x40 DUP4 ADD MSTORE DUP2 SWAP1 PUSH1 0x60 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x2E4 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2E4 JUMPI PUSH2 0x59B PUSH2 0x101F JUMP JUMPDEST SWAP1 PUSH2 0x5A4 PUSH2 0x1035 JUMP JUMPDEST SWAP2 PUSH2 0x5AD PUSH2 0x104B JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD SWAP3 PUSH6 0xFFFFFFFFFFFF SWAP4 DUP5 DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x2D8 JUMPI PUSH32 0xDA9FA7C1B00402C17D0161B249B1AB8BBEC047C5A52207B9C112DEFFD817036B SWAP4 CALLER DUP10 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP4 DUP10 KECCAK256 SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND SWAP8 DUP9 DUP12 MSTORE PUSH1 0x20 MSTORE DUP2 DUP6 DUP12 KECCAK256 SWAP10 AND SWAP9 DUP10 DUP12 MSTORE PUSH1 0x20 MSTORE DUP5 DUP11 KECCAK256 SWAP3 DUP5 ISZERO PUSH0 EQ PUSH2 0x65A JUMPI POP TIMESTAMP AND SWAP1 JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT AND PUSH1 0xA0 SWAP3 SWAP1 SWAP3 SHL PUSH6 0xFFFFFFFFFFFF PUSH1 0xA0 SHL AND SWAP2 SWAP1 SWAP2 OR SWAP6 AND SWAP5 DUP6 OR SWAP1 SSTORE DUP2 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE CALLER SWAP3 LOG4 DUP1 RETURN JUMPDEST SWAP1 POP SWAP1 PUSH2 0x622 JUMP JUMPDEST POP DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0x67D PUSH2 0x101F JUMP JUMPDEST SWAP1 PUSH2 0x686 PUSH2 0x1035 JUMP JUMPDEST SWAP3 PUSH6 0xFFFFFFFFFFFF PUSH1 0x44 CALLDATALOAD DUP2 DUP2 AND SWAP4 SWAP1 DUP5 DUP2 SUB PUSH2 0x2D8 JUMPI CALLER DUP9 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x1 DUP4 MSTORE DUP5 DUP10 KECCAK256 SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP8 DUP9 DUP12 MSTORE DUP5 MSTORE DUP6 DUP11 KECCAK256 SWAP9 AND SWAP8 DUP9 DUP11 MSTORE DUP4 MSTORE DUP5 DUP10 KECCAK256 SLOAD PUSH1 0xD0 SHR SWAP4 DUP5 DUP8 GT ISZERO PUSH2 0x763 JUMPI PUSH2 0xFFFF SWAP1 DUP6 DUP5 SUB AND GT PUSH2 0x755 JUMPI POP CALLER DUP1 DUP10 MSTORE PUSH1 0x1 DUP4 MSTORE DUP5 DUP10 KECCAK256 DUP8 DUP11 MSTORE DUP4 MSTORE DUP5 DUP10 KECCAK256 DUP9 DUP11 MSTORE DUP4 MSTORE DUP5 DUP10 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND PUSH1 0xD0 SWAP4 SWAP1 SWAP4 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE DUP4 MLOAD SWAP5 DUP6 MSTORE SWAP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 PUSH32 0x55EB90D810E1700B35A8E7E25395FF7F2B2259ABD7415CA2284DFB1C246418F3 SWAP2 SWAP1 LOG4 DUP1 RETURN JUMPDEST DUP5 MLOAD PUSH4 0x1269AD13 PUSH1 0xE1 SHL DUP2 MSTORE REVERT JUMPDEST POP DUP5 MLOAD PUSH4 0x3AB3447F PUSH1 0xE1 SHL DUP2 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x2E4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2E4 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x798 PUSH2 0x101F JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x4F1 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH32 0x3704902F963766A4E561BBAAB6E6CDC1B1DD12F6E9E99648DA8843B3F46B918D SWAP1 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD CALLER DUP6 MSTORE DUP5 PUSH1 0x20 MSTORE DUP2 DUP6 KECCAK256 DUP5 DUP7 MSTORE PUSH1 0x20 MSTORE DUP2 DUP6 KECCAK256 DUP2 DUP2 SLOAD OR SWAP1 SSTORE DUP2 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x85A JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x85A JUMPI PUSH2 0x82D PUSH2 0x101F JUMP JUMPDEST PUSH2 0x835 PUSH2 0x1035 JUMP JUMPDEST PUSH2 0x83D PUSH2 0x104B JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0x2DC JUMPI PUSH2 0x2A4 SWAP4 PUSH2 0x1571 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2E4 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2E4 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x879 PUSH2 0x1760 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x4F1 JUMPI PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0x89E CALLDATASIZE PUSH2 0x1075 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x83 NOT CALLDATASIZE ADD SLT PUSH2 0x2E0 JUMPI PUSH2 0x8B2 PUSH2 0x1005 JUMP JUMPDEST SWAP2 PUSH1 0xE4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x93F JUMPI PUSH2 0x2A4 SWAP5 PUSH2 0x8D4 SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x10E0 JUMP JUMPDEST SWAP4 SWAP1 SWAP3 PUSH2 0x8E1 DUP4 MLOAD PUSH2 0x184C JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD DUP3 DUP6 ADD MLOAD SWAP1 DUP4 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP5 PUSH32 0x939C21A48A8DBE3A9A2404A1D46691E4D39F6583D6EC6B35714604C986D80106 DUP7 MSTORE DUP5 ADD MSTORE CALLER PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH2 0x936 DUP2 PUSH2 0xFC9 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 PUSH2 0x18C4 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x2E4 JUMPI PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2E4 JUMPI PUSH2 0x95F PUSH2 0x101F JUMP JUMPDEST CALLDATASIZE PUSH1 0x23 NOT ADD PUSH1 0xC0 DUP2 SLT PUSH2 0x2E0 JUMPI PUSH1 0x80 DUP6 MLOAD SWAP2 PUSH2 0x97A DUP4 PUSH2 0xF93 JUMP JUMPDEST SLT PUSH2 0x2E0 JUMPI DUP5 MLOAD SWAP1 PUSH2 0x98B DUP3 PUSH2 0xF64 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x24 CALLDATALOAD DUP4 DUP2 AND DUP2 SUB PUSH2 0x410 JUMPI DUP2 MSTORE PUSH1 0x44 CALLDATALOAD DUP4 DUP2 AND DUP2 SUB PUSH2 0x410 JUMPI PUSH1 0x20 DUP3 ADD MSTORE PUSH6 0xFFFFFFFFFFFF PUSH1 0x64 CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0x2D8 JUMPI DUP9 DUP4 ADD MSTORE PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x410 JUMPI PUSH1 0x60 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0xA4 CALLDATALOAD SWAP4 DUP3 DUP6 AND DUP6 SUB PUSH2 0x93F JUMPI PUSH1 0x20 DUP3 ADD SWAP5 DUP6 MSTORE PUSH1 0xC4 CALLDATALOAD SWAP1 DUP8 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2D4 JUMPI PUSH2 0xA19 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x10E0 JUMP JUMPDEST SWAP3 SWAP1 SWAP4 DUP1 TIMESTAMP GT PUSH2 0xAA3 JUMPI POP POP SWAP2 DUP6 SWAP2 PUSH2 0xA93 PUSH2 0x2A4 SWAP10 SWAP11 PUSH2 0xA99 SWAP6 PUSH2 0xA3E DUP9 MLOAD PUSH2 0x125F JUMP JUMPDEST SWAP1 DUP10 DUP13 MLOAD AND SWAP1 MLOAD SWAP1 DUP4 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP5 PUSH32 0xF3841CD1FF0085026A6327B620B67997CE40F282C88A8E905A7A5626E310F3D0 DUP7 MSTORE DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x80 DUP2 MSTORE PUSH2 0xA8B DUP2 PUSH2 0xFAE JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x181B JUMP JUMPDEST SWAP2 PUSH2 0x12FC JUMP JUMPDEST MLOAD SWAP3 MLOAD AND SWAP2 PUSH2 0x1657 JUMP JUMPDEST DUP11 MLOAD PUSH4 0xCD21DB4F PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x24 SWAP2 POP REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x2E4 JUMPI PUSH1 0x60 PUSH1 0x3 NOT SWAP2 DUP2 DUP4 CALLDATASIZE ADD SLT PUSH2 0x2E0 JUMPI PUSH2 0xAD7 PUSH2 0x101F JUMP JUMPDEST SWAP3 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 DUP5 GT PUSH2 0x410 JUMPI DUP5 SWAP1 DUP5 CALLDATASIZE SUB ADD SLT PUSH2 0x93F JUMPI DUP7 MLOAD SWAP7 PUSH2 0xB03 DUP9 PUSH2 0xF93 JUMP JUMPDEST DUP4 DUP3 ADD CALLDATALOAD DUP4 DUP2 GT PUSH2 0x2D8 JUMPI DUP5 ADD CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x2D8 JUMPI DUP3 DUP2 ADD CALLDATALOAD SWAP1 PUSH2 0xB29 DUP3 PUSH2 0x110D JUMP JUMPDEST SWAP1 PUSH2 0xB36 DUP5 MLOAD SWAP3 DUP4 PUSH2 0xFE4 JUMP JUMPDEST DUP3 DUP3 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x24 DUP5 DUP5 ADD SWAP2 PUSH1 0x7 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0xCFD JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xCA1 JUMPI POP POP POP DUP10 MSTORE PUSH1 0x44 PUSH2 0xB6F PUSH1 0x24 DUP8 ADD PUSH2 0x1061 JUMP JUMPDEST SWAP6 DUP3 DUP12 ADD SWAP7 DUP8 MSTORE ADD CALLDATALOAD SWAP4 DUP3 DUP11 ADD SWAP1 DUP6 DUP3 MSTORE PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0xC9D JUMPI PUSH2 0xB97 SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x10E0 JUMP JUMPDEST SWAP5 SWAP1 SWAP6 DUP1 TIMESTAMP GT PUSH2 0xC87 JUMPI POP POP DUP10 SWAP9 SWAP10 MLOAD MLOAD PUSH2 0xBB1 DUP2 PUSH2 0x1505 JUMP JUMPDEST SWAP1 DUP12 JUMPDEST DUP2 DUP2 LT PUSH2 0xC64 JUMPI POP POP SWAP3 DUP9 SWAP5 SWAP3 PUSH2 0xA93 SWAP3 PUSH2 0xC31 SWAP8 SWAP6 DUP4 MLOAD PUSH2 0xBDD DUP2 PUSH2 0x388 DUP7 DUP3 ADD DUP1 SWAP6 PUSH2 0x1545 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP11 DUP12 DUP12 MLOAD AND SWAP2 MLOAD SWAP3 DUP6 MLOAD SWAP5 DUP6 ADD SWAP6 PUSH32 0xAF1B0D30D2CAB0380E68F0689007E3254993C596F2FDD0AAA7F4D04F79440863 DUP8 MSTORE DUP6 ADD MSTORE DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x80 DUP2 MSTORE PUSH2 0xA8B DUP2 PUSH2 0xFAE JUMP JUMPDEST MLOAD AND SWAP1 DUP3 MLOAD MLOAD SWAP3 DUP5 JUMPDEST DUP5 DUP2 LT PUSH2 0xC45 JUMPI DUP6 DUP1 RETURN JUMPDEST DUP1 PUSH2 0xC5E DUP6 DUP6 PUSH2 0xC58 PUSH1 0x1 SWAP6 DUP8 MLOAD PUSH2 0x14F1 JUMP JUMPDEST MLOAD PUSH2 0x1657 JUMP JUMPDEST ADD PUSH2 0xC3A JUMP JUMPDEST DUP1 PUSH2 0x2BF PUSH2 0xC79 DUP15 SWAP16 SWAP15 SWAP4 PUSH2 0xC7F SWAP5 MLOAD PUSH2 0x14F1 JUMP JUMPDEST MLOAD PUSH2 0x125F JUMP JUMPDEST SWAP12 SWAP11 SWAP12 PUSH2 0xBB4 JUMP JUMPDEST DUP5 MLOAD PUSH4 0xCD21DB4F PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x24 SWAP2 POP REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST PUSH1 0x80 DUP3 CALLDATASIZE SUB SLT PUSH2 0xCFD JUMPI DUP5 PUSH1 0x80 SWAP2 DUP8 MLOAD PUSH2 0xCBA DUP2 PUSH2 0xF64 JUMP JUMPDEST PUSH2 0xCC3 DUP6 PUSH2 0x1061 JUMP JUMPDEST DUP2 MSTORE PUSH2 0xCD0 DUP4 DUP7 ADD PUSH2 0x1061 JUMP JUMPDEST DUP4 DUP3 ADD MSTORE PUSH2 0xCDF DUP10 DUP7 ADD PUSH2 0x1124 JUMP JUMPDEST DUP10 DUP3 ADD MSTORE PUSH2 0xCEE DUP14 DUP7 ADD PUSH2 0x1124 JUMP JUMPDEST DUP14 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0xB55 JUMP JUMPDEST DUP12 DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH2 0x140 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0xD1E CALLDATASIZE PUSH2 0x1075 JUMP JUMPDEST SWAP2 DUP1 PUSH1 0x83 NOT CALLDATASIZE ADD SLT PUSH2 0x2E0 JUMPI PUSH2 0xD32 PUSH2 0x1005 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 SWAP1 PUSH2 0x104 CALLDATALOAD DUP6 DUP2 GT PUSH2 0x410 JUMPI PUSH2 0xD54 SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x10E0 JUMP JUMPDEST SWAP1 SWAP4 PUSH2 0x124 CALLDATALOAD SWAP7 DUP8 GT PUSH2 0x2D8 JUMPI PUSH2 0xD74 PUSH2 0x936 SWAP7 PUSH2 0x2A4 SWAP9 CALLDATASIZE SWAP2 ADD PUSH2 0x10E0 JUMP JUMPDEST SWAP7 SWAP1 SWAP6 DUP3 MLOAD SWAP1 PUSH2 0xD83 DUP3 PUSH2 0xFAE JUMP JUMPDEST PUSH1 0x64 DUP3 MSTORE PUSH32 0x5065726D69745769746E6573735472616E7366657246726F6D28546F6B656E50 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x65726D697373696F6E73207065726D69747465642C6164647265737320737065 DUP5 DUP4 ADD MSTORE PUSH32 0x6E6465722C75696E74323536206E6F6E63652C75696E7432353620646561646C PUSH1 0x60 DUP4 ADD MSTORE PUSH4 0x1A5B994B PUSH1 0xE2 SHL PUSH1 0x80 DUP4 ADD MSTORE DUP4 MLOAD SWAP5 DUP6 SWAP2 DUP2 PUSH2 0xE19 PUSH1 0x20 DUP6 ADD DUP1 SWAP7 PUSH2 0x189B JUMP JUMPDEST SWAP2 DUP3 CALLDATACOPY ADD DUP12 DUP2 MSTORE SUB SWAP4 PUSH2 0xE34 PUSH1 0x1F NOT SWAP6 DUP7 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xFE4 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP3 PUSH2 0xE42 DUP7 MLOAD PUSH2 0x184C JUMP JUMPDEST PUSH1 0x20 DUP8 DUP2 ADD MLOAD DUP6 DUP10 ADD MLOAD SWAP6 MLOAD SWAP2 DUP3 ADD SWAP7 DUP8 MSTORE PUSH1 0x40 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0xC0 DUP5 ADD MSTORE DUP3 PUSH1 0xE0 DUP2 ADD PUSH2 0x28F JUMP JUMPDEST POP DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2E0 JUMPI DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 DUP3 GT PUSH2 0x93F JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x93F JUMPI DUP2 ADD CALLDATALOAD SWAP3 DUP4 GT PUSH2 0x2DC JUMPI PUSH1 0x24 SWAP1 PUSH1 0x7 CALLDATASIZE DUP4 DUP7 DUP4 SHL DUP5 ADD ADD GT PUSH2 0x410 JUMPI DUP7 JUMPDEST DUP6 DUP2 LT PUSH2 0xEDE JUMPI DUP8 DUP1 RETURN JUMPDEST DUP1 DUP3 SHL DUP4 ADD SWAP1 PUSH1 0x80 PUSH1 0x23 NOT DUP4 CALLDATASIZE SUB ADD SLT PUSH2 0x2D4 JUMPI PUSH2 0xF5E DUP9 DUP8 PUSH1 0x1 SWAP5 PUSH1 0x60 DUP4 MLOAD PUSH2 0xF07 DUP2 PUSH2 0xF64 JUMP JUMPDEST PUSH2 0xF43 PUSH1 0x84 PUSH2 0xF17 DUP14 DUP7 ADD PUSH2 0x1061 JUMP JUMPDEST SWAP5 DUP6 DUP5 MSTORE PUSH2 0xF27 PUSH1 0x44 DUP3 ADD PUSH2 0x1061 JUMP JUMPDEST DUP1 SWAP8 DUP6 ADD MSTORE PUSH2 0xF38 PUSH1 0x64 DUP3 ADD PUSH2 0x1061 JUMP JUMPDEST DUP1 SWAP9 DUP6 ADD MSTORE ADD PUSH2 0x1061 JUMP JUMPDEST SWAP2 DUP3 SWAP2 ADD MSTORE DUP7 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP1 DUP1 SWAP4 AND SWAP6 AND SWAP4 AND SWAP2 AND PUSH2 0x1571 JUMP JUMPDEST ADD PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xF7F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xF7F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xF7F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xF7F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xF7F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x101B JUMPI JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x101B JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x101B JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x101B JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x101B JUMPI JUMP JUMPDEST PUSH1 0x3 NOT ADD SWAP1 PUSH1 0x80 DUP3 SLT PUSH2 0x101B JUMPI PUSH1 0x40 DUP1 MLOAD SWAP1 PUSH2 0x1090 DUP3 PUSH2 0xF93 JUMP JUMPDEST DUP1 DUP3 SWAP5 SLT PUSH2 0x101B JUMPI DUP1 MLOAD DUP2 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xF7F JUMPI DUP3 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x101B JUMPI DUP2 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE DUP3 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x64 CALLDATALOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x101B JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x101B JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x101B JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xF7F JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH6 0xFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x101B JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x101B JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x101B JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x6 SHL ADD ADD GT PUSH2 0x101B JUMPI JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x60 DUP2 DUP5 SUB SLT PUSH2 0x101B JUMPI PUSH1 0x40 DUP1 MLOAD SWAP2 PUSH2 0x1182 DUP4 PUSH2 0xF93 JUMP JUMPDEST DUP3 SWAP5 DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP2 GT PUSH2 0x101B JUMPI DUP4 ADD DUP3 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x101B JUMPI DUP1 CALLDATALOAD PUSH2 0x11AE DUP2 PUSH2 0x110D JUMP JUMPDEST SWAP3 PUSH2 0x11BB DUP8 MLOAD SWAP5 DUP6 PUSH2 0xFE4 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 SWAP5 DUP6 DUP1 DUP7 ADD SWAP4 PUSH1 0x6 SHL DUP6 ADD ADD SWAP4 DUP2 DUP6 GT PUSH2 0x101B JUMPI SWAP1 DUP7 DUP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 ADD SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x11FE JUMPI POP POP POP POP POP DUP6 MSTORE DUP1 DUP3 ADD CALLDATALOAD SWAP1 DUP6 ADD MSTORE ADD CALLDATALOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 DUP5 DUP4 SUB SLT PUSH2 0x101B JUMPI DUP9 MLOAD SWAP1 DUP10 DUP3 ADD SWAP1 DUP3 DUP3 LT DUP6 DUP4 GT OR PUSH2 0x124B JUMPI DUP11 SWAP3 DUP10 SWAP3 DUP5 MSTORE PUSH2 0x122F DUP8 PUSH2 0x1061 JUMP JUMPDEST DUP2 MSTORE DUP3 DUP8 ADD CALLDATALOAD DUP4 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP4 ADD SWAP2 SWAP1 DUP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 PUSH2 0x11E1 JUMP JUMPDEST PUSH1 0x24 PUSH0 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 PUSH32 0x65626CAD6CB96493BF6F5EBEA28756C966F023AB9E8A83A7101849D5573B3678 DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP3 MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x60 PUSH6 0xFFFFFFFFFFFF SWAP2 DUP3 PUSH1 0x40 DUP3 ADD MLOAD AND PUSH1 0x80 DUP6 ADD MSTORE ADD MLOAD AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xF7F JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x40 SWAP2 SUB SLT PUSH2 0x101B JUMPI PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 DUP5 EXTCODESIZE PUSH2 0x1418 JUMPI POP PUSH1 0x41 DUP3 SUB PUSH2 0x13B5 JUMPI PUSH2 0x1318 DUP3 DUP3 ADD DUP3 PUSH2 0x12E6 JUMP JUMPDEST SWAP4 SWAP1 SWAP3 PUSH1 0x40 LT ISZERO PUSH2 0x13A1 JUMPI PUSH1 0x20 SWAP4 PUSH0 SWAP4 PUSH1 0xFF PUSH1 0x40 PUSH1 0x80 SWAP6 ADD CALLDATALOAD PUSH1 0xF8 SHR JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x1396 JUMPI PUSH0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x1384 JUMPI AND SUB PUSH2 0x1372 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x20578759 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8BAA579F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 DUP3 SUB PUSH2 0x1406 JUMPI PUSH2 0x13C9 SWAP2 DUP2 ADD SWAP1 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP2 AND SWAP3 PUSH1 0xFF SWAP2 DUP3 SHR PUSH1 0x1B ADD SWAP2 DUP3 GT PUSH2 0x13F2 JUMPI PUSH1 0x20 SWAP4 PUSH0 SWAP4 PUSH1 0xFF PUSH1 0x80 SWAP5 PUSH2 0x1335 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4BE6321B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP2 DUP1 SWAP4 SWAP5 PUSH1 0x20 SWAP3 PUSH1 0x64 PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0xB135D3F PUSH1 0xE1 SHL SWAP12 DUP13 DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP6 ADD MSTORE DUP2 PUSH1 0x44 DUP6 ADD MSTORE DUP5 DUP5 ADD CALLDATACOPY DUP2 DUP2 ADD DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x14E4 JUMPI DUP2 SWAP3 PUSH2 0x149E JUMPI JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x148C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2C19A72F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x14DC JUMPI JUMPDEST DUP2 PUSH2 0x14B9 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xFE4 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2E4 JUMPI MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND DUP3 SUB PUSH2 0x85A JUMPI POP PUSH0 DUP1 PUSH2 0x1479 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x14AC JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x13A1 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x150F DUP3 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x151C PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0xFE4 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x152D PUSH1 0x1F NOT SWAP2 PUSH2 0x110D JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH0 NOT DUP2 EQ PUSH2 0x13F2 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 SWAP3 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x155D JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x154F JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 DUP3 DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP3 DUP3 DUP3 KECCAK256 SWAP7 AND SWAP6 DUP7 DUP3 MSTORE PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 CALLER DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SWAP5 DUP6 SLOAD SWAP6 PUSH6 0xFFFFFFFFFFFF DUP8 PUSH1 0xA0 SHR AND DUP1 TIMESTAMP GT PUSH2 0x161B JUMPI POP DUP3 DUP8 AND SWAP7 DUP4 DUP9 SUB PUSH2 0x15D3 JUMPI JUMPDEST POP POP PUSH2 0x15D1 SWAP6 POP AND SWAP3 PUSH2 0x1A9A JUMP JUMPDEST JUMP JUMPDEST DUP8 DUP5 DUP5 AND GT PUSH0 EQ PUSH2 0x15F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF96FB071 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP4 DUP4 PUSH2 0x15D1 SWAP10 SUB AND SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL AND OR SWAP1 SSTORE PUSH0 DUP1 PUSH2 0x15C3 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x6C0D9797 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x13A1 JUMPI PUSH1 0x6 SHL ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x101B JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH6 0xFFFFFFFFFFFF SWAP1 DUP2 PUSH1 0x60 DUP5 ADD MLOAD AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP6 MLOAD AND SWAP5 DUP3 PUSH1 0x20 DUP3 ADD MLOAD AND SWAP3 DUP1 DUP7 PUSH1 0x40 DUP1 SWAP5 ADD MLOAD AND SWAP6 AND SWAP6 PUSH0 SWAP2 DUP8 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP4 DUP4 KECCAK256 DUP10 DUP5 MSTORE PUSH1 0x20 MSTORE DUP4 DUP4 KECCAK256 SWAP10 AND SWAP9 DUP10 DUP4 MSTORE PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 SWAP2 DUP5 DUP4 SLOAD PUSH1 0xD0 SHR SUB PUSH2 0x174F JUMPI SWAP2 DUP6 PUSH2 0x1743 SWAP5 SWAP3 PUSH32 0xC6A377BFC4EB120024A8AC08EEF205BE16B817020812C73223E81D1BDB9708EC SWAP9 SWAP8 SWAP7 SWAP5 POP DUP8 ISZERO PUSH0 EQ PUSH2 0x1748 JUMPI TIMESTAMP AND JUMPDEST PUSH1 0x1 DUP6 ADD PUSH1 0xD0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT AND PUSH1 0xA0 SWAP2 SWAP1 SWAP2 SHL PUSH6 0xFFFFFFFFFFFF PUSH1 0xA0 SHL AND OR OR SWAP1 SSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH6 0xFFFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 SWAP3 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x60 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST POP DUP7 PUSH2 0x16EE JUMP JUMPDEST DUP4 MLOAD PUSH4 0x3AB3447F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CHAINID PUSH32 0x0 SUB PUSH2 0x17AB JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP3 MSTORE PUSH32 0x9AC997416E8FF9D2FF6BEBEB7149F65CDAE5E32E2B90440B566BB3044041D36A PUSH1 0x40 DUP3 ADD MSTORE CHAINID PUSH1 0x60 DUP3 ADD MSTORE ADDRESS PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x80 DUP2 MSTORE PUSH2 0x1815 DUP2 PUSH2 0xFAE JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1823 PUSH2 0x1760 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH2 0x1901 PUSH1 0xF0 SHL DUP5 MSTORE PUSH1 0x22 DUP4 ADD MSTORE PUSH1 0x42 DUP3 ADD MSTORE PUSH1 0x42 DUP2 MSTORE PUSH2 0x1815 DUP2 PUSH2 0xF64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP3 PUSH32 0x618358AC3DB8DC274F0CD8829DA7E234BD48CD73C4A740AEDE1ADEC9846D06A1 DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x60 DUP2 MSTORE PUSH2 0x1815 DUP2 PUSH2 0xF64 JUMP JUMPDEST SWAP1 DUP2 MLOAD SWAP2 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x18B1 JUMPI POP POP ADD PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP2 DUP6 ADD MSTORE ADD PUSH2 0x18A1 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP4 PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH1 0x40 DUP5 ADD MLOAD DUP1 TIMESTAMP GT PUSH2 0x193F JUMPI POP PUSH1 0x20 DUP5 MLOAD ADD MLOAD DUP1 DUP7 GT PUSH2 0x1927 JUMPI POP SWAP2 DUP6 SWAP2 PUSH2 0xA93 PUSH2 0x1904 SWAP5 PUSH2 0x18FF PUSH1 0x20 DUP9 ADD MLOAD DUP7 PUSH2 0x1A51 JUMP JUMPDEST PUSH2 0x181B JUMP JUMPDEST MLOAD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 PUSH1 0x84 CALLDATALOAD SWAP2 DUP3 AND DUP3 SUB PUSH2 0x101B JUMPI PUSH2 0x15D1 SWAP4 PUSH2 0x1A9A JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x3728B83D PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xCD21DB4F PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP6 SWAP1 SWAP4 SWAP6 DUP1 MLOAD MLOAD SWAP6 PUSH1 0x40 SWAP3 DUP4 DUP4 ADD MLOAD DUP1 TIMESTAMP GT PUSH2 0x1A3A JUMPI POP DUP5 DUP9 SUB PUSH2 0x1A26 JUMPI PUSH2 0x198E SWAP2 DUP7 SWAP2 PUSH2 0xA93 PUSH1 0x20 SWAP12 PUSH2 0x18FF DUP14 DUP9 ADD MLOAD DUP7 PUSH2 0x1A51 JUMP JUMPDEST PUSH0 JUMPDEST DUP7 DUP2 LT PUSH2 0x19A1 JUMPI POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x19AC DUP2 DUP4 MLOAD PUSH2 0x14F1 JUMP JUMPDEST MLOAD DUP9 PUSH2 0x19B9 DUP4 DUP8 DUP11 PUSH2 0x1633 JUMP JUMPDEST ADD CALLDATALOAD SWAP1 DUP10 DUP2 ADD MLOAD DUP1 DUP4 GT PUSH2 0x1A0F JUMPI POP SWAP2 DUP2 DUP9 DUP9 DUP9 PUSH1 0x1 SWAP7 DUP6 SWAP7 PUSH2 0x19E3 JUMPI JUMPDEST POP POP POP POP POP POP ADD PUSH2 0x1990 JUMP JUMPDEST PUSH2 0x1A04 SWAP6 PUSH2 0x19FE SWAP3 PUSH2 0x467 SWAP3 DUP11 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND SWAP6 PUSH2 0x1633 JUMP JUMPDEST SWAP2 PUSH2 0x1A9A JUMP JUMPDEST DUP1 PUSH0 DUP9 DUP9 DUP9 DUP4 PUSH2 0x19D7 JUMP JUMPDEST PUSH1 0x24 SWAP1 DUP7 MLOAD SWAP1 PUSH4 0x3728B83D PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH3 0x1398B9 PUSH1 0xE3 SHL SUB NOT DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x24 SWAP1 DUP6 MLOAD SWAP1 PUSH4 0xCD21DB4F PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0xFF DUP3 AND SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x8 SHR PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD XOR DUP1 SWAP2 SSTORE AND ISZERO PUSH2 0x1A88 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3AB3447F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP2 PUSH0 DUP1 SWAP4 PUSH1 0x20 SWAP6 PUSH1 0x64 SWAP5 PUSH1 0x40 MLOAD SWAP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND PUSH1 0x4 DUP8 ADD MSTORE AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE GAS CALL RETURNDATASIZE ISZERO PUSH1 0x1F RETURNDATASIZE GT PUSH1 0x1 PUSH0 MLOAD EQ AND OR AND ISZERO PUSH2 0x1AE3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1514905394D1915497D19493D357D19052531151 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B 0x49 0xB0 0xAB EXTCODEHASH 0xBF SWAP2 JUMP STOP OR 0xC9 0xCD PUSH29 0x1DD1A4EC7AC6C8AFB6EB3A4CE5998949280AF764736F6C634300081400 CALLER ",
							"sourceMap": "385:152:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;385:152:9;;;;-1:-1:-1;;;;;385:152:9;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;385:152:9;;;;;;4678:86:5;;;;1621:102;385:152:9;4678:86:5;;1621:102;;;:::i;:::-;385:152:9;;;;;;;4678:86:5;4133:80;4678:86;4133:80;;4678:86;;;;;;;;:::i;:::-;433:172;4668:97;;4799:16;;;433:172;4873:27;;;:::i;:::-;4916:13;;4931:16;;;;;;385:152:9;;3572:9:11;385:152:9;;5088:234:5;385:152:9;;;5152:39:5;;661:173;385:152:9;5152:39:5;;661:173;;;:::i;:::-;5152:39;;;;;;;;:::i;:::-;433:172;5142:50;;385:152:9;5238:12:5;;;385:152:9;5268:15:5;;;385:152:9;;;5088:234:5;;;385:152:9;;;1621:102:5;;;385:152:9;;;;5210:10:5;1621:102;;;385:152:9;1621:102:5;;;385:152:9;;;;;1621:102:5;;385:152:9;;;;;;1621:102:5;;;385:152:9;;1621:102:5;;;5088:234;;;;;;;;;:::i;:::-;433:172;5065:267;;3572:9:11;;:::i;:::-;385:152:9;;4949:3:5;5017:16;4995:42;5017:19;4949:3;5017:16;;;:19;:::i;:::-;;4995:42;:::i;:::-;4968:69;;;;:::i;:::-;385:152:9;4949:3:5;:::i;:::-;4916:13;;385:152:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;385:152:9;;;;-1:-1:-1;;;;;385:152:9;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;3353:16:5;;;;;433:172;3427:27;;;;:::i;:::-;3470:13;;3485:16;;;;;;385:152:9;;3100:9:11;385:152:9;;;;3734:39:5;;661:173;385:152:9;3734:39:5;;661:173;;;:::i;:::-;3734:39;4133:80;;3734:39;;;;;;:::i;:::-;433:172;3724:50;;385:152:9;3820:12:5;;385:152:9;3850:15:5;;;385:152:9;;;;3642:237:5;385:152:9;3642:237:5;;385:152:9;1254:173:5;385:152:9;;1018:166:5;;385:152:9;3792:10:5;1018:166;;;385:152:9;;1018:166:5;;385:152:9;1018:166:5;;;385:152:9;1018:166:5;3642:237;;;;;:::i;3503:3::-;3571:16;;3522:69;3571:16;3549:42;3571:19;3503:3;3571:16;;;:19;:::i;3549:42::-;3522:69;;:::i;3503:3::-;3470:13;;385:152:9;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;385:152:9;;;;;;;;;;:::i;:::-;4500:13:7;;;;4515:10;;;;;;385:152:9;;;4527:3:7;4566:12;:18;:12;385:152:9;4566:12:7;;;;:::i;:::-;:18;:::i;:::-;4620:20;:12;;;;;;:::i;:::-;:20;;:::i;:::-;4337:10;385:152:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4725:31:7;4337:10;;4725:31;;385:152:9;4500:13:7;;385:152:9;;;;;;;;;;;-1:-1:-1;;385:152:9;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;385:152:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;385:152:9;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;1469:56:7;1364:10;;385:152:9;;1354:9:7;385:152:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1510:54:4;:15;;:54;385:152:9;;;1535:15:4;;385:152:9;1510:54:4;;385:152:9;;-1:-1:-1;;;;;;385:152:9;;;;;;-1:-1:-1;;;385:152:9;;;;;;;;;;;;;;;;;;;;;1364:10:7;;1469:56;385:152:9;;1510:54:4;;;;;;385:152:9;;;;;;;;-1:-1:-1;;385:152:9;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;4954:10:7;385:152:9;;;;4944:9:7;385:152:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5002:20:7;;;;;4998:47;;385:152:9;;;;;;5214:24:7;5210:60;;-1:-1:-1;4954:10:7;385:152:9;;;4944:9:7;385:152:9;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;385:152:9;;;;;;-1:-1:-1;;;;;;385:152:9;;;;;;;;;;;;;;;;;;;;4954:10:7;5360:65;;4954:10;5360:65;385:152:9;;5210:60:7;385:152:9;;-1:-1:-1;;;5247:23:7;;;4998:47;-1:-1:-1;385:152:9;;-1:-1:-1;;;5031:14:7;;;385:152:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;385:152:9;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5308:53:11;385:152:9;;;;;5264:10:11;385:152:9;;;;;;;;;;;;;;;;;;;5252:40:11;385:152:9;;;;;;;;;;;5264:10:11;5308:53;;385:152:9;;;;;;;;;-1:-1:-1;;385:152:9;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;-1:-1:-1;;;;;385:152:9;;;;;;2822:5:7;;;:::i;385:152:9:-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;385:152:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;385:152:9;;;;1148:9:11;385:152:9;;;;;;;:::i;:::-;3029:16:5;;;3007:39;3029:16;;3007:39;:::i;:::-;3163:12;;;385:152:9;3177:15:5;;;385:152:9;;;;3086:107:5;3163:12;3086:107;;385:152:9;1018:166:5;385:152:9;;1018:166:5;;385:152:9;3151:10:5;1018:166;;;385:152:9;1018:166:5;;;385:152:9;1018:166:5;;;385:152:9;1018:166:5;3086:107;;;;;:::i;:::-;433:172;3063:140;;1148:9:11;;:::i;385:152:9:-;;;;;;;;;;;;-1:-1:-1;;385:152:9;;;;;;:::i;:::-;;-1:-1:-1;;385:152:9;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;385:152:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;385:152:9;;;;;;;;;;;:::i;:::-;1691:15:7;;;;;:42;1687:97;;2078:20:5;;;;;1869:35:7;1968:20;2078::5;;1906:5:7;2078:20:5;2059:40;2078:20;;2059:40;:::i;:::-;385:152:9;;;;;;;;;;2138:95:5;385:152:9;2138:95:5;;385:152:9;433:172:5;385:152:9;;433:172:5;;385:152:9;;433:172:5;;385:152:9;;433:172:5;;385:152:9;;2138:95:5;;;;;:::i;:::-;433:172;2128:106;;1869:35:7;:::i;:::-;1906:5;;:::i;:::-;1939:20;385:152:9;;;1968:20:7;;:::i;1687:97::-;385:152:9;;-1:-1:-1;;;1742:42:7;;;;;385:152:9;;;-1:-1:-1;1742:42:7;385:152:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;385:152:9;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2153:15:7;;;;;:41;2149:95;;2375:19:5;;;;;;433:172;2443:25;;;:::i;:::-;2483:13;;2498:14;;;;;;385:152:9;;;;;;2329:34:7;385:152:9;2365:5:7;385:152:9;;;;2721:30:5;;661:173;2721:30;;;661:173;;;:::i;2721:30::-;433:172;2711:41;;385:152:9;;;;;;;;;;;;;;;;2643:201:5;;;385:152:9;661:173:5;385:152:9;;433:172:5;;385:152:9;433:172:5;;385:152:9;;433:172:5;;385:152:9;;2643:201:5;;;;;:::i;2365:5:7:-;385:152:9;;2470:19:7;;;433:172:5;2515:13:7;;2530:10;;;;;;385:152:9;;;2542:3:7;2581:19;2612:7;2581:19;;:22;385:152:9;2581:19:7;;;:22;:::i;:::-;;2612:7;:::i;:::-;385:152:9;2515:13:7;;2514:3:5;2570:19;2551:42;2570:22;:19;;;;2514:3;2570:19;;:22;:::i;:::-;;2551:42;:::i;2514:3::-;2483:13;;;;;2149:95:7;385:152:9;;-1:-1:-1;;;2203:41:7;;;;;385:152:9;;;-1:-1:-1;2203:41:7;385:152:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;385:152:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;385:152:9;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;4322:94:5;385:152:9;1613:9:11;385:152:9;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;385:152:9;;;;;;4133:80:5;;;;1621:102;385:152:9;4133:80:5;;1621:102;;;:::i;:::-;385:152:9;;;;;;;4133:80:5;;;;;;;;;;;;;:::i;:::-;433:172;4123:91;;4278:16;4256:39;4278:16;;4256:39;:::i;:::-;385:152:9;4377:12:5;;;385:152:9;4391:15:5;;;385:152:9;;;4322:94:5;;;385:152:9;;;1621:102:5;;;385:152:9;;;;4365:10:5;1621:102;;;385:152:9;1621:102:5;;;385:152:9;;;;;1621:102:5;;385:152:9;;;;;;1621:102:5;;;385:152:9;;1621:102:5;;;4322:94;1621:102;385:152:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;385:152:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3056:13:7;3071:10;;;;;;385:152:9;;;3083:3:7;385:152:9;;;;;;;;;;;;;;;;3264:20:7;385:152:9;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3264:20:7;:::i;:::-;385:152:9;3056:13:7;;385:152:9;;;;;;;-1:-1:-1;;;;;385:152:9;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;385:152:9;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;385:152:9;;;;;;;:::o;:::-;1018:166:5;385:152:9;;;;;-1:-1:-1;;;;;385:152:9;;;;;;;:::o;:::-;;4133:80:5;;;385:152:9;;;;;;;;-1:-1:-1;;;;;385:152:9;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;385:152:9;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;385:152:9;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;385:152:9;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;385:152:9;;;;;;:::o;:::-;;;-1:-1:-1;;;;;385:152:9;;;;;;:::o;:::-;-1:-1:-1;;385:152:9;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;385:152:9;;;;;;;;;-1:-1:-1;;;;;385:152:9;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;385:152:9;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;385:152:9;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;385:152:9;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;385:152:9;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;385:152:9;;;;;;;;;5345:188:5;385:152:9;;5480:45:5;;;385:152:9;289:87:5;385:152:9;;;;;;;289:87:5;;;385:152:9;;289:87:5;;385:152:9;5480:45:5;289:87;;;385:152:9;289:87:5;;;385:152:9;289:87:5;385:152:9;289:87:5;;385:152:9;289:87:5;;;385:152:9;289:87:5;;;385:152:9;289:87:5;;385:152:9;;289:87:5;;385:152:9;;5480:45:5;;289:87;385:152:9;;;;;-1:-1:-1;;;;;385:152:9;;;;;;;433:172:5;5470:56;;5345:188;:::o;385:152:9:-;;;;;;;;;;;;;;;;;:::o;700:1109:6:-;-1:-1:-1;863:25:6;;;;-1:-1:-1;933:2:6;913:22;;933:2;;964:41;;;;;;:::i;:::-;955:50;;625:68;1043:2;625:68;;;;;;-1:-1:-1;625:68:6;;1043:2;625:68;;;1033:13;625:68;;909:490;385:152:9;;;;;625:68:6;;;;;385:152:9;625:68:6;;385:152:9;625:68:6;;;385:152:9;1429:24:6;;;;;;;;;-1:-1:-1;1429:24:6;-1:-1:-1;;;;;385:152:9;;;;1471:20:6;;1467:51;;385:152:9;1536:23:6;1532:51;;700:1109::o;1532:51::-;385:152:9;;-1:-1:-1;;;1568:15:6;;;;;1467:51;385:152:9;;-1:-1:-1;;;1500:18:6;;;;;1429:24;385:152:9;;;-1:-1:-1;385:152:9;;;;;625:68:6;385:152:9;;;-1:-1:-1;625:68:6;;;;;-1:-1:-1;625:68:6;909:490;1092:2;1072:22;;1092:2;;1180:41;;;;;;:::i;:::-;-1:-1:-1;;;;;1243:19:6;;;626:66;385:152:9;;;1312:2:6;625:68;;;;;;;1280:34;-1:-1:-1;1280:34:6;625:68;;1280:34;909:490;;625:68;385:152:9;;;-1:-1:-1;625:68:6;;;;;-1:-1:-1;625:68:6;1068:331;1092:2;385:152:9;-1:-1:-1;;;1360:24:6;;;;;859:944;385:152:9;;;;1634:57:6;385:152:9;;;;;;;;;;;;;1634:57:6;;;;;;;385:152:9;;;;;;;;;;;;;;;;;;;;;;;4133:80:5;385:152:9;-1:-1:-1;;385:152:9;;;1634:57:6;;;-1:-1:-1;;;;;385:152:9;1634:57:6;;;;;;;;;;;859:944;-1:-1:-1;;;;;;;;385:152:9;1709:48:6;1705:87;;700:1109::o;1705:87::-;385:152:9;;-1:-1:-1;;;1766:26:6;;1634:57;;1766:26;1634:57;;;;;;;;;;;;;;;;;;:::i;:::-;;;385:152:9;;;;;;-1:-1:-1;;;;;;385:152:9;;;;;;1634:57:6;;;;;;;;-1:-1:-1;1634:57:6;;;385:152:9;;;;;;;;;;;;433:172:5;;385:152:9;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;4133:80:5;385:152:9;4133:80:5;;385:152:9;;:::i;:::-;;;;;;;;:::o;:::-;-1:-1:-1;;385:152:9;;;;;;;:::o;661:173:5:-;433:172;;;;;;661:173;;;;;;;;;;;;;:::o;:::-;;;385:152:9;;661:173:5;;;;;;;;;;;;3463:737:7;;;;385:152:9;;;;;;-1:-1:-1;385:152:9;;;;;;;;;;;;;;;;;;;;;;;3614:10:7;385:152:9;;;;;;;;;;;;;;3640:15:7;;:36;3636:85;;385:152:9;;;;3780:30:7;;;;3776:289;;3463:737;385:152:9;;4146:47:7;385:152:9;;;4146:47:7;;:::i;:::-;3463:737::o;3776:289::-;385:152:9;;;;3830:18:7;3826:229;3830:18;;;385:152:9;;-1:-1:-1;;;3875:32:7;;;;;385:152:9;;;;;3875:32:7;3826:229;385:152:9;;4146:47:7;385:152:9;;;;;;;;;;;3776:289:7;;;;3636:85;385:152:9;;;;3685:36:7;;;;;;;;;385:152:9;3685:36:7;385:152:9;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;;;;385:152:9;;;;;;;:::o;5662:530:7:-;;385:152:9;5782:13:7;;;;;385:152:9;;;;;;;;;;;;5861:14:7;;;;;385:152:9;;5905:18:7;;;;;;;385:152:9;;;;-1:-1:-1;;385:152:9;;;;;5861:14:7;385:152:9;;;;;;;5861:14:7;385:152:9;;;;;;;;;;5861:14:7;385:152:9;;;;;;;;;;6014:22:7;6010:49;;843:79:4;;6129:56:7;843:79:4;;6129:56:7;843:79:4;;;;:40;;;:79;385:152:9;;;893:15:4;385:152:9;843:79:4;385:152:9;;;;;-1:-1:-1;;;;;;385:152:9;;;;;;-1:-1:-1;;;385:152:9;1834:52:4;:61;1001:59;;385:152:9;-1:-1:-1;;;;;385:152:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;6129:56:7;;;;5662:530::o;843:79:4:-;;;;;6010:49:7;385:152:9;;-1:-1:-1;;;6045:14:7;;;;;1186:225:8;1270:13;1287:16;1270:33;1287:16;;1318:24;1186:225;:::o;1270:134::-;385:152:9;;1632:60:8;;;385:152:9;789:80:8;385:152:9;;717:20:8;385:152:9;;;;1270:13:8;385:152:9;;;;1686:4:8;385:152:9;;;;;1632:60:8;;;;;:::i;:::-;433:172:5;1622:71:8;;1186:225;:::o;1757:167::-;1887:18;;:::i;:::-;385:152:9;;;1858:58:8;;;;385:152:9;;;;;;;;;;;;;;;1858:58:8;;;;;:::i;5539:229:5:-;385:152:9;;5710:50:5;;;;385:152:9;895:59:5;385:152:9;;;;;;;895:59:5;;385:152:9;;895:59:5;;385:152:9;895:59:5;;;;;385:152:9;895:59:5;5710:50;;;;;:::i;1621:102::-;;433:172;;1621:102;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;2066:704:11;;;;;2329:31;385:152:9;2393:15:11;;;;385:152:9;2375:15:11;;:33;2371:79;;2482:16;2329:31;2482:16;;:23;385:152:9;2464:41:11;;;2460:92;;2589:12;;;;2630:24;2656:5;2589:12;;2329:31;2589:12;;385:152:9;2589:12:11;;:::i;:::-;2630:24;:::i;2656:5::-;2679:16;385:152:9;-1:-1:-1;;;;;385:152:9;;;;;;;;;;;;;2747:15:11;;;:::i;2460:92::-;385:152:9;;2393:15:11;385:152:9;2514:38:11;;;;;;;;;385:152:9;2514:38:11;2371:79;385:152:9;;2393:15:11;385:152:9;2203:41:7;;;;2417:33:11;;;;;385:152:9;2417:33:11;3928:1194;;;;;4195:16;;433:172:5;4251:15:11;;;;;;385:152:9;4233:15:11;;:33;4229:79;;4322:38;;;;4318:67;;4488:5;4422:12;;;4462:24;4422:12;;;;;;385:152:9;4422:12:11;;:::i;4488:5::-;-1:-1:-1;4549:16:11;;;;;;3928:1194;;;;;;;;:::o;4567:3::-;4626:19;:16;;;:19;:::i;:::-;;4689:18;;;;;;:::i;:::-;:34;385:152:9;4764:16:11;;;;385:152:9;4746:34:11;;;4742:78;;4843:20;;;;;;385:152:9;4843:20:11;;;4839:253;;4567:3;;;;;;;385:152:9;4534:13:11;;4839:253;5057:15;385:152:9;5034:21:11;385:152:9;5034:18:11;385:152:9;;;;;;;;;5034:18:11;;:::i;:21::-;5057:15;;:::i;:::-;4839:253;;;;;;;;4742:78;385:152:9;;;;2514:38:11;;;;4789:31;;;;;385:152:9;4789:31:11;4318:67;385:152:9;;-1:-1:-1;;;;;;4369:16:11;;;;;4229:79;385:152:9;;;;2203:41:7;;;;4275:33:11;;;;;385:152:9;4275:33:11;6241:293;;6399:1;625:68:6;;;385:152:9;;;;;;;;-1:-1:-1;385:152:9;-1:-1:-1;385:152:9;;;-1:-1:-1;385:152:9;;5983:1:11;385:152:9;-1:-1:-1;385:152:9;;;;-1:-1:-1;385:152:9;;;;6438:33:11;385:152:9;;;6486:13:11;:18;6482:45;;6241:293::o;6482:45::-;385:152:9;;-1:-1:-1;;;6513:14:11;;;;;1328:1782:13;;-1:-1:-1;1328:1782:13;;1532:1521;1328:1782;1532:1521;1328:1782;1532:1521;;;;;;;;385:152:9;;;;;1532:1521:13;;;;;;;;;;;;;;;;;;;;;;;385:152:9;-1:-1:-1;1532:1521:13;;;;;385:152:9;;;1328:1782:13:o;385:152:9:-;1532:1521:13;385:152:9;-1:-1:-1;;;385:152:9;;1532:1521:13;;385:152:9;;;;1532:1521:13;385:152:9;;;-1:-1:-1;;;1532:1521:13;385:152:9;;;1532:1521:13;;385:152:9"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1399400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "infinite",
								"allowance(address,address,address)": "3066",
								"approve(address,address,uint160,uint48)": "27635",
								"invalidateNonces(address,address,uint48)": "29860",
								"invalidateUnorderedNonces(uint256,uint256)": "26335",
								"lockdown((address,address)[])": "infinite",
								"nonceBitmap(address,uint256)": "2662",
								"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)": "infinite",
								"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)": "infinite",
								"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)": "infinite",
								"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)": "infinite",
								"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)": "infinite",
								"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)": "infinite",
								"transferFrom((address,address,uint160,address)[])": "infinite",
								"transferFrom(address,address,uint160,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 385,
									"end": 537,
									"name": "PUSH",
									"source": 9,
									"value": "C0"
								},
								{
									"begin": 385,
									"end": 537,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 385,
									"end": 537,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 919,
									"end": 932,
									"name": "CHAINID",
									"source": 8
								},
								{
									"begin": 900,
									"end": 932,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 900,
									"end": 932,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1632,
									"end": 1692,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1632,
									"end": 1692,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1632,
									"end": 1692,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 789,
									"end": 869,
									"name": "PUSH",
									"source": 8,
									"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
								},
								{
									"begin": 385,
									"end": 537,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 717,
									"end": 737,
									"name": "PUSH",
									"source": 8,
									"value": "9AC997416E8FF9D2FF6BEBEB7149F65CDAE5E32E2B90440B566BB3044041D36A"
								},
								{
									"begin": 385,
									"end": 537,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 385,
									"end": 537,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 919,
									"end": 932,
									"name": "CHAINID",
									"source": 8
								},
								{
									"begin": 385,
									"end": 537,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 385,
									"end": 537,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1686,
									"end": 1690,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 385,
									"end": 537,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 385,
									"end": 537,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1632,
									"end": 1692,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1632,
									"end": 1692,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 900,
									"end": 932,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 385,
									"end": 537,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 385,
									"end": 537,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 385,
									"end": 537,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 385,
									"end": 537,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 385,
									"end": 537,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1622,
									"end": 1693,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1622,
									"end": 1693,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 385,
									"end": 537,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 942,
									"end": 1016,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 385,
									"end": 537,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 385,
									"end": 537,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 385,
									"end": 537,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 385,
									"end": 537,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "1618"
								},
								{
									"begin": 900,
									"end": 932,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 385,
									"end": 537,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "1620"
								},
								{
									"begin": 385,
									"end": 537,
									"name": "RETURN",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 385,
									"end": 537,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 385,
									"end": 537,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 385,
									"end": 537,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 385,
									"end": 537,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 385,
									"end": 537,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 385,
									"end": 537,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 385,
									"end": 537,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 385,
									"end": 537,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 385,
									"end": 537,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 385,
									"end": 537,
									"name": "REVERT",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202b49b0ab3fbf91560017c9cd7c1dd1a4ec7ac6c8afb6eb3a4ce5998949280af764736f6c63430008140033",
									".code": [
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "D58B1DB"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "137C29FE"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "2A2D80D1"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "2B67B570"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "30F28B7A"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "3644E515"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "36C78516"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "3FF9DCB1"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "4FE02B44"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "65D9723C"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "87517C45"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "927DA105"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "CC53287F"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "EDD9444B"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "FE8EC1A7"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "A4"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "6B"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "5065726D697442617463685769746E6573735472616E7366657246726F6D2854"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "6F6B656E5065726D697373696F6E735B5D207065726D69747465642C61646472"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "657373207370656E6465722C75696E74323536206E6F6E63652C75696E743235"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D88191958591B1A5B994B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "SWAP11",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1621,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "SWAP10",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "SWAP12",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "DUP13",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4678,
											"end": 4764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4668,
											"end": 4765,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4668,
											"end": 4765,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4799,
											"end": 4815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4799,
											"end": 4815,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4799,
											"end": 4815,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 4873,
											"end": 4900,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 4873,
											"end": 4900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4900,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 4873,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4916,
											"end": 4929,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4916,
											"end": 4929,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 4931,
											"end": 4947,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 4931,
											"end": 4947,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4931,
											"end": 4947,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4931,
											"end": 4947,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4931,
											"end": 4947,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4931,
											"end": 4947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 4931,
											"end": 4947,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3572,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP10",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP11",
											"source": 9
										},
										{
											"begin": 5088,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 5152,
											"end": 5191,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5152,
											"end": 5191,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5191,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 661,
											"end": 834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 661,
											"end": 834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5191,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5191,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5191,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5191,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5191,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5191,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5191,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 5152,
											"end": 5191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5191,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 5152,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5192,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5192,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5238,
											"end": 5250,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5250,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5250,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5268,
											"end": 5283,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5268,
											"end": 5283,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 5268,
											"end": 5283,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5088,
											"end": 5322,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5322,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5322,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5210,
											"end": 5220,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5322,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 5088,
											"end": 5322,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5322,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5322,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5322,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5322,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5322,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5322,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5322,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 5088,
											"end": 5322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5322,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 5088,
											"end": 5322,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5065,
											"end": 5332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5065,
											"end": 5332,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3572,
											"end": 3581,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 3572,
											"end": 3581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3581,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 3572,
											"end": 3581,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4949,
											"end": 4952,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 4949,
											"end": 4952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5017,
											"end": 5033,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4995,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 5017,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4949,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 5017,
											"end": 5033,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5017,
											"end": 5033,
											"name": "DUP13",
											"source": 5
										},
										{
											"begin": 5017,
											"end": 5033,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5017,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 5017,
											"end": 5036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5017,
											"end": 5036,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5017,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5017,
											"end": 5036,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4995,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 4995,
											"end": 5037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4995,
											"end": 5037,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 4995,
											"end": 5037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4968,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 4968,
											"end": 5037,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4968,
											"end": 5037,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4968,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 4968,
											"end": 5037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4968,
											"end": 5037,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 4968,
											"end": 5037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4949,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 4949,
											"end": 4952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4949,
											"end": 4952,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 4949,
											"end": 4952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4916,
											"end": 4929,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 4916,
											"end": 4929,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3427,
											"end": 3454,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 3427,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 3427,
											"end": 3454,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3427,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3427,
											"end": 3454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3427,
											"end": 3454,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 3427,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3483,
											"name": "SWAP9",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3483,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3485,
											"end": 3501,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3485,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3485,
											"end": 3501,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3485,
											"end": 3501,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3485,
											"end": 3501,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3485,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3485,
											"end": 3501,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3100,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3734,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3734,
											"end": 3773,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3734,
											"end": 3773,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 3773,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 661,
											"end": 834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 661,
											"end": 834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 3773,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 3773,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 3773,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 3773,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 3773,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 3773,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3734,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 3773,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3734,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3724,
											"end": 3774,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3724,
											"end": 3774,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3820,
											"end": 3832,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3820,
											"end": 3832,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3850,
											"end": 3865,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3865,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3865,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3642,
											"end": 3879,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3642,
											"end": 3879,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3642,
											"end": 3879,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "PUSH",
											"source": 5,
											"value": "FCF35F5AC6A2C28868DC44C302166470266239195F02B0EE408334829333B766"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3792,
											"end": 3802,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 3642,
											"end": 3879,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3642,
											"end": 3879,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3642,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3642,
											"end": 3879,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3642,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3642,
											"end": 3879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3571,
											"end": 3587,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3571,
											"end": 3587,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 3522,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3571,
											"end": 3587,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 3571,
											"end": 3587,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 3571,
											"end": 3587,
											"name": "DUP14",
											"source": 5
										},
										{
											"begin": 3571,
											"end": 3587,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3571,
											"end": 3590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3591,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3549,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3522,
											"end": 3591,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3522,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3522,
											"end": 3591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3470,
											"end": 3483,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4500,
											"end": 4513,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4500,
											"end": 4513,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4500,
											"end": 4513,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4500,
											"end": 4513,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4525,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 4515,
											"end": 4525,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4525,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4525,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4525,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 4515,
											"end": 4525,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4527,
											"end": 4530,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 4527,
											"end": 4530,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4566,
											"end": 4578,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4566,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 4566,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4566,
											"end": 4578,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4566,
											"end": 4578,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4566,
											"end": 4578,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4566,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 4566,
											"end": 4578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4566,
											"end": 4578,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 4566,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4566,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 4566,
											"end": 4584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4566,
											"end": 4584,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 4566,
											"end": 4584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 4620,
											"end": 4632,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 4620,
											"end": 4632,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4632,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4632,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 4620,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4632,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 4620,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4640,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 4620,
											"end": 4640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4640,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 4620,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4347,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4725,
											"end": 4756,
											"name": "PUSH",
											"source": 7,
											"value": "89B1ADD15EFF56B3DFE299AD94E01F2B52FBCB80AE1A3BAEA6AE8C04CB2B98A4"
										},
										{
											"begin": 4337,
											"end": 4347,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4347,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4725,
											"end": 4756,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4725,
											"end": 4756,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4500,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 4500,
											"end": 4513,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "D0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1469,
											"end": 1525,
											"name": "PUSH",
											"source": 7,
											"value": "DA9FA7C1B00402C17D0161B249B1AB8BBEC047C5A52207B9C112DEFFD817036B"
										},
										{
											"begin": 1364,
											"end": 1374,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1364,
											"end": 1374,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1354,
											"end": 1363,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP10",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1510,
											"end": 1564,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1510,
											"end": 1525,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1510,
											"end": 1525,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1510,
											"end": 1564,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1535,
											"end": 1550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1535,
											"end": 1550,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1510,
											"end": 1564,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1510,
											"end": 1564,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 1510,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1364,
											"end": 1374,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1364,
											"end": 1374,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1469,
											"end": 1525,
											"name": "LOG4",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1510,
											"end": 1564,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 1510,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1510,
											"end": 1564,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1510,
											"end": 1564,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1510,
											"end": 1564,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1510,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 1510,
											"end": 1564,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4954,
											"end": 4964,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4944,
											"end": 4953,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "D0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5022,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5002,
											"end": 5022,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5002,
											"end": 5022,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5002,
											"end": 5022,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5002,
											"end": 5022,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4998,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 4998,
											"end": 5045,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "FFFF"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5214,
											"end": 5238,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5210,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 5210,
											"end": 5270,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4954,
											"end": 4964,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4944,
											"end": 4953,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "D0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4954,
											"end": 4964,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5360,
											"end": 5425,
											"name": "PUSH",
											"source": 7,
											"value": "55EB90D810E1700B35A8E7E25395FF7F2B2259ABD7415CA2284DFB1C246418F3"
										},
										{
											"begin": 5360,
											"end": 5425,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4954,
											"end": 4964,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5360,
											"end": 5425,
											"name": "LOG4",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5210,
											"end": 5270,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 5210,
											"end": 5270,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1269AD13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5247,
											"end": 5270,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5247,
											"end": 5270,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5247,
											"end": 5270,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4998,
											"end": 5045,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 4998,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3AB3447F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5031,
											"end": 5045,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5031,
											"end": 5045,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5031,
											"end": 5045,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5308,
											"end": 5361,
											"name": "PUSH",
											"source": 11,
											"value": "3704902F963766A4E561BBAAB6E6CDC1B1DD12F6E9E99648DA8843B3F46B918D"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5264,
											"end": 5274,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5252,
											"end": 5292,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5264,
											"end": 5274,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5308,
											"end": 5361,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5308,
											"end": 5361,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2822,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 2822,
											"end": 2827,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2822,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 2822,
											"end": 2827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "E4"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1148,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3029,
											"end": 3045,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3029,
											"end": 3045,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3029,
											"end": 3045,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3007,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 3029,
											"end": 3045,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3029,
											"end": 3045,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3007,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 3007,
											"end": 3046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3007,
											"end": 3046,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 3007,
											"end": 3046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3163,
											"end": 3175,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3163,
											"end": 3175,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3163,
											"end": 3175,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3177,
											"end": 3192,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3177,
											"end": 3192,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3177,
											"end": 3192,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3163,
											"end": 3175,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "PUSH",
											"source": 5,
											"value": "939C21A48A8DBE3A9A2404A1D46691E4D39F6583D6EC6B35714604C986D80106"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3161,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3086,
											"end": 3193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3063,
											"end": 3203,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3063,
											"end": 3203,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1157,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1148,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 1148,
											"end": 1157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "A4"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "C4"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "E4"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1691,
											"end": 1706,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1691,
											"end": 1706,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1691,
											"end": 1706,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1691,
											"end": 1706,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1691,
											"end": 1706,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 1691,
											"end": 1733,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1687,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 1687,
											"end": 1784,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1869,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 1968,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "SWAP10",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "SWAP11",
											"source": 5
										},
										{
											"begin": 1906,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2059,
											"end": 2099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2099,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 2059,
											"end": 2099,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2233,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2138,
											"end": 2233,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2233,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 433,
											"end": 605,
											"name": "PUSH",
											"source": 5,
											"value": "F3841CD1FF0085026A6327B620B67997CE40F282C88A8E905A7A5626E310F3D0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 433,
											"end": 605,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 433,
											"end": 605,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 433,
											"end": 605,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2138,
											"end": 2233,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2233,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 2138,
											"end": 2233,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2138,
											"end": 2233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2233,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 2138,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2128,
											"end": 2234,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2128,
											"end": 2234,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1869,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1869,
											"end": 1904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1904,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 1869,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1906,
											"end": 1911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1906,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1906,
											"end": 1911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1906,
											"end": 1911,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 1906,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1939,
											"end": 1959,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1968,
											"end": 1988,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1968,
											"end": 1988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1687,
											"end": 1784,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 1687,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CD21DB4F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1742,
											"end": 1784,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1742,
											"end": 1784,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1742,
											"end": 1784,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1742,
											"end": 1784,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1742,
											"end": 1784,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1742,
											"end": 1784,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2153,
											"end": 2168,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2168,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2168,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2168,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2168,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2194,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2149,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 2149,
											"end": 2244,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2375,
											"end": 2394,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2394,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2394,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2394,
											"name": "SWAP9",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2394,
											"name": "SWAP10",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2394,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 2443,
											"end": 2468,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2443,
											"end": 2468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2468,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 2443,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2496,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2496,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 2498,
											"end": 2512,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 2498,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2498,
											"end": 2512,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2498,
											"end": 2512,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2498,
											"end": 2512,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2498,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 2498,
											"end": 2512,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2365,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2721,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 2721,
											"end": 2751,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2721,
											"end": 2751,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2721,
											"end": 2751,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2721,
											"end": 2751,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 661,
											"end": 834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2721,
											"end": 2751,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 2721,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2752,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP11",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2643,
											"end": 2844,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2844,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2844,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 661,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "AF1B0D30D2CAB0380E68F0689007E3254993C596F2FDD0AAA7F4D04F79440863"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 433,
											"end": 605,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 433,
											"end": 605,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 433,
											"end": 605,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2643,
											"end": 2844,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2844,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 2643,
											"end": 2844,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2643,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2370,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 2365,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 433,
											"end": 605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2528,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2515,
											"end": 2528,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2540,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 2530,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2540,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2540,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2540,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 2530,
											"end": 2540,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2542,
											"end": 2545,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 2542,
											"end": 2545,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2612,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 2581,
											"end": 2603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2603,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 2581,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2603,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2612,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 2612,
											"end": 2619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2612,
											"end": 2619,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 2612,
											"end": 2619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2515,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 2515,
											"end": 2528,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2514,
											"end": 2517,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 2514,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2589,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2551,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2570,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 2570,
											"end": 2589,
											"name": "DUP15",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2589,
											"name": "SWAP16",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2589,
											"name": "SWAP15",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2589,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2514,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 2570,
											"end": 2589,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2589,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 2570,
											"end": 2592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2592,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 2570,
											"end": 2592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2592,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2551,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2551,
											"end": 2593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2514,
											"end": 2517,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 2514,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2496,
											"name": "SWAP12",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2496,
											"name": "SWAP11",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2496,
											"name": "SWAP12",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 2483,
											"end": 2496,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2149,
											"end": 2244,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 2149,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CD21DB4F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2203,
											"end": 2244,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2203,
											"end": 2244,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2203,
											"end": 2244,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2203,
											"end": 2244,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2203,
											"end": 2244,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2203,
											"end": 2244,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 4322,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 1613,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "5065726D69745769746E6573735472616E7366657246726F6D28546F6B656E50"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "65726D697373696F6E73207065726D69747465642C6164647265737320737065"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "6E6465722C75696E74323536206E6F6E63652C75696E7432353620646561646C"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5B994B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1621,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4133,
											"end": 4213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4123,
											"end": 4214,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4123,
											"end": 4214,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4278,
											"end": 4294,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4256,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 4278,
											"end": 4294,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4278,
											"end": 4294,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4256,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 4256,
											"end": 4295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4256,
											"end": 4295,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 4256,
											"end": 4295,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4377,
											"end": 4389,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4377,
											"end": 4389,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4377,
											"end": 4389,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4391,
											"end": 4406,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4391,
											"end": 4406,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 4391,
											"end": 4406,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4416,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4416,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4416,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4365,
											"end": 4375,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "E4"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3056,
											"end": 3069,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3083,
											"end": 3086,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 3083,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3264,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3264,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3264,
											"end": 3284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3284,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 3264,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3056,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 3056,
											"end": 3069,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "LT",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "LT",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "LT",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "LT",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "LT",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "C4"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "LT",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5345,
											"end": 5533,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 5345,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5480,
											"end": 5525,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5480,
											"end": 5525,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5525,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 289,
											"end": 376,
											"name": "PUSH",
											"source": 5,
											"value": "65626CAD6CB96493BF6F5EBEA28756C966F023AB9E8A83A7101849D5573B3678"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 289,
											"end": 376,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 376,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 289,
											"end": 376,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 289,
											"end": 376,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 289,
											"end": 376,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5480,
											"end": 5525,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 289,
											"end": 376,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 289,
											"end": 376,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 289,
											"end": 376,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 289,
											"end": 376,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 289,
											"end": 376,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 289,
											"end": 376,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 289,
											"end": 376,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 289,
											"end": 376,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 289,
											"end": 376,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 289,
											"end": 376,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 289,
											"end": 376,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 289,
											"end": 376,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 289,
											"end": 376,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 289,
											"end": 376,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 289,
											"end": 376,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 289,
											"end": 376,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 289,
											"end": 376,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 289,
											"end": 376,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 289,
											"end": 376,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 5480,
											"end": 5525,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5525,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 289,
											"end": 376,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "LT",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 433,
											"end": 605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5470,
											"end": 5526,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5470,
											"end": 5526,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5345,
											"end": 5533,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5345,
											"end": 5533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 700,
											"end": 1809,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 700,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 863,
											"end": 888,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 863,
											"end": 888,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 863,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 863,
											"end": 888,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 933,
											"end": 935,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 913,
											"end": 935,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 913,
											"end": 935,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 933,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 933,
											"end": 935,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 964,
											"end": 1005,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1005,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1005,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1005,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 964,
											"end": 1005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1005,
											"name": "tag",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 964,
											"end": 1005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1005,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1005,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1043,
											"end": 1045,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1043,
											"end": 1045,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1033,
											"end": 1046,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "F8"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 909,
											"end": 1399,
											"name": "tag",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 909,
											"end": 1399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 625,
											"end": 693,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1471,
											"end": 1491,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1491,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "418"
										},
										{
											"begin": 1467,
											"end": 1518,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1536,
											"end": 1559,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1532,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "420"
										},
										{
											"begin": 1532,
											"end": 1583,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 700,
											"end": 1809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1532,
											"end": 1583,
											"name": "tag",
											"source": 6,
											"value": "420"
										},
										{
											"begin": 1532,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20578759"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1568,
											"end": 1583,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1568,
											"end": 1583,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1568,
											"end": 1583,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1568,
											"end": 1583,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1568,
											"end": 1583,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1518,
											"name": "tag",
											"source": 6,
											"value": "418"
										},
										{
											"begin": 1467,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8BAA579F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "tag",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 625,
											"end": 693,
											"name": "tag",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 909,
											"end": 1399,
											"name": "tag",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 909,
											"end": 1399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1092,
											"end": 1094,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1092,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 1092,
											"end": 1094,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1180,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "425"
										},
										{
											"begin": 1180,
											"end": 1221,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1180,
											"end": 1221,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1180,
											"end": 1221,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1180,
											"end": 1221,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1180,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1180,
											"end": 1221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1180,
											"end": 1221,
											"name": "tag",
											"source": 6,
											"value": "425"
										},
										{
											"begin": 1180,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1243,
											"end": 1262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1243,
											"end": 1262,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1243,
											"end": 1262,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 626,
											"end": 692,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1312,
											"end": 1314,
											"name": "PUSH",
											"source": 6,
											"value": "1B"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1280,
											"end": 1314,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1314,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1280,
											"end": 1314,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 909,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 909,
											"end": 1399,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "tag",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1068,
											"end": 1399,
											"name": "tag",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 1068,
											"end": 1399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1092,
											"end": 1094,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4BE6321B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1360,
											"end": 1384,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1360,
											"end": 1384,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1360,
											"end": 1384,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1360,
											"end": 1384,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1360,
											"end": 1384,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 859,
											"end": 1803,
											"name": "tag",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 859,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "B135D3F"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "E1"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "SWAP12",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "428"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "430"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 859,
											"end": 1803,
											"name": "tag",
											"source": 6,
											"value": "431"
										},
										{
											"begin": 859,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1709,
											"end": 1757,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "432"
										},
										{
											"begin": 1705,
											"end": 1792,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 700,
											"end": 1809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1792,
											"name": "tag",
											"source": 6,
											"value": "432"
										},
										{
											"begin": 1705,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2C19A72F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1766,
											"end": 1792,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1766,
											"end": 1792,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1766,
											"end": 1792,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "tag",
											"source": 6,
											"value": "430"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "434"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "tag",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "436"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1634,
											"end": 1691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "tag",
											"source": 6,
											"value": "436"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "431"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "tag",
											"source": 6,
											"value": "434"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "tag",
											"source": 6,
											"value": "428"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 433,
											"end": 605,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 661,
											"end": 834,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 661,
											"end": 834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 433,
											"end": 605,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 834,
											"name": "tag",
											"source": 5,
											"value": "448"
										},
										{
											"begin": 661,
											"end": 834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "449"
										},
										{
											"begin": 661,
											"end": 834,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "tag",
											"source": 5,
											"value": "449"
										},
										{
											"begin": 661,
											"end": 834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 661,
											"end": 834,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 661,
											"end": 834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 661,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "448"
										},
										{
											"begin": 661,
											"end": 834,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 4200,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3463,
											"end": 4200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 4200,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 4200,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 4200,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3614,
											"end": 3624,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3640,
											"end": 3655,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3655,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3676,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3636,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 3636,
											"end": 3721,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3780,
											"end": 3810,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 3780,
											"end": 3810,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3780,
											"end": 3810,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3780,
											"end": 3810,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 3776,
											"end": 4065,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 4200,
											"name": "tag",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 3463,
											"end": 4200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4193,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4146,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 4146,
											"end": 4193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4146,
											"end": 4193,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 4146,
											"end": 4193,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 4200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 4065,
											"name": "tag",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 3776,
											"end": 4065,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3830,
											"end": 3848,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 4055,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3830,
											"end": 3848,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 3830,
											"end": 3848,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F96FB071"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3875,
											"end": 3907,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3875,
											"end": 3907,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3875,
											"end": 3907,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3875,
											"end": 3907,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3875,
											"end": 3907,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3875,
											"end": 3907,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 4055,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 3826,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP10",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3776,
											"end": 4065,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 4065,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 3776,
											"end": 4065,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3636,
											"end": 3721,
											"name": "tag",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 3636,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3685,
											"end": 3721,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3721,
											"name": "PUSH",
											"source": 7,
											"value": "6C0D9797"
										},
										{
											"begin": 3685,
											"end": 3721,
											"name": "PUSH",
											"source": 7,
											"value": "E1"
										},
										{
											"begin": 3685,
											"end": 3721,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3721,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3721,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3721,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3685,
											"end": 3721,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3721,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3685,
											"end": 3721,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5662,
											"end": 6192,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 5662,
											"end": 6192,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5662,
											"end": 6192,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 5782,
											"end": 5795,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5782,
											"end": 5795,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5782,
											"end": 5795,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5782,
											"end": 5795,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5782,
											"end": 5795,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5875,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5861,
											"end": 5875,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5861,
											"end": 5875,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5861,
											"end": 5875,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5861,
											"end": 5875,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5905,
											"end": 5923,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5905,
											"end": 5923,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5905,
											"end": 5923,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5905,
											"end": 5923,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5905,
											"end": 5923,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5905,
											"end": 5923,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5905,
											"end": 5923,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5861,
											"end": 5875,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5875,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP10",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5875,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "D0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 6014,
											"end": 6036,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 6010,
											"end": 6059,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 843,
											"end": 922,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 843,
											"end": 922,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6129,
											"end": 6185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 843,
											"end": 922,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 843,
											"end": 922,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6129,
											"end": 6185,
											"name": "PUSH",
											"source": 7,
											"value": "C6A377BFC4EB120024A8AC08EEF205BE16B817020812C73223E81D1BDB9708EC"
										},
										{
											"begin": 843,
											"end": 922,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 843,
											"end": 922,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 843,
											"end": 922,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 843,
											"end": 922,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 843,
											"end": 883,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 843,
											"end": 883,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 843,
											"end": 883,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 843,
											"end": 922,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 893,
											"end": 908,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 843,
											"end": 922,
											"name": "tag",
											"source": 4,
											"value": "467"
										},
										{
											"begin": 843,
											"end": 922,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "D0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1834,
											"end": 1886,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1834,
											"end": 1895,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1060,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1060,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6129,
											"end": 6185,
											"name": "tag",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 6129,
											"end": 6185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6129,
											"end": 6185,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6129,
											"end": 6185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6129,
											"end": 6185,
											"name": "LOG4",
											"source": 7
										},
										{
											"begin": 5662,
											"end": 6192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 843,
											"end": 922,
											"name": "tag",
											"source": 4,
											"value": "465"
										},
										{
											"begin": 843,
											"end": 922,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 843,
											"end": 922,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 843,
											"end": 922,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 843,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "467"
										},
										{
											"begin": 843,
											"end": 922,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6059,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 6010,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3AB3447F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6045,
											"end": 6059,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6045,
											"end": 6059,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6045,
											"end": 6059,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6045,
											"end": 6059,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6045,
											"end": 6059,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1270,
											"end": 1283,
											"name": "CHAINID",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1303,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1620"
										},
										{
											"begin": 1270,
											"end": 1303,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 1287,
											"end": 1303,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1342,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1618"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1186,
											"end": 1411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1270,
											"end": 1404,
											"name": "tag",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 1270,
											"end": 1404,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 789,
											"end": 869,
											"name": "PUSH",
											"source": 8,
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 717,
											"end": 737,
											"name": "PUSH",
											"source": 8,
											"value": "9AC997416E8FF9D2FF6BEBEB7149F65CDAE5E32E2B90440B566BB3044041D36A"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1283,
											"name": "CHAINID",
											"source": 8
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1686,
											"end": 1690,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1632,
											"end": 1692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "tag",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 433,
											"end": 605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1186,
											"end": 1411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1757,
											"end": 1924,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1757,
											"end": 1924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1887,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 1887,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1887,
											"end": 1905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1887,
											"end": 1905,
											"name": "tag",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 1887,
											"end": 1905,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1858,
											"end": 1916,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1858,
											"end": 1916,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1858,
											"end": 1916,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1858,
											"end": 1916,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "1901"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "F0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1858,
											"end": 1916,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1858,
											"end": 1916,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1858,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 1858,
											"end": 1916,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1858,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1858,
											"end": 1916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5539,
											"end": 5768,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 5539,
											"end": 5768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5710,
											"end": 5760,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5710,
											"end": 5760,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5710,
											"end": 5760,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5710,
											"end": 5760,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 895,
											"end": 954,
											"name": "PUSH",
											"source": 5,
											"value": "618358AC3DB8DC274F0CD8829DA7E234BD48CD73C4A740AEDE1ADEC9846D06A1"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 895,
											"end": 954,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 895,
											"end": 954,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 954,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 895,
											"end": 954,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 895,
											"end": 954,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 895,
											"end": 954,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 895,
											"end": 954,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 895,
											"end": 954,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 895,
											"end": 954,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 895,
											"end": 954,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5710,
											"end": 5760,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5710,
											"end": 5760,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5710,
											"end": 5760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "471"
										},
										{
											"begin": 5710,
											"end": 5760,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5710,
											"end": 5760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5710,
											"end": 5760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 433,
											"end": 605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "tag",
											"source": 5,
											"value": "475"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "476"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "tag",
											"source": 5,
											"value": "476"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "475"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2066,
											"end": 2770,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 2066,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2770,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2770,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2770,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2770,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2329,
											"end": 2360,
											"name": "PUSH",
											"source": 11,
											"value": "A4"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2393,
											"end": 2408,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2393,
											"end": 2408,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2393,
											"end": 2408,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2393,
											"end": 2408,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2375,
											"end": 2390,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2375,
											"end": 2390,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 2375,
											"end": 2408,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2371,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 2371,
											"end": 2450,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2498,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2329,
											"end": 2360,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2482,
											"end": 2498,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2498,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2505,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2464,
											"end": 2505,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2464,
											"end": 2505,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2464,
											"end": 2505,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 2460,
											"end": 2552,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2654,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 2656,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 2329,
											"end": 2360,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 2589,
											"end": 2601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "tag",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2654,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 2630,
											"end": 2654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2656,
											"end": 2661,
											"name": "tag",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 2656,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2679,
											"end": 2695,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2762,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 2747,
											"end": 2762,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2747,
											"end": 2762,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 2747,
											"end": 2762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2552,
											"name": "tag",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 2460,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2393,
											"end": 2408,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "PUSH",
											"source": 11,
											"value": "3728B83D"
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2371,
											"end": 2450,
											"name": "tag",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 2371,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2393,
											"end": 2408,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2203,
											"end": 2244,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2203,
											"end": 2244,
											"name": "PUSH",
											"source": 7,
											"value": "CD21DB4F"
										},
										{
											"begin": 2203,
											"end": 2244,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2203,
											"end": 2244,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2450,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2417,
											"end": 2450,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2417,
											"end": 2450,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2417,
											"end": 2450,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2417,
											"end": 2450,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2417,
											"end": 2450,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 5122,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 3928,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 5122,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 5122,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 5122,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 5122,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 4195,
											"end": 4211,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4195,
											"end": 4211,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 433,
											"end": 605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4251,
											"end": 4266,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 4251,
											"end": 4266,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4251,
											"end": 4266,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4251,
											"end": 4266,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4251,
											"end": 4266,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4251,
											"end": 4266,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4248,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4233,
											"end": 4248,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 4233,
											"end": 4266,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4229,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "488"
										},
										{
											"begin": 4229,
											"end": 4308,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4322,
											"end": 4360,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4322,
											"end": 4360,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4322,
											"end": 4360,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 4322,
											"end": 4360,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4318,
											"end": 4385,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 4318,
											"end": 4385,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4488,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 4422,
											"end": 4434,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4422,
											"end": 4434,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4422,
											"end": 4434,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4462,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 4422,
											"end": 4434,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4422,
											"end": 4434,
											"name": "SWAP12",
											"source": 11
										},
										{
											"begin": 4422,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 4422,
											"end": 4434,
											"name": "DUP14",
											"source": 11
										},
										{
											"begin": 4422,
											"end": 4434,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 4422,
											"end": 4434,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4422,
											"end": 4434,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4422,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 4422,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4488,
											"end": 4493,
											"name": "tag",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 4488,
											"end": 4493,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4549,
											"end": 4565,
											"name": "tag",
											"source": 11,
											"value": "495"
										},
										{
											"begin": 4549,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4549,
											"end": 4565,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4549,
											"end": 4565,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4549,
											"end": 4565,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4549,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "496"
										},
										{
											"begin": 4549,
											"end": 4565,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 5122,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 5122,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 5122,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 5122,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 5122,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 5122,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 5122,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 5122,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 5122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4567,
											"end": 4570,
											"name": "tag",
											"source": 11,
											"value": "496"
										},
										{
											"begin": 4567,
											"end": 4570,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4626,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 4626,
											"end": 4642,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4626,
											"end": 4642,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4626,
											"end": 4642,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4626,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 4626,
											"end": 4645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4626,
											"end": 4645,
											"name": "tag",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 4626,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4626,
											"end": 4645,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "499"
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 4689,
											"end": 4707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "tag",
											"source": 11,
											"value": "499"
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4689,
											"end": 4723,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 385,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4764,
											"end": 4780,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4764,
											"end": 4780,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 4764,
											"end": 4780,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4764,
											"end": 4780,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4780,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 4780,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 4780,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4742,
											"end": 4820,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 4742,
											"end": 4820,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4843,
											"end": 4863,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4843,
											"end": 4863,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4843,
											"end": 4863,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4843,
											"end": 4863,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 4843,
											"end": 4863,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 4843,
											"end": 4863,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4843,
											"end": 4863,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 4843,
											"end": 4863,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4843,
											"end": 4863,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 4839,
											"end": 5092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "502"
										},
										{
											"begin": 4839,
											"end": 5092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4567,
											"end": 4570,
											"name": "tag",
											"source": 11,
											"value": "503"
										},
										{
											"begin": 4567,
											"end": 4570,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4567,
											"end": 4570,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4567,
											"end": 4570,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4567,
											"end": 4570,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4567,
											"end": 4570,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4567,
											"end": 4570,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4567,
											"end": 4570,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4534,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "495"
										},
										{
											"begin": 4534,
											"end": 4547,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4839,
											"end": 5092,
											"name": "tag",
											"source": 11,
											"value": "502"
										},
										{
											"begin": 4839,
											"end": 5092,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5057,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "504"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5034,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5034,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5034,
											"end": 5052,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 5034,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 5034,
											"end": 5052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5034,
											"end": 5055,
											"name": "tag",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 5034,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5057,
											"end": 5072,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5057,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 5057,
											"end": 5072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5057,
											"end": 5072,
											"name": "tag",
											"source": 11,
											"value": "504"
										},
										{
											"begin": 5057,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4839,
											"end": 5092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4839,
											"end": 5092,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4839,
											"end": 5092,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 4839,
											"end": 5092,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 4839,
											"end": 5092,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 4839,
											"end": 5092,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4839,
											"end": 5092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "503"
										},
										{
											"begin": 4839,
											"end": 5092,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4742,
											"end": 4820,
											"name": "tag",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 4742,
											"end": 4820,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "PUSH",
											"source": 11,
											"value": "3728B83D"
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 4789,
											"end": 4820,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4789,
											"end": 4820,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4789,
											"end": 4820,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4789,
											"end": 4820,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4789,
											"end": 4820,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4789,
											"end": 4820,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4318,
											"end": 4385,
											"name": "tag",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 4318,
											"end": 4385,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1398B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4369,
											"end": 4385,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4369,
											"end": 4385,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4369,
											"end": 4385,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4369,
											"end": 4385,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4369,
											"end": 4385,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4229,
											"end": 4308,
											"name": "tag",
											"source": 11,
											"value": "488"
										},
										{
											"begin": 4229,
											"end": 4308,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2203,
											"end": 2244,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2203,
											"end": 2244,
											"name": "PUSH",
											"source": 7,
											"value": "CD21DB4F"
										},
										{
											"begin": 2203,
											"end": 2244,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2203,
											"end": 2244,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6241,
											"end": 6534,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 6241,
											"end": 6534,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6241,
											"end": 6534,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6399,
											"end": 6400,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5983,
											"end": 5984,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6438,
											"end": 6471,
											"name": "XOR",
											"source": 11
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6486,
											"end": 6499,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6504,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6482,
											"end": 6527,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "507"
										},
										{
											"begin": 6482,
											"end": 6527,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6241,
											"end": 6534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6482,
											"end": 6527,
											"name": "tag",
											"source": 11,
											"value": "507"
										},
										{
											"begin": 6482,
											"end": 6527,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3AB3447F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6513,
											"end": 6527,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6513,
											"end": 6527,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6513,
											"end": 6527,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6513,
											"end": 6527,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6513,
											"end": 6527,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 3110,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 1328,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 3110,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 3110,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 3110,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 3110,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 1328,
											"end": 3110,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "23B872DD"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 3110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 385,
											"end": 537,
											"name": "tag",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1514905394D1915497D19493D357D19052531151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 385,
											"end": 537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 385,
											"end": 537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 385,
											"end": 537,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"contracts/contracts/interfaces/IAllowanceTransfer.sol",
								"contracts/contracts/interfaces/IEIP712.sol",
								"contracts/contracts/interfaces/IERC1271.sol",
								"contracts/contracts/interfaces/ISignatureTransfer.sol",
								"contracts/contracts/lib/Allowance.sol",
								"contracts/contracts/lib/PermitHash.sol",
								"contracts/contracts/lib/SignatureVerification.sol",
								"contracts/contracts/permit2/AllowanceTransfer.sol",
								"contracts/contracts/permit2/EIP712.sol",
								"contracts/contracts/permit2/Permit2.sol",
								"contracts/contracts/permit2/PermitErrors.sol",
								"contracts/contracts/permit2/SignatureTransfer.sol",
								"solmate/src/tokens/ERC20.sol",
								"solmate/src/utils/SafeTransferLib.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address,address)": "927da105",
							"approve(address,address,uint160,uint48)": "87517c45",
							"invalidateNonces(address,address,uint48)": "65d9723c",
							"invalidateUnorderedNonces(uint256,uint256)": "3ff9dcb1",
							"lockdown((address,address)[])": "cc53287f",
							"nonceBitmap(address,uint256)": "4fe02b44",
							"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)": "2b67b570",
							"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)": "2a2d80d1",
							"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)": "30f28b7a",
							"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)": "edd9444b",
							"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)": "137c29fe",
							"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)": "fe8ec1a7",
							"transferFrom((address,address,uint160,address)[])": "0d58b1db",
							"transferFrom(address,address,uint160,address)": "36c78516"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"AllowanceExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExcessiveInvalidation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidContractSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LengthMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"signatureDeadline\",\"type\":\"uint256\"}],\"name\":\"SignatureExpired\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"Lockdown\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"newNonce\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"oldNonce\",\"type\":\"uint48\"}],\"name\":\"NonceInvalidation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"name\":\"Permit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"word\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mask\",\"type\":\"uint256\"}],\"name\":\"UnorderedNonceInvalidation\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"newNonce\",\"type\":\"uint48\"}],\"name\":\"invalidateNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wordPos\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mask\",\"type\":\"uint256\"}],\"name\":\"invalidateUnorderedNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"internalType\":\"struct IAllowanceTransfer.TokenSpenderPair[]\",\"name\":\"approvals\",\"type\":\"tuple[]\"}],\"name\":\"lockdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nonceBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IAllowanceTransfer.PermitDetails[]\",\"name\":\"details\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sigDeadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowanceTransfer.PermitBatch\",\"name\":\"permitBatch\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IAllowanceTransfer.PermitDetails\",\"name\":\"details\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sigDeadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowanceTransfer.PermitSingle\",\"name\":\"permitSingle\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions\",\"name\":\"permitted\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails\",\"name\":\"transferDetails\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions[]\",\"name\":\"permitted\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitBatchTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions\",\"name\":\"permitted\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails\",\"name\":\"transferDetails\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypeString\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitWitnessTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions[]\",\"name\":\"permitted\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitBatchTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypeString\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitWitnessTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"internalType\":\"struct IAllowanceTransfer.AllowanceTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Users must approve Permit2 before calling any of the transfer functions.\",\"errors\":{\"AllowanceExpired(uint256)\":[{\"params\":{\"deadline\":\"The timestamp at which the allowed amount is no longer valid\"}}],\"InsufficientAllowance(uint256)\":[{\"params\":{\"amount\":\"The maximum amount allowed\"}}],\"InvalidAmount(uint256)\":[{\"params\":{\"maxAmount\":\"The maximum amount a spender can request to transfer\"}}],\"LengthMismatch()\":[{\"details\":\"If the spender does not need to transfer the number of tokens permitted, the spender can request amount 0 to be transferred\"}],\"SignatureExpired(uint256)\":[{\"params\":{\"signatureDeadline\":\"The timestamp at which a signature is no longer valid\"}}]},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Uses cached version if chainid and address are unchanged from construction.\"},\"approve(address,address,uint160,uint48)\":{\"details\":\"The packed allowance also holds a nonce, which will stay unchanged in approveSetting amount to type(uint160).max sets an unlimited approval\",\"params\":{\"amount\":\"The approved amount of the token\",\"expiration\":\"The timestamp at which the approval is no longer valid\",\"spender\":\"The spender address to approve\",\"token\":\"The token to approve\"}},\"invalidateNonces(address,address,uint48)\":{\"details\":\"Can't invalidate more than 2**16 nonces per transaction.\",\"params\":{\"newNonce\":\"The new nonce to set. Invalidates all nonces less than it.\",\"spender\":\"The spender to invalidate nonces for\",\"token\":\"The token to invalidate nonces for\"}},\"invalidateUnorderedNonces(uint256,uint256)\":{\"details\":\"The wordPos is maxed at type(uint248).max\",\"params\":{\"mask\":\"A bitmap masked against msg.sender's current bitmap at the word position\",\"wordPos\":\"A number to index the nonceBitmap at\"}},\"lockdown((address,address)[])\":{\"params\":{\"approvals\":\"Array of approvals to revoke.\"}},\"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)\":{\"details\":\"May fail if the owner's nonce was invalidated in-flight by invalidateNonce\",\"params\":{\"owner\":\"The owner of the tokens being approved\",\"permitSingle\":\"Data signed over by the owner specifying the terms of approval\",\"signature\":\"The owner's signature over the permit data\"}},\"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)\":{\"details\":\"May fail if the owner's nonce was invalidated in-flight by invalidateNonce\",\"params\":{\"owner\":\"The owner of the tokens being approved\",\"permitBatch\":\"Data signed over by the owner specifying the terms of approval\",\"signature\":\"The owner's signature over the permit data\"}},\"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)\":{\"details\":\"Reverts if the requested amount is greater than the permitted signed amount\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"The spender's requested transfer details for the permitted token\"}},\"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)\":{\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"Specifies the recipient and requested amount for the token transfer\"}},\"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)\":{\"details\":\"The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definitionReverts if the requested amount is greater than the permitted signed amount\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"The spender's requested transfer details for the permitted token\",\"witness\":\"Extra data to include when checking the user signature\",\"witnessTypeString\":\"The EIP-712 type definition for remaining string stub of the typehash\"}},\"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)\":{\"details\":\"The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"Specifies the recipient and requested amount for the token transfer\",\"witness\":\"Extra data to include when checking the user signature\",\"witnessTypeString\":\"The EIP-712 type definition for remaining string stub of the typehash\"}},\"transferFrom((address,address,uint160,address)[])\":{\"details\":\"Requires the from addresses to have approved at least the desired amount of tokens to msg.sender.\",\"params\":{\"transferDetails\":\"Array of owners, recipients, amounts, and tokens for the transfers\"}},\"transferFrom(address,address,uint160,address)\":{\"details\":\"Requires the from address to have approved at least the desired amount of tokens to msg.sender.\",\"params\":{\"amount\":\"The amount of the token to transfer\",\"from\":\"The address to transfer from\",\"to\":\"The address of the recipient\",\"token\":\"The token address to transfer\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"AllowanceExpired(uint256)\":[{\"notice\":\"Thrown when an allowance on a token has expired.\"}],\"ExcessiveInvalidation()\":[{\"notice\":\"Thrown when too many nonces are invalidated.\"}],\"InsufficientAllowance(uint256)\":[{\"notice\":\"Thrown when an allowance on a token has been depleted.\"}],\"InvalidAmount(uint256)\":[{\"notice\":\"Thrown when the requested amount for a transfer is larger than the permissioned amount\"}],\"InvalidContractSignature()\":[{\"notice\":\"Thrown when the recovered contract signature is incorrect\"}],\"InvalidNonce()\":[{\"notice\":\"Thrown when validating that the inputted nonce has not been used\"}],\"InvalidSignature()\":[{\"notice\":\"Thrown when the recovered signer is equal to the zero address\"}],\"InvalidSignatureLength()\":[{\"notice\":\"Thrown when the passed in signature is not a valid length\"}],\"InvalidSigner()\":[{\"notice\":\"Thrown when the recovered signer does not equal the claimedSigner\"}],\"LengthMismatch()\":[{\"notice\":\"Thrown when the number of tokens permissioned to a spender does not match the number of tokens being transferred\"}],\"SignatureExpired(uint256)\":[{\"notice\":\"Thrown when validating an inputted signature that is stale\"}]},\"events\":{\"Approval(address,address,address,uint160,uint48)\":{\"notice\":\"Emits an event when the owner successfully sets permissions on a token for the spender.\"},\"Lockdown(address,address,address)\":{\"notice\":\"Emits an event when the owner sets the allowance back to 0 with the lockdown function.\"},\"NonceInvalidation(address,address,address,uint48,uint48)\":{\"notice\":\"Emits an event when the owner successfully invalidates an ordered nonce.\"},\"Permit(address,address,address,uint160,uint48,uint48)\":{\"notice\":\"Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender.\"},\"UnorderedNonceInvalidation(address,uint256,uint256)\":{\"notice\":\"Emits an event when the owner successfully invalidates an unordered nonce.\"}},\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"Returns the domain separator for the current chain.\"},\"allowance(address,address,address)\":{\"notice\":\"Maps users to tokens to spender addresses and information about the approval on the token\"},\"approve(address,address,uint160,uint48)\":{\"notice\":\"Approves the spender to use up to amount of the specified token up until the expiration\"},\"invalidateNonces(address,address,uint48)\":{\"notice\":\"Invalidate nonces for a given (token, spender) pair\"},\"invalidateUnorderedNonces(uint256,uint256)\":{\"notice\":\"Invalidates the bits specified in mask for the bitmap at the word position\"},\"lockdown((address,address)[])\":{\"notice\":\"Enables performing a \\\"lockdown\\\" of the sender's Permit2 identity by batch revoking approvals\"},\"nonceBitmap(address,uint256)\":{\"notice\":\"A map from token owner address and a caller specified word index to a bitmap. Used to set bits in the bitmap to prevent against signature replay protection\"},\"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)\":{\"notice\":\"Permit a spender to a given amount of the owners token via the owner's EIP-712 signature\"},\"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)\":{\"notice\":\"Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature\"},\"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)\":{\"notice\":\"Transfers a token using a signed permit message\"},\"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)\":{\"notice\":\"Transfers multiple tokens using a signed permit message\"},\"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)\":{\"notice\":\"Transfers a token using a signed permit messageIncludes extra data provided by the caller to verify signature over\"},\"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)\":{\"notice\":\"Transfers multiple tokens using a signed permit messageIncludes extra data provided by the caller to verify signature over\"},\"transferFrom((address,address,uint160,address)[])\":{\"notice\":\"Transfer approved tokens in a batch\"},\"transferFrom(address,address,uint160,address)\":{\"notice\":\"Transfer approved tokens from one address to another\"}},\"notice\":\"Permit2 handles signature-based transfers in SignatureTransfer and allowance-based transfers in AllowanceTransfer.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/permit2/Permit2.sol\":\"Permit2\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x37f0ac203b6ef605c9533e1a739477e8e9dcea90710b40e645a367f8a21ace29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0104d72aeaec1cd66cc232e7de7b7ead08608efcc179491b8a66387614670b0\",\"dweb:/ipfs/QmfAZDyuNC9FXXbnJUwqHNwmAK6uRrXxtWEytLsxjskPsN\"]},\"contracts/contracts/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]},\"contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0a546b8535127fb4a49d36d5f306fd5a8bbe6125a1852f935b9bb85a04c1acef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b99651e2df98e283a97c46d8d1ac4eff0d6a3618e25f7f85294472a670b541c\",\"dweb:/ipfs/QmYRy5G8fXE8BfmyvGEbESEYZPPg3zJEFxHzR5GJZEMMTk\"]},\"contracts/contracts/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0x16a051e45a3f1ab341a8560aa106c483c3d0a3be4abc52225651c78939b18f93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7cda3c6ed2db1454b4a6ec1e418956d199019085d92163a038d0064615a5acb\",\"dweb:/ipfs/QmWDfZwi8jcGFBuiwHKq6iBWCZq2mA8HmkM9NNTzotMpXH\"]},\"contracts/contracts/lib/Allowance.sol\":{\"keccak256\":\"0xc44ad59f9c6306b5f3d019ce95e29a5de88862f7bdc51375d44c15fca536bf2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f33f02f549c1d7dcb45a592f1b4082ceabbea5f9a7190567e85ffd23b670788\",\"dweb:/ipfs/QmUnBU5BoudGbN3dtLTci1xb6q5SxpPwTBpAC1cq6nNEg2\"]},\"contracts/contracts/lib/PermitHash.sol\":{\"keccak256\":\"0xbd0fcb52a5a753f77b10f30d653e638bf40705a0aa10cf96978ef82ea926e637\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de007b53ff2757733e919d17d53dc0c0b1e1f856132e0004dd9f79272472a093\",\"dweb:/ipfs/QmST5dKQYMZWD6magJPUXsJSWf57Rr5nWi1AgethhAvoCj\"]},\"contracts/contracts/lib/SignatureVerification.sol\":{\"keccak256\":\"0xb5cf5e3c9407dc26f95d01170dbc2c82cd5c210ecc39ad3559b314df0c0c90d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a5929df7b7ad16e2a429e5e76712f95d914d1e72d8350cd3b445e84058bbb2\",\"dweb:/ipfs/QmXBnuFKWjK3huwN9qoePSyxT9qwpdGXfpTgjApRPiQsrd\"]},\"contracts/contracts/permit2/AllowanceTransfer.sol\":{\"keccak256\":\"0x24707e751d61cb52795c451160129d50e164695918474e64d1f1f35cac90f18e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b262f113e538b677bcdb90403d8b2697b71f7a382824c3957f9641047489792b\",\"dweb:/ipfs/QmXr23z5Ks4jrPiFM9JSqi8J54Pp3Levz9y3Qdngx1uqVk\"]},\"contracts/contracts/permit2/EIP712.sol\":{\"keccak256\":\"0x8bf0e994a040c5de83f9848dca37b71b45bf09d6b8028a925a76d1c917654b6d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0435626dccaaa530a392320a9099d489e6d28155c8a20cb86579517f5336a2\",\"dweb:/ipfs/QmbVkXYsMxqYoiTH5WLNjhToJWbjMSuqGLGVBj7SU69khP\"]},\"contracts/contracts/permit2/Permit2.sol\":{\"keccak256\":\"0xac93543e40a1d1833efba18dd3c5f9626fc270a9805b26affd48ed779ff85277\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00a4c6ca95b770f2fd1c9fa8892f06ea6475d30f01c3a8ad35c40a850b77e179\",\"dweb:/ipfs/Qmcfyk8G7MeGGTWbnxv4RxRiaNbC49ewkHyauKkS2c4Fk4\"]},\"contracts/contracts/permit2/PermitErrors.sol\":{\"keccak256\":\"0x42d48b78944c43d75496f49a62e1a9b858c2ecacc09f016a68204f7cac9ab014\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ed8221dc84848fd5aa1234b68d31adf9bded04a56175e545fe0119a5a886674\",\"dweb:/ipfs/QmQQGA8GFVvTDdism9JxAFqFoy37fokryqwnzixeQNenui\"]},\"contracts/contracts/permit2/SignatureTransfer.sol\":{\"keccak256\":\"0x0767c6a0bb19bc17f13722a025a884443f42fa81a0ed9ee59e2c20635cb42f65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b47baa98ef94393858a3efb69f730a00fdb74d7358491f1279bc4e4a0793caeb\",\"dweb:/ipfs/QmRC7FW4DonX61oYtu7RFv6uza1ZTxG3vSkEWB5biHZirV\"]},\"solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x6ab948013c2c7ca6351e593600425b0ec6df9035320280c678e735bce16e996b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2ab977d0eeb2bf458f9798250215c646d2f3b1f90b5a7e2b506fdf3335c0f060\",\"dweb:/ipfs/QmYPRoPhNtBAmCSq7imN1scMVpKNQvMTpoqab3tXUx5Tnv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1775,
								"contract": "contracts/contracts/permit2/Permit2.sol:Permit2",
								"label": "nonceBitmap",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 1112,
								"contract": "contracts/contracts/permit2/Permit2.sol:Permit2",
								"label": "allowance",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_struct(PackedAllowance)106_storage)))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_struct(PackedAllowance)106_storage)))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance)))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_mapping(t_address,t_struct(PackedAllowance)106_storage))"
							},
							"t_mapping(t_address,t_mapping(t_address,t_struct(PackedAllowance)106_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(PackedAllowance)106_storage)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_struct(PackedAllowance)106_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct IAllowanceTransfer.PackedAllowance)",
								"numberOfBytes": "32",
								"value": "t_struct(PackedAllowance)106_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(PackedAllowance)106_storage": {
								"encoding": "inplace",
								"label": "struct IAllowanceTransfer.PackedAllowance",
								"members": [
									{
										"astId": 101,
										"contract": "contracts/contracts/permit2/Permit2.sol:Permit2",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint160"
									},
									{
										"astId": 103,
										"contract": "contracts/contracts/permit2/Permit2.sol:Permit2",
										"label": "expiration",
										"offset": 20,
										"slot": "0",
										"type": "t_uint48"
									},
									{
										"astId": 105,
										"contract": "contracts/contracts/permit2/Permit2.sol:Permit2",
										"label": "nonce",
										"offset": 26,
										"slot": "0",
										"type": "t_uint48"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint160": {
								"encoding": "inplace",
								"label": "uint160",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint48": {
								"encoding": "inplace",
								"label": "uint48",
								"numberOfBytes": "6"
							}
						}
					},
					"userdoc": {
						"errors": {
							"AllowanceExpired(uint256)": [
								{
									"notice": "Thrown when an allowance on a token has expired."
								}
							],
							"ExcessiveInvalidation()": [
								{
									"notice": "Thrown when too many nonces are invalidated."
								}
							],
							"InsufficientAllowance(uint256)": [
								{
									"notice": "Thrown when an allowance on a token has been depleted."
								}
							],
							"InvalidAmount(uint256)": [
								{
									"notice": "Thrown when the requested amount for a transfer is larger than the permissioned amount"
								}
							],
							"InvalidContractSignature()": [
								{
									"notice": "Thrown when the recovered contract signature is incorrect"
								}
							],
							"InvalidNonce()": [
								{
									"notice": "Thrown when validating that the inputted nonce has not been used"
								}
							],
							"InvalidSignature()": [
								{
									"notice": "Thrown when the recovered signer is equal to the zero address"
								}
							],
							"InvalidSignatureLength()": [
								{
									"notice": "Thrown when the passed in signature is not a valid length"
								}
							],
							"InvalidSigner()": [
								{
									"notice": "Thrown when the recovered signer does not equal the claimedSigner"
								}
							],
							"LengthMismatch()": [
								{
									"notice": "Thrown when the number of tokens permissioned to a spender does not match the number of tokens being transferred"
								}
							],
							"SignatureExpired(uint256)": [
								{
									"notice": "Thrown when validating an inputted signature that is stale"
								}
							]
						},
						"events": {
							"Approval(address,address,address,uint160,uint48)": {
								"notice": "Emits an event when the owner successfully sets permissions on a token for the spender."
							},
							"Lockdown(address,address,address)": {
								"notice": "Emits an event when the owner sets the allowance back to 0 with the lockdown function."
							},
							"NonceInvalidation(address,address,address,uint48,uint48)": {
								"notice": "Emits an event when the owner successfully invalidates an ordered nonce."
							},
							"Permit(address,address,address,uint160,uint48,uint48)": {
								"notice": "Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender."
							},
							"UnorderedNonceInvalidation(address,uint256,uint256)": {
								"notice": "Emits an event when the owner successfully invalidates an unordered nonce."
							}
						},
						"kind": "user",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"notice": "Returns the domain separator for the current chain."
							},
							"allowance(address,address,address)": {
								"notice": "Maps users to tokens to spender addresses and information about the approval on the token"
							},
							"approve(address,address,uint160,uint48)": {
								"notice": "Approves the spender to use up to amount of the specified token up until the expiration"
							},
							"invalidateNonces(address,address,uint48)": {
								"notice": "Invalidate nonces for a given (token, spender) pair"
							},
							"invalidateUnorderedNonces(uint256,uint256)": {
								"notice": "Invalidates the bits specified in mask for the bitmap at the word position"
							},
							"lockdown((address,address)[])": {
								"notice": "Enables performing a \"lockdown\" of the sender's Permit2 identity by batch revoking approvals"
							},
							"nonceBitmap(address,uint256)": {
								"notice": "A map from token owner address and a caller specified word index to a bitmap. Used to set bits in the bitmap to prevent against signature replay protection"
							},
							"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)": {
								"notice": "Permit a spender to a given amount of the owners token via the owner's EIP-712 signature"
							},
							"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)": {
								"notice": "Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature"
							},
							"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)": {
								"notice": "Transfers a token using a signed permit message"
							},
							"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)": {
								"notice": "Transfers multiple tokens using a signed permit message"
							},
							"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)": {
								"notice": "Transfers a token using a signed permit messageIncludes extra data provided by the caller to verify signature over"
							},
							"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)": {
								"notice": "Transfers multiple tokens using a signed permit messageIncludes extra data provided by the caller to verify signature over"
							},
							"transferFrom((address,address,uint160,address)[])": {
								"notice": "Transfer approved tokens in a batch"
							},
							"transferFrom(address,address,uint160,address)": {
								"notice": "Transfer approved tokens from one address to another"
							}
						},
						"notice": "Permit2 handles signature-based transfers in SignatureTransfer and allowance-based transfers in AllowanceTransfer.",
						"version": 1
					}
				}
			},
			"contracts/contracts/permit2/SignatureTransfer.sol": {
				"SignatureTransfer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "maxAmount",
									"type": "uint256"
								}
							],
							"name": "InvalidAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidContractSignature",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidSignature",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "LengthMismatch",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "signatureDeadline",
									"type": "uint256"
								}
							],
							"name": "SignatureExpired",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "word",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "mask",
									"type": "uint256"
								}
							],
							"name": "UnorderedNonceInvalidation",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "wordPos",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "mask",
									"type": "uint256"
								}
							],
							"name": "invalidateUnorderedNonces",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "nonceBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct ISignatureTransfer.TokenPermissions",
											"name": "permitted",
											"type": "tuple"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.PermitTransferFrom",
									"name": "permit",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "requestedAmount",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.SignatureTransferDetails",
									"name": "transferDetails",
									"type": "tuple"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permitTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct ISignatureTransfer.TokenPermissions[]",
											"name": "permitted",
											"type": "tuple[]"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.PermitBatchTransferFrom",
									"name": "permit",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "requestedAmount",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.SignatureTransferDetails[]",
									"name": "transferDetails",
									"type": "tuple[]"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permitTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct ISignatureTransfer.TokenPermissions",
											"name": "permitted",
											"type": "tuple"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.PermitTransferFrom",
									"name": "permit",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "requestedAmount",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.SignatureTransferDetails",
									"name": "transferDetails",
									"type": "tuple"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "witness",
									"type": "bytes32"
								},
								{
									"internalType": "string",
									"name": "witnessTypeString",
									"type": "string"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permitWitnessTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct ISignatureTransfer.TokenPermissions[]",
											"name": "permitted",
											"type": "tuple[]"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.PermitBatchTransferFrom",
									"name": "permit",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "requestedAmount",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.SignatureTransferDetails[]",
									"name": "transferDetails",
									"type": "tuple[]"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "witness",
									"type": "bytes32"
								},
								{
									"internalType": "string",
									"name": "witnessTypeString",
									"type": "string"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permitWitnessTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"InvalidAmount(uint256)": [
								{
									"params": {
										"maxAmount": "The maximum amount a spender can request to transfer"
									}
								}
							],
							"LengthMismatch()": [
								{
									"details": "If the spender does not need to transfer the number of tokens permitted, the spender can request amount 0 to be transferred"
								}
							],
							"SignatureExpired(uint256)": [
								{
									"params": {
										"signatureDeadline": "The timestamp at which a signature is no longer valid"
									}
								}
							]
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Uses cached version if chainid and address are unchanged from construction."
							},
							"invalidateUnorderedNonces(uint256,uint256)": {
								"details": "The wordPos is maxed at type(uint248).max",
								"params": {
									"mask": "A bitmap masked against msg.sender's current bitmap at the word position",
									"wordPos": "A number to index the nonceBitmap at"
								}
							},
							"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)": {
								"details": "Reverts if the requested amount is greater than the permitted signed amount",
								"params": {
									"owner": "The owner of the tokens to transfer",
									"permit": "The permit data signed over by the owner",
									"signature": "The signature to verify",
									"transferDetails": "The spender's requested transfer details for the permitted token"
								}
							},
							"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)": {
								"params": {
									"owner": "The owner of the tokens to transfer",
									"permit": "The permit data signed over by the owner",
									"signature": "The signature to verify",
									"transferDetails": "Specifies the recipient and requested amount for the token transfer"
								}
							},
							"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)": {
								"details": "The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definitionReverts if the requested amount is greater than the permitted signed amount",
								"params": {
									"owner": "The owner of the tokens to transfer",
									"permit": "The permit data signed over by the owner",
									"signature": "The signature to verify",
									"transferDetails": "The spender's requested transfer details for the permitted token",
									"witness": "Extra data to include when checking the user signature",
									"witnessTypeString": "The EIP-712 type definition for remaining string stub of the typehash"
								}
							},
							"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)": {
								"details": "The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition",
								"params": {
									"owner": "The owner of the tokens to transfer",
									"permit": "The permit data signed over by the owner",
									"signature": "The signature to verify",
									"transferDetails": "Specifies the recipient and requested amount for the token transfer",
									"witness": "Extra data to include when checking the user signature",
									"witnessTypeString": "The EIP-712 type definition for remaining string stub of the typehash"
								}
							}
						},
						"stateVariables": {
							"nonceBitmap": {
								"details": "Uses unordered nonces so that permit messages do not need to be spent in a certain orderThe mapping is indexed first by the token owner, then by an index specified in the nonceIt returns a uint256 bitmapThe index, or wordPosition is capped at type(uint248).max"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n  0xc0\n  jumpi(tag_1, callvalue)\n    /* \"contracts/contracts/permit2/EIP712.sol\":919:932  block.chainid */\n  chainid\n    /* \"contracts/contracts/permit2/EIP712.sol\":900:932  _CACHED_CHAIN_ID = block.chainid */\n  0xa0\n  mstore\n    /* \"contracts/contracts/permit2/EIP712.sol\":1632:1692  abi.encode(typeHash, nameHash, block.chainid, address(this)) */\n  0x20\n  dup2\n  add\n    /* \"contracts/contracts/permit2/EIP712.sol\":789:869  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n  0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n    /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n  dup2\n  mstore\n    /* \"contracts/contracts/permit2/EIP712.sol\":717:737  keccak256(\"Permit2\") */\n  0x9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a\n    /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n  0x40\n  dup4\n  add\n  mstore\n    /* \"contracts/contracts/permit2/EIP712.sol\":919:932  block.chainid */\n  chainid\n    /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n  0x60\n  dup4\n  add\n  mstore\n    /* \"contracts/contracts/permit2/EIP712.sol\":1686:1690  this */\n  address\n    /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n  0x80\n  dup4\n  add\n  mstore\n  0x80\n    /* \"contracts/contracts/permit2/EIP712.sol\":1632:1692  abi.encode(typeHash, nameHash, block.chainid, address(this)) */\n  dup3\n  mstore\n    /* \"contracts/contracts/permit2/EIP712.sol\":900:932  _CACHED_CHAIN_ID = block.chainid */\n  0xa0\n    /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n  dup3\n  add\n  swap2\n  dup1\n  dup4\n  lt\n  0x01\n  dup1\n  0x40\n  shl\n  sub\n  dup5\n  gt\n  or\n  tag_3\n  jumpi\n  dup3\n  0x40\n  mstore\n  mload\n    /* \"contracts/contracts/permit2/EIP712.sol\":1622:1693  keccak256(abi.encode(typeHash, nameHash, block.chainid, address(this))) */\n  swap1\n  keccak256\n    /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n  0x80\n    /* \"contracts/contracts/permit2/EIP712.sol\":942:1016  _CACHED_DOMAIN_SEPARATOR = _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME) */\n  mstore\n    /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  mload(0x80)\n  dup2\n  assignImmutable(\"0x4f4ac30ff8bfcef8cd1068d1427faf7fb52fa3a1610b1f430e1f69a91ebb9673\")\n    /* \"contracts/contracts/permit2/EIP712.sol\":900:932  _CACHED_CHAIN_ID = block.chainid */\n  0xa0\n    /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n  mload\n  dup2\n  assignImmutable(\"0x3ab4fb69c8e122442af87ae588015f836e7cde3029bbb6dab1983bc840231d63\")\n  return\ntag_3:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      0x40\n      0x80\n      dup2\n      mstore\n      0x04\n      swap1\n      dup2\n      calldatasize\n      lt\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      0x00\n      swap1\n      dup2\n      calldataload\n      0xe0\n      shr\n      dup1\n      0x137c29fe\n      eq\n      tag_31\n      jumpi\n      dup1\n      0x30f28b7a\n      eq\n      tag_33\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_35\n      jumpi\n      dup1\n      0x3ff9dcb1\n      eq\n      tag_37\n      jumpi\n      dup1\n      0x4fe02b44\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xedd9444b\n      eq\n      tag_41\n      jumpi\n      0xfe8ec1a7\n      eq\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      jumpi(tag_47, callvalue)\n      jumpi(tag_47, slt(add(not(0x03), calldatasize), 0xc0))\n      sub(shl(0x40, 0x01), 0x01)\n      dup4\n      calldataload\n      dup2\n      dup2\n      gt\n      tag_49\n      jumpi\n      tag_51\n      swap1\n      calldatasize\n      swap1\n      dup7\n      add\n      tag_11\n      jump\t// in\n    tag_51:\n      calldataload(0x24)\n      dup3\n      dup2\n      gt\n      tag_52\n      jumpi\n      tag_54\n      swap1\n      calldatasize\n      swap1\n      dup8\n      add\n      tag_12\n      jump\t// in\n    tag_54:\n      tag_55\n      tag_7\n      jump\t// in\n    tag_55:\n      swap2\n      calldataload(0x84)\n      dup6\n      dup2\n      gt\n      tag_56\n      jumpi\n      tag_58\n      swap1\n      calldatasize\n      swap1\n      dup11\n      add\n      tag_9\n      jump\t// in\n    tag_58:\n      swap9\n      swap1\n      swap6\n      calldataload(0xa4)\n      swap1\n      dup2\n      gt\n      tag_59\n      jumpi\n      tag_61\n      swap2\n      calldatasize\n      swap2\n      add\n      tag_9\n      jump\t// in\n    tag_61:\n      swap7\n      swap1\n      swap6\n      dup2\n      mload\n      swap1\n      tag_62\n      dup3\n      tag_2\n      jump\t// in\n    tag_62:\n      0x6b\n      dup3\n      mstore\n      0x5065726d697442617463685769746e6573735472616e7366657246726f6d2854\n      0x20\n      dup4\n      add\n      mstore\n      0x6f6b656e5065726d697373696f6e735b5d207065726d69747465642c61646472\n      dup4\n      dup4\n      add\n      mstore\n      0x657373207370656e6465722c75696e74323536206e6f6e63652c75696e743235\n      0x60\n      dup4\n      add\n      mstore\n      shl(0xaa, 0x0d88191958591b1a5b994b)\n      0x80\n      dup4\n      add\n      mstore\n      dup3\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":4678:4764  abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString) */\n      swap11\n      dup12\n      swap2\n      dup2\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      tag_63\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      0x20\n        /* \"contracts/contracts/lib/PermitHash.sol\":4678:4764  abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString) */\n      dup6\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      dup1\n      swap7\n      tag_15\n      jump\t// in\n    tag_63:\n      swap2\n      dup3\n      calldatacopy\n      add\n      dup11\n      dup2\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":4678:4764  abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString) */\n      sub\n        /* \"contracts/contracts/lib/PermitHash.sol\":4133:4213  abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString) */\n      swap10\n        /* \"contracts/contracts/lib/PermitHash.sol\":4678:4764  abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString) */\n      tag_64\n        /* \"contracts/contracts/lib/PermitHash.sol\":4133:4213  abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString) */\n      not(0x1f)\n        /* \"contracts/contracts/lib/PermitHash.sol\":4678:4764  abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString) */\n      swap12\n      dup13\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_5\n      jump\t// in\n    tag_64:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":4668:4765  keccak256(abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString)) */\n      swap1\n      keccak256\n        /* \"contracts/contracts/lib/PermitHash.sol\":4799:4815  permit.permitted */\n      swap1\n      dup6\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":4873:4900  new bytes32[](numPermitted) */\n      tag_65\n      dup2\n      tag_21\n      jump\t// in\n    tag_65:\n        /* \"contracts/contracts/lib/PermitHash.sol\":4916:4929  uint256 i = 0 */\n      swap1\n      dup11\n        /* \"contracts/contracts/lib/PermitHash.sol\":4931:4947  i < numPermitted */\n    tag_66:\n      dup2\n      dup2\n      lt\n      tag_67\n      jumpi\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      pop\n      pop\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":3572:3581  signature */\n      tag_69\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      swap10\n      swap11\n        /* \"contracts/contracts/lib/PermitHash.sol\":5088:5322  abi.encode(... */\n      tag_70\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      swap2\n      dup4\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":5152:5191  abi.encodePacked(tokenPermissionHashes) */\n      tag_71\n      dup2\n        /* \"contracts/contracts/lib/PermitHash.sol\":1254:1427  keccak256(... */\n      tag_72\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      0x20\n        /* \"contracts/contracts/lib/PermitHash.sol\":5152:5191  abi.encodePacked(tokenPermissionHashes) */\n      dup3\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":1254:1427  keccak256(... */\n      dup1\n      swap6\n      tag_24\n      jump\t// in\n    tag_72:\n        /* \"contracts/contracts/lib/PermitHash.sol\":5152:5191  abi.encodePacked(tokenPermissionHashes) */\n      sub\n      dup5\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_5\n      jump\t// in\n    tag_71:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":5142:5192  keccak256(abi.encodePacked(tokenPermissionHashes)) */\n      swap1\n      keccak256\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      0x20\n        /* \"contracts/contracts/lib/PermitHash.sol\":5238:5250  permit.nonce */\n      dup10\n      dup2\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":5268:5283  permit.deadline */\n      dup6\n      dup12\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      swap6\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":5088:5322  abi.encode(... */\n      swap2\n      dup3\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      swap7\n      dup8\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      0x40\n      dup3\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":5210:5220  msg.sender */\n      caller\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      0x60\n      dup3\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      0x80\n      dup2\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      swap2\n      swap1\n      swap2\n      mstore\n      0xa0\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      dup2\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      swap4\n      swap1\n      swap4\n      mstore\n      calldataload(0x64)\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      0xc0\n      dup5\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mstore\n      dup3\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      0xe0\n      dup2\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":5088:5322  abi.encode(... */\n    tag_73:\n      sub\n      swap1\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_5\n      jump\t// in\n    tag_70:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":5065:5332  keccak256(... */\n      swap1\n      keccak256\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":3572:3581  signature */\n      swap4\n      tag_26\n      jump\t// in\n    tag_69:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      dup1\n      return\n        /* \"contracts/contracts/lib/PermitHash.sol\":4949:4952  ++i */\n    tag_67:\n        /* \"contracts/contracts/lib/PermitHash.sol\":5017:5033  permit.permitted */\n      dup1\n        /* \"contracts/contracts/lib/PermitHash.sol\":4995:5037  _hashTokenPermissions(permit.permitted[i]) */\n      tag_74\n        /* \"contracts/contracts/lib/PermitHash.sol\":5017:5036  permit.permitted[i] */\n      tag_75\n        /* \"contracts/contracts/lib/PermitHash.sol\":4949:4952  ++i */\n      tag_76\n        /* \"contracts/contracts/lib/PermitHash.sol\":5017:5033  permit.permitted */\n      swap4\n      dup13\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":5017:5036  permit.permitted[i] */\n      tag_23\n      jump\t// in\n    tag_75:\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":4995:5037  _hashTokenPermissions(permit.permitted[i]) */\n      tag_14\n      jump\t// in\n    tag_74:\n        /* \"contracts/contracts/lib/PermitHash.sol\":4968:5037  tokenPermissionHashes[i] = _hashTokenPermissions(permit.permitted[i]) */\n      tag_77\n      dup3\n      dup7\n      tag_23\n      jump\t// in\n    tag_77:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":4949:4952  ++i */\n      tag_22\n      jump\t// in\n    tag_76:\n        /* \"contracts/contracts/lib/PermitHash.sol\":4916:4929  uint256 i = 0 */\n      jump(tag_66)\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n    tag_59:\n      dup9\n      dup1\n      revert\n    tag_56:\n      dup8\n      dup1\n      revert\n    tag_52:\n      dup5\n      dup1\n      revert\n    tag_49:\n      dup4\n      dup1\n      revert\n    tag_47:\n      pop\n      dup1\n      revert\n    tag_41:\n      pop\n      swap2\n      jumpi(tag_47, callvalue)\n      jumpi(tag_47, slt(add(not(0x03), calldatasize), 0x80))\n      sub(shl(0x40, 0x01), 0x01)\n      swap1\n      dup1\n      calldataload\n      dup3\n      dup2\n      gt\n      tag_49\n      jumpi\n      tag_84\n      swap1\n      calldatasize\n      swap1\n      dup4\n      add\n      tag_11\n      jump\t// in\n    tag_84:\n      calldataload(0x24)\n      dup4\n      dup2\n      gt\n      tag_52\n      jumpi\n      tag_87\n      swap1\n      calldatasize\n      swap1\n      dup5\n      add\n      tag_12\n      jump\t// in\n    tag_87:\n      swap4\n      swap1\n      swap3\n      tag_88\n      tag_7\n      jump\t// in\n    tag_88:\n      swap2\n      calldataload(0x64)\n      swap1\n      dup2\n      gt\n      tag_89\n      jumpi\n      tag_91\n      swap2\n      calldatasize\n      swap2\n      add\n      tag_9\n      jump\t// in\n    tag_91:\n        /* \"contracts/contracts/lib/PermitHash.sol\":3353:3369  permit.permitted */\n      swap5\n      swap1\n      swap4\n      dup4\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":3427:3454  new bytes32[](numPermitted) */\n      swap8\n      tag_92\n      dup10\n      tag_21\n      jump\t// in\n    tag_92:\n        /* \"contracts/contracts/lib/PermitHash.sol\":3470:3483  uint256 i = 0 */\n      swap9\n      dup9\n        /* \"contracts/contracts/lib/PermitHash.sol\":3485:3501  i < numPermitted */\n    tag_93:\n      dup2\n      dup2\n      lt\n      tag_94\n      jumpi\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      pop\n      pop\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":3100:3109  signature */\n      tag_69\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      swap8\n      swap9\n      dup2\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":3734:3773  abi.encodePacked(tokenPermissionHashes) */\n      tag_97\n      dup2\n        /* \"contracts/contracts/lib/PermitHash.sol\":1254:1427  keccak256(... */\n      tag_98\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      0x20\n        /* \"contracts/contracts/lib/PermitHash.sol\":3734:3773  abi.encodePacked(tokenPermissionHashes) */\n      dup3\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":1254:1427  keccak256(... */\n      dup1\n      swap6\n      tag_24\n      jump\t// in\n    tag_98:\n        /* \"contracts/contracts/lib/PermitHash.sol\":3734:3773  abi.encodePacked(tokenPermissionHashes) */\n      sub\n        /* \"contracts/contracts/lib/PermitHash.sol\":4133:4213  abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString) */\n      not(0x1f)\n        /* \"contracts/contracts/lib/PermitHash.sol\":3734:3773  abi.encodePacked(tokenPermissionHashes) */\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_5\n      jump\t// in\n    tag_97:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":3724:3774  keccak256(abi.encodePacked(tokenPermissionHashes)) */\n      swap1\n      keccak256\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      0x20\n        /* \"contracts/contracts/lib/PermitHash.sol\":3820:3832  permit.nonce */\n      dup7\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":3850:3865  permit.deadline */\n      dup3\n      dup8\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      swap1\n      dup4\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":3642:3879  abi.encode(... */\n      swap3\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      0x20\n        /* \"contracts/contracts/lib/PermitHash.sol\":3642:3879  abi.encode(... */\n      dup5\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      swap5\n        /* \"contracts/contracts/lib/PermitHash.sol\":1254:1427  keccak256(... */\n      0xfcf35f5ac6a2c28868dc44c302166470266239195f02b0ee408334829333b766\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      dup7\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      dup5\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":3792:3802  msg.sender */\n      caller\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      0x60\n      dup5\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mstore\n      0x80\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      dup4\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      0xa0\n      dup3\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      0xa0\n        /* \"contracts/contracts/lib/PermitHash.sol\":3642:3879  abi.encode(... */\n      dup2\n      mstore\n      tag_70\n      dup2\n      tag_4\n      jump\t// in\n        /* \"contracts/contracts/lib/PermitHash.sol\":3503:3506  ++i */\n    tag_94:\n        /* \"contracts/contracts/lib/PermitHash.sol\":3571:3587  permit.permitted */\n      dup1\n      dup12\n        /* \"contracts/contracts/lib/PermitHash.sol\":3522:3591  tokenPermissionHashes[i] = _hashTokenPermissions(permit.permitted[i]) */\n      tag_77\n        /* \"contracts/contracts/lib/PermitHash.sol\":3571:3587  permit.permitted */\n      dup3\n        /* \"contracts/contracts/lib/PermitHash.sol\":3549:3591  _hashTokenPermissions(permit.permitted[i]) */\n      tag_101\n        /* \"contracts/contracts/lib/PermitHash.sol\":3571:3590  permit.permitted[i] */\n      tag_75\n        /* \"contracts/contracts/lib/PermitHash.sol\":3503:3506  ++i */\n      tag_103\n        /* \"contracts/contracts/lib/PermitHash.sol\":3571:3587  permit.permitted */\n      swap7\n      dup14\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":3571:3590  permit.permitted[i] */\n      tag_23\n      jump\t// in\n        /* \"contracts/contracts/lib/PermitHash.sol\":3549:3591  _hashTokenPermissions(permit.permitted[i]) */\n    tag_101:\n        /* \"contracts/contracts/lib/PermitHash.sol\":3522:3591  tokenPermissionHashes[i] = _hashTokenPermissions(permit.permitted[i]) */\n      swap3\n      tag_23\n      jump\t// in\n        /* \"contracts/contracts/lib/PermitHash.sol\":3503:3506  ++i */\n    tag_103:\n        /* \"contracts/contracts/lib/PermitHash.sol\":3470:3483  uint256 i = 0 */\n      jump(tag_93)\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n    tag_89:\n      dup7\n      dup1\n      revert\n    tag_39:\n      pop\n      dup3\n      jumpi(tag_108, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_108\n      jumpi\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      swap1\n      dup2\n      swap1\n      sub\n      tag_108\n      jumpi\n      dup3\n      dup3\n      swap2\n      0x20\n      swap5\n      mstore\n      dup1\n      dup5\n      mstore\n      dup2\n      dup2\n      keccak256\n      calldataload(0x24)\n      dup3\n      mstore\n      dup5\n      mstore\n      keccak256\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_108:\n      dup3\n      dup1\n      revert\n    tag_37:\n      pop\n      dup3\n      jumpi(tag_108, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_108\n      jumpi\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":5308:5361  UnorderedNonceInvalidation(msg.sender, wordPos, mask) */\n      0x3704902f963766a4e561bbaab6e6cdc1b1dd12f6e9e99648da8843b3f46b918d\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      swap1\n      calldataload\n      swap2\n      calldataload(0x24)\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":5264:5274  msg.sender */\n      caller\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      dup6\n      mstore\n      dup5\n      0x20\n      mstore\n      dup2\n      dup6\n      keccak256\n      dup5\n      dup7\n      mstore\n      0x20\n      mstore\n      dup2\n      dup6\n      keccak256\n      dup2\n      dup2\n      sload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":5252:5292  nonceBitmap[msg.sender][wordPos] |= mask */\n      or\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      swap1\n      sstore\n      dup2\n      mload\n      swap4\n      dup5\n      mstore\n      0x20\n      dup5\n      add\n      mstore\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":5264:5274  msg.sender */\n      caller\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":5308:5361  UnorderedNonceInvalidation(msg.sender, wordPos, mask) */\n      swap3\n      log2\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      dup1\n      return\n    tag_35:\n      pop\n      jumpi(tag_47, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_47\n      jumpi\n      0x20\n      swap1\n      tag_118\n      tag_13\n      jump\t// in\n    tag_118:\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_33:\n      pop\n      dup3\n      swap1\n      jumpi(tag_108, callvalue)\n      jumpi(tag_108, slt(add(not(0x03), calldatasize), 0x0100))\n      tag_123\n      calldatasize\n      tag_8\n      jump\t// in\n    tag_123:\n      swap1\n      dup1\n      add(calldatasize, not(0x83))\n      slt\n      tag_49\n      jumpi\n      tag_126\n      tag_6\n      jump\t// in\n    tag_126:\n      swap2\n      calldataload(0xe4)\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_127\n      jumpi\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":1148:1157  signature */\n      tag_69\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      swap5\n      tag_130\n      swap2\n      calldatasize\n      swap2\n      add\n      tag_9\n      jump\t// in\n    tag_130:\n        /* \"contracts/contracts/lib/PermitHash.sol\":3029:3045  permit.permitted */\n      swap4\n      swap1\n      swap3\n        /* \"contracts/contracts/lib/PermitHash.sol\":3007:3046  _hashTokenPermissions(permit.permitted) */\n      tag_131\n        /* \"contracts/contracts/lib/PermitHash.sol\":3029:3045  permit.permitted */\n      dup4\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":3007:3046  _hashTokenPermissions(permit.permitted) */\n      tag_14\n      jump\t// in\n    tag_131:\n        /* \"contracts/contracts/lib/PermitHash.sol\":3163:3175  permit.nonce */\n      0x20\n      dup5\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":3177:3192  permit.deadline */\n      dup3\n      dup6\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      swap1\n      dup4\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":3086:3193  abi.encode(_PERMIT_TRANSFER_FROM_TYPEHASH, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline) */\n      swap3\n        /* \"contracts/contracts/lib/PermitHash.sol\":3163:3175  permit.nonce */\n      0x20\n        /* \"contracts/contracts/lib/PermitHash.sol\":3086:3193  abi.encode(_PERMIT_TRANSFER_FROM_TYPEHASH, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline) */\n      dup5\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      swap5\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      0x939c21a48a8dbe3a9a2404a1d46691e4d39f6583d6ec6b35714604c986d80106\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      dup7\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      dup5\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":3151:3161  msg.sender */\n      caller\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      0x60\n      dup5\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      0x80\n      dup4\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      0xa0\n      dup3\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      0xa0\n        /* \"contracts/contracts/lib/PermitHash.sol\":3086:3193  abi.encode(_PERMIT_TRANSFER_FROM_TYPEHASH, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline) */\n      dup2\n      mstore\n      tag_132\n      dup2\n      tag_4\n      jump\t// in\n    tag_132:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":3063:3203  keccak256(... */\n      swap1\n      keccak256\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":1148:1157  signature */\n      swap2\n      tag_17\n      jump\t// in\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n    tag_127:\n      dup6\n      dup1\n      revert\n    tag_31:\n      pop\n      dup3\n      jumpi(tag_108, callvalue)\n      jumpi(tag_108, slt(add(not(0x03), calldatasize), 0x0140))\n      tag_137\n      calldatasize\n      tag_8\n      jump\t// in\n    tag_137:\n      swap2\n      dup1\n      add(calldatasize, not(0x83))\n      slt\n      tag_49\n      jumpi\n      tag_140\n      tag_6\n      jump\t// in\n    tag_140:\n      sub(shl(0x40, 0x01), 0x01)\n      swap4\n      swap1\n      calldataload(0x0104)\n      dup6\n      dup2\n      gt\n      tag_89\n      jumpi\n      tag_143\n      swap1\n      calldatasize\n      swap1\n      dup7\n      add\n      tag_9\n      jump\t// in\n    tag_143:\n      swap1\n      swap4\n      calldataload(0x0124)\n      swap7\n      dup8\n      gt\n      tag_56\n      jumpi\n      tag_146\n        /* \"contracts/contracts/lib/PermitHash.sol\":4322:4416  abi.encode(typeHash, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline, witness) */\n      tag_132\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      swap7\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":1613:1622  signature */\n      tag_69\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      swap9\n      calldatasize\n      swap2\n      add\n      tag_9\n      jump\t// in\n    tag_146:\n      swap7\n      swap1\n      swap6\n      dup3\n      mload\n      swap1\n      tag_149\n      dup3\n      tag_2\n      jump\t// in\n    tag_149:\n      0x64\n      dup3\n      mstore\n      0x5065726d69745769746e6573735472616e7366657246726f6d28546f6b656e50\n      0x20\n      dup4\n      add\n      mstore\n      0x65726d697373696f6e73207065726d69747465642c6164647265737320737065\n      dup5\n      dup4\n      add\n      mstore\n      0x6e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c\n      0x60\n      dup4\n      add\n      mstore\n      shl(0xe2, 0x1a5b994b)\n      0x80\n      dup4\n      add\n      mstore\n      dup4\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":4133:4213  abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString) */\n      swap5\n      dup6\n      swap2\n      dup2\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      tag_150\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      0x20\n        /* \"contracts/contracts/lib/PermitHash.sol\":4133:4213  abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString) */\n      dup6\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      dup1\n      swap7\n      tag_15\n      jump\t// in\n    tag_150:\n      swap2\n      dup3\n      calldatacopy\n      add\n      dup12\n      dup2\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":4133:4213  abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString) */\n      sub\n      swap4\n      tag_151\n      not(0x1f)\n      swap6\n      dup7\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_5\n      jump\t// in\n    tag_151:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":4123:4214  keccak256(abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString)) */\n      swap1\n      keccak256\n        /* \"contracts/contracts/lib/PermitHash.sol\":4278:4294  permit.permitted */\n      swap3\n        /* \"contracts/contracts/lib/PermitHash.sol\":4256:4295  _hashTokenPermissions(permit.permitted) */\n      tag_152\n        /* \"contracts/contracts/lib/PermitHash.sol\":4278:4294  permit.permitted */\n      dup7\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":4256:4295  _hashTokenPermissions(permit.permitted) */\n      tag_14\n      jump\t// in\n    tag_152:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      0x20\n        /* \"contracts/contracts/lib/PermitHash.sol\":4377:4389  permit.nonce */\n      dup8\n      dup2\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":4391:4406  permit.deadline */\n      dup6\n      dup10\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      swap6\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":4322:4416  abi.encode(typeHash, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline, witness) */\n      swap2\n      dup3\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      swap7\n      dup8\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      0x40\n      dup3\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":4365:4375  msg.sender */\n      caller\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      0x60\n      dup3\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      0x80\n      dup2\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      swap2\n      swap1\n      swap2\n      mstore\n      0xa0\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      dup2\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      swap4\n      swap1\n      swap4\n      mstore\n      calldataload(0xe4)\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      0xc0\n      dup5\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mstore\n      dup3\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      0xe0\n      dup2\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":4322:4416  abi.encode(typeHash, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline, witness) */\n      tag_73\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      jump\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n    tag_1:\n      0x60\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      or\n      tag_154\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_154:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_2:\n      0xa0\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      or\n      tag_154\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_3:\n        /* \"contracts/contracts/lib/PermitHash.sol\":895:954  keccak256(\"TokenPermissions(address token,uint256 amount)\") */\n      0x80\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      or\n      tag_154\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_4:\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      0xc0\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      or\n      tag_154\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_5:\n      swap1\n        /* \"contracts/contracts/lib/PermitHash.sol\":4133:4213  abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString) */\n      0x1f\n      dup1\n      not\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      or\n      tag_154\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_6:\n      calldataload(0xc4)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_164\n      jumpi\n      jump\t// out\n    tag_164:\n      0x00\n      dup1\n      revert\n    tag_7:\n      calldataload(0x44)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_164\n      jumpi\n      jump\t// out\n    tag_8:\n      not(0x03)\n      add\n      swap1\n      0x80\n      dup3\n      slt\n      tag_164\n      jumpi\n      0x40\n      dup1\n      mload\n      swap1\n      tag_170\n      dup3\n      tag_1\n      jump\t// in\n    tag_170:\n      dup1\n      dup3\n      swap5\n      slt\n      tag_164\n      jumpi\n      dup1\n      mload\n      dup2\n      dup2\n      add\n      dup2\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      or\n      tag_154\n      jumpi\n      dup3\n      mstore\n      calldataload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_164\n      jumpi\n      dup2\n      mstore\n      calldataload(0x24)\n      0x20\n      dup3\n      add\n      mstore\n      dup3\n      mstore\n      calldataload(0x44)\n      0x20\n      dup4\n      add\n      mstore\n      calldataload(0x64)\n      swap2\n      add\n      mstore\n      jump\t// out\n    tag_9:\n      swap2\n      dup2\n      0x1f\n      dup5\n      add\n      slt\n      iszero\n      tag_164\n      jumpi\n      dup3\n      calldataload\n      swap2\n      sub(shl(0x40, 0x01), 0x01)\n      dup4\n      gt\n      tag_164\n      jumpi\n      0x20\n      dup4\n      dup2\n      dup7\n      add\n      swap6\n      add\n      add\n      gt\n      tag_164\n      jumpi\n      jump\t// out\n    tag_10:\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_154\n      jumpi\n      0x05\n      shl\n      0x20\n      add\n      swap1\n      jump\t// out\n    tag_11:\n      swap2\n      swap1\n      swap2\n      0x60\n      dup2\n      dup5\n      sub\n      slt\n      tag_164\n      jumpi\n      0x40\n      dup1\n      mload\n      swap2\n      tag_187\n      dup4\n      tag_1\n      jump\t// in\n    tag_187:\n      dup3\n      swap5\n      dup2\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n      swap1\n      dup2\n      dup2\n      gt\n      tag_164\n      jumpi\n      dup4\n      add\n      dup3\n      0x1f\n      dup3\n      add\n      slt\n      iszero\n      tag_164\n      jumpi\n      dup1\n      calldataload\n      tag_192\n      dup2\n      tag_10\n      jump\t// in\n    tag_192:\n      swap3\n      tag_193\n      dup8\n      mload\n      swap5\n      dup6\n      tag_5\n      jump\t// in\n    tag_193:\n      dup2\n      dup5\n      mstore\n      0x20\n      swap5\n      dup6\n      dup1\n      dup7\n      add\n      swap4\n      0x06\n      shl\n      dup6\n      add\n      add\n      swap4\n      dup2\n      dup6\n      gt\n      tag_164\n      jumpi\n      swap1\n      dup7\n      dup10\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      add\n      swap3\n    tag_196:\n      dup5\n      dup5\n      lt\n      tag_197\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup6\n      mstore\n      dup1\n      dup3\n      add\n      calldataload\n      swap1\n      dup6\n      add\n      mstore\n      add\n      calldataload\n      swap2\n      add\n      mstore\n      jump\t// out\n    tag_197:\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      swap8\n      dup5\n      dup4\n      sub\n      slt\n      tag_164\n      jumpi\n      dup9\n      mload\n      swap1\n      dup10\n      dup3\n      add\n      dup3\n      dup2\n      lt\n      dup6\n      dup3\n      gt\n      or\n      tag_201\n      jumpi\n      dup11\n      mstore\n      dup5\n      calldataload\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_164\n      jumpi\n      dup3\n      dup10\n      swap3\n      dup13\n      swap5\n      mstore\n      dup3\n      dup8\n      add\n      calldataload\n      dup4\n      dup3\n      add\n      mstore\n      dup2\n      mstore\n      add\n      swap4\n      add\n      swap2\n      swap1\n      dup9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      jump(tag_196)\n    tag_201:\n      0x24\n      0x00\n      shl(0xe0, 0x4e487b71)\n      dup2\n      mstore\n      mstore(0x04, 0x41)\n      revert\n    tag_12:\n      swap2\n      dup2\n      0x1f\n      dup5\n      add\n      slt\n      iszero\n      tag_164\n      jumpi\n      dup3\n      calldataload\n      swap2\n      sub(shl(0x40, 0x01), 0x01)\n      dup4\n      gt\n      tag_164\n      jumpi\n      0x20\n      dup1\n      dup6\n      add\n      swap5\n      dup5\n      0x06\n      shl\n      add\n      add\n      gt\n      tag_164\n      jumpi\n      jump\t// out\n        /* \"contracts/contracts/permit2/EIP712.sol\":1186:1411  function DOMAIN_SEPARATOR() public view override returns (bytes32) {... */\n    tag_13:\n        /* \"contracts/contracts/permit2/EIP712.sol\":1270:1283  block.chainid */\n      chainid\n        /* \"contracts/contracts/permit2/EIP712.sol\":1287:1303  _CACHED_CHAIN_ID */\n      immutable(\"0x3ab4fb69c8e122442af87ae588015f836e7cde3029bbb6dab1983bc840231d63\")\n        /* \"contracts/contracts/permit2/EIP712.sol\":1270:1303  block.chainid == _CACHED_CHAIN_ID */\n      sub\n        /* \"contracts/contracts/permit2/EIP712.sol\":1287:1303  _CACHED_CHAIN_ID */\n      tag_211\n      jumpi\n        /* \"contracts/contracts/permit2/EIP712.sol\":1318:1342  _CACHED_DOMAIN_SEPARATOR */\n      immutable(\"0x4f4ac30ff8bfcef8cd1068d1427faf7fb52fa3a1610b1f430e1f69a91ebb9673\")\n        /* \"contracts/contracts/permit2/EIP712.sol\":1186:1411  function DOMAIN_SEPARATOR() public view override returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/permit2/EIP712.sol\":1270:1404  block.chainid == _CACHED_CHAIN_ID... */\n    tag_211:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mload(0x40)\n        /* \"contracts/contracts/permit2/EIP712.sol\":1632:1692  abi.encode(typeHash, nameHash, block.chainid, address(this)) */\n      0x20\n      dup2\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      swap1\n        /* \"contracts/contracts/permit2/EIP712.sol\":789:869  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      dup3\n      mstore\n        /* \"contracts/contracts/permit2/EIP712.sol\":717:737  keccak256(\"Permit2\") */\n      0x9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      0x40\n      dup3\n      add\n      mstore\n        /* \"contracts/contracts/permit2/EIP712.sol\":1270:1283  block.chainid */\n      chainid\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      0x60\n      dup3\n      add\n      mstore\n        /* \"contracts/contracts/permit2/EIP712.sol\":1686:1690  this */\n      address\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      0x80\n      dup3\n      add\n      mstore\n      0x80\n        /* \"contracts/contracts/permit2/EIP712.sol\":1632:1692  abi.encode(typeHash, nameHash, block.chainid, address(this)) */\n      dup2\n      mstore\n      tag_214\n      dup2\n      tag_2\n      jump\t// in\n    tag_214:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mload\n        /* \"contracts/contracts/permit2/EIP712.sol\":1622:1693  keccak256(abi.encode(typeHash, nameHash, block.chainid, address(this))) */\n      swap1\n      keccak256\n        /* \"contracts/contracts/permit2/EIP712.sol\":1186:1411  function DOMAIN_SEPARATOR() public view override returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/lib/PermitHash.sol\":5539:5768  function _hashTokenPermissions(ISignatureTransfer.TokenPermissions memory permitted)... */\n    tag_14:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mload(0x40)\n        /* \"contracts/contracts/lib/PermitHash.sol\":5710:5760  abi.encode(_TOKEN_PERMISSIONS_TYPEHASH, permitted) */\n      0x20\n      dup1\n      dup3\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      swap3\n        /* \"contracts/contracts/lib/PermitHash.sol\":895:954  keccak256(\"TokenPermissions(address token,uint256 amount)\") */\n      0x618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a1\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      dup5\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"contracts/contracts/lib/PermitHash.sol\":895:954  keccak256(\"TokenPermissions(address token,uint256 amount)\") */\n      dup2\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      and\n      0x40\n        /* \"contracts/contracts/lib/PermitHash.sol\":895:954  keccak256(\"TokenPermissions(address token,uint256 amount)\") */\n      dup5\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":895:954  keccak256(\"TokenPermissions(address token,uint256 amount)\") */\n      add\n      mload\n      0x60\n      dup3\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":895:954  keccak256(\"TokenPermissions(address token,uint256 amount)\") */\n      0x60\n        /* \"contracts/contracts/lib/PermitHash.sol\":5710:5760  abi.encode(_TOKEN_PERMISSIONS_TYPEHASH, permitted) */\n      dup2\n      mstore\n      tag_214\n      dup2\n      tag_3\n      jump\t// in\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n    tag_15:\n      swap1\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      dup2\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      swap2\n      0x00\n    tag_216:\n      dup4\n      dup2\n      lt\n      tag_217\n      jumpi\n      pop\n      pop\n      add\n      0x00\n      dup2\n      mstore\n      swap1\n      jump\t// out\n    tag_217:\n      dup1\n      0x20\n      dup1\n      swap3\n      dup5\n      add\n      add\n      mload\n      dup2\n      dup6\n      add\n      mstore\n      add\n      jump(tag_216)\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2066:2770  function _permitTransferFrom(... */\n    tag_17:\n      swap2\n      swap3\n      swap1\n      swap4\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2329:2360  transferDetails.requestedAmount */\n      0xa4\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      calldataload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2393:2408  permit.deadline */\n      swap4\n      0x40\n      dup5\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2375:2390  block.timestamp */\n      dup1\n      timestamp\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2375:2408  block.timestamp > permit.deadline */\n      gt\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2371:2450  if (block.timestamp > permit.deadline) revert SignatureExpired(permit.deadline) */\n      tag_219\n      jumpi\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2482:2498  permit.permitted */\n      pop\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2329:2360  transferDetails.requestedAmount */\n      0x20\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2482:2498  permit.permitted */\n      dup5\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2482:2505  permit.permitted.amount */\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2464:2505  requestedAmount > permit.permitted.amount */\n      dup1\n      dup7\n      gt\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2460:2552  if (requestedAmount > permit.permitted.amount) revert InvalidAmount(permit.permitted.amount) */\n      tag_221\n      jumpi\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2589:2601  permit.nonce */\n      pop\n      swap2\n      dup6\n      swap2\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2630:2654  _hashTypedData(dataHash) */\n      tag_223\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2656:2661  owner */\n      tag_224\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2589:2601  permit.nonce */\n      swap5\n      tag_225\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2329:2360  transferDetails.requestedAmount */\n      0x20\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2589:2601  permit.nonce */\n      dup9\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2589:2601  permit.nonce */\n      dup7\n      tag_27\n      jump\t// in\n    tag_225:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2630:2654  _hashTypedData(dataHash) */\n      tag_20\n      jump\t// in\n    tag_223:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2656:2661  owner */\n      swap2\n      tag_19\n      jump\t// in\n    tag_224:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2679:2695  permit.permitted */\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap3\n      calldataload(0x84)\n      swap2\n      dup3\n      and\n      dup3\n      sub\n      tag_164\n      jumpi\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2747:2762  requestedAmount */\n      tag_228\n      swap4\n      tag_28\n      jump\t// in\n    tag_228:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2066:2770  function _permitTransferFrom(... */\n      jump\t// out\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2460:2552  if (requestedAmount > permit.permitted.amount) revert InvalidAmount(permit.permitted.amount) */\n    tag_221:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      0x24\n      swap1\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2393:2408  permit.deadline */\n      0x40\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2514:2552  InvalidAmount(permit.permitted.amount) */\n      swap1\n      shl(0xe0, 0x3728b83d)\n      dup3\n      mstore\n      0x04\n      dup3\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mstore\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2514:2552  InvalidAmount(permit.permitted.amount) */\n      revert\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2371:2450  if (block.timestamp > permit.deadline) revert SignatureExpired(permit.deadline) */\n    tag_219:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      0x24\n      swap1\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2393:2408  permit.deadline */\n      0x40\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2417:2450  SignatureExpired(permit.deadline) */\n      swap1\n      shl(0xe0, 0xcd21db4f)\n      dup3\n      mstore\n      0x04\n      dup3\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mstore\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2417:2450  SignatureExpired(permit.deadline) */\n      revert\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n    tag_18:\n      swap2\n      swap1\n      dup3\n      0x40\n      swap2\n      sub\n      slt\n      tag_164\n      jumpi\n      0x20\n      dup3\n      calldataload\n      swap3\n      add\n      calldataload\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":700:1809  function verify(bytes calldata signature, bytes32 hash, address claimedSigner) internal view {... */\n    tag_19:\n      0x00\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":863:888  claimedSigner.code.length */\n      dup5\n      extcodesize\n      tag_231\n      jumpi\n      pop\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":933:935  65 */\n      0x41\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":913:935  signature.length == 65 */\n      dup3\n      sub\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":933:935  65 */\n      tag_233\n      jumpi\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":964:1005  abi.decode(signature, (bytes32, bytes32)) */\n      tag_235\n      dup3\n      dup3\n      add\n      dup3\n      tag_18\n      jump\t// in\n    tag_235:\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":955:1005  (r, s) = abi.decode(signature, (bytes32, bytes32)) */\n      swap4\n      swap1\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      swap3\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1043:1045  64 */\n      0x40\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      lt\n      iszero\n      tag_236\n      jumpi\n      0x20\n      swap4\n      0x00\n      swap4\n      0xff\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1043:1045  64 */\n      0x40\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      0x80\n      swap6\n      add\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1033:1046  signature[64] */\n      calldataload\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      0xf8\n      shr\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":909:1399  if (signature.length == 65) {... */\n    tag_238:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mload(0x40)\n      swap5\n      dup6\n      mstore\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      and\n      dup7\n      dup5\n      add\n      mstore\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      0x40\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      dup4\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mstore\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      0x60\n      dup3\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mstore\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1429:1453  ecrecover(hash, v, r, s) */\n      dup3\n      dup1\n      mstore\n      0x01\n      gas\n      staticcall\n      iszero\n      tag_239\n      jumpi\n      mload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      swap1\n      dup2\n      and\n      swap2\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1471:1491  signer == address(0) */\n      dup3\n      iszero\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1467:1518  if (signer == address(0)) revert InvalidSignature() */\n      tag_241\n      jumpi\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      and\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1536:1559  signer != claimedSigner */\n      sub\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1532:1583  if (signer != claimedSigner) revert InvalidSigner() */\n      tag_243\n      jumpi\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":700:1809  function verify(bytes calldata signature, bytes32 hash, address claimedSigner) internal view {... */\n      jump\t// out\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1532:1583  if (signer != claimedSigner) revert InvalidSigner() */\n    tag_243:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mload(0x40)\n      shl(0xe2, 0x20578759)\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1568:1583  InvalidSigner() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1467:1518  if (signer == address(0)) revert InvalidSignature() */\n    tag_241:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mload(0x40)\n      shl(0xe0, 0x8baa579f)\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1500:1518  InvalidSignature() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1429:1453  ecrecover(hash, v, r, s) */\n    tag_239:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n    tag_236:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      shl(0xe0, 0x4e487b71)\n      0x00\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      mstore\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":909:1399  if (signature.length == 65) {... */\n    tag_233:\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1092:1094  64 */\n      0x40\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1072:1094  signature.length == 64 */\n      dup3\n      sub\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1092:1094  64 */\n      tag_246\n      jumpi\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1180:1221  abi.decode(signature, (bytes32, bytes32)) */\n      tag_248\n      swap2\n      dup2\n      add\n      swap1\n      tag_18\n      jump\t// in\n    tag_248:\n      sub(shl(0xff, 0x01), 0x01)\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1243:1262  vs & UPPER_BIT_MASK */\n      dup2\n      and\n      swap3\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":626:692  0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff */\n      0xff\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      swap2\n      dup3\n      shr\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1312:1314  27 */\n      0x1b\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      add\n      swap2\n      dup3\n      gt\n      tag_249\n      jumpi\n      0x20\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1280:1314  v = uint8(uint256(vs >> 255)) + 27 */\n      swap4\n      0x00\n      swap4\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      0xff\n      0x80\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1280:1314  v = uint8(uint256(vs >> 255)) + 27 */\n      swap5\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":909:1399  if (signature.length == 65) {... */\n      jump(tag_238)\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n    tag_249:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      shl(0xe0, 0x4e487b71)\n      0x00\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      mstore\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1068:1399  if (signature.length == 64) {... */\n    tag_246:\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1092:1094  64 */\n      0x40\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mload\n      shl(0xe0, 0x4be6321b)\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1360:1384  InvalidSignatureLength() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":859:1803  if (claimedSigner.code.length == 0) {... */\n    tag_231:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      swap2\n      dup1\n      swap4\n      swap5\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1634:1691  IERC1271(claimedSigner).isValidSignature(hash, signature) */\n      0x20\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      swap3\n      0x64\n      mload(0x40)\n      dup1\n      swap8\n      dup2\n      swap6\n      dup3\n      swap5\n      shl(0xe1, 0x0b135d3f)\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1634:1691  IERC1271(claimedSigner).isValidSignature(hash, signature) */\n      swap12\n      dup13\n      dup6\n      mstore\n      0x04\n      dup6\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mstore\n      0x40\n      0x24\n      dup6\n      add\n      mstore\n      dup2\n      0x44\n      dup6\n      add\n      mstore\n      dup5\n      dup5\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":1621:1723  \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\" */\n      calldatacopy\n      dup2\n      dup2\n      add\n      dup4\n      add\n      dup9\n      swap1\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":4133:4213  abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString) */\n      0x1f\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      add\n      not(0x1f)\n      and\n      dup2\n      add\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1634:1691  IERC1271(claimedSigner).isValidSignature(hash, signature) */\n      sub\n      add\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      and\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1634:1691  IERC1271(claimedSigner).isValidSignature(hash, signature) */\n      gas\n      staticcall\n      swap2\n      dup3\n      iszero\n      tag_251\n      jumpi\n      dup2\n      swap3\n      tag_253\n      jumpi\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":859:1803  if (claimedSigner.code.length == 0) {... */\n    tag_254:\n      pop\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      and\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1709:1757  magicValue != IERC1271.isValidSignature.selector */\n      sub\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1705:1792  if (magicValue != IERC1271.isValidSignature.selector) revert InvalidContractSignature() */\n      tag_255\n      jumpi\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":700:1809  function verify(bytes calldata signature, bytes32 hash, address claimedSigner) internal view {... */\n      jump\t// out\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1705:1792  if (magicValue != IERC1271.isValidSignature.selector) revert InvalidContractSignature() */\n    tag_255:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mload(0x40)\n      shl(0xe2, 0x2c19a72f)\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1766:1792  InvalidContractSignature() */\n      dup2\n      mstore\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1634:1691  IERC1271(claimedSigner).isValidSignature(hash, signature) */\n      0x04\n      swap1\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1766:1792  InvalidContractSignature() */\n      revert\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1634:1691  IERC1271(claimedSigner).isValidSignature(hash, signature) */\n    tag_253:\n      swap1\n      swap2\n      pop\n      0x20\n      dup2\n      returndatasize\n      dup3\n      gt\n      tag_257\n      jumpi\n    tag_258:\n      dup2\n      tag_259\n      0x20\n      swap4\n      dup4\n      tag_5\n      jump\t// in\n    tag_259:\n      dup2\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      sub\n      slt\n      tag_47\n      jumpi\n      mload\n      swap1\n      not(sub(shl(0xe0, 0x01), 0x01))\n      dup3\n      and\n      dup3\n      sub\n      tag_262\n      jumpi\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1634:1691  IERC1271(claimedSigner).isValidSignature(hash, signature) */\n      pop\n      0x00\n      dup1\n      jump(tag_254)\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n    tag_262:\n      dup1\n      revert\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":1634:1691  IERC1271(claimedSigner).isValidSignature(hash, signature) */\n    tag_257:\n      returndatasize\n      swap2\n      pop\n      jump(tag_258)\n    tag_251:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      pop\n      mload(0x40)\n      swap1\n      returndatasize\n      swap1\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/contracts/permit2/EIP712.sol\":1757:1924  function _hashTypedData(bytes32 dataHash) internal view returns (bytes32) {... */\n    tag_20:\n        /* \"contracts/contracts/permit2/EIP712.sol\":1887:1905  DOMAIN_SEPARATOR() */\n      tag_264\n      tag_13\n      jump\t// in\n    tag_264:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      swap1\n      mload(0x40)\n        /* \"contracts/contracts/permit2/EIP712.sol\":1858:1916  abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR(), dataHash) */\n      swap1\n      0x20\n      dup3\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      swap3\n      shl(0xf0, 0x1901)\n      dup5\n      mstore\n      0x22\n      dup4\n      add\n      mstore\n      0x42\n      dup3\n      add\n      mstore\n      0x42\n        /* \"contracts/contracts/permit2/EIP712.sol\":1858:1916  abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR(), dataHash) */\n      dup2\n      mstore\n      tag_214\n      dup2\n      tag_3\n      jump\t// in\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n    tag_21:\n      swap1\n      tag_266\n      dup3\n      tag_10\n      jump\t// in\n    tag_266:\n      tag_267\n      mload(0x40)\n      swap2\n      dup3\n      tag_5\n      jump\t// in\n    tag_267:\n      dup3\n      dup2\n      mstore\n      dup1\n        /* \"contracts/contracts/lib/PermitHash.sol\":4133:4213  abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString) */\n      swap3\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      tag_268\n        /* \"contracts/contracts/lib/PermitHash.sol\":4133:4213  abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString) */\n      not(0x1f)\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      swap2\n      tag_10\n      jump\t// in\n    tag_268:\n      add\n      swap1\n      0x20\n      calldatasize\n      swap2\n      add\n      calldatacopy\n      jump\t// out\n    tag_22:\n      not(0x00)\n      dup2\n      eq\n      tag_249\n      jumpi\n      0x01\n      add\n      swap1\n      jump\t// out\n    tag_23:\n      dup1\n      mload\n      dup3\n      lt\n      iszero\n      tag_236\n      jumpi\n      0x20\n      swap2\n      0x05\n      shl\n      add\n      add\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/lib/PermitHash.sol\":1254:1427  keccak256(... */\n    tag_24:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      dup1\n      mload\n      0x20\n      dup1\n      swap3\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":1254:1427  keccak256(... */\n      swap2\n      0x00\n    tag_273:\n      dup3\n      dup2\n      lt\n      tag_274\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      swap1\n      jump\t// out\n    tag_274:\n      dup4\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      dup6\n      mstore\n        /* \"contracts/contracts/lib/PermitHash.sol\":1254:1427  keccak256(... */\n      swap4\n      dup2\n      add\n      swap4\n      swap3\n      dup2\n      add\n      swap3\n      0x01\n      add\n      jump(tag_273)\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n    tag_25:\n      swap2\n      swap1\n      dup2\n      lt\n      iszero\n      tag_236\n      jumpi\n      0x06\n      shl\n      add\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":3928:5122  function _permitTransferFrom(... */\n    tag_26:\n      swap1\n      swap2\n      swap6\n      swap4\n      swap6\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4195:4211  permit.permitted */\n      dup2\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4251:4266  permit.deadline */\n      swap6\n      0x40\n      swap6\n      dup7\n      dup5\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4233:4248  block.timestamp */\n      dup1\n      timestamp\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4233:4266  block.timestamp > permit.deadline */\n      gt\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4229:4308  if (block.timestamp > permit.deadline) revert SignatureExpired(permit.deadline) */\n      tag_278\n      jumpi\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4322:4360  numPermitted != transferDetails.length */\n      pop\n      dup3\n      dup9\n      sub\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4318:4385  if (numPermitted != transferDetails.length) revert LengthMismatch() */\n      tag_280\n      jumpi\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4488:4493  owner */\n      tag_282\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4422:4434  permit.nonce */\n      swap2\n      dup7\n      swap2\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4462:4486  _hashTypedData(dataHash) */\n      tag_223\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4422:4434  permit.nonce */\n      0x20\n      swap12\n      tag_225\n      dup14\n      dup10\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4422:4434  permit.nonce */\n      dup7\n      tag_27\n      jump\t// in\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4488:4493  owner */\n    tag_282:\n      0x00\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4534:4547  uint256 i = 0 */\n      swap2\n      dup3\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4549:4565  i < numPermitted */\n    tag_285:\n      dup8\n      dup2\n      lt\n      tag_286\n      jumpi\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":3928:5122  function _permitTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4567:4570  ++i */\n    tag_286:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4626:4645  permit.permitted[i] */\n      tag_288\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4626:4642  permit.permitted */\n      dup2\n      dup4\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4626:4645  permit.permitted[i] */\n      tag_23\n      jump\t// in\n    tag_288:\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4689:4707  transferDetails[i] */\n      dup10\n      tag_289\n      dup4\n      dup7\n      dup10\n      tag_25\n      jump\t// in\n    tag_289:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4689:4723  transferDetails[i].requestedAmount */\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      calldataload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4764:4780  permitted.amount */\n      swap1\n      dup11\n      dup2\n      add\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4746:4780  requestedAmount > permitted.amount */\n      dup1\n      dup4\n      gt\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4742:4820  if (requestedAmount > permitted.amount) revert InvalidAmount(permitted.amount) */\n      tag_290\n      jumpi\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4843:4863  requestedAmount != 0 */\n      pop\n      dup2\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4839:5092  if (requestedAmount != 0) {... */\n      tag_292\n      jumpi\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4567:4570  ++i */\n    tag_293:\n      pop\n      pop\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      0x01\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4534:4547  uint256 i = 0 */\n      jump(tag_285)\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4839:5092  if (requestedAmount != 0) {... */\n    tag_292:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":5034:5052  transferDetails[i] */\n      tag_294\n      dup5\n      dup8\n      dup11\n      tag_25\n      jump\t// in\n    tag_294:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      calldataload\n      swap2\n      dup3\n      and\n      dup3\n      sub\n      tag_89\n      jumpi\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":5057:5072  requestedAmount */\n      swap2\n      tag_297\n      swap2\n      dup10\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      0x01\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":5057:5072  requestedAmount */\n      swap6\n      swap5\n      tag_28\n      jump\t// in\n    tag_297:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4839:5092  if (requestedAmount != 0) {... */\n      swap1\n      0x00\n      jump(tag_293)\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4742:4820  if (requestedAmount > permitted.amount) revert InvalidAmount(permitted.amount) */\n    tag_290:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      0x24\n      swap1\n      dup11\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2514:2552  InvalidAmount(permit.permitted.amount) */\n      swap1\n      shl(0xe0, 0x3728b83d)\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4789:4820  InvalidAmount(permitted.amount) */\n      dup3\n      mstore\n      0x04\n      dup3\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mstore\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4789:4820  InvalidAmount(permitted.amount) */\n      revert\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4318:4385  if (numPermitted != transferDetails.length) revert LengthMismatch() */\n    tag_280:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      dup7\n      mload\n      not(sub(shl(0xe3, 0x1398b9), 0x01))\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4369:4385  LengthMismatch() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4229:4308  if (block.timestamp > permit.deadline) revert SignatureExpired(permit.deadline) */\n    tag_278:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      0x24\n      swap1\n      dup9\n      mload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":2417:2450  SignatureExpired(permit.deadline) */\n      swap1\n      shl(0xe0, 0xcd21db4f)\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4275:4308  SignatureExpired(permit.deadline) */\n      dup3\n      mstore\n      0x04\n      dup3\n      add\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mstore\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":4275:4308  SignatureExpired(permit.deadline) */\n      revert\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":6241:6534  function _useUnorderedNonce(address from, uint256 nonce) internal {... */\n    tag_27:\n      swap1\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":6399:6400  1 */\n      0x01\n        /* \"contracts/contracts/lib/SignatureVerification.sol\":625:693  (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) */\n      0xff\n      dup3\n      and\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      shl\n      swap2\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n      keccak256(0x00, 0x40)\n      swap1\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":5983:5984  8 */\n      0x08\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      shr\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":6438:6471  nonceBitmap[from][wordPos] ^= bit */\n      xor\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      dup1\n      swap2\n      sstore\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":6486:6499  flipped & bit */\n      and\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":6486:6504  flipped & bit == 0 */\n      iszero\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":6482:6527  if (flipped & bit == 0) revert InvalidNonce() */\n      tag_298\n      jumpi\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":6241:6534  function _useUnorderedNonce(address from, uint256 nonce) internal {... */\n      jump\t// out\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":6482:6527  if (flipped & bit == 0) revert InvalidNonce() */\n    tag_298:\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mload(0x40)\n      shl(0xe1, 0x3ab3447f)\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":6513:6527  InvalidNonce() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1328:3110  function safeTransferFrom(... */\n    tag_28:\n      swap2\n      0x00\n      dup1\n      swap4\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1532:3053  assembly {... */\n      0x20\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1328:3110  function safeTransferFrom(... */\n      swap6\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1532:3053  assembly {... */\n      0x64\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1328:3110  function safeTransferFrom(... */\n      swap5\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1532:3053  assembly {... */\n      mload(0x40)\n      swap5\n      shl(0xe0, 0x23b872dd)\n      dup7\n      mstore\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1532:3053  assembly {... */\n      dup1\n      swap3\n      and\n      0x04\n      dup8\n      add\n      mstore\n      and\n      0x24\n      dup6\n      add\n      mstore\n      0x44\n      dup5\n      add\n      mstore\n      gas\n      call\n      iszero(returndatasize)\n      gt(returndatasize, 0x1f)\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      0x01\n      0x00\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1532:3053  assembly {... */\n      mload\n      eq\n      and\n      or\n      and\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      iszero\n      tag_300\n      jumpi\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1328:3110  function safeTransferFrom(... */\n      jump\t// out\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n    tag_300:\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1532:3053  assembly {... */\n      0x40\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1532:3053  assembly {... */\n      0x20\n      0x04\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      dup3\n      add\n      mstore\n      0x14\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1532:3053  assembly {... */\n      0x24\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      dup3\n      add\n      mstore\n      shl(0x62, 0x1514905394d1915497d19493d357d19052531151)\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1532:3053  assembly {... */\n      0x44\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      dup3\n      add\n      mstore\n        /* \"solmate/src/utils/SafeTransferLib.sol\":1532:3053  assembly {... */\n      0x64\n      swap1\n        /* \"contracts/contracts/permit2/SignatureTransfer.sol\":480:6536  contract SignatureTransfer is ISignatureTransfer, EIP712 {... */\n      revert\n\n    auxdata: 0xa26469706673582212203c986912fc5f1701695e440eafbce4a50d173ee5dc6f44e22b42b3f7bf95228664736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60c0346100b9574660a052602081017f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681527f9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a60408301524660608301523060808301526080825260a082019180831060018060401b038411176100a5578260405251902060805261101d90816100be8239608051816109a7015260a051816109810152f35b634e487b7160e01b5f52604160045260245ffd5b5f80fdfe60406080815260049081361015610014575f80fd5b5f90813560e01c8063137c29fe1461054a57806330f28b7a146104875780633644e515146104645780633ff9dcb1146104025780634fe02b44146103bc578063edd9444b146102905763fe8ec1a71461006b575f80fd5b3461028c5760c036600319011261028c576001600160401b0383358181116102885761009a903690860161084d565b602435828111610284576100b1903690870161094e565b6100b9610788565b91608435858111610280576100d19036908a01610809565b98909560a43590811161027c576100ea91369101610809565b9690958151906100f9826106fc565b606b82527f5065726d697442617463685769746e6573735472616e7366657246726f6d285460208301527f6f6b656e5065726d697373696f6e735b5d207065726d69747465642c61646472838301527f657373207370656e6465722c75696e74323536206e6f6e63652c75696e74323560608301526a0d88191958591b1a5b994b60aa1b608083015282519a8b9181610196602085018096610a88565b918237018a815203996101b1601f199b8c810183528261074d565b519020908551516101c181610d8b565b908a5b81811061024f57505061024c999a6102439183516101f6816101ea602082018095610ddf565b0384810183528261074d565b519020602089810151858b015195519182019687526040820192909252336060820152608081019190915260a081019390935260643560c08401528260e081015b0390810183528261074d565b51902093610e1b565b80f35b80610267610261610277938c51610dcb565b51610a39565b6102718286610dcb565b52610dbd565b6101c4565b8880fd5b8780fd5b8480fd5b8380fd5b5080fd5b50913461028c57608036600319011261028c576001600160401b03908035828111610288576102c2903690830161084d565b602435838111610284576102d9903690840161094e565b9390926102e4610788565b916064359081116103b8576102fb91369101610809565b9490938351519761030b89610d8b565b98885b81811061039657505061024c9798815161033e81610330602082018095610ddf565b03601f19810183528261074d565b5190206020860151828701519083519260208401947ffcf35f5ac6a2c28868dc44c302166470266239195f02b0ee408334829333b7668652840152336060840152608083015260a082015260a0815261024381610732565b808b610271826103ad6102616103b3968d51610dcb565b92610dcb565b61030e565b8680fd5b5082346103fe57816003193601126103fe57356001600160a01b038116908190036103fe57828291602094528084528181206024358252845220549051908152f35b8280fd5b5082346103fe57816003193601126103fe577f3704902f963766a4e561bbaab6e6cdc1b1dd12f6e9e99648da8843b3f46b918d90359160243533855284602052818520848652602052818520818154179055815193845260208401523392a280f35b503461028c578160031936011261028c5760209061048061097e565b9051908152f35b508290346103fe576101003660031901126103fe576104a53661079e565b9080608319360112610288576104b961076e565b9160e4356001600160401b0381116105465761024c946104db91369101610809565b9390926104e88351610a39565b6020840151828501519083519260208401947f939c21a48a8dbe3a9a2404a1d46691e4d39f6583d6ec6b35714604c986d801068652840152336060840152608083015260a082015260a0815261053d81610732565b51902091610ab1565b8580fd5b5082346103fe576101403660031901126103fe576105673661079e565b91806083193601126102885761057b61076e565b6001600160401b039390610104358581116103b85761059d9036908601610809565b909361012435968711610280576105bd61053d9661024c98369101610809565b9690958251906105cc826106fc565b606482527f5065726d69745769746e6573735472616e7366657246726f6d28546f6b656e5060208301527f65726d697373696f6e73207065726d69747465642c6164647265737320737065848301527f6e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c6060830152631a5b994b60e21b6080830152835194859181610662602085018096610a88565b918237018b8152039361067d601f199586810183528261074d565b5190209261068b8651610a39565b6020878101518589015195519182019687526040820192909252336060820152608081019190915260a081019390935260e43560c08401528260e08101610237565b606081019081106001600160401b038211176106e857604052565b634e487b7160e01b5f52604160045260245ffd5b60a081019081106001600160401b038211176106e857604052565b608081019081106001600160401b038211176106e857604052565b60c081019081106001600160401b038211176106e857604052565b90601f801991011681019081106001600160401b038211176106e857604052565b60c435906001600160a01b038216820361078457565b5f80fd5b604435906001600160a01b038216820361078457565b6003190190608082126107845760408051906107b9826106cd565b808294126107845780518181018181106001600160401b038211176106e85782526004356001600160a01b0381168103610784578152602435602082015282526044356020830152606435910152565b9181601f84011215610784578235916001600160401b038311610784576020838186019501011161078457565b6001600160401b0381116106e85760051b60200190565b919091606081840312610784576040805191610868836106cd565b829481356001600160401b039081811161078457830182601f8201121561078457803561089481610836565b926108a18751948561074d565b818452602094858086019360061b85010193818511610784579086899897969594939201925b8484106108e4575050505050855280820135908501520135910152565b909192939495969784830312610784578851908982018281108582111761093a578a528435906001600160a01b0382168203610784578289928c94528287013583820152815201930191908897969594936108c7565b60245f634e487b7160e01b81526041600452fd5b9181601f84011215610784578235916001600160401b038311610784576020808501948460061b01011161078457565b467f0000000000000000000000000000000000000000000000000000000000000000036109c9577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86682527f9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a604082015246606082015230608082015260808152610a33816106fc565b51902090565b6040516020808201927f618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a1845260018060a01b0381511660408401520151606082015260608152610a3381610717565b908151915f5b838110610a9e575050015f815290565b8060208092840101518185015201610a8e565b9192909360a435936040840151804211610b345750602084510151808611610b1c5750918591610af1610af794610aec602088015186610f19565b610d5a565b91610b62565b51516001600160a01b0390811692608435918216820361078457610b1a93610f62565b565b60249060405190633728b83d60e01b82526004820152fd5b6024906040519063cd21db4f60e01b82526004820152fd5b9190826040910312610784576020823592013590565b5f843b610c7e575060418203610c1b57610b7e82820182610b4c565b93909260401015610c07576020935f9360ff6040608095013560f81c5b60405194855216868401526040830152606082015282805260015afa15610bfc575f516001600160a01b03908116918215610bea571603610bd857565b604051632057875960e21b8152600490fd5b604051638baa579f60e01b8152600490fd5b6040513d5f823e3d90fd5b634e487b7160e01b5f52603260045260245ffd5b60408203610c6c57610c2f91810190610b4c565b6001600160ff1b0381169260ff91821c601b01918211610c58576020935f9360ff608094610b9b565b634e487b7160e01b5f52601160045260245ffd5b604051634be6321b60e01b8152600490fd5b918093946020926064604051809781958294630b135d3f60e11b9b8c8552600485015260406024850152816044850152848401378181018301889052601f01601f191681010301916001600160a01b03165afa918215610d4d578192610d04575b50506001600160e01b03191603610cf257565b604051632c19a72f60e21b8152600490fd5b9091506020813d8211610d45575b81610d1f6020938361074d565b8101031261028c5751906001600160e01b031982168203610d4257505f80610cdf565b80fd5b3d9150610d12565b50604051903d90823e3d90fd5b610d6261097e565b9060405190602082019261190160f01b84526022830152604282015260428152610a3381610717565b90610d9582610836565b610da2604051918261074d565b8281528092610db3601f1991610836565b0190602036910137565b5f198114610c585760010190565b8051821015610c075760209160051b010190565b80516020809201915f5b828110610df7575050505090565b835185529381019392810192600101610de9565b9190811015610c075760061b0190565b90919593958151519560409586840151804211610f025750828803610eee57610e53918691610af160209b610aec8d89015186610f19565b5f91825b878110610e6957505050505050505050565b610e74818351610dcb565b5189610e81838689610e0b565b0135908a810151808311610ed7575081610ea0575b5050600101610e57565b516001600160a01b03908116610eb784878a610e0b565b3591821682036103b85791610ed0918960019594610f62565b905f610e96565b6024908a5190633728b83d60e01b82526004820152fd5b86516001621398b960e31b03198152600490fd5b60249088519063cd21db4f60e01b82526004820152fd5b90600160ff82161b9160018060a01b03165f525f60205260405f209060081c5f5260205260405f20818154188091551615610f5057565b604051633ab3447f60e11b8152600490fd5b915f8093602095606494604051946323b872dd60e01b865260018060a01b03809216600487015216602485015260448401525af13d15601f3d1160015f511416171615610fab57565b60405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606490fdfea26469706673582212203c986912fc5f1701695e440eafbce4a50d173ee5dc6f44e22b42b3f7bf95228664736f6c63430008140033",
							"opcodes": "PUSH1 0xC0 CALLVALUE PUSH2 0xB9 JUMPI CHAINID PUSH1 0xA0 MSTORE PUSH1 0x20 DUP2 ADD PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 MSTORE PUSH32 0x9AC997416E8FF9D2FF6BEBEB7149F65CDAE5E32E2B90440B566BB3044041D36A PUSH1 0x40 DUP4 ADD MSTORE CHAINID PUSH1 0x60 DUP4 ADD MSTORE ADDRESS PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x80 DUP3 MSTORE PUSH1 0xA0 DUP3 ADD SWAP2 DUP1 DUP4 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP5 GT OR PUSH2 0xA5 JUMPI DUP3 PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 PUSH1 0x80 MSTORE PUSH2 0x101D SWAP1 DUP2 PUSH2 0xBE DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0x9A7 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 PUSH2 0x981 ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x137C29FE EQ PUSH2 0x54A JUMPI DUP1 PUSH4 0x30F28B7A EQ PUSH2 0x487 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0x3FF9DCB1 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x4FE02B44 EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0xEDD9444B EQ PUSH2 0x290 JUMPI PUSH4 0xFE8EC1A7 EQ PUSH2 0x6B JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x28C JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x28C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x288 JUMPI PUSH2 0x9A SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x84D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x284 JUMPI PUSH2 0xB1 SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x94E JUMP JUMPDEST PUSH2 0xB9 PUSH2 0x788 JUMP JUMPDEST SWAP2 PUSH1 0x84 CALLDATALOAD DUP6 DUP2 GT PUSH2 0x280 JUMPI PUSH2 0xD1 SWAP1 CALLDATASIZE SWAP1 DUP11 ADD PUSH2 0x809 JUMP JUMPDEST SWAP9 SWAP1 SWAP6 PUSH1 0xA4 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x27C JUMPI PUSH2 0xEA SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x809 JUMP JUMPDEST SWAP7 SWAP1 SWAP6 DUP2 MLOAD SWAP1 PUSH2 0xF9 DUP3 PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x6B DUP3 MSTORE PUSH32 0x5065726D697442617463685769746E6573735472616E7366657246726F6D2854 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x6F6B656E5065726D697373696F6E735B5D207065726D69747465642C61646472 DUP4 DUP4 ADD MSTORE PUSH32 0x657373207370656E6465722C75696E74323536206E6F6E63652C75696E743235 PUSH1 0x60 DUP4 ADD MSTORE PUSH11 0xD88191958591B1A5B994B PUSH1 0xAA SHL PUSH1 0x80 DUP4 ADD MSTORE DUP3 MLOAD SWAP11 DUP12 SWAP2 DUP2 PUSH2 0x196 PUSH1 0x20 DUP6 ADD DUP1 SWAP7 PUSH2 0xA88 JUMP JUMPDEST SWAP2 DUP3 CALLDATACOPY ADD DUP11 DUP2 MSTORE SUB SWAP10 PUSH2 0x1B1 PUSH1 0x1F NOT SWAP12 DUP13 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x74D JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 DUP6 MLOAD MLOAD PUSH2 0x1C1 DUP2 PUSH2 0xD8B JUMP JUMPDEST SWAP1 DUP11 JUMPDEST DUP2 DUP2 LT PUSH2 0x24F JUMPI POP POP PUSH2 0x24C SWAP10 SWAP11 PUSH2 0x243 SWAP2 DUP4 MLOAD PUSH2 0x1F6 DUP2 PUSH2 0x1EA PUSH1 0x20 DUP3 ADD DUP1 SWAP6 PUSH2 0xDDF JUMP JUMPDEST SUB DUP5 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x74D JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x20 DUP10 DUP2 ADD MLOAD DUP6 DUP12 ADD MLOAD SWAP6 MLOAD SWAP2 DUP3 ADD SWAP7 DUP8 MSTORE PUSH1 0x40 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0xC0 DUP5 ADD MSTORE DUP3 PUSH1 0xE0 DUP2 ADD JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x74D JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP4 PUSH2 0xE1B JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP1 PUSH2 0x267 PUSH2 0x261 PUSH2 0x277 SWAP4 DUP13 MLOAD PUSH2 0xDCB JUMP JUMPDEST MLOAD PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x271 DUP3 DUP7 PUSH2 0xDCB JUMP JUMPDEST MSTORE PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x1C4 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x28C JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x28C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP1 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x288 JUMPI PUSH2 0x2C2 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x84D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x284 JUMPI PUSH2 0x2D9 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x94E JUMP JUMPDEST SWAP4 SWAP1 SWAP3 PUSH2 0x2E4 PUSH2 0x788 JUMP JUMPDEST SWAP2 PUSH1 0x64 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x3B8 JUMPI PUSH2 0x2FB SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x809 JUMP JUMPDEST SWAP5 SWAP1 SWAP4 DUP4 MLOAD MLOAD SWAP8 PUSH2 0x30B DUP10 PUSH2 0xD8B JUMP JUMPDEST SWAP9 DUP9 JUMPDEST DUP2 DUP2 LT PUSH2 0x396 JUMPI POP POP PUSH2 0x24C SWAP8 SWAP9 DUP2 MLOAD PUSH2 0x33E DUP2 PUSH2 0x330 PUSH1 0x20 DUP3 ADD DUP1 SWAP6 PUSH2 0xDDF JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x74D JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x20 DUP7 ADD MLOAD DUP3 DUP8 ADD MLOAD SWAP1 DUP4 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP5 PUSH32 0xFCF35F5AC6A2C28868DC44C302166470266239195F02B0EE408334829333B766 DUP7 MSTORE DUP5 ADD MSTORE CALLER PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH2 0x243 DUP2 PUSH2 0x732 JUMP JUMPDEST DUP1 DUP12 PUSH2 0x271 DUP3 PUSH2 0x3AD PUSH2 0x261 PUSH2 0x3B3 SWAP7 DUP14 MLOAD PUSH2 0xDCB JUMP JUMPDEST SWAP3 PUSH2 0xDCB JUMP JUMPDEST PUSH2 0x30E JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x3FE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3FE JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3FE JUMPI DUP3 DUP3 SWAP2 PUSH1 0x20 SWAP5 MSTORE DUP1 DUP5 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x3FE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3FE JUMPI PUSH32 0x3704902F963766A4E561BBAAB6E6CDC1B1DD12F6E9E99648DA8843B3F46B918D SWAP1 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD CALLER DUP6 MSTORE DUP5 PUSH1 0x20 MSTORE DUP2 DUP6 KECCAK256 DUP5 DUP7 MSTORE PUSH1 0x20 MSTORE DUP2 DUP6 KECCAK256 DUP2 DUP2 SLOAD OR SWAP1 SSTORE DUP2 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28C JUMPI PUSH1 0x20 SWAP1 PUSH2 0x480 PUSH2 0x97E JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x3FE JUMPI PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3FE JUMPI PUSH2 0x4A5 CALLDATASIZE PUSH2 0x79E JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x83 NOT CALLDATASIZE ADD SLT PUSH2 0x288 JUMPI PUSH2 0x4B9 PUSH2 0x76E JUMP JUMPDEST SWAP2 PUSH1 0xE4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x546 JUMPI PUSH2 0x24C SWAP5 PUSH2 0x4DB SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x809 JUMP JUMPDEST SWAP4 SWAP1 SWAP3 PUSH2 0x4E8 DUP4 MLOAD PUSH2 0xA39 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD DUP3 DUP6 ADD MLOAD SWAP1 DUP4 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP5 PUSH32 0x939C21A48A8DBE3A9A2404A1D46691E4D39F6583D6EC6B35714604C986D80106 DUP7 MSTORE DUP5 ADD MSTORE CALLER PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH2 0x53D DUP2 PUSH2 0x732 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 PUSH2 0xAB1 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x3FE JUMPI PUSH2 0x140 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3FE JUMPI PUSH2 0x567 CALLDATASIZE PUSH2 0x79E JUMP JUMPDEST SWAP2 DUP1 PUSH1 0x83 NOT CALLDATASIZE ADD SLT PUSH2 0x288 JUMPI PUSH2 0x57B PUSH2 0x76E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 SWAP1 PUSH2 0x104 CALLDATALOAD DUP6 DUP2 GT PUSH2 0x3B8 JUMPI PUSH2 0x59D SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x809 JUMP JUMPDEST SWAP1 SWAP4 PUSH2 0x124 CALLDATALOAD SWAP7 DUP8 GT PUSH2 0x280 JUMPI PUSH2 0x5BD PUSH2 0x53D SWAP7 PUSH2 0x24C SWAP9 CALLDATASIZE SWAP2 ADD PUSH2 0x809 JUMP JUMPDEST SWAP7 SWAP1 SWAP6 DUP3 MLOAD SWAP1 PUSH2 0x5CC DUP3 PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x64 DUP3 MSTORE PUSH32 0x5065726D69745769746E6573735472616E7366657246726F6D28546F6B656E50 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x65726D697373696F6E73207065726D69747465642C6164647265737320737065 DUP5 DUP4 ADD MSTORE PUSH32 0x6E6465722C75696E74323536206E6F6E63652C75696E7432353620646561646C PUSH1 0x60 DUP4 ADD MSTORE PUSH4 0x1A5B994B PUSH1 0xE2 SHL PUSH1 0x80 DUP4 ADD MSTORE DUP4 MLOAD SWAP5 DUP6 SWAP2 DUP2 PUSH2 0x662 PUSH1 0x20 DUP6 ADD DUP1 SWAP7 PUSH2 0xA88 JUMP JUMPDEST SWAP2 DUP3 CALLDATACOPY ADD DUP12 DUP2 MSTORE SUB SWAP4 PUSH2 0x67D PUSH1 0x1F NOT SWAP6 DUP7 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x74D JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP3 PUSH2 0x68B DUP7 MLOAD PUSH2 0xA39 JUMP JUMPDEST PUSH1 0x20 DUP8 DUP2 ADD MLOAD DUP6 DUP10 ADD MLOAD SWAP6 MLOAD SWAP2 DUP3 ADD SWAP7 DUP8 MSTORE PUSH1 0x40 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0xC0 DUP5 ADD MSTORE DUP3 PUSH1 0xE0 DUP2 ADD PUSH2 0x237 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x6E8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x6E8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x6E8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x6E8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x6E8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x784 JUMPI JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x784 JUMPI JUMP JUMPDEST PUSH1 0x3 NOT ADD SWAP1 PUSH1 0x80 DUP3 SLT PUSH2 0x784 JUMPI PUSH1 0x40 DUP1 MLOAD SWAP1 PUSH2 0x7B9 DUP3 PUSH2 0x6CD JUMP JUMPDEST DUP1 DUP3 SWAP5 SLT PUSH2 0x784 JUMPI DUP1 MLOAD DUP2 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x6E8 JUMPI DUP3 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x784 JUMPI DUP2 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE DUP3 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x64 CALLDATALOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x784 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x784 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x784 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x6E8 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x60 DUP2 DUP5 SUB SLT PUSH2 0x784 JUMPI PUSH1 0x40 DUP1 MLOAD SWAP2 PUSH2 0x868 DUP4 PUSH2 0x6CD JUMP JUMPDEST DUP3 SWAP5 DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP2 GT PUSH2 0x784 JUMPI DUP4 ADD DUP3 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x784 JUMPI DUP1 CALLDATALOAD PUSH2 0x894 DUP2 PUSH2 0x836 JUMP JUMPDEST SWAP3 PUSH2 0x8A1 DUP8 MLOAD SWAP5 DUP6 PUSH2 0x74D JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 SWAP5 DUP6 DUP1 DUP7 ADD SWAP4 PUSH1 0x6 SHL DUP6 ADD ADD SWAP4 DUP2 DUP6 GT PUSH2 0x784 JUMPI SWAP1 DUP7 DUP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 ADD SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x8E4 JUMPI POP POP POP POP POP DUP6 MSTORE DUP1 DUP3 ADD CALLDATALOAD SWAP1 DUP6 ADD MSTORE ADD CALLDATALOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 DUP5 DUP4 SUB SLT PUSH2 0x784 JUMPI DUP9 MLOAD SWAP1 DUP10 DUP3 ADD DUP3 DUP2 LT DUP6 DUP3 GT OR PUSH2 0x93A JUMPI DUP11 MSTORE DUP5 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x784 JUMPI DUP3 DUP10 SWAP3 DUP13 SWAP5 MSTORE DUP3 DUP8 ADD CALLDATALOAD DUP4 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP4 ADD SWAP2 SWAP1 DUP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 PUSH2 0x8C7 JUMP JUMPDEST PUSH1 0x24 PUSH0 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x784 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x784 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x6 SHL ADD ADD GT PUSH2 0x784 JUMPI JUMP JUMPDEST CHAINID PUSH32 0x0 SUB PUSH2 0x9C9 JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP3 MSTORE PUSH32 0x9AC997416E8FF9D2FF6BEBEB7149F65CDAE5E32E2B90440B566BB3044041D36A PUSH1 0x40 DUP3 ADD MSTORE CHAINID PUSH1 0x60 DUP3 ADD MSTORE ADDRESS PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x80 DUP2 MSTORE PUSH2 0xA33 DUP2 PUSH2 0x6FC JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP3 PUSH32 0x618358AC3DB8DC274F0CD8829DA7E234BD48CD73C4A740AEDE1ADEC9846D06A1 DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x60 DUP2 MSTORE PUSH2 0xA33 DUP2 PUSH2 0x717 JUMP JUMPDEST SWAP1 DUP2 MLOAD SWAP2 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0xA9E JUMPI POP POP ADD PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP2 DUP6 ADD MSTORE ADD PUSH2 0xA8E JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP4 PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH1 0x40 DUP5 ADD MLOAD DUP1 TIMESTAMP GT PUSH2 0xB34 JUMPI POP PUSH1 0x20 DUP5 MLOAD ADD MLOAD DUP1 DUP7 GT PUSH2 0xB1C JUMPI POP SWAP2 DUP6 SWAP2 PUSH2 0xAF1 PUSH2 0xAF7 SWAP5 PUSH2 0xAEC PUSH1 0x20 DUP9 ADD MLOAD DUP7 PUSH2 0xF19 JUMP JUMPDEST PUSH2 0xD5A JUMP JUMPDEST SWAP2 PUSH2 0xB62 JUMP JUMPDEST MLOAD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 PUSH1 0x84 CALLDATALOAD SWAP2 DUP3 AND DUP3 SUB PUSH2 0x784 JUMPI PUSH2 0xB1A SWAP4 PUSH2 0xF62 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x3728B83D PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xCD21DB4F PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x40 SWAP2 SUB SLT PUSH2 0x784 JUMPI PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 DUP5 EXTCODESIZE PUSH2 0xC7E JUMPI POP PUSH1 0x41 DUP3 SUB PUSH2 0xC1B JUMPI PUSH2 0xB7E DUP3 DUP3 ADD DUP3 PUSH2 0xB4C JUMP JUMPDEST SWAP4 SWAP1 SWAP3 PUSH1 0x40 LT ISZERO PUSH2 0xC07 JUMPI PUSH1 0x20 SWAP4 PUSH0 SWAP4 PUSH1 0xFF PUSH1 0x40 PUSH1 0x80 SWAP6 ADD CALLDATALOAD PUSH1 0xF8 SHR JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0xBFC JUMPI PUSH0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0xBEA JUMPI AND SUB PUSH2 0xBD8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x20578759 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8BAA579F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 DUP3 SUB PUSH2 0xC6C JUMPI PUSH2 0xC2F SWAP2 DUP2 ADD SWAP1 PUSH2 0xB4C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP2 AND SWAP3 PUSH1 0xFF SWAP2 DUP3 SHR PUSH1 0x1B ADD SWAP2 DUP3 GT PUSH2 0xC58 JUMPI PUSH1 0x20 SWAP4 PUSH0 SWAP4 PUSH1 0xFF PUSH1 0x80 SWAP5 PUSH2 0xB9B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4BE6321B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP2 DUP1 SWAP4 SWAP5 PUSH1 0x20 SWAP3 PUSH1 0x64 PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0xB135D3F PUSH1 0xE1 SHL SWAP12 DUP13 DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP6 ADD MSTORE DUP2 PUSH1 0x44 DUP6 ADD MSTORE DUP5 DUP5 ADD CALLDATACOPY DUP2 DUP2 ADD DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xD4D JUMPI DUP2 SWAP3 PUSH2 0xD04 JUMPI JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0xCF2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2C19A72F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xD45 JUMPI JUMPDEST DUP2 PUSH2 0xD1F PUSH1 0x20 SWAP4 DUP4 PUSH2 0x74D JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x28C JUMPI MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND DUP3 SUB PUSH2 0xD42 JUMPI POP PUSH0 DUP1 PUSH2 0xCDF JUMP JUMPDEST DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xD12 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xD62 PUSH2 0x97E JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH2 0x1901 PUSH1 0xF0 SHL DUP5 MSTORE PUSH1 0x22 DUP4 ADD MSTORE PUSH1 0x42 DUP3 ADD MSTORE PUSH1 0x42 DUP2 MSTORE PUSH2 0xA33 DUP2 PUSH2 0x717 JUMP JUMPDEST SWAP1 PUSH2 0xD95 DUP3 PUSH2 0x836 JUMP JUMPDEST PUSH2 0xDA2 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x74D JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0xDB3 PUSH1 0x1F NOT SWAP2 PUSH2 0x836 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH0 NOT DUP2 EQ PUSH2 0xC58 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xC07 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 SWAP3 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0xDF7 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xDE9 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0xC07 JUMPI PUSH1 0x6 SHL ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP6 SWAP4 SWAP6 DUP2 MLOAD MLOAD SWAP6 PUSH1 0x40 SWAP6 DUP7 DUP5 ADD MLOAD DUP1 TIMESTAMP GT PUSH2 0xF02 JUMPI POP DUP3 DUP9 SUB PUSH2 0xEEE JUMPI PUSH2 0xE53 SWAP2 DUP7 SWAP2 PUSH2 0xAF1 PUSH1 0x20 SWAP12 PUSH2 0xAEC DUP14 DUP10 ADD MLOAD DUP7 PUSH2 0xF19 JUMP JUMPDEST PUSH0 SWAP2 DUP3 JUMPDEST DUP8 DUP2 LT PUSH2 0xE69 JUMPI POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE74 DUP2 DUP4 MLOAD PUSH2 0xDCB JUMP JUMPDEST MLOAD DUP10 PUSH2 0xE81 DUP4 DUP7 DUP10 PUSH2 0xE0B JUMP JUMPDEST ADD CALLDATALOAD SWAP1 DUP11 DUP2 ADD MLOAD DUP1 DUP4 GT PUSH2 0xED7 JUMPI POP DUP2 PUSH2 0xEA0 JUMPI JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0xE57 JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH2 0xEB7 DUP5 DUP8 DUP11 PUSH2 0xE0B JUMP JUMPDEST CALLDATALOAD SWAP2 DUP3 AND DUP3 SUB PUSH2 0x3B8 JUMPI SWAP2 PUSH2 0xED0 SWAP2 DUP10 PUSH1 0x1 SWAP6 SWAP5 PUSH2 0xF62 JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0xE96 JUMP JUMPDEST PUSH1 0x24 SWAP1 DUP11 MLOAD SWAP1 PUSH4 0x3728B83D PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST DUP7 MLOAD PUSH1 0x1 PUSH3 0x1398B9 PUSH1 0xE3 SHL SUB NOT DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x24 SWAP1 DUP9 MLOAD SWAP1 PUSH4 0xCD21DB4F PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0xFF DUP3 AND SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x8 SHR PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD XOR DUP1 SWAP2 SSTORE AND ISZERO PUSH2 0xF50 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3AB3447F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP2 PUSH0 DUP1 SWAP4 PUSH1 0x20 SWAP6 PUSH1 0x64 SWAP5 PUSH1 0x40 MLOAD SWAP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND PUSH1 0x4 DUP8 ADD MSTORE AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE GAS CALL RETURNDATASIZE ISZERO PUSH1 0x1F RETURNDATASIZE GT PUSH1 0x1 PUSH0 MLOAD EQ AND OR AND ISZERO PUSH2 0xFAB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1514905394D1915497D19493D357D19052531151 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY SWAP9 PUSH10 0x12FC5F1701695E440EAF 0xBC 0xE4 0xA5 0xD OR RETURNDATACOPY 0xE5 0xDC PUSH16 0x44E22B42B3F7BF95228664736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "480:6056:11:-:0;;;;919:13:8;900:32;;1632:60;;;789:80;480:6056:11;;717:20:8;480:6056:11;;;;919:13:8;480:6056:11;;;;1686:4:8;480:6056:11;;;;;1632:60:8;;900:32;480:6056:11;;;;;;;;;;;;;;;;;;;;1622:71:8;;480:6056:11;942:74:8;480:6056:11;;;;;;;;;;;;900:32:8;480:6056:11;;;;;;;;;;-1:-1:-1;480:6056:11;;;;;-1:-1:-1;480:6056:11;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 1902,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_6821": {
									"entryPoint": 1928,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_array_struct_SignatureTransferDetails_calldata_dyn_calldata": {
									"entryPoint": 2382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_bytes32t_bytes32": {
									"entryPoint": 2892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_string_calldata": {
									"entryPoint": 2057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_struct_PermitBatchTransferFrom": {
									"entryPoint": 2125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_struct_PermitTransferFrom": {
									"entryPoint": 1950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_array_bytes32_dyn": {
									"entryPoint": 3551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes32_bytes32_address_uint256_uint256_bytes32": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 2696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_and_zero_memory_array_array_bytes32_dyn": {
									"entryPoint": 3467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_struct_TokenPermissions_dyn": {
									"entryPoint": 2102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"calldata_array_index_access_struct_SignatureTransferDetails_calldata_dyn_calldata": {
									"entryPoint": 3595,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_10220": {
									"entryPoint": 1788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_10225": {
									"entryPoint": 1815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_12005": {
									"entryPoint": 1842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_6826": {
									"entryPoint": 1741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_DOMAIN_SEPARATOR": {
									"entryPoint": 2430,
									"id": 1665,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun__permitTransferFrom": {
									"entryPoint": 3611,
									"id": 2075,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"fun_hashTokenPermissions": {
									"entryPoint": 2617,
									"id": 890,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_hashTypedData": {
									"entryPoint": 3418,
									"id": 1709,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_permitTransferFrom": {
									"entryPoint": 2737,
									"id": 1903,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"fun_safeTransferFrom": {
									"entryPoint": 3938,
									"id": 2602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"fun_useUnorderedNonce": {
									"entryPoint": 3865,
									"id": 2169,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_verify": {
									"entryPoint": 2914,
									"id": 1059,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"increment_uint256": {
									"entryPoint": 3517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"memory_array_index_access_struct_TokenPermissions_dyn": {
									"entryPoint": 3531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"immutableReferences": {
								"1618": [
									{
										"length": 32,
										"start": 2471
									}
								],
								"1620": [
									{
										"length": 32,
										"start": 2433
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x137C29FE EQ PUSH2 0x54A JUMPI DUP1 PUSH4 0x30F28B7A EQ PUSH2 0x487 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0x3FF9DCB1 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x4FE02B44 EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0xEDD9444B EQ PUSH2 0x290 JUMPI PUSH4 0xFE8EC1A7 EQ PUSH2 0x6B JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x28C JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x28C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x288 JUMPI PUSH2 0x9A SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x84D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x284 JUMPI PUSH2 0xB1 SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x94E JUMP JUMPDEST PUSH2 0xB9 PUSH2 0x788 JUMP JUMPDEST SWAP2 PUSH1 0x84 CALLDATALOAD DUP6 DUP2 GT PUSH2 0x280 JUMPI PUSH2 0xD1 SWAP1 CALLDATASIZE SWAP1 DUP11 ADD PUSH2 0x809 JUMP JUMPDEST SWAP9 SWAP1 SWAP6 PUSH1 0xA4 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x27C JUMPI PUSH2 0xEA SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x809 JUMP JUMPDEST SWAP7 SWAP1 SWAP6 DUP2 MLOAD SWAP1 PUSH2 0xF9 DUP3 PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x6B DUP3 MSTORE PUSH32 0x5065726D697442617463685769746E6573735472616E7366657246726F6D2854 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x6F6B656E5065726D697373696F6E735B5D207065726D69747465642C61646472 DUP4 DUP4 ADD MSTORE PUSH32 0x657373207370656E6465722C75696E74323536206E6F6E63652C75696E743235 PUSH1 0x60 DUP4 ADD MSTORE PUSH11 0xD88191958591B1A5B994B PUSH1 0xAA SHL PUSH1 0x80 DUP4 ADD MSTORE DUP3 MLOAD SWAP11 DUP12 SWAP2 DUP2 PUSH2 0x196 PUSH1 0x20 DUP6 ADD DUP1 SWAP7 PUSH2 0xA88 JUMP JUMPDEST SWAP2 DUP3 CALLDATACOPY ADD DUP11 DUP2 MSTORE SUB SWAP10 PUSH2 0x1B1 PUSH1 0x1F NOT SWAP12 DUP13 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x74D JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 DUP6 MLOAD MLOAD PUSH2 0x1C1 DUP2 PUSH2 0xD8B JUMP JUMPDEST SWAP1 DUP11 JUMPDEST DUP2 DUP2 LT PUSH2 0x24F JUMPI POP POP PUSH2 0x24C SWAP10 SWAP11 PUSH2 0x243 SWAP2 DUP4 MLOAD PUSH2 0x1F6 DUP2 PUSH2 0x1EA PUSH1 0x20 DUP3 ADD DUP1 SWAP6 PUSH2 0xDDF JUMP JUMPDEST SUB DUP5 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x74D JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x20 DUP10 DUP2 ADD MLOAD DUP6 DUP12 ADD MLOAD SWAP6 MLOAD SWAP2 DUP3 ADD SWAP7 DUP8 MSTORE PUSH1 0x40 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0xC0 DUP5 ADD MSTORE DUP3 PUSH1 0xE0 DUP2 ADD JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x74D JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP4 PUSH2 0xE1B JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP1 PUSH2 0x267 PUSH2 0x261 PUSH2 0x277 SWAP4 DUP13 MLOAD PUSH2 0xDCB JUMP JUMPDEST MLOAD PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x271 DUP3 DUP7 PUSH2 0xDCB JUMP JUMPDEST MSTORE PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x1C4 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x28C JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x28C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP1 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x288 JUMPI PUSH2 0x2C2 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x84D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x284 JUMPI PUSH2 0x2D9 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x94E JUMP JUMPDEST SWAP4 SWAP1 SWAP3 PUSH2 0x2E4 PUSH2 0x788 JUMP JUMPDEST SWAP2 PUSH1 0x64 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x3B8 JUMPI PUSH2 0x2FB SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x809 JUMP JUMPDEST SWAP5 SWAP1 SWAP4 DUP4 MLOAD MLOAD SWAP8 PUSH2 0x30B DUP10 PUSH2 0xD8B JUMP JUMPDEST SWAP9 DUP9 JUMPDEST DUP2 DUP2 LT PUSH2 0x396 JUMPI POP POP PUSH2 0x24C SWAP8 SWAP9 DUP2 MLOAD PUSH2 0x33E DUP2 PUSH2 0x330 PUSH1 0x20 DUP3 ADD DUP1 SWAP6 PUSH2 0xDDF JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x74D JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x20 DUP7 ADD MLOAD DUP3 DUP8 ADD MLOAD SWAP1 DUP4 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP5 PUSH32 0xFCF35F5AC6A2C28868DC44C302166470266239195F02B0EE408334829333B766 DUP7 MSTORE DUP5 ADD MSTORE CALLER PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH2 0x243 DUP2 PUSH2 0x732 JUMP JUMPDEST DUP1 DUP12 PUSH2 0x271 DUP3 PUSH2 0x3AD PUSH2 0x261 PUSH2 0x3B3 SWAP7 DUP14 MLOAD PUSH2 0xDCB JUMP JUMPDEST SWAP3 PUSH2 0xDCB JUMP JUMPDEST PUSH2 0x30E JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x3FE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3FE JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3FE JUMPI DUP3 DUP3 SWAP2 PUSH1 0x20 SWAP5 MSTORE DUP1 DUP5 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x3FE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3FE JUMPI PUSH32 0x3704902F963766A4E561BBAAB6E6CDC1B1DD12F6E9E99648DA8843B3F46B918D SWAP1 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD CALLER DUP6 MSTORE DUP5 PUSH1 0x20 MSTORE DUP2 DUP6 KECCAK256 DUP5 DUP7 MSTORE PUSH1 0x20 MSTORE DUP2 DUP6 KECCAK256 DUP2 DUP2 SLOAD OR SWAP1 SSTORE DUP2 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x28C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28C JUMPI PUSH1 0x20 SWAP1 PUSH2 0x480 PUSH2 0x97E JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x3FE JUMPI PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3FE JUMPI PUSH2 0x4A5 CALLDATASIZE PUSH2 0x79E JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x83 NOT CALLDATASIZE ADD SLT PUSH2 0x288 JUMPI PUSH2 0x4B9 PUSH2 0x76E JUMP JUMPDEST SWAP2 PUSH1 0xE4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x546 JUMPI PUSH2 0x24C SWAP5 PUSH2 0x4DB SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x809 JUMP JUMPDEST SWAP4 SWAP1 SWAP3 PUSH2 0x4E8 DUP4 MLOAD PUSH2 0xA39 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD DUP3 DUP6 ADD MLOAD SWAP1 DUP4 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP5 PUSH32 0x939C21A48A8DBE3A9A2404A1D46691E4D39F6583D6EC6B35714604C986D80106 DUP7 MSTORE DUP5 ADD MSTORE CALLER PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH2 0x53D DUP2 PUSH2 0x732 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 PUSH2 0xAB1 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x3FE JUMPI PUSH2 0x140 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3FE JUMPI PUSH2 0x567 CALLDATASIZE PUSH2 0x79E JUMP JUMPDEST SWAP2 DUP1 PUSH1 0x83 NOT CALLDATASIZE ADD SLT PUSH2 0x288 JUMPI PUSH2 0x57B PUSH2 0x76E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 SWAP1 PUSH2 0x104 CALLDATALOAD DUP6 DUP2 GT PUSH2 0x3B8 JUMPI PUSH2 0x59D SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x809 JUMP JUMPDEST SWAP1 SWAP4 PUSH2 0x124 CALLDATALOAD SWAP7 DUP8 GT PUSH2 0x280 JUMPI PUSH2 0x5BD PUSH2 0x53D SWAP7 PUSH2 0x24C SWAP9 CALLDATASIZE SWAP2 ADD PUSH2 0x809 JUMP JUMPDEST SWAP7 SWAP1 SWAP6 DUP3 MLOAD SWAP1 PUSH2 0x5CC DUP3 PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x64 DUP3 MSTORE PUSH32 0x5065726D69745769746E6573735472616E7366657246726F6D28546F6B656E50 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x65726D697373696F6E73207065726D69747465642C6164647265737320737065 DUP5 DUP4 ADD MSTORE PUSH32 0x6E6465722C75696E74323536206E6F6E63652C75696E7432353620646561646C PUSH1 0x60 DUP4 ADD MSTORE PUSH4 0x1A5B994B PUSH1 0xE2 SHL PUSH1 0x80 DUP4 ADD MSTORE DUP4 MLOAD SWAP5 DUP6 SWAP2 DUP2 PUSH2 0x662 PUSH1 0x20 DUP6 ADD DUP1 SWAP7 PUSH2 0xA88 JUMP JUMPDEST SWAP2 DUP3 CALLDATACOPY ADD DUP12 DUP2 MSTORE SUB SWAP4 PUSH2 0x67D PUSH1 0x1F NOT SWAP6 DUP7 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x74D JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP3 PUSH2 0x68B DUP7 MLOAD PUSH2 0xA39 JUMP JUMPDEST PUSH1 0x20 DUP8 DUP2 ADD MLOAD DUP6 DUP10 ADD MLOAD SWAP6 MLOAD SWAP2 DUP3 ADD SWAP7 DUP8 MSTORE PUSH1 0x40 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0xC0 DUP5 ADD MSTORE DUP3 PUSH1 0xE0 DUP2 ADD PUSH2 0x237 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x6E8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x6E8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x6E8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x6E8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x6E8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x784 JUMPI JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x784 JUMPI JUMP JUMPDEST PUSH1 0x3 NOT ADD SWAP1 PUSH1 0x80 DUP3 SLT PUSH2 0x784 JUMPI PUSH1 0x40 DUP1 MLOAD SWAP1 PUSH2 0x7B9 DUP3 PUSH2 0x6CD JUMP JUMPDEST DUP1 DUP3 SWAP5 SLT PUSH2 0x784 JUMPI DUP1 MLOAD DUP2 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x6E8 JUMPI DUP3 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x784 JUMPI DUP2 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE DUP3 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x64 CALLDATALOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x784 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x784 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x784 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x6E8 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x60 DUP2 DUP5 SUB SLT PUSH2 0x784 JUMPI PUSH1 0x40 DUP1 MLOAD SWAP2 PUSH2 0x868 DUP4 PUSH2 0x6CD JUMP JUMPDEST DUP3 SWAP5 DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP2 GT PUSH2 0x784 JUMPI DUP4 ADD DUP3 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x784 JUMPI DUP1 CALLDATALOAD PUSH2 0x894 DUP2 PUSH2 0x836 JUMP JUMPDEST SWAP3 PUSH2 0x8A1 DUP8 MLOAD SWAP5 DUP6 PUSH2 0x74D JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 SWAP5 DUP6 DUP1 DUP7 ADD SWAP4 PUSH1 0x6 SHL DUP6 ADD ADD SWAP4 DUP2 DUP6 GT PUSH2 0x784 JUMPI SWAP1 DUP7 DUP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 ADD SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x8E4 JUMPI POP POP POP POP POP DUP6 MSTORE DUP1 DUP3 ADD CALLDATALOAD SWAP1 DUP6 ADD MSTORE ADD CALLDATALOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 DUP5 DUP4 SUB SLT PUSH2 0x784 JUMPI DUP9 MLOAD SWAP1 DUP10 DUP3 ADD DUP3 DUP2 LT DUP6 DUP3 GT OR PUSH2 0x93A JUMPI DUP11 MSTORE DUP5 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x784 JUMPI DUP3 DUP10 SWAP3 DUP13 SWAP5 MSTORE DUP3 DUP8 ADD CALLDATALOAD DUP4 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP4 ADD SWAP2 SWAP1 DUP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 PUSH2 0x8C7 JUMP JUMPDEST PUSH1 0x24 PUSH0 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x784 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x784 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x6 SHL ADD ADD GT PUSH2 0x784 JUMPI JUMP JUMPDEST CHAINID PUSH32 0x0 SUB PUSH2 0x9C9 JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP3 MSTORE PUSH32 0x9AC997416E8FF9D2FF6BEBEB7149F65CDAE5E32E2B90440B566BB3044041D36A PUSH1 0x40 DUP3 ADD MSTORE CHAINID PUSH1 0x60 DUP3 ADD MSTORE ADDRESS PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x80 DUP2 MSTORE PUSH2 0xA33 DUP2 PUSH2 0x6FC JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP3 PUSH32 0x618358AC3DB8DC274F0CD8829DA7E234BD48CD73C4A740AEDE1ADEC9846D06A1 DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x60 DUP2 MSTORE PUSH2 0xA33 DUP2 PUSH2 0x717 JUMP JUMPDEST SWAP1 DUP2 MLOAD SWAP2 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0xA9E JUMPI POP POP ADD PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP2 DUP6 ADD MSTORE ADD PUSH2 0xA8E JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP4 PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH1 0x40 DUP5 ADD MLOAD DUP1 TIMESTAMP GT PUSH2 0xB34 JUMPI POP PUSH1 0x20 DUP5 MLOAD ADD MLOAD DUP1 DUP7 GT PUSH2 0xB1C JUMPI POP SWAP2 DUP6 SWAP2 PUSH2 0xAF1 PUSH2 0xAF7 SWAP5 PUSH2 0xAEC PUSH1 0x20 DUP9 ADD MLOAD DUP7 PUSH2 0xF19 JUMP JUMPDEST PUSH2 0xD5A JUMP JUMPDEST SWAP2 PUSH2 0xB62 JUMP JUMPDEST MLOAD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 PUSH1 0x84 CALLDATALOAD SWAP2 DUP3 AND DUP3 SUB PUSH2 0x784 JUMPI PUSH2 0xB1A SWAP4 PUSH2 0xF62 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x3728B83D PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xCD21DB4F PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x40 SWAP2 SUB SLT PUSH2 0x784 JUMPI PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 DUP5 EXTCODESIZE PUSH2 0xC7E JUMPI POP PUSH1 0x41 DUP3 SUB PUSH2 0xC1B JUMPI PUSH2 0xB7E DUP3 DUP3 ADD DUP3 PUSH2 0xB4C JUMP JUMPDEST SWAP4 SWAP1 SWAP3 PUSH1 0x40 LT ISZERO PUSH2 0xC07 JUMPI PUSH1 0x20 SWAP4 PUSH0 SWAP4 PUSH1 0xFF PUSH1 0x40 PUSH1 0x80 SWAP6 ADD CALLDATALOAD PUSH1 0xF8 SHR JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0xBFC JUMPI PUSH0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0xBEA JUMPI AND SUB PUSH2 0xBD8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x20578759 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8BAA579F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 DUP3 SUB PUSH2 0xC6C JUMPI PUSH2 0xC2F SWAP2 DUP2 ADD SWAP1 PUSH2 0xB4C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP2 AND SWAP3 PUSH1 0xFF SWAP2 DUP3 SHR PUSH1 0x1B ADD SWAP2 DUP3 GT PUSH2 0xC58 JUMPI PUSH1 0x20 SWAP4 PUSH0 SWAP4 PUSH1 0xFF PUSH1 0x80 SWAP5 PUSH2 0xB9B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4BE6321B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP2 DUP1 SWAP4 SWAP5 PUSH1 0x20 SWAP3 PUSH1 0x64 PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0xB135D3F PUSH1 0xE1 SHL SWAP12 DUP13 DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP6 ADD MSTORE DUP2 PUSH1 0x44 DUP6 ADD MSTORE DUP5 DUP5 ADD CALLDATACOPY DUP2 DUP2 ADD DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xD4D JUMPI DUP2 SWAP3 PUSH2 0xD04 JUMPI JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0xCF2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2C19A72F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xD45 JUMPI JUMPDEST DUP2 PUSH2 0xD1F PUSH1 0x20 SWAP4 DUP4 PUSH2 0x74D JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x28C JUMPI MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND DUP3 SUB PUSH2 0xD42 JUMPI POP PUSH0 DUP1 PUSH2 0xCDF JUMP JUMPDEST DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xD12 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xD62 PUSH2 0x97E JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH2 0x1901 PUSH1 0xF0 SHL DUP5 MSTORE PUSH1 0x22 DUP4 ADD MSTORE PUSH1 0x42 DUP3 ADD MSTORE PUSH1 0x42 DUP2 MSTORE PUSH2 0xA33 DUP2 PUSH2 0x717 JUMP JUMPDEST SWAP1 PUSH2 0xD95 DUP3 PUSH2 0x836 JUMP JUMPDEST PUSH2 0xDA2 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x74D JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0xDB3 PUSH1 0x1F NOT SWAP2 PUSH2 0x836 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH0 NOT DUP2 EQ PUSH2 0xC58 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xC07 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 SWAP3 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0xDF7 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xDE9 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0xC07 JUMPI PUSH1 0x6 SHL ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP6 SWAP4 SWAP6 DUP2 MLOAD MLOAD SWAP6 PUSH1 0x40 SWAP6 DUP7 DUP5 ADD MLOAD DUP1 TIMESTAMP GT PUSH2 0xF02 JUMPI POP DUP3 DUP9 SUB PUSH2 0xEEE JUMPI PUSH2 0xE53 SWAP2 DUP7 SWAP2 PUSH2 0xAF1 PUSH1 0x20 SWAP12 PUSH2 0xAEC DUP14 DUP10 ADD MLOAD DUP7 PUSH2 0xF19 JUMP JUMPDEST PUSH0 SWAP2 DUP3 JUMPDEST DUP8 DUP2 LT PUSH2 0xE69 JUMPI POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE74 DUP2 DUP4 MLOAD PUSH2 0xDCB JUMP JUMPDEST MLOAD DUP10 PUSH2 0xE81 DUP4 DUP7 DUP10 PUSH2 0xE0B JUMP JUMPDEST ADD CALLDATALOAD SWAP1 DUP11 DUP2 ADD MLOAD DUP1 DUP4 GT PUSH2 0xED7 JUMPI POP DUP2 PUSH2 0xEA0 JUMPI JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0xE57 JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH2 0xEB7 DUP5 DUP8 DUP11 PUSH2 0xE0B JUMP JUMPDEST CALLDATALOAD SWAP2 DUP3 AND DUP3 SUB PUSH2 0x3B8 JUMPI SWAP2 PUSH2 0xED0 SWAP2 DUP10 PUSH1 0x1 SWAP6 SWAP5 PUSH2 0xF62 JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0xE96 JUMP JUMPDEST PUSH1 0x24 SWAP1 DUP11 MLOAD SWAP1 PUSH4 0x3728B83D PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST DUP7 MLOAD PUSH1 0x1 PUSH3 0x1398B9 PUSH1 0xE3 SHL SUB NOT DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x24 SWAP1 DUP9 MLOAD SWAP1 PUSH4 0xCD21DB4F PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0xFF DUP3 AND SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x8 SHR PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD XOR DUP1 SWAP2 SSTORE AND ISZERO PUSH2 0xF50 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3AB3447F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP2 PUSH0 DUP1 SWAP4 PUSH1 0x20 SWAP6 PUSH1 0x64 SWAP5 PUSH1 0x40 MLOAD SWAP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND PUSH1 0x4 DUP8 ADD MSTORE AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE GAS CALL RETURNDATASIZE ISZERO PUSH1 0x1F RETURNDATASIZE GT PUSH1 0x1 PUSH0 MLOAD EQ AND OR AND ISZERO PUSH2 0xFAB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1514905394D1915497D19493D357D19052531151 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY SWAP9 PUSH10 0x12FC5F1701695E440EAF 0xBC 0xE4 0xA5 0xD OR RETURNDATACOPY 0xE5 0xDC PUSH16 0x44E22B42B3F7BF95228664736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "480:6056:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;480:6056:11;;;;-1:-1:-1;;;;;480:6056:11;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;480:6056:11;;;;;;4678:86:5;;;;1621:102;480:6056:11;4678:86:5;;1621:102;;;:::i;:::-;;;;;;;;4678:86;4133:80;4678:86;4133:80;;4678:86;;;;;;;;:::i;:::-;480:6056:11;4668:97:5;;4799:16;;;480:6056:11;4873:27:5;;;:::i;:::-;4916:13;;4931:16;;;;;;480:6056:11;;3572:9;480:6056;;5088:234:5;480:6056:11;;;5152:39:5;;1254:173;480:6056:11;5152:39:5;;1254:173;;;:::i;:::-;5152:39;;;;;;;;:::i;:::-;480:6056:11;5142:50:5;;480:6056:11;5238:12:5;;;1018:166;5268:15;;;1018:166;480:6056:11;;5088:234:5;;;480:6056:11;;;1621:102:5;;;480:6056:11;;;;5210:10:5;1621:102;;;480:6056:11;1621:102:5;;;480:6056:11;;;;;1621:102:5;;480:6056:11;;;;;;1621:102:5;;;480:6056:11;;1621:102:5;;;5088:234;;;;;;;;;:::i;:::-;480:6056:11;5065:267:5;;3572:9:11;;:::i;:::-;480:6056;;4949:3:5;5017:16;4995:42;5017:19;4949:3;5017:16;;;:19;:::i;:::-;;4995:42;:::i;:::-;4968:69;;;;:::i;:::-;480:6056:11;4949:3:5;:::i;:::-;4916:13;;480:6056:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;480:6056:11;;;;-1:-1:-1;;;;;480:6056:11;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;3353:16:5;;;;;480:6056:11;3427:27:5;;;;:::i;:::-;3470:13;;3485:16;;;;;;480:6056:11;;3100:9;480:6056;;;;3734:39:5;;1254:173;480:6056:11;3734:39:5;;1254:173;;;:::i;:::-;3734:39;4133:80;;3734:39;;;;;;:::i;:::-;480:6056:11;3724:50:5;;480:6056:11;3820:12:5;;1018:166;3850:15;;;1018:166;480:6056:11;;;3642:237:5;480:6056:11;3642:237:5;;480:6056:11;1254:173:5;480:6056:11;;1018:166:5;;480:6056:11;3792:10:5;1018:166;;;480:6056:11;;1018:166:5;;480:6056:11;1018:166:5;;;480:6056:11;1018:166:5;3642:237;;;;;:::i;3503:3::-;3571:16;;3522:69;3571:16;3549:42;3571:19;3503:3;3571:16;;;:19;:::i;3549:42::-;3522:69;;:::i;3503:3::-;3470:13;;480:6056:11;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;480:6056:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5308:53;480:6056;;;;;5264:10;480:6056;;;;;;;;;;;;;;;;;;;5252:40;480:6056;;;;;;;;;;;5264:10;5308:53;;480:6056;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;480:6056:11;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;480:6056:11;;;;1148:9;480:6056;;;;;;;:::i;:::-;3029:16:5;;;3007:39;3029:16;;3007:39;:::i;:::-;3163:12;;;1018:166;3177:15;;;1018:166;480:6056:11;;;3086:107:5;3163:12;3086:107;;480:6056:11;1018:166:5;480:6056:11;;1018:166:5;;480:6056:11;3151:10:5;1018:166;;;480:6056:11;1018:166:5;;;480:6056:11;1018:166:5;;;480:6056:11;1018:166:5;3086:107;;;;;:::i;:::-;480:6056:11;3063:140:5;;1148:9:11;;:::i;480:6056::-;;;;;;;;;;;;-1:-1:-1;;480:6056:11;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;480:6056:11;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;4322:94:5;480:6056:11;1613:9;480:6056;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;480:6056:11;;;;;;4133:80:5;;;;1621:102;480:6056:11;4133:80:5;;1621:102;;;:::i;:::-;;;;;;;;4133:80;;;;;;;;;;;;;:::i;:::-;480:6056:11;4123:91:5;;4278:16;4256:39;4278:16;;4256:39;:::i;:::-;480:6056:11;4377:12:5;;;1018:166;4391:15;;;1018:166;480:6056:11;;4322:94:5;;;480:6056:11;;;1621:102:5;;;480:6056:11;;;;4365:10:5;1621:102;;;480:6056:11;1621:102:5;;;480:6056:11;;;;;1621:102:5;;480:6056:11;;;;;;1621:102:5;;;480:6056:11;;1621:102:5;;;4322:94;1621:102;480:6056:11;;;;;;;-1:-1:-1;;;;;480:6056:11;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;480:6056:11;;;;;;;:::o;:::-;895:59:5;480:6056:11;;;;;-1:-1:-1;;;;;480:6056:11;;;;;;;:::o;:::-;1018:166:5;480:6056:11;;;;;-1:-1:-1;;;;;480:6056:11;;;;;;;:::o;:::-;;4133:80:5;;;480:6056:11;;;;;;;;-1:-1:-1;;;;;480:6056:11;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;480:6056:11;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;480:6056:11;;;;;;:::o;:::-;-1:-1:-1;;480:6056:11;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;480:6056:11;;;;;;;;;-1:-1:-1;;;;;480:6056:11;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;480:6056:11;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;480:6056:11;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;480:6056:11;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;480:6056:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;480:6056:11;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;480:6056:11;;;;;;;;;;;;;;;;;:::o;1186:225:8:-;1270:13;1287:16;1270:33;1287:16;;1318:24;1186:225;:::o;1270:134::-;480:6056:11;;1632:60:8;;;480:6056:11;789:80:8;480:6056:11;;717:20:8;480:6056:11;;;;1270:13:8;480:6056:11;;;;1686:4:8;480:6056:11;;;;;1632:60:8;;;;;:::i;:::-;480:6056:11;1622:71:8;;1186:225;:::o;5539:229:5:-;480:6056:11;;5710:50:5;;;;480:6056:11;895:59:5;480:6056:11;;;;;;;895:59:5;;480:6056:11;;895:59:5;;480:6056:11;895:59:5;;;;;480:6056:11;895:59:5;5710:50;;;;;:::i;1621:102::-;;480:6056:11;;1621:102:5;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;2066:704:11;;;;;2329:31;480:6056;2393:15;;;;1018:166:5;2375:15:11;;:33;2371:79;;2482:16;2329:31;2482:16;;:23;1018:166:5;2464:41:11;;;2460:92;;2589:12;;;;2630:24;2656:5;2589:12;;2329:31;2589:12;;1018:166:5;2589:12:11;;:::i;:::-;2630:24;:::i;:::-;2656:5;;:::i;:::-;2679:16;480:6056;-1:-1:-1;;;;;480:6056:11;;;;;;;;;;;;;2747:15;;;:::i;:::-;2066:704::o;2460:92::-;480:6056;;2393:15;480:6056;2514:38;;;;;;;;;480:6056;2514:38;2371:79;480:6056;;2393:15;480:6056;2417:33;;;;;;;;;480:6056;2417:33;480:6056;;;;;;;;;;;;;;;;;:::o;700:1109:6:-;-1:-1:-1;863:25:6;;;;-1:-1:-1;933:2:6;913:22;;933:2;;964:41;;;;;;:::i;:::-;955:50;;625:68;1043:2;625:68;;;;;;-1:-1:-1;625:68:6;;1043:2;625:68;;;1033:13;625:68;;909:490;480:6056:11;;;;;625:68:6;;;;;480:6056:11;625:68:6;;480:6056:11;625:68:6;;;480:6056:11;1429:24:6;;;;;;;;;-1:-1:-1;1429:24:6;-1:-1:-1;;;;;480:6056:11;;;;1471:20:6;;1467:51;;480:6056:11;1536:23:6;1532:51;;700:1109::o;1532:51::-;480:6056:11;;-1:-1:-1;;;1568:15:6;;;;;1467:51;480:6056:11;;-1:-1:-1;;;1500:18:6;;;;;1429:24;480:6056:11;;;-1:-1:-1;480:6056:11;;;;;625:68:6;480:6056:11;;;-1:-1:-1;625:68:6;;;;;-1:-1:-1;625:68:6;909:490;1092:2;1072:22;;1092:2;;1180:41;;;;;;:::i;:::-;-1:-1:-1;;;;;1243:19:6;;;626:66;480:6056:11;;;1312:2:6;625:68;;;;;;;1280:34;-1:-1:-1;1280:34:6;625:68;;1280:34;909:490;;625:68;480:6056:11;;;-1:-1:-1;625:68:6;;;;;-1:-1:-1;625:68:6;1068:331;1092:2;480:6056:11;-1:-1:-1;;;1360:24:6;;;;;859:944;480:6056:11;;;;1634:57:6;480:6056:11;;;;;;;;;;;;;1634:57:6;;;;;;;480:6056:11;;;;;;;;;;;;;;1621:102:5;;;;;;;;;4133:80;480:6056:11;-1:-1:-1;;480:6056:11;;;1634:57:6;;;-1:-1:-1;;;;;480:6056:11;1634:57:6;;;;;;;;;;;859:944;-1:-1:-1;;;;;;;;480:6056:11;1709:48:6;1705:87;;700:1109::o;1705:87::-;480:6056:11;;-1:-1:-1;;;1766:26:6;;1634:57;;1766:26;1634:57;;;;;;;;;;;;;;;;;;:::i;:::-;;;480:6056:11;;;;;;-1:-1:-1;;;;;;480:6056:11;;;;;;1634:57:6;;;;;480:6056:11;;;1634:57:6;;;-1:-1:-1;1634:57:6;;;480:6056:11;;;;;;;;;;;1757:167:8;1887:18;;:::i;:::-;480:6056:11;;;1858:58:8;;;;480:6056:11;;;;;;;;;;;;;;;1858:58:8;;;;;:::i;480:6056:11:-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;4133:80:5;480:6056:11;4133:80:5;;480:6056:11;;:::i;:::-;;;;;;;;:::o;:::-;-1:-1:-1;;480:6056:11;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;1254:173:5:-;480:6056:11;;;;;;1254:173:5;;;;;;;;;;;;;:::o;:::-;;;480:6056:11;;1254:173:5;;;;;;;;;;;;480:6056:11;;;;;;;;;;;;:::o;3928:1194::-;;;;;;4195:16;;480:6056;4251:15;;;;;;1018:166:5;4233:15:11;;:33;4229:79;;4322:38;;;;4318:67;;4488:5;4422:12;;;4462:24;4422:12;;;;;;1018:166:5;4422:12:11;;:::i;4488:5::-;-1:-1:-1;4534:13:11;;4549:16;;;;;;3928:1194;;;;;;;;;:::o;4567:3::-;4626:19;:16;;;:19;:::i;:::-;;4689:18;;;;;;:::i;:::-;:34;480:6056;4764:16;;;;1018:166:5;4746:34:11;;;4742:78;;4843:20;;4839:253;;4567:3;;;480:6056;;4534:13;;4839:253;480:6056;-1:-1:-1;;;;;480:6056:11;;;5034:18;;;;;:::i;:::-;480:6056;;;;;;;;5057:15;;;;480:6056;5057:15;;;:::i;:::-;4839:253;;;;4742:78;480:6056;;;;2514:38;;;;4789:31;;;;;480:6056;4789:31;4318:67;480:6056;;-1:-1:-1;;;;;;4369:16:11;;;;;4229:79;480:6056;;;;2417:33;;;;4275;;;;;480:6056;4275:33;6241:293;;6399:1;625:68:6;;;480:6056:11;;;;;;;;-1:-1:-1;480:6056:11;-1:-1:-1;480:6056:11;;;-1:-1:-1;480:6056:11;;5983:1;480:6056;-1:-1:-1;480:6056:11;;;;-1:-1:-1;480:6056:11;;;;6438:33;480:6056;;;6486:13;:18;6482:45;;6241:293::o;6482:45::-;480:6056;;-1:-1:-1;;;6513:14:11;;;;;1328:1782:13;;-1:-1:-1;1328:1782:13;;1532:1521;1328:1782;1532:1521;1328:1782;1532:1521;;;;;;;;480:6056:11;;;;;1532:1521:13;;;;;;;;;;;;;;;;;;;;;;;480:6056:11;-1:-1:-1;1532:1521:13;;;;;480:6056:11;;;1328:1782:13:o;480:6056:11:-;1532:1521:13;480:6056:11;-1:-1:-1;;;480:6056:11;;1532:1521:13;;480:6056:11;;;;1532:1521:13;480:6056:11;;;-1:-1:-1;;;1532:1521:13;480:6056:11;;;1532:1521:13;;480:6056:11"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "825000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "infinite",
								"invalidateUnorderedNonces(uint256,uint256)": "26247",
								"nonceBitmap(address,uint256)": "2535",
								"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)": "infinite",
								"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)": "infinite",
								"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)": "infinite",
								"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)": "infinite"
							},
							"internal": {
								"_permitTransferFrom(struct ISignatureTransfer.PermitBatchTransferFrom memory,struct ISignatureTransfer.SignatureTransferDetails calldata[] calldata,address,bytes32,bytes calldata)": "infinite",
								"_permitTransferFrom(struct ISignatureTransfer.PermitTransferFrom memory,struct ISignatureTransfer.SignatureTransferDetails calldata,address,bytes32,bytes calldata)": "infinite",
								"_useUnorderedNonce(address,uint256)": "infinite",
								"bitmapPositions(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 480,
									"end": 6536,
									"name": "PUSH",
									"source": 11,
									"value": "C0"
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 919,
									"end": 932,
									"name": "CHAINID",
									"source": 8
								},
								{
									"begin": 900,
									"end": 932,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 900,
									"end": 932,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1632,
									"end": 1692,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1632,
									"end": 1692,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1632,
									"end": 1692,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 789,
									"end": 869,
									"name": "PUSH",
									"source": 8,
									"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 717,
									"end": 737,
									"name": "PUSH",
									"source": 8,
									"value": "9AC997416E8FF9D2FF6BEBEB7149F65CDAE5E32E2B90440B566BB3044041D36A"
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 919,
									"end": 932,
									"name": "CHAINID",
									"source": 8
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1686,
									"end": 1690,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 1632,
									"end": 1692,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1632,
									"end": 1692,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 900,
									"end": 932,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1693,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1622,
									"end": 1693,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 942,
									"end": 1016,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "1618"
								},
								{
									"begin": 900,
									"end": 932,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "1620"
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "RETURN",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B71"
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 480,
									"end": 6536,
									"name": "REVERT",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203c986912fc5f1701695e440eafbce4a50d173ee5dc6f44e22b42b3f7bf95228664736f6c63430008140033",
									".code": [
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "137C29FE"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "30F28B7A"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "3644E515"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "3FF9DCB1"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "4FE02B44"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "EDD9444B"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "FE8EC1A7"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "A4"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "6B"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "5065726D697442617463685769746E6573735472616E7366657246726F6D2854"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "6F6B656E5065726D697373696F6E735B5D207065726D69747465642C61646472"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "657373207370656E6465722C75696E74323536206E6F6E63652C75696E743235"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D88191958591B1A5B994B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "SWAP11",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1621,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "SWAP10",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "SWAP12",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "DUP13",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4678,
											"end": 4764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4678,
											"end": 4764,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4668,
											"end": 4765,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4668,
											"end": 4765,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4799,
											"end": 4815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4799,
											"end": 4815,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4799,
											"end": 4815,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4873,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 4873,
											"end": 4900,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 4873,
											"end": 4900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4900,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 4873,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4916,
											"end": 4929,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4916,
											"end": 4929,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 4931,
											"end": 4947,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 4931,
											"end": 4947,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4931,
											"end": 4947,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4931,
											"end": 4947,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4931,
											"end": 4947,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4931,
											"end": 4947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 4931,
											"end": 4947,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP10",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP11",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 5152,
											"end": 5191,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5152,
											"end": 5191,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5191,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1254,
											"end": 1427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5191,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5191,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5191,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5191,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5191,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5191,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5191,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 5152,
											"end": 5191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5191,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 5152,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5142,
											"end": 5192,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5192,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5238,
											"end": 5250,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5250,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5250,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5268,
											"end": 5283,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5268,
											"end": 5283,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 5268,
											"end": 5283,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5322,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5322,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5322,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5210,
											"end": 5220,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5322,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 5088,
											"end": 5322,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5322,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5322,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5322,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5322,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5322,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5322,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5322,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 5088,
											"end": 5322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5322,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 5088,
											"end": 5322,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5065,
											"end": 5332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5065,
											"end": 5332,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3572,
											"end": 3581,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 3572,
											"end": 3581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3581,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 3572,
											"end": 3581,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 4952,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 4949,
											"end": 4952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5017,
											"end": 5033,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4995,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 5017,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 4949,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 5017,
											"end": 5033,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5017,
											"end": 5033,
											"name": "DUP13",
											"source": 5
										},
										{
											"begin": 5017,
											"end": 5033,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5017,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 5017,
											"end": 5036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5017,
											"end": 5036,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 5017,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5017,
											"end": 5036,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4995,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 4995,
											"end": 5037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4995,
											"end": 5037,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 4995,
											"end": 5037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4968,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 4968,
											"end": 5037,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4968,
											"end": 5037,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4968,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 4968,
											"end": 5037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4968,
											"end": 5037,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 4968,
											"end": 5037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 4949,
											"end": 4952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4949,
											"end": 4952,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 4949,
											"end": 4952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4916,
											"end": 4929,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 4916,
											"end": 4929,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3427,
											"end": 3454,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 3427,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3427,
											"end": 3454,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3427,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3427,
											"end": 3454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3427,
											"end": 3454,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3427,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3483,
											"name": "SWAP9",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3483,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3485,
											"end": 3501,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3485,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3485,
											"end": 3501,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3485,
											"end": 3501,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3485,
											"end": 3501,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3485,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3485,
											"end": 3501,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3100,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3734,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3734,
											"end": 3773,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3734,
											"end": 3773,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 3773,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1254,
											"end": 1427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 3773,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 3773,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 3773,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 3773,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 3773,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 3773,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3734,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 3773,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3734,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3724,
											"end": 3774,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3724,
											"end": 3774,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3820,
											"end": 3832,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3820,
											"end": 3832,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3865,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3865,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3865,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3642,
											"end": 3879,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3642,
											"end": 3879,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3642,
											"end": 3879,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "PUSH",
											"source": 5,
											"value": "FCF35F5AC6A2C28868DC44C302166470266239195F02B0EE408334829333B766"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3792,
											"end": 3802,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 3642,
											"end": 3879,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3642,
											"end": 3879,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3642,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 3642,
											"end": 3879,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3642,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3642,
											"end": 3879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3571,
											"end": 3587,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3571,
											"end": 3587,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 3522,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 3571,
											"end": 3587,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3571,
											"end": 3587,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 3571,
											"end": 3587,
											"name": "DUP14",
											"source": 5
										},
										{
											"begin": 3571,
											"end": 3587,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 3571,
											"end": 3590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3591,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3549,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3522,
											"end": 3591,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3522,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 3522,
											"end": 3591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3470,
											"end": 3483,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5308,
											"end": 5361,
											"name": "PUSH",
											"source": 11,
											"value": "3704902F963766A4E561BBAAB6E6CDC1B1DD12F6E9E99648DA8843B3F46B918D"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5264,
											"end": 5274,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5252,
											"end": 5292,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5264,
											"end": 5274,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5308,
											"end": 5361,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5308,
											"end": 5361,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "E4"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1148,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3045,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3029,
											"end": 3045,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3029,
											"end": 3045,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3007,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3029,
											"end": 3045,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3029,
											"end": 3045,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3007,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 3007,
											"end": 3046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3007,
											"end": 3046,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3007,
											"end": 3046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3163,
											"end": 3175,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3163,
											"end": 3175,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3163,
											"end": 3175,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3177,
											"end": 3192,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3177,
											"end": 3192,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3177,
											"end": 3192,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3163,
											"end": 3175,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "PUSH",
											"source": 5,
											"value": "939C21A48A8DBE3A9A2404A1D46691E4D39F6583D6EC6B35714604C986D80106"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3151,
											"end": 3161,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3086,
											"end": 3193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3063,
											"end": 3203,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3063,
											"end": 3203,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1157,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1148,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 1148,
											"end": 1157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 4322,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 1613,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "5065726D69745769746E6573735472616E7366657246726F6D28546F6B656E50"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "65726D697373696F6E73207065726D69747465642C6164647265737320737065"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "6E6465722C75696E74323536206E6F6E63652C75696E7432353620646561646C"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5B994B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1621,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4133,
											"end": 4213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4123,
											"end": 4214,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4123,
											"end": 4214,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4278,
											"end": 4294,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4256,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 4278,
											"end": 4294,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4278,
											"end": 4294,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4256,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 4256,
											"end": 4295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4256,
											"end": 4295,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 4256,
											"end": 4295,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4377,
											"end": 4389,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4377,
											"end": 4389,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4377,
											"end": 4389,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4391,
											"end": 4406,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4391,
											"end": 4406,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 4391,
											"end": 4406,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4322,
											"end": 4416,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4416,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4416,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4365,
											"end": 4375,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "E4"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "LT",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "LT",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 895,
											"end": 954,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "LT",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "LT",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "LT",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "C4"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "LT",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP13",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1270,
											"end": 1283,
											"name": "CHAINID",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1303,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1620"
										},
										{
											"begin": 1270,
											"end": 1303,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 1287,
											"end": 1303,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1342,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1618"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1186,
											"end": 1411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1270,
											"end": 1404,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 1270,
											"end": 1404,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 789,
											"end": 869,
											"name": "PUSH",
											"source": 8,
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 717,
											"end": 737,
											"name": "PUSH",
											"source": 8,
											"value": "9AC997416E8FF9D2FF6BEBEB7149F65CDAE5E32E2B90440B566BB3044041D36A"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1283,
											"name": "CHAINID",
											"source": 8
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1686,
											"end": 1690,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1632,
											"end": 1692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 1632,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1186,
											"end": 1411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5539,
											"end": 5768,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 5539,
											"end": 5768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5710,
											"end": 5760,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5710,
											"end": 5760,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5710,
											"end": 5760,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5710,
											"end": 5760,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 895,
											"end": 954,
											"name": "PUSH",
											"source": 5,
											"value": "618358AC3DB8DC274F0CD8829DA7E234BD48CD73C4A740AEDE1ADEC9846D06A1"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 895,
											"end": 954,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 895,
											"end": 954,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 954,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 895,
											"end": 954,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 895,
											"end": 954,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 895,
											"end": 954,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 895,
											"end": 954,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 895,
											"end": 954,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 895,
											"end": 954,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 895,
											"end": 954,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5710,
											"end": 5760,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5710,
											"end": 5760,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5710,
											"end": 5760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 5710,
											"end": 5760,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5710,
											"end": 5760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 5710,
											"end": 5760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2066,
											"end": 2770,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 2066,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2770,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2770,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2770,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2770,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2329,
											"end": 2360,
											"name": "PUSH",
											"source": 11,
											"value": "A4"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2393,
											"end": 2408,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2393,
											"end": 2408,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2393,
											"end": 2408,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2393,
											"end": 2408,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2390,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2375,
											"end": 2390,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 2375,
											"end": 2408,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2371,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 2371,
											"end": 2450,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2498,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2329,
											"end": 2360,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2482,
											"end": 2498,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2498,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2505,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2464,
											"end": 2505,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2464,
											"end": 2505,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2464,
											"end": 2505,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 2460,
											"end": 2552,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2654,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 2656,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 2329,
											"end": 2360,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 2589,
											"end": 2601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2654,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2630,
											"end": 2654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2654,
											"name": "tag",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 2630,
											"end": 2654,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2656,
											"end": 2661,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2656,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 2656,
											"end": 2661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2656,
											"end": 2661,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 2656,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2679,
											"end": 2695,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2747,
											"end": 2762,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 2747,
											"end": 2762,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2747,
											"end": 2762,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 2747,
											"end": 2762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2747,
											"end": 2762,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 2747,
											"end": 2762,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2552,
											"name": "tag",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 2460,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2393,
											"end": 2408,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "PUSH",
											"source": 11,
											"value": "3728B83D"
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2371,
											"end": 2450,
											"name": "tag",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 2371,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2393,
											"end": 2408,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2417,
											"end": 2450,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2417,
											"end": 2450,
											"name": "PUSH",
											"source": 11,
											"value": "CD21DB4F"
										},
										{
											"begin": 2417,
											"end": 2450,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2417,
											"end": 2450,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2417,
											"end": 2450,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2417,
											"end": 2450,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2417,
											"end": 2450,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2417,
											"end": 2450,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2417,
											"end": 2450,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2417,
											"end": 2450,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 700,
											"end": 1809,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 700,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 863,
											"end": 888,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 863,
											"end": 888,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 863,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 863,
											"end": 888,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 933,
											"end": 935,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 913,
											"end": 935,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 913,
											"end": 935,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 933,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 933,
											"end": 935,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 964,
											"end": 1005,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1005,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1005,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1005,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 964,
											"end": 1005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1005,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 964,
											"end": 1005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1005,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1005,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1043,
											"end": 1045,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1043,
											"end": 1045,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1033,
											"end": 1046,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "F8"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 909,
											"end": 1399,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 909,
											"end": 1399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 625,
											"end": 693,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1471,
											"end": 1491,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1491,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 1467,
											"end": 1518,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1536,
											"end": 1559,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1532,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 1532,
											"end": 1583,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 700,
											"end": 1809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1532,
											"end": 1583,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 1532,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20578759"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1568,
											"end": 1583,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1568,
											"end": 1583,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1568,
											"end": 1583,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1568,
											"end": 1583,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1568,
											"end": 1583,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1518,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 1467,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8BAA579F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 1429,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 625,
											"end": 693,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 909,
											"end": 1399,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 909,
											"end": 1399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1092,
											"end": 1094,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1092,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 1092,
											"end": 1094,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1180,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 1180,
											"end": 1221,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1180,
											"end": 1221,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1180,
											"end": 1221,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1180,
											"end": 1221,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1180,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1180,
											"end": 1221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1180,
											"end": 1221,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 1180,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1243,
											"end": 1262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1243,
											"end": 1262,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1243,
											"end": 1262,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 626,
											"end": 692,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1314,
											"name": "PUSH",
											"source": 6,
											"value": "1B"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1280,
											"end": 1314,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1314,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1280,
											"end": 1314,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 909,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 909,
											"end": 1399,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1068,
											"end": 1399,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 1068,
											"end": 1399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1092,
											"end": 1094,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4BE6321B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1360,
											"end": 1384,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1360,
											"end": 1384,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1360,
											"end": 1384,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1360,
											"end": 1384,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1360,
											"end": 1384,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 859,
											"end": 1803,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 859,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "B135D3F"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "E1"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "SWAP12",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1723,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 859,
											"end": 1803,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 859,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1709,
											"end": 1757,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 1705,
											"end": 1792,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 700,
											"end": 1809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1792,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 1705,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2C19A72F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1766,
											"end": 1792,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1766,
											"end": 1792,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1766,
											"end": 1792,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1634,
											"end": 1691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 1634,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1924,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1757,
											"end": 1924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1887,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 1887,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 1887,
											"end": 1905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1887,
											"end": 1905,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 1887,
											"end": 1905,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1858,
											"end": 1916,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1858,
											"end": 1916,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1858,
											"end": 1916,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1858,
											"end": 1916,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "1901"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "F0"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 1858,
											"end": 1916,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1858,
											"end": 1916,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1858,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 1858,
											"end": 1916,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1858,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1858,
											"end": 1916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4133,
											"end": 4213,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 5122,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 3928,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 5122,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 5122,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 5122,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 5122,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 5122,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 4195,
											"end": 4211,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4195,
											"end": 4211,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4251,
											"end": 4266,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 4251,
											"end": 4266,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4251,
											"end": 4266,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 4251,
											"end": 4266,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4251,
											"end": 4266,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4251,
											"end": 4266,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4233,
											"end": 4248,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4233,
											"end": 4248,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 4233,
											"end": 4266,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4229,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 4229,
											"end": 4308,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4322,
											"end": 4360,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4322,
											"end": 4360,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4322,
											"end": 4360,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 4322,
											"end": 4360,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4318,
											"end": 4385,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 4318,
											"end": 4385,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4488,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 4422,
											"end": 4434,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4422,
											"end": 4434,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4422,
											"end": 4434,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4462,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 4422,
											"end": 4434,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4422,
											"end": 4434,
											"name": "SWAP12",
											"source": 11
										},
										{
											"begin": 4422,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 4422,
											"end": 4434,
											"name": "DUP14",
											"source": 11
										},
										{
											"begin": 4422,
											"end": 4434,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 4422,
											"end": 4434,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4422,
											"end": 4434,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4422,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 4422,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4488,
											"end": 4493,
											"name": "tag",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 4488,
											"end": 4493,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4534,
											"end": 4547,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4534,
											"end": 4547,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4549,
											"end": 4565,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 4549,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4549,
											"end": 4565,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4549,
											"end": 4565,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4549,
											"end": 4565,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4549,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 4549,
											"end": 4565,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 5122,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 5122,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 5122,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 5122,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 5122,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 5122,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 5122,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 5122,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 5122,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 5122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4567,
											"end": 4570,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 4567,
											"end": 4570,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4626,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 4626,
											"end": 4642,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4626,
											"end": 4642,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4626,
											"end": 4642,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4626,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 4626,
											"end": 4645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4626,
											"end": 4645,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 4626,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4626,
											"end": 4645,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 4689,
											"end": 4707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4689,
											"end": 4723,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4764,
											"end": 4780,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4764,
											"end": 4780,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 4764,
											"end": 4780,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4764,
											"end": 4780,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4746,
											"end": 4780,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 4780,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 4780,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4742,
											"end": 4820,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 4742,
											"end": 4820,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4843,
											"end": 4863,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4843,
											"end": 4863,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4839,
											"end": 5092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 4839,
											"end": 5092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4567,
											"end": 4570,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 4567,
											"end": 4570,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4567,
											"end": 4570,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4567,
											"end": 4570,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4534,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 4534,
											"end": 4547,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4839,
											"end": 5092,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 4839,
											"end": 5092,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5034,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 5034,
											"end": 5052,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5034,
											"end": 5052,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5034,
											"end": 5052,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 5034,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 5034,
											"end": 5052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5034,
											"end": 5052,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 5034,
											"end": 5052,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5057,
											"end": 5072,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5057,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 5057,
											"end": 5072,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5057,
											"end": 5072,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5057,
											"end": 5072,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 5057,
											"end": 5072,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 5057,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 5057,
											"end": 5072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5057,
											"end": 5072,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 5057,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4839,
											"end": 5092,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4839,
											"end": 5092,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4839,
											"end": 5092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 4839,
											"end": 5092,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4742,
											"end": 4820,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 4742,
											"end": 4820,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "PUSH",
											"source": 11,
											"value": "3728B83D"
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 4789,
											"end": 4820,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4789,
											"end": 4820,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4789,
											"end": 4820,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4789,
											"end": 4820,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4789,
											"end": 4820,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4789,
											"end": 4820,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4318,
											"end": 4385,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 4318,
											"end": 4385,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1398B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4369,
											"end": 4385,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4369,
											"end": 4385,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4369,
											"end": 4385,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4369,
											"end": 4385,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4369,
											"end": 4385,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4229,
											"end": 4308,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 4229,
											"end": 4308,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2417,
											"end": 2450,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2417,
											"end": 2450,
											"name": "PUSH",
											"source": 11,
											"value": "CD21DB4F"
										},
										{
											"begin": 2417,
											"end": 2450,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2417,
											"end": 2450,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6241,
											"end": 6534,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 6241,
											"end": 6534,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6241,
											"end": 6534,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6399,
											"end": 6400,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 625,
											"end": 693,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 625,
											"end": 693,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 5984,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6438,
											"end": 6471,
											"name": "XOR",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6499,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6504,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6482,
											"end": 6527,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 6482,
											"end": 6527,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6241,
											"end": 6534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6482,
											"end": 6527,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 6482,
											"end": 6527,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3AB3447F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6513,
											"end": 6527,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6513,
											"end": 6527,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6513,
											"end": 6527,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6513,
											"end": 6527,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6513,
											"end": 6527,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 3110,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 1328,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 3110,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 3110,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 3110,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 3110,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 1328,
											"end": 3110,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "23B872DD"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 3110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1514905394D1915497D19493D357D19052531151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 1532,
											"end": 3053,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 480,
											"end": 6536,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"contracts/contracts/interfaces/IAllowanceTransfer.sol",
								"contracts/contracts/interfaces/IEIP712.sol",
								"contracts/contracts/interfaces/IERC1271.sol",
								"contracts/contracts/interfaces/ISignatureTransfer.sol",
								"contracts/contracts/lib/Allowance.sol",
								"contracts/contracts/lib/PermitHash.sol",
								"contracts/contracts/lib/SignatureVerification.sol",
								"contracts/contracts/permit2/AllowanceTransfer.sol",
								"contracts/contracts/permit2/EIP712.sol",
								"contracts/contracts/permit2/Permit2.sol",
								"contracts/contracts/permit2/PermitErrors.sol",
								"contracts/contracts/permit2/SignatureTransfer.sol",
								"solmate/src/tokens/ERC20.sol",
								"solmate/src/utils/SafeTransferLib.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"invalidateUnorderedNonces(uint256,uint256)": "3ff9dcb1",
							"nonceBitmap(address,uint256)": "4fe02b44",
							"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)": "30f28b7a",
							"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)": "edd9444b",
							"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)": "137c29fe",
							"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)": "fe8ec1a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidContractSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LengthMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"signatureDeadline\",\"type\":\"uint256\"}],\"name\":\"SignatureExpired\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"word\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mask\",\"type\":\"uint256\"}],\"name\":\"UnorderedNonceInvalidation\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wordPos\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mask\",\"type\":\"uint256\"}],\"name\":\"invalidateUnorderedNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nonceBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions\",\"name\":\"permitted\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails\",\"name\":\"transferDetails\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions[]\",\"name\":\"permitted\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitBatchTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions\",\"name\":\"permitted\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails\",\"name\":\"transferDetails\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypeString\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitWitnessTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions[]\",\"name\":\"permitted\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitBatchTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypeString\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitWitnessTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidAmount(uint256)\":[{\"params\":{\"maxAmount\":\"The maximum amount a spender can request to transfer\"}}],\"LengthMismatch()\":[{\"details\":\"If the spender does not need to transfer the number of tokens permitted, the spender can request amount 0 to be transferred\"}],\"SignatureExpired(uint256)\":[{\"params\":{\"signatureDeadline\":\"The timestamp at which a signature is no longer valid\"}}]},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Uses cached version if chainid and address are unchanged from construction.\"},\"invalidateUnorderedNonces(uint256,uint256)\":{\"details\":\"The wordPos is maxed at type(uint248).max\",\"params\":{\"mask\":\"A bitmap masked against msg.sender's current bitmap at the word position\",\"wordPos\":\"A number to index the nonceBitmap at\"}},\"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)\":{\"details\":\"Reverts if the requested amount is greater than the permitted signed amount\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"The spender's requested transfer details for the permitted token\"}},\"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)\":{\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"Specifies the recipient and requested amount for the token transfer\"}},\"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)\":{\"details\":\"The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definitionReverts if the requested amount is greater than the permitted signed amount\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"The spender's requested transfer details for the permitted token\",\"witness\":\"Extra data to include when checking the user signature\",\"witnessTypeString\":\"The EIP-712 type definition for remaining string stub of the typehash\"}},\"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)\":{\"details\":\"The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"Specifies the recipient and requested amount for the token transfer\",\"witness\":\"Extra data to include when checking the user signature\",\"witnessTypeString\":\"The EIP-712 type definition for remaining string stub of the typehash\"}}},\"stateVariables\":{\"nonceBitmap\":{\"details\":\"Uses unordered nonces so that permit messages do not need to be spent in a certain orderThe mapping is indexed first by the token owner, then by an index specified in the nonceIt returns a uint256 bitmapThe index, or wordPosition is capped at type(uint248).max\"}},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidAmount(uint256)\":[{\"notice\":\"Thrown when the requested amount for a transfer is larger than the permissioned amount\"}],\"InvalidContractSignature()\":[{\"notice\":\"Thrown when the recovered contract signature is incorrect\"}],\"InvalidNonce()\":[{\"notice\":\"Thrown when validating that the inputted nonce has not been used\"}],\"InvalidSignature()\":[{\"notice\":\"Thrown when the recovered signer is equal to the zero address\"}],\"InvalidSignatureLength()\":[{\"notice\":\"Thrown when the passed in signature is not a valid length\"}],\"InvalidSigner()\":[{\"notice\":\"Thrown when the recovered signer does not equal the claimedSigner\"}],\"LengthMismatch()\":[{\"notice\":\"Thrown when the number of tokens permissioned to a spender does not match the number of tokens being transferred\"}],\"SignatureExpired(uint256)\":[{\"notice\":\"Thrown when validating an inputted signature that is stale\"}]},\"events\":{\"UnorderedNonceInvalidation(address,uint256,uint256)\":{\"notice\":\"Emits an event when the owner successfully invalidates an unordered nonce.\"}},\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"Returns the domain separator for the current chain.\"},\"invalidateUnorderedNonces(uint256,uint256)\":{\"notice\":\"Invalidates the bits specified in mask for the bitmap at the word position\"},\"nonceBitmap(address,uint256)\":{\"notice\":\"A map from token owner address and a caller specified word index to a bitmap. Used to set bits in the bitmap to prevent against signature replay protection\"},\"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)\":{\"notice\":\"Transfers a token using a signed permit message\"},\"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)\":{\"notice\":\"Transfers multiple tokens using a signed permit message\"},\"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)\":{\"notice\":\"Transfers a token using a signed permit messageIncludes extra data provided by the caller to verify signature over\"},\"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)\":{\"notice\":\"Transfers multiple tokens using a signed permit messageIncludes extra data provided by the caller to verify signature over\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/permit2/SignatureTransfer.sol\":\"SignatureTransfer\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x37f0ac203b6ef605c9533e1a739477e8e9dcea90710b40e645a367f8a21ace29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0104d72aeaec1cd66cc232e7de7b7ead08608efcc179491b8a66387614670b0\",\"dweb:/ipfs/QmfAZDyuNC9FXXbnJUwqHNwmAK6uRrXxtWEytLsxjskPsN\"]},\"contracts/contracts/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]},\"contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0a546b8535127fb4a49d36d5f306fd5a8bbe6125a1852f935b9bb85a04c1acef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b99651e2df98e283a97c46d8d1ac4eff0d6a3618e25f7f85294472a670b541c\",\"dweb:/ipfs/QmYRy5G8fXE8BfmyvGEbESEYZPPg3zJEFxHzR5GJZEMMTk\"]},\"contracts/contracts/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0x16a051e45a3f1ab341a8560aa106c483c3d0a3be4abc52225651c78939b18f93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7cda3c6ed2db1454b4a6ec1e418956d199019085d92163a038d0064615a5acb\",\"dweb:/ipfs/QmWDfZwi8jcGFBuiwHKq6iBWCZq2mA8HmkM9NNTzotMpXH\"]},\"contracts/contracts/lib/PermitHash.sol\":{\"keccak256\":\"0xbd0fcb52a5a753f77b10f30d653e638bf40705a0aa10cf96978ef82ea926e637\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de007b53ff2757733e919d17d53dc0c0b1e1f856132e0004dd9f79272472a093\",\"dweb:/ipfs/QmST5dKQYMZWD6magJPUXsJSWf57Rr5nWi1AgethhAvoCj\"]},\"contracts/contracts/lib/SignatureVerification.sol\":{\"keccak256\":\"0xb5cf5e3c9407dc26f95d01170dbc2c82cd5c210ecc39ad3559b314df0c0c90d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a5929df7b7ad16e2a429e5e76712f95d914d1e72d8350cd3b445e84058bbb2\",\"dweb:/ipfs/QmXBnuFKWjK3huwN9qoePSyxT9qwpdGXfpTgjApRPiQsrd\"]},\"contracts/contracts/permit2/EIP712.sol\":{\"keccak256\":\"0x8bf0e994a040c5de83f9848dca37b71b45bf09d6b8028a925a76d1c917654b6d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0435626dccaaa530a392320a9099d489e6d28155c8a20cb86579517f5336a2\",\"dweb:/ipfs/QmbVkXYsMxqYoiTH5WLNjhToJWbjMSuqGLGVBj7SU69khP\"]},\"contracts/contracts/permit2/PermitErrors.sol\":{\"keccak256\":\"0x42d48b78944c43d75496f49a62e1a9b858c2ecacc09f016a68204f7cac9ab014\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ed8221dc84848fd5aa1234b68d31adf9bded04a56175e545fe0119a5a886674\",\"dweb:/ipfs/QmQQGA8GFVvTDdism9JxAFqFoy37fokryqwnzixeQNenui\"]},\"contracts/contracts/permit2/SignatureTransfer.sol\":{\"keccak256\":\"0x0767c6a0bb19bc17f13722a025a884443f42fa81a0ed9ee59e2c20635cb42f65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b47baa98ef94393858a3efb69f730a00fdb74d7358491f1279bc4e4a0793caeb\",\"dweb:/ipfs/QmRC7FW4DonX61oYtu7RFv6uza1ZTxG3vSkEWB5biHZirV\"]},\"solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x6ab948013c2c7ca6351e593600425b0ec6df9035320280c678e735bce16e996b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2ab977d0eeb2bf458f9798250215c646d2f3b1f90b5a7e2b506fdf3335c0f060\",\"dweb:/ipfs/QmYPRoPhNtBAmCSq7imN1scMVpKNQvMTpoqab3tXUx5Tnv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1775,
								"contract": "contracts/contracts/permit2/SignatureTransfer.sol:SignatureTransfer",
								"label": "nonceBitmap",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"InvalidAmount(uint256)": [
								{
									"notice": "Thrown when the requested amount for a transfer is larger than the permissioned amount"
								}
							],
							"InvalidContractSignature()": [
								{
									"notice": "Thrown when the recovered contract signature is incorrect"
								}
							],
							"InvalidNonce()": [
								{
									"notice": "Thrown when validating that the inputted nonce has not been used"
								}
							],
							"InvalidSignature()": [
								{
									"notice": "Thrown when the recovered signer is equal to the zero address"
								}
							],
							"InvalidSignatureLength()": [
								{
									"notice": "Thrown when the passed in signature is not a valid length"
								}
							],
							"InvalidSigner()": [
								{
									"notice": "Thrown when the recovered signer does not equal the claimedSigner"
								}
							],
							"LengthMismatch()": [
								{
									"notice": "Thrown when the number of tokens permissioned to a spender does not match the number of tokens being transferred"
								}
							],
							"SignatureExpired(uint256)": [
								{
									"notice": "Thrown when validating an inputted signature that is stale"
								}
							]
						},
						"events": {
							"UnorderedNonceInvalidation(address,uint256,uint256)": {
								"notice": "Emits an event when the owner successfully invalidates an unordered nonce."
							}
						},
						"kind": "user",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"notice": "Returns the domain separator for the current chain."
							},
							"invalidateUnorderedNonces(uint256,uint256)": {
								"notice": "Invalidates the bits specified in mask for the bitmap at the word position"
							},
							"nonceBitmap(address,uint256)": {
								"notice": "A map from token owner address and a caller specified word index to a bitmap. Used to set bits in the bitmap to prevent against signature replay protection"
							},
							"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)": {
								"notice": "Transfers a token using a signed permit message"
							},
							"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)": {
								"notice": "Transfers multiple tokens using a signed permit message"
							},
							"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)": {
								"notice": "Transfers a token using a signed permit messageIncludes extra data provided by the caller to verify signature over"
							},
							"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)": {
								"notice": "Transfers multiple tokens using a signed permit messageIncludes extra data provided by the caller to verify signature over"
							}
						},
						"version": 1
					}
				}
			},
			"solmate/src/tokens/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)",
						"details": "Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\",\"details\":\"Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Modern and gas efficient ERC20 + EIP-2612 implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"solmate/src/tokens/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2191,
								"contract": "solmate/src/tokens/ERC20.sol:ERC20",
								"label": "name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 2193,
								"contract": "solmate/src/tokens/ERC20.sol:ERC20",
								"label": "symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 2197,
								"contract": "solmate/src/tokens/ERC20.sol:ERC20",
								"label": "totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 2201,
								"contract": "solmate/src/tokens/ERC20.sol:ERC20",
								"label": "balanceOf",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2207,
								"contract": "solmate/src/tokens/ERC20.sol:ERC20",
								"label": "allowance",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 2215,
								"contract": "solmate/src/tokens/ERC20.sol:ERC20",
								"label": "nonces",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Modern and gas efficient ERC20 + EIP-2612 implementation.",
						"version": 1
					}
				}
			},
			"solmate/src/utils/SafeTransferLib.sol": {
				"SafeTransferLib": {
					"abi": [],
					"devdoc": {
						"author": "Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/SafeTransferLib.sol)",
						"details": "Use with caution! Some functions in this library knowingly create dirty bits at the destination of the free memory pointer.Note that none of the functions in this library check that a token has code at all! That responsibility is delegated to the caller.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"solmate/src/utils/SafeTransferLib.sol\":586:6336  library SafeTransferLib {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"solmate/src/utils/SafeTransferLib.sol\":586:6336  library SafeTransferLib {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c03e79e85415ad205b8916e027990909e7d6ac2859ca3eb7bf631170cff7e6ae64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220c03e79e85415ad205b8916e027990909e7d6ac2859ca3eb7bf631170cff7e6ae64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 RETURNDATACOPY PUSH26 0xE85415AD205B8916E027990909E7D6AC2859CA3EB7BF631170CF 0xF7 0xE6 0xAE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "586:5750:13:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea2646970667358221220c03e79e85415ad205b8916e027990909e7d6ac2859ca3eb7bf631170cff7e6ae64736f6c63430008140033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 RETURNDATACOPY PUSH26 0xE85415AD205B8916E027990909E7D6AC2859CA3EB7BF631170CF 0xF7 0xE6 0xAE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "586:5750:13:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"safeApprove(contract ERC20,address,uint256)": "infinite",
								"safeTransfer(contract ERC20,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(contract ERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 586,
									"end": 6336,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 586,
									"end": 6336,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 586,
									"end": 6336,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 586,
									"end": 6336,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 586,
									"end": 6336,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 586,
									"end": 6336,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 586,
									"end": 6336,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 586,
									"end": 6336,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 586,
									"end": 6336,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 586,
									"end": 6336,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 586,
									"end": 6336,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 586,
									"end": 6336,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 586,
									"end": 6336,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 586,
									"end": 6336,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 586,
									"end": 6336,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 586,
									"end": 6336,
									"name": "ASSIGNIMMUTABLE",
									"source": 13,
									"value": "library_deploy_address"
								},
								{
									"begin": 586,
									"end": 6336,
									"name": "RETURN",
									"source": 13
								},
								{
									"begin": 586,
									"end": 6336,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 586,
									"end": 6336,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 586,
									"end": 6336,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 586,
									"end": 6336,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 586,
									"end": 6336,
									"name": "REVERT",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c03e79e85415ad205b8916e027990909e7d6ac2859ca3eb7bf631170cff7e6ae64736f6c63430008140033",
									".code": [
										{
											"begin": 586,
											"end": 6336,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 586,
											"end": 6336,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 586,
											"end": 6336,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"contracts/contracts/interfaces/IAllowanceTransfer.sol",
								"contracts/contracts/interfaces/IEIP712.sol",
								"contracts/contracts/interfaces/IERC1271.sol",
								"contracts/contracts/interfaces/ISignatureTransfer.sol",
								"contracts/contracts/lib/Allowance.sol",
								"contracts/contracts/lib/PermitHash.sol",
								"contracts/contracts/lib/SignatureVerification.sol",
								"contracts/contracts/permit2/AllowanceTransfer.sol",
								"contracts/contracts/permit2/EIP712.sol",
								"contracts/contracts/permit2/Permit2.sol",
								"contracts/contracts/permit2/PermitErrors.sol",
								"contracts/contracts/permit2/SignatureTransfer.sol",
								"solmate/src/tokens/ERC20.sol",
								"solmate/src/utils/SafeTransferLib.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/SafeTransferLib.sol)\",\"details\":\"Use with caution! Some functions in this library knowingly create dirty bits at the destination of the free memory pointer.Note that none of the functions in this library check that a token has code at all! That responsibility is delegated to the caller.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Safe ETH and ERC20 transfer library that gracefully handles missing return values.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"solmate/src/utils/SafeTransferLib.sol\":\"SafeTransferLib\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x6ab948013c2c7ca6351e593600425b0ec6df9035320280c678e735bce16e996b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2ab977d0eeb2bf458f9798250215c646d2f3b1f90b5a7e2b506fdf3335c0f060\",\"dweb:/ipfs/QmYPRoPhNtBAmCSq7imN1scMVpKNQvMTpoqab3tXUx5Tnv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Safe ETH and ERC20 transfer library that gracefully handles missing return values.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/contracts/interfaces/IAllowanceTransfer.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/interfaces/IAllowanceTransfer.sol",
					"exportedSymbols": {
						"IAllowanceTransfer": [
							211
						],
						"IEIP712": [
							219
						]
					},
					"id": 212,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "contracts/contracts/interfaces/IEIP712.sol",
							"file": "./IEIP712.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 212,
							"sourceUnit": 220,
							"src": "57:38:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IEIP712",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 219,
										"src": "65:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "IEIP712",
										"nameLocations": [
											"362:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 219,
										"src": "362:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "362:7:0"
								}
							],
							"canonicalName": "IAllowanceTransfer",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "97:233:0",
								"text": "@title AllowanceTransfer\n @notice Handles ERC20 token permissions through signature based allowance setting and ERC20 token transfers by checking allowed amounts\n @dev Requires user's token approval on the Permit2 contract"
							},
							"fullyImplemented": false,
							"id": 211,
							"linearizedBaseContracts": [
								211,
								219
							],
							"name": "IAllowanceTransfer",
							"nameLocation": "340:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "376:145:0",
										"text": "@notice Thrown when an allowance on a token has expired.\n @param deadline The timestamp at which the allowed amount is no longer valid"
									},
									"errorSelector": "d81b2f2e",
									"id": 11,
									"name": "AllowanceExpired",
									"nameLocation": "532:16:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "557:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "549:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "548:18:0"
									},
									"src": "526:41:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "573:115:0",
										"text": "@notice Thrown when an allowance on a token has been depleted.\n @param amount The maximum amount allowed"
									},
									"errorSelector": "f96fb071",
									"id": 16,
									"name": "InsufficientAllowance",
									"nameLocation": "699:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "729:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "721:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "720:16:0"
									},
									"src": "693:44:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "743:56:0",
										"text": "@notice Thrown when too many nonces are invalidated."
									},
									"errorSelector": "24d35a26",
									"id": 19,
									"name": "ExcessiveInvalidation",
									"nameLocation": "810:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "831:2:0"
									},
									"src": "804:30:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "840:84:0",
										"text": "@notice Emits an event when the owner successfully invalidates an ordered nonce."
									},
									"eventSelector": "55eb90d810e1700b35a8e7e25395ff7f2b2259abd7415ca2284dfb1c246418f3",
									"id": 32,
									"name": "NonceInvalidation",
									"nameLocation": "935:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "978:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "962:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1001:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "985:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "985:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1008:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": false,
												"mutability": "mutable",
												"name": "newNonce",
												"nameLocation": "1040:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1033:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 27,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1033:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldNonce",
												"nameLocation": "1057:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1050:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 29,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1050:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "952:119:0"
									},
									"src": "929:143:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1078:99:0",
										"text": "@notice Emits an event when the owner successfully sets permissions on a token for the spender."
									},
									"eventSelector": "da9fa7c1b00402c17d0161b249b1ab8bbec047c5a52207b9c112deffd817036b",
									"id": 45,
									"name": "Approval",
									"nameLocation": "1188:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1222:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1206:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1245:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1229:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1229:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1268:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1252:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1285:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1277:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 40,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1277:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"indexed": false,
												"mutability": "mutable",
												"name": "expiration",
												"nameLocation": "1300:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1293:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 42,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1293:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1196:120:0"
									},
									"src": "1182:135:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1323:124:0",
										"text": "@notice Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender."
									},
									"eventSelector": "c6a377bfc4eb120024a8ac08eef205be16b817020812c73223e81d1bdb9708ec",
									"id": 60,
									"name": "Permit",
									"nameLocation": "1458:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1490:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1474:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1474:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1521:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1505:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1505:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1552:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1536:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1577:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1569:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 53,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1569:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"indexed": false,
												"mutability": "mutable",
												"name": "expiration",
												"nameLocation": "1600:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1593:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 55,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1593:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"indexed": false,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1627:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1620:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 57,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1620:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1464:174:0"
									},
									"src": "1452:187:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1645:98:0",
										"text": "@notice Emits an event when the owner sets the allowance back to 0 with the lockdown function."
									},
									"eventSelector": "89b1add15eff56b3dfe299ad94e01f2b52fbcb80ae1a3baea6ae8c04cb2b98a4",
									"id": 69,
									"name": "Lockdown",
									"nameLocation": "1754:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1779:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "1763:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1794:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "1786:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1786:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"indexed": false,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1809:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "1801:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1801:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1762:55:0"
									},
									"src": "1748:70:0"
								},
								{
									"canonicalName": "IAllowanceTransfer.PermitDetails",
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "1824:39:0",
										"text": "@notice The permit data for a token"
									},
									"id": 79,
									"members": [
										{
											"constant": false,
											"id": 72,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "1938:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 79,
											"src": "1930:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 71,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1930:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 74,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "2008:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 79,
											"src": "2000:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 73,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "2000:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 76,
											"mutability": "mutable",
											"name": "expiration",
											"nameLocation": "2105:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 79,
											"src": "2098:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 75,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "2098:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 78,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "2220:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 79,
											"src": "2213:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 77,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "2213:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PermitDetails",
									"nameLocation": "1875:13:0",
									"nodeType": "StructDefinition",
									"scope": 211,
									"src": "1868:364:0",
									"visibility": "public"
								},
								{
									"canonicalName": "IAllowanceTransfer.PermitSingle",
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "2238:66:0",
										"text": "@notice The permit message signed for a single token allowance"
									},
									"id": 88,
									"members": [
										{
											"constant": false,
											"id": 83,
											"mutability": "mutable",
											"name": "details",
											"nameLocation": "2407:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 88,
											"src": "2393:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PermitDetails_$79_storage_ptr",
												"typeString": "struct IAllowanceTransfer.PermitDetails"
											},
											"typeName": {
												"id": 82,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 81,
													"name": "PermitDetails",
													"nameLocations": [
														"2393:13:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 79,
													"src": "2393:13:0"
												},
												"referencedDeclaration": 79,
												"src": "2393:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitDetails_$79_storage_ptr",
													"typeString": "struct IAllowanceTransfer.PermitDetails"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 85,
											"mutability": "mutable",
											"name": "spender",
											"nameLocation": "2486:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 88,
											"src": "2478:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 84,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2478:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 87,
											"mutability": "mutable",
											"name": "sigDeadline",
											"nameLocation": "2555:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 88,
											"src": "2547:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 86,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2547:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PermitSingle",
									"nameLocation": "2316:12:0",
									"nodeType": "StructDefinition",
									"scope": 211,
									"src": "2309:264:0",
									"visibility": "public"
								},
								{
									"canonicalName": "IAllowanceTransfer.PermitBatch",
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "2579:67:0",
										"text": "@notice The permit message signed for multiple token allowances"
									},
									"id": 98,
									"members": [
										{
											"constant": false,
											"id": 93,
											"mutability": "mutable",
											"name": "details",
											"nameLocation": "2753:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 98,
											"src": "2737:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_PermitDetails_$79_storage_$dyn_storage_ptr",
												"typeString": "struct IAllowanceTransfer.PermitDetails[]"
											},
											"typeName": {
												"baseType": {
													"id": 91,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 90,
														"name": "PermitDetails",
														"nameLocations": [
															"2737:13:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 79,
														"src": "2737:13:0"
													},
													"referencedDeclaration": 79,
													"src": "2737:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitDetails_$79_storage_ptr",
														"typeString": "struct IAllowanceTransfer.PermitDetails"
													}
												},
												"id": 92,
												"nodeType": "ArrayTypeName",
												"src": "2737:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PermitDetails_$79_storage_$dyn_storage_ptr",
													"typeString": "struct IAllowanceTransfer.PermitDetails[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 95,
											"mutability": "mutable",
											"name": "spender",
											"nameLocation": "2832:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 98,
											"src": "2824:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 94,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2824:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 97,
											"mutability": "mutable",
											"name": "sigDeadline",
											"nameLocation": "2901:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 98,
											"src": "2893:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 96,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2893:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PermitBatch",
									"nameLocation": "2658:11:0",
									"nodeType": "StructDefinition",
									"scope": 211,
									"src": "2651:268:0",
									"visibility": "public"
								},
								{
									"canonicalName": "IAllowanceTransfer.PackedAllowance",
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2925:217:0",
										"text": "@notice The saved permissions\n @dev This info is saved per owner, per token, per spender and all signed over in the permit message\n @dev Setting amount to type(uint160).max sets an unlimited approval"
									},
									"id": 106,
									"members": [
										{
											"constant": false,
											"id": 101,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "3214:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 106,
											"src": "3206:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 100,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "3206:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 103,
											"mutability": "mutable",
											"name": "expiration",
											"nameLocation": "3266:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 106,
											"src": "3259:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 102,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "3259:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 105,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "3381:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 106,
											"src": "3374:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 104,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "3374:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PackedAllowance",
									"nameLocation": "3154:15:0",
									"nodeType": "StructDefinition",
									"scope": 211,
									"src": "3147:246:0",
									"visibility": "public"
								},
								{
									"canonicalName": "IAllowanceTransfer.TokenSpenderPair",
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "3399:33:0",
										"text": "@notice A token spender pair."
									},
									"id": 112,
									"members": [
										{
											"constant": false,
											"id": 109,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "3524:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 112,
											"src": "3516:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 108,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3516:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 111,
											"mutability": "mutable",
											"name": "spender",
											"nameLocation": "3578:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 112,
											"src": "3570:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 110,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3570:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenSpenderPair",
									"nameLocation": "3444:16:0",
									"nodeType": "StructDefinition",
									"scope": 211,
									"src": "3437:155:0",
									"visibility": "public"
								},
								{
									"canonicalName": "IAllowanceTransfer.AllowanceTransferDetails",
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "3598:41:0",
										"text": "@notice Details for a token transfer."
									},
									"id": 122,
									"members": [
										{
											"constant": false,
											"id": 115,
											"mutability": "mutable",
											"name": "from",
											"nameLocation": "3728:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 122,
											"src": "3720:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 114,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3720:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 117,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "3788:2:0",
											"nodeType": "VariableDeclaration",
											"scope": 122,
											"src": "3780:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 116,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3780:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 119,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "3843:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 122,
											"src": "3835:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 118,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "3835:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 121,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "3906:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 122,
											"src": "3898:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 120,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3898:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AllowanceTransferDetails",
									"nameLocation": "3651:24:0",
									"nodeType": "StructDefinition",
									"scope": 211,
									"src": "3644:274:0",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "3924:455:0",
										"text": "@notice A mapping from owner address to token address to spender address to PackedAllowance struct, which contains details and conditions of the approval.\n @notice The mapping is indexed in the above order see: allowance[ownerAddress][tokenAddress][spenderAddress]\n @dev The packed slot holds the allowed amount, expiration at which the allowed amount is no longer valid, and current nonce thats updated on any signature based approvals."
									},
									"functionSelector": "927da105",
									"id": 138,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4393:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4411:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4403:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4425:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4417:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4417:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4440:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4432:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4402:46:0"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4504:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4496:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 131,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4496:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "expiration",
												"nameLocation": "4519:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4512:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 133,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "4512:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "4538:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4531:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 135,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "4531:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4495:49:0"
									},
									"scope": 211,
									"src": "4384:161:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "4551:498:0",
										"text": "@notice Approves the spender to use up to amount of the specified token up until the expiration\n @param token The token to approve\n @param spender The spender address to approve\n @param amount The approved amount of the token\n @param expiration The timestamp at which the approval is no longer valid\n @dev The packed allowance also holds a nonce, which will stay unchanged in approve\n @dev Setting amount to type(uint160).max sets an unlimited approval"
									},
									"functionSelector": "87517c45",
									"id": 150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5063:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5079:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5071:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5071:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5094:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5086:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5086:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5111:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5103:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 144,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "5103:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "expiration",
												"nameLocation": "5126:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5119:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 146,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "5119:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5070:67:0"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5146:0:0"
									},
									"scope": 211,
									"src": "5054:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5153:407:0",
										"text": "@notice Permit a spender to a given amount of the owners token via the owner's EIP-712 signature\n @dev May fail if the owner's nonce was invalidated in-flight by invalidateNonce\n @param owner The owner of the tokens being approved\n @param permitSingle Data signed over by the owner specifying the terms of approval\n @param signature The owner's signature over the permit data"
									},
									"functionSelector": "2b67b570",
									"id": 161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "5574:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5589:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "5581:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "permitSingle",
												"nameLocation": "5616:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "5596:32:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitSingle_$88_memory_ptr",
													"typeString": "struct IAllowanceTransfer.PermitSingle"
												},
												"typeName": {
													"id": 155,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 154,
														"name": "PermitSingle",
														"nameLocations": [
															"5596:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 88,
														"src": "5596:12:0"
													},
													"referencedDeclaration": 88,
													"src": "5596:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitSingle_$88_storage_ptr",
														"typeString": "struct IAllowanceTransfer.PermitSingle"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "5645:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "5630:24:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 157,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5630:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5580:75:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5664:0:0"
									},
									"scope": 211,
									"src": "5565:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "5671:411:0",
										"text": "@notice Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature\n @dev May fail if the owner's nonce was invalidated in-flight by invalidateNonce\n @param owner The owner of the tokens being approved\n @param permitBatch Data signed over by the owner specifying the terms of approval\n @param signature The owner's signature over the permit data"
									},
									"functionSelector": "2a2d80d1",
									"id": 172,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "6096:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6111:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "6103:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6103:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "permitBatch",
												"nameLocation": "6137:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "6118:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitBatch_$98_memory_ptr",
													"typeString": "struct IAllowanceTransfer.PermitBatch"
												},
												"typeName": {
													"id": 166,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 165,
														"name": "PermitBatch",
														"nameLocations": [
															"6118:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 98,
														"src": "6118:11:0"
													},
													"referencedDeclaration": 98,
													"src": "6118:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitBatch_$98_storage_ptr",
														"typeString": "struct IAllowanceTransfer.PermitBatch"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "6165:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "6150:24:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 168,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6150:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6102:73:0"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6184:0:0"
									},
									"scope": 211,
									"src": "6087:98:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "6191:386:0",
										"text": "@notice Transfer approved tokens from one address to another\n @param from The address to transfer from\n @param to The address of the recipient\n @param amount The amount of the token to transfer\n @param token The token address to transfer\n @dev Requires the from address to have approved at least the desired amount\n of tokens to msg.sender."
									},
									"functionSelector": "36c78516",
									"id": 184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6591:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6612:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "6604:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6604:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6626:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "6618:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6618:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6638:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "6630:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 178,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6630:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6654:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "6646:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6646:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6603:57:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6669:0:0"
									},
									"scope": 211,
									"src": "6582:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "6676:264:0",
										"text": "@notice Transfer approved tokens in a batch\n @param transferDetails Array of owners, recipients, amounts, and tokens for the transfers\n @dev Requires the from addresses to have approved at least the desired amount\n of tokens to msg.sender."
									},
									"functionSelector": "0d58b1db",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6954:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "transferDetails",
												"nameLocation": "7003:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "6967:51:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_AllowanceTransferDetails_$122_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IAllowanceTransfer.AllowanceTransferDetails[]"
												},
												"typeName": {
													"baseType": {
														"id": 187,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 186,
															"name": "AllowanceTransferDetails",
															"nameLocations": [
																"6967:24:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 122,
															"src": "6967:24:0"
														},
														"referencedDeclaration": 122,
														"src": "6967:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AllowanceTransferDetails_$122_storage_ptr",
															"typeString": "struct IAllowanceTransfer.AllowanceTransferDetails"
														}
													},
													"id": 188,
													"nodeType": "ArrayTypeName",
													"src": "6967:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_AllowanceTransferDetails_$122_storage_$dyn_storage_ptr",
														"typeString": "struct IAllowanceTransfer.AllowanceTransferDetails[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6966:53:0"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7028:0:0"
									},
									"scope": 211,
									"src": "6945:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "7035:167:0",
										"text": "@notice Enables performing a \"lockdown\" of the sender's Permit2 identity\n by batch revoking approvals\n @param approvals Array of approvals to revoke."
									},
									"functionSelector": "cc53287f",
									"id": 200,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lockdown",
									"nameLocation": "7216:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "approvals",
												"nameLocation": "7253:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "7225:37:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenSpenderPair_$112_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IAllowanceTransfer.TokenSpenderPair[]"
												},
												"typeName": {
													"baseType": {
														"id": 195,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 194,
															"name": "TokenSpenderPair",
															"nameLocations": [
																"7225:16:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 112,
															"src": "7225:16:0"
														},
														"referencedDeclaration": 112,
														"src": "7225:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenSpenderPair_$112_storage_ptr",
															"typeString": "struct IAllowanceTransfer.TokenSpenderPair"
														}
													},
													"id": 196,
													"nodeType": "ArrayTypeName",
													"src": "7225:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenSpenderPair_$112_storage_$dyn_storage_ptr",
														"typeString": "struct IAllowanceTransfer.TokenSpenderPair[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7224:39:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7272:0:0"
									},
									"scope": 211,
									"src": "7207:66:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "7279:332:0",
										"text": "@notice Invalidate nonces for a given (token, spender) pair\n @param token The token to invalidate nonces for\n @param spender The spender to invalidate nonces for\n @param newNonce The new nonce to set. Invalidates all nonces less than it.\n @dev Can't invalidate more than 2**16 nonces per transaction."
									},
									"functionSelector": "65d9723c",
									"id": 210,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "invalidateNonces",
									"nameLocation": "7625:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "7642:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7642:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7665:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "7657:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "newNonce",
												"nameLocation": "7681:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "7674:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 206,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "7674:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7641:49:0"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7699:0:0"
									},
									"scope": 211,
									"src": "7616:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 212,
							"src": "330:7372:0",
							"usedErrors": [
								11,
								16,
								19
							],
							"usedEvents": [
								32,
								45,
								60,
								69
							]
						}
					],
					"src": "32:7671:0"
				},
				"id": 0
			},
			"contracts/contracts/interfaces/IEIP712.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/interfaces/IEIP712.sol",
					"exportedSymbols": {
						"IEIP712": [
							219
						]
					},
					"id": 220,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 213,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IEIP712",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 219,
							"linearizedBaseContracts": [
								219
							],
							"name": "IEIP712",
							"nameLocation": "67:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "3644e515",
									"id": 218,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "90:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "106:2:1"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "132:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 215,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "132:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "131:9:1"
									},
									"scope": 219,
									"src": "81:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 220,
							"src": "57:86:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:112:1"
				},
				"id": 1
			},
			"contracts/contracts/interfaces/IERC1271.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/interfaces/IERC1271.sol",
					"exportedSymbols": {
						"IERC1271": [
							232
						]
					},
					"id": 233,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 221,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1271",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 232,
							"linearizedBaseContracts": [
								232
							],
							"name": "IERC1271",
							"nameLocation": "67:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "82:268:2",
										"text": "@dev Should return whether the signature provided is valid for the provided data\n @param hash      Hash of the data to be signed\n @param signature Signature byte array associated with _data\n @return magicValue The bytes4 magic value 0x1626ba7e"
									},
									"functionSelector": "1626ba7e",
									"id": 231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isValidSignature",
									"nameLocation": "364:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "389:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "381:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 223,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "381:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "408:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "395:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 225,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "395:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "380:38:2"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "magicValue",
												"nameLocation": "449:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "442:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 228,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:19:2"
									},
									"scope": 232,
									"src": "355:106:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 233,
							"src": "57:406:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:432:2"
				},
				"id": 2
			},
			"contracts/contracts/interfaces/ISignatureTransfer.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/interfaces/ISignatureTransfer.sol",
					"exportedSymbols": {
						"IEIP712": [
							219
						],
						"ISignatureTransfer": [
							372
						]
					},
					"id": 373,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 234,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"absolutePath": "contracts/contracts/interfaces/IEIP712.sol",
							"file": "./IEIP712.sol",
							"id": 236,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 373,
							"sourceUnit": 220,
							"src": "58:38:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 235,
										"name": "IEIP712",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 219,
										"src": "66:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 238,
										"name": "IEIP712",
										"nameLocations": [
											"297:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 219,
										"src": "297:7:3"
									},
									"id": 239,
									"nodeType": "InheritanceSpecifier",
									"src": "297:7:3"
								}
							],
							"canonicalName": "ISignatureTransfer",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 237,
								"nodeType": "StructuredDocumentation",
								"src": "98:167:3",
								"text": "@title SignatureTransfer\n @notice Handles ERC20 token transfers through signature based actions\n @dev Requires user's token approval on the Permit2 contract"
							},
							"fullyImplemented": false,
							"id": 372,
							"linearizedBaseContracts": [
								372,
								219
							],
							"name": "ISignatureTransfer",
							"nameLocation": "275:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "311:176:3",
										"text": "@notice Thrown when the requested amount for a transfer is larger than the permissioned amount\n @param maxAmount The maximum amount a spender can request to transfer"
									},
									"errorSelector": "3728b83d",
									"id": 244,
									"name": "InvalidAmount",
									"nameLocation": "498:13:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "maxAmount",
												"nameLocation": "520:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "512:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "512:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "511:19:3"
									},
									"src": "492:39:3"
								},
								{
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "537:261:3",
										"text": "@notice Thrown when the number of tokens permissioned to a spender does not match the number of tokens being transferred\n @dev If the spender does not need to transfer the number of tokens permitted, the spender can request amount 0 to be transferred"
									},
									"errorSelector": "ff633a38",
									"id": 247,
									"name": "LengthMismatch",
									"nameLocation": "809:14:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "823:2:3"
									},
									"src": "803:23:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "832:86:3",
										"text": "@notice Emits an event when the owner successfully invalidates an unordered nonce."
									},
									"eventSelector": "3704902f963766a4e561bbaab6e6cdc1b1dd12f6e9e99648da8843b3f46b918d",
									"id": 256,
									"name": "UnorderedNonceInvalidation",
									"nameLocation": "929:26:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "972:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "956:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "956:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"indexed": false,
												"mutability": "mutable",
												"name": "word",
												"nameLocation": "987:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "979:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "979:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"indexed": false,
												"mutability": "mutable",
												"name": "mask",
												"nameLocation": "1001:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "993:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "955:51:3"
									},
									"src": "923:84:3"
								},
								{
									"canonicalName": "ISignatureTransfer.TokenPermissions",
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "1013:95:3",
										"text": "@notice The token and amount details for a transfer signed in the permit transfer signature"
									},
									"id": 262,
									"members": [
										{
											"constant": false,
											"id": 259,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "1186:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 262,
											"src": "1178:13:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 258,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1178:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 261,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1257:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 262,
											"src": "1249:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 260,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1249:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenPermissions",
									"nameLocation": "1120:16:3",
									"nodeType": "StructDefinition",
									"scope": 372,
									"src": "1113:157:3",
									"visibility": "public"
								},
								{
									"canonicalName": "ISignatureTransfer.PermitTransferFrom",
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "1276:65:3",
										"text": "@notice The signed permit message for a single token transfer"
									},
									"id": 271,
									"members": [
										{
											"constant": false,
											"id": 266,
											"mutability": "mutable",
											"name": "permitted",
											"nameLocation": "1399:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 271,
											"src": "1382:26:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenPermissions_$262_storage_ptr",
												"typeString": "struct ISignatureTransfer.TokenPermissions"
											},
											"typeName": {
												"id": 265,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 264,
													"name": "TokenPermissions",
													"nameLocations": [
														"1382:16:3"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 262,
													"src": "1382:16:3"
												},
												"referencedDeclaration": 262,
												"src": "1382:16:3",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenPermissions_$262_storage_ptr",
													"typeString": "struct ISignatureTransfer.TokenPermissions"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 268,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "1515:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 271,
											"src": "1507:13:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 267,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1507:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 270,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1582:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 271,
											"src": "1574:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 269,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1574:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PermitTransferFrom",
									"nameLocation": "1353:18:3",
									"nodeType": "StructDefinition",
									"scope": 372,
									"src": "1346:251:3",
									"visibility": "public"
								},
								{
									"canonicalName": "ISignatureTransfer.SignatureTransferDetails",
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "1603:266:3",
										"text": "@notice Specifies the recipient address and amount for batched transfers.\n @dev Recipients and amounts correspond to the index of the signed token permissions array.\n @dev Reverts if the requested amount is greater than the permitted signed amount."
									},
									"id": 277,
									"members": [
										{
											"constant": false,
											"id": 274,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "1953:2:3",
											"nodeType": "VariableDeclaration",
											"scope": 277,
											"src": "1945:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 273,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1945:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 276,
											"mutability": "mutable",
											"name": "requestedAmount",
											"nameLocation": "2009:15:3",
											"nodeType": "VariableDeclaration",
											"scope": 277,
											"src": "2001:23:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 275,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2001:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SignatureTransferDetails",
									"nameLocation": "1881:24:3",
									"nodeType": "StructDefinition",
									"scope": 372,
									"src": "1874:157:3",
									"visibility": "public"
								},
								{
									"canonicalName": "ISignatureTransfer.PermitBatchTransferFrom",
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "2037:243:3",
										"text": "@notice Used to reconstruct the signed permit message for multiple token transfers\n @dev Do not need to pass in spender address as it is required that it is msg.sender\n @dev Note that a user still signs over a spender address"
									},
									"id": 287,
									"members": [
										{
											"constant": false,
											"id": 282,
											"mutability": "mutable",
											"name": "permitted",
											"nameLocation": "2418:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 287,
											"src": "2399:28:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_TokenPermissions_$262_storage_$dyn_storage_ptr",
												"typeString": "struct ISignatureTransfer.TokenPermissions[]"
											},
											"typeName": {
												"baseType": {
													"id": 280,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 279,
														"name": "TokenPermissions",
														"nameLocations": [
															"2399:16:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 262,
														"src": "2399:16:3"
													},
													"referencedDeclaration": 262,
													"src": "2399:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenPermissions_$262_storage_ptr",
														"typeString": "struct ISignatureTransfer.TokenPermissions"
													}
												},
												"id": 281,
												"nodeType": "ArrayTypeName",
												"src": "2399:18:3",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenPermissions_$262_storage_$dyn_storage_ptr",
													"typeString": "struct ISignatureTransfer.TokenPermissions[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 284,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "2534:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 287,
											"src": "2526:13:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 283,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2526:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 286,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2601:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 287,
											"src": "2593:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 285,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2593:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PermitBatchTransferFrom",
									"nameLocation": "2292:23:3",
									"nodeType": "StructDefinition",
									"scope": 372,
									"src": "2285:331:3",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "2622:483:3",
										"text": "@notice A map from token owner address and a caller specified word index to a bitmap. Used to set bits in the bitmap to prevent against signature replay protection\n @dev Uses unordered nonces so that permit messages do not need to be spent in a certain order\n @dev The mapping is indexed first by the token owner, then by an index specified in the nonce\n @dev It returns a uint256 bitmap\n @dev The index, or wordPosition is capped at type(uint248).max"
									},
									"functionSelector": "4fe02b44",
									"id": 297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonceBitmap",
									"nameLocation": "3119:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "3131:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3131:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "3140:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3140:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3130:18:3"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "3172:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3172:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3171:9:3"
									},
									"scope": 372,
									"src": "3110:71:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "3187:413:3",
										"text": "@notice Transfers a token using a signed permit message\n @dev Reverts if the requested amount is greater than the permitted signed amount\n @param permit The permit data signed over by the owner\n @param owner The owner of the tokens to transfer\n @param transferDetails The spender's requested transfer details for the permitted token\n @param signature The signature to verify"
									},
									"functionSelector": "30f28b7a",
									"id": 311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permitTransferFrom",
									"nameLocation": "3614:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "permit",
												"nameLocation": "3668:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3642:32:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitTransferFrom_$271_memory_ptr",
													"typeString": "struct ISignatureTransfer.PermitTransferFrom"
												},
												"typeName": {
													"id": 300,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 299,
														"name": "PermitTransferFrom",
														"nameLocations": [
															"3642:18:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 271,
														"src": "3642:18:3"
													},
													"referencedDeclaration": 271,
													"src": "3642:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitTransferFrom_$271_storage_ptr",
														"typeString": "struct ISignatureTransfer.PermitTransferFrom"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "transferDetails",
												"nameLocation": "3718:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3684:49:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SignatureTransferDetails_$277_calldata_ptr",
													"typeString": "struct ISignatureTransfer.SignatureTransferDetails"
												},
												"typeName": {
													"id": 303,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 302,
														"name": "SignatureTransferDetails",
														"nameLocations": [
															"3684:24:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 277,
														"src": "3684:24:3"
													},
													"referencedDeclaration": 277,
													"src": "3684:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SignatureTransferDetails_$277_storage_ptr",
														"typeString": "struct ISignatureTransfer.SignatureTransferDetails"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3751:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3743:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3743:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3781:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3766:24:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 307,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3766:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3632:164:3"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3805:0:3"
									},
									"scope": 372,
									"src": "3605:201:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "3812:815:3",
										"text": "@notice Transfers a token using a signed permit message\n @notice Includes extra data provided by the caller to verify signature over\n @dev The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition\n @dev Reverts if the requested amount is greater than the permitted signed amount\n @param permit The permit data signed over by the owner\n @param owner The owner of the tokens to transfer\n @param transferDetails The spender's requested transfer details for the permitted token\n @param witness Extra data to include when checking the user signature\n @param witnessTypeString The EIP-712 type definition for remaining string stub of the typehash\n @param signature The signature to verify"
									},
									"functionSelector": "137c29fe",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permitWitnessTransferFrom",
									"nameLocation": "4641:25:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "permit",
												"nameLocation": "4702:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "4676:32:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitTransferFrom_$271_memory_ptr",
													"typeString": "struct ISignatureTransfer.PermitTransferFrom"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "PermitTransferFrom",
														"nameLocations": [
															"4676:18:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 271,
														"src": "4676:18:3"
													},
													"referencedDeclaration": 271,
													"src": "4676:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitTransferFrom_$271_storage_ptr",
														"typeString": "struct ISignatureTransfer.PermitTransferFrom"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "transferDetails",
												"nameLocation": "4752:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "4718:49:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SignatureTransferDetails_$277_calldata_ptr",
													"typeString": "struct ISignatureTransfer.SignatureTransferDetails"
												},
												"typeName": {
													"id": 317,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 316,
														"name": "SignatureTransferDetails",
														"nameLocations": [
															"4718:24:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 277,
														"src": "4718:24:3"
													},
													"referencedDeclaration": 277,
													"src": "4718:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SignatureTransferDetails_$277_storage_ptr",
														"typeString": "struct ISignatureTransfer.SignatureTransferDetails"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4785:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "4777:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4777:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "witness",
												"nameLocation": "4808:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "4800:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 321,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4800:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "witnessTypeString",
												"nameLocation": "4841:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "4825:33:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4825:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "4883:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "4868:24:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 325,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4868:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4666:232:3"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4907:0:3"
									},
									"scope": 372,
									"src": "4632:276:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "4914:335:3",
										"text": "@notice Transfers multiple tokens using a signed permit message\n @param permit The permit data signed over by the owner\n @param owner The owner of the tokens to transfer\n @param transferDetails Specifies the recipient and requested amount for the token transfer\n @param signature The signature to verify"
									},
									"functionSelector": "edd9444b",
									"id": 344,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permitTransferFrom",
									"nameLocation": "5263:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "permit",
												"nameLocation": "5322:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "5291:37:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_memory_ptr",
													"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom"
												},
												"typeName": {
													"id": 332,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 331,
														"name": "PermitBatchTransferFrom",
														"nameLocations": [
															"5291:23:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 287,
														"src": "5291:23:3"
													},
													"referencedDeclaration": 287,
													"src": "5291:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_storage_ptr",
														"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "transferDetails",
												"nameLocation": "5374:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "5338:51:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_SignatureTransferDetails_$277_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct ISignatureTransfer.SignatureTransferDetails[]"
												},
												"typeName": {
													"baseType": {
														"id": 335,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 334,
															"name": "SignatureTransferDetails",
															"nameLocations": [
																"5338:24:3"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 277,
															"src": "5338:24:3"
														},
														"referencedDeclaration": 277,
														"src": "5338:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SignatureTransferDetails_$277_storage_ptr",
															"typeString": "struct ISignatureTransfer.SignatureTransferDetails"
														}
													},
													"id": 336,
													"nodeType": "ArrayTypeName",
													"src": "5338:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SignatureTransferDetails_$277_storage_$dyn_storage_ptr",
														"typeString": "struct ISignatureTransfer.SignatureTransferDetails[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5407:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "5399:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5399:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "5437:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "5422:24:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 340,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5422:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5281:171:3"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5461:0:3"
									},
									"scope": 372,
									"src": "5254:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "5468:737:3",
										"text": "@notice Transfers multiple tokens using a signed permit message\n @dev The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition\n @notice Includes extra data provided by the caller to verify signature over\n @param permit The permit data signed over by the owner\n @param owner The owner of the tokens to transfer\n @param transferDetails Specifies the recipient and requested amount for the token transfer\n @param witness Extra data to include when checking the user signature\n @param witnessTypeString The EIP-712 type definition for remaining string stub of the typehash\n @param signature The signature to verify"
									},
									"functionSelector": "fe8ec1a7",
									"id": 363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permitWitnessTransferFrom",
									"nameLocation": "6219:25:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "permit",
												"nameLocation": "6285:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "6254:37:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_memory_ptr",
													"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom"
												},
												"typeName": {
													"id": 347,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 346,
														"name": "PermitBatchTransferFrom",
														"nameLocations": [
															"6254:23:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 287,
														"src": "6254:23:3"
													},
													"referencedDeclaration": 287,
													"src": "6254:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_storage_ptr",
														"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "transferDetails",
												"nameLocation": "6337:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "6301:51:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_SignatureTransferDetails_$277_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct ISignatureTransfer.SignatureTransferDetails[]"
												},
												"typeName": {
													"baseType": {
														"id": 350,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 349,
															"name": "SignatureTransferDetails",
															"nameLocations": [
																"6301:24:3"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 277,
															"src": "6301:24:3"
														},
														"referencedDeclaration": 277,
														"src": "6301:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SignatureTransferDetails_$277_storage_ptr",
															"typeString": "struct ISignatureTransfer.SignatureTransferDetails"
														}
													},
													"id": 351,
													"nodeType": "ArrayTypeName",
													"src": "6301:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SignatureTransferDetails_$277_storage_$dyn_storage_ptr",
														"typeString": "struct ISignatureTransfer.SignatureTransferDetails[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6370:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "6362:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6362:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "witness",
												"nameLocation": "6393:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "6385:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6385:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "witnessTypeString",
												"nameLocation": "6426:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "6410:33:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 357,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6410:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "6468:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "6453:24:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 359,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6453:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6244:239:3"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6492:0:3"
									},
									"scope": 372,
									"src": "6210:283:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "6499:294:3",
										"text": "@notice Invalidates the bits specified in mask for the bitmap at the word position\n @dev The wordPos is maxed at type(uint248).max\n @param wordPos A number to index the nonceBitmap at\n @param mask A bitmap masked against msg.sender's current bitmap at the word position"
									},
									"functionSelector": "3ff9dcb1",
									"id": 371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "invalidateUnorderedNonces",
									"nameLocation": "6807:25:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "wordPos",
												"nameLocation": "6841:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "6833:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6833:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "mask",
												"nameLocation": "6858:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "6850:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6850:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6832:31:3"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6872:0:3"
									},
									"scope": 372,
									"src": "6798:75:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 373,
							"src": "265:6610:3",
							"usedErrors": [
								244,
								247
							],
							"usedEvents": [
								256
							]
						}
					],
					"src": "32:6844:3"
				},
				"id": 3
			},
			"contracts/contracts/lib/Allowance.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/lib/Allowance.sol",
					"exportedSymbols": {
						"Allowance": [
							491
						],
						"IAllowanceTransfer": [
							211
						]
					},
					"id": 492,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 374,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:4"
						},
						{
							"absolutePath": "contracts/contracts/interfaces/IAllowanceTransfer.sol",
							"file": "../interfaces/IAllowanceTransfer.sol",
							"id": 376,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 492,
							"sourceUnit": 212,
							"src": "58:72:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 375,
										"name": "IAllowanceTransfer",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 211,
										"src": "66:18:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Allowance",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 491,
							"linearizedBaseContracts": [
								491
							],
							"name": "Allowance",
							"nameLocation": "140:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 379,
									"mutability": "constant",
									"name": "BLOCK_TIMESTAMP_EXPIRATION",
									"nameLocation": "272:26:4",
									"nodeType": "VariableDeclaration",
									"scope": 491,
									"src": "247:55:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 377,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "247:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 378,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "301:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "711:355:4",
										"statements": [
											{
												"assignments": [
													393
												],
												"declarations": [
													{
														"constant": false,
														"id": 393,
														"mutability": "mutable",
														"name": "storedNonce",
														"nameLocation": "728:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 424,
														"src": "721:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														},
														"typeName": {
															"id": 392,
															"name": "uint48",
															"nodeType": "ElementaryTypeName",
															"src": "721:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 394,
												"nodeType": "VariableDeclarationStatement",
												"src": "721:18:4"
											},
											{
												"id": 401,
												"nodeType": "UncheckedBlock",
												"src": "749:58:4",
												"statements": [
													{
														"expression": {
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 395,
																"name": "storedNonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "773:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																},
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 396,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 389,
																	"src": "787:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "795:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "787:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																}
															},
															"src": "773:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														"id": 400,
														"nodeType": "ExpressionStatement",
														"src": "773:23:4"
													}
												]
											},
											{
												"assignments": [
													403
												],
												"declarations": [
													{
														"constant": false,
														"id": 403,
														"mutability": "mutable",
														"name": "storedExpiration",
														"nameLocation": "824:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 424,
														"src": "817:23:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														},
														"typeName": {
															"id": 402,
															"name": "uint48",
															"nodeType": "ElementaryTypeName",
															"src": "817:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 414,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 404,
															"name": "expiration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "843:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 405,
															"name": "BLOCK_TIMESTAMP_EXPIRATION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "857:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "843:40:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 412,
														"name": "expiration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "912:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "843:79:4",
													"trueExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 409,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "893:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "899:9:4",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "893:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "886:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint48_$",
																"typeString": "type(uint48)"
															},
															"typeName": {
																"id": 407,
																"name": "uint48",
																"nodeType": "ElementaryTypeName",
																"src": "886:6:4",
																"typeDescriptions": {}
															}
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "886:23:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "817:105:4"
											},
											{
												"assignments": [
													416
												],
												"declarations": [
													{
														"constant": false,
														"id": 416,
														"mutability": "mutable",
														"name": "word",
														"nameLocation": "941:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 424,
														"src": "933:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 415,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "933:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 422,
												"initialValue": {
													"arguments": [
														{
															"id": 418,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "953:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"id": 419,
															"name": "storedExpiration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "961:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														{
															"id": 420,
															"name": "storedNonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "979:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															},
															{
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														],
														"id": 417,
														"name": "pack",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "948:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint48_$_t_uint48_$returns$_t_uint256_$",
															"typeString": "function (uint160,uint48,uint48) pure returns (uint256)"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "948:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "933:58:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1010:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "allowed.slot",
																		"nodeType": "YulIdentifier",
																		"src": "1031:12:4"
																	},
																	{
																		"name": "word",
																		"nodeType": "YulIdentifier",
																		"src": "1045:4:4"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "1024:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1024:26:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1024:26:4"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 383,
														"isOffset": false,
														"isSlot": true,
														"src": "1031:12:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 416,
														"isOffset": false,
														"isSlot": false,
														"src": "1045:4:4",
														"valueSize": 1
													}
												],
												"id": 423,
												"nodeType": "InlineAssembly",
												"src": "1001:59:4"
											}
										]
									},
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "309:230:4",
										"text": "@notice Sets the allowed amount, expiry, and nonce of the spender's permissions on owner's token.\n @dev Nonce is incremented.\n @dev If the inputted expiration is 0, the stored expiration is set to block.timestamp"
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateAll",
									"nameLocation": "553:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "allowed",
												"nameLocation": "615:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "572:50:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PackedAllowance_$106_storage_ptr",
													"typeString": "struct IAllowanceTransfer.PackedAllowance"
												},
												"typeName": {
													"id": 382,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 381,
														"name": "IAllowanceTransfer.PackedAllowance",
														"nameLocations": [
															"572:18:4",
															"591:15:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 106,
														"src": "572:34:4"
													},
													"referencedDeclaration": 106,
													"src": "572:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PackedAllowance_$106_storage_ptr",
														"typeString": "struct IAllowanceTransfer.PackedAllowance"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "640:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "632:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 384,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "expiration",
												"nameLocation": "663:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "656:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 386,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "656:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "690:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "683:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 388,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "683:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "562:139:4"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "711:0:4"
									},
									"scope": 491,
									"src": "544:522:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "1383:221:4",
										"statements": [
											{
												"expression": {
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 436,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "1489:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PackedAllowance_$106_storage_ptr",
																"typeString": "struct IAllowanceTransfer.PackedAllowance storage pointer"
															}
														},
														"id": 438,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1497:10:4",
														"memberName": "expiration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 103,
														"src": "1489:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 439,
																"name": "expiration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 433,
																"src": "1510:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1524:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1510:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"id": 447,
															"name": "expiration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "1554:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "1510:54:4",
														"trueExpression": {
															"arguments": [
																{
																	"expression": {
																		"id": 444,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1535:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1541:9:4",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1535:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1528:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint48_$",
																	"typeString": "type(uint48)"
																},
																"typeName": {
																	"id": 442,
																	"name": "uint48",
																	"nodeType": "ElementaryTypeName",
																	"src": "1528:6:4",
																	"typeDescriptions": {}
																}
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1528:23:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "1489:75:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "1489:75:4"
											},
											{
												"expression": {
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 451,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "1574:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PackedAllowance_$106_storage_ptr",
																"typeString": "struct IAllowanceTransfer.PackedAllowance storage pointer"
															}
														},
														"id": 453,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1582:6:4",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 101,
														"src": "1574:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 454,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "1591:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "1574:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"id": 456,
												"nodeType": "ExpressionStatement",
												"src": "1574:23:4"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "1072:145:4",
										"text": "@notice Sets the allowed amount and expiry of the spender's permissions on owner's token.\n @dev Nonce does not need to be incremented."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateAmountAndExpiration",
									"nameLocation": "1231:25:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "allowed",
												"nameLocation": "1309:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "1266:50:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PackedAllowance_$106_storage_ptr",
													"typeString": "struct IAllowanceTransfer.PackedAllowance"
												},
												"typeName": {
													"id": 428,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 427,
														"name": "IAllowanceTransfer.PackedAllowance",
														"nameLocations": [
															"1266:18:4",
															"1285:15:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 106,
														"src": "1266:34:4"
													},
													"referencedDeclaration": 106,
													"src": "1266:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PackedAllowance_$106_storage_ptr",
														"typeString": "struct IAllowanceTransfer.PackedAllowance"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1334:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "1326:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 430,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1326:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "expiration",
												"nameLocation": "1357:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "1350:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 432,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1350:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:117:4"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1383:0:4"
									},
									"scope": 491,
									"src": "1222:382:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "1817:85:4",
										"statements": [
											{
												"expression": {
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 470,
														"name": "word",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "1827:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 473,
																					"name": "nonce",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 465,
																					"src": "1843:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint48",
																						"typeString": "uint48"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint48",
																						"typeString": "uint48"
																					}
																				],
																				"id": 472,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1835:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 471,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1835:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1835:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "323038",
																			"id": 475,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1853:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_208_by_1",
																				"typeString": "int_const 208"
																			},
																			"value": "208"
																		},
																		"src": "1835:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 477,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1834:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "|",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 480,
																			"name": "expiration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 463,
																			"src": "1868:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint48",
																				"typeString": "uint48"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint48",
																				"typeString": "uint48"
																			}
																		],
																		"id": 479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1860:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 478,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1860:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1860:19:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "313630",
																	"id": 482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1883:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_160_by_1",
																		"typeString": "int_const 160"
																	},
																	"value": "160"
																},
																"src": "1860:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1834:52:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"id": 485,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "1889:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"src": "1834:61:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1827:68:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "1827:68:4"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "1610:102:4",
										"text": "@notice Computes the packed slot of the amount, expiration, and nonce that make up PackedAllowance"
									},
									"id": 490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pack",
									"nameLocation": "1726:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1739:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "1731:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 460,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1731:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "expiration",
												"nameLocation": "1754:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "1747:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 462,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1747:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1773:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "1766:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 464,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1766:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1730:49:4"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "word",
												"nameLocation": "1811:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "1803:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1803:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1802:14:4"
									},
									"scope": 491,
									"src": "1717:185:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 492,
							"src": "132:1772:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1873:4"
				},
				"id": 4
			},
			"contracts/contracts/lib/PermitHash.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/lib/PermitHash.sol",
					"exportedSymbols": {
						"IAllowanceTransfer": [
							211
						],
						"ISignatureTransfer": [
							372
						],
						"PermitHash": [
							891
						]
					},
					"id": 892,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 493,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:5"
						},
						{
							"absolutePath": "contracts/contracts/interfaces/IAllowanceTransfer.sol",
							"file": "../interfaces/IAllowanceTransfer.sol",
							"id": 495,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 892,
							"sourceUnit": 212,
							"src": "58:72:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 494,
										"name": "IAllowanceTransfer",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 211,
										"src": "66:18:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/interfaces/ISignatureTransfer.sol",
							"file": "../interfaces/ISignatureTransfer.sol",
							"id": 497,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 892,
							"sourceUnit": 373,
							"src": "131:72:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 496,
										"name": "ISignatureTransfer",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 372,
										"src": "139:18:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PermitHash",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 891,
							"linearizedBaseContracts": [
								891
							],
							"name": "PermitHash",
							"nameLocation": "213:10:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "6e4f2775",
									"id": 502,
									"mutability": "constant",
									"name": "_PERMIT_DETAILS_TYPEHASH",
									"nameLocation": "254:24:5",
									"nodeType": "VariableDeclaration",
									"scope": 891,
									"src": "230:146:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 498,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "230:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d697444657461696c73286164647265737320746f6b656e2c75696e7431363020616d6f756e742c75696e7434382065787069726174696f6e2c75696e743438206e6f6e636529",
												"id": 500,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "299:76:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_65626cad6cb96493bf6f5ebea28756c966f023ab9e8a83a7101849d5573b3678",
													"typeString": "literal_string \"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\""
												},
												"value": "PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_65626cad6cb96493bf6f5ebea28756c966f023ab9e8a83a7101849d5573b3678",
													"typeString": "literal_string \"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\""
												}
											],
											"id": 499,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "289:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 501,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "289:87:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c5df4f03",
									"id": 507,
									"mutability": "constant",
									"name": "_PERMIT_SINGLE_TYPEHASH",
									"nameLocation": "407:23:5",
									"nodeType": "VariableDeclaration",
									"scope": 891,
									"src": "383:222:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 503,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "383:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d697453696e676c65285065726d697444657461696c732064657461696c732c61646472657373207370656e6465722c75696e7432353620736967446561646c696e65295065726d697444657461696c73286164647265737320746f6b656e2c75696e7431363020616d6f756e742c75696e7434382065787069726174696f6e2c75696e743438206e6f6e636529",
												"id": 505,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "452:147:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_f3841cd1ff0085026a6327b620b67997ce40f282c88a8e905a7a5626e310f3d0",
													"typeString": "literal_string \"PermitSingle(PermitDetails details,address spender,uint256 sigDeadline)PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\""
												},
												"value": "PermitSingle(PermitDetails details,address spender,uint256 sigDeadline)PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_f3841cd1ff0085026a6327b620b67997ce40f282c88a8e905a7a5626e310f3d0",
													"typeString": "literal_string \"PermitSingle(PermitDetails details,address spender,uint256 sigDeadline)PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\""
												}
											],
											"id": 504,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "433:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 506,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "433:172:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "6302c3cf",
									"id": 512,
									"mutability": "constant",
									"name": "_PERMIT_BATCH_TYPEHASH",
									"nameLocation": "636:22:5",
									"nodeType": "VariableDeclaration",
									"scope": 891,
									"src": "612:222:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 508,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "612:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d69744261746368285065726d697444657461696c735b5d2064657461696c732c61646472657373207370656e6465722c75696e7432353620736967446561646c696e65295065726d697444657461696c73286164647265737320746f6b656e2c75696e7431363020616d6f756e742c75696e7434382065787069726174696f6e2c75696e743438206e6f6e636529",
												"id": 510,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "680:148:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_af1b0d30d2cab0380e68f0689007e3254993c596f2fdd0aaa7f4d04f79440863",
													"typeString": "literal_string \"PermitBatch(PermitDetails[] details,address spender,uint256 sigDeadline)PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\""
												},
												"value": "PermitBatch(PermitDetails[] details,address spender,uint256 sigDeadline)PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_af1b0d30d2cab0380e68f0689007e3254993c596f2fdd0aaa7f4d04f79440863",
													"typeString": "literal_string \"PermitBatch(PermitDetails[] details,address spender,uint256 sigDeadline)PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\""
												}
											],
											"id": 509,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "661:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 511,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "661:173:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "415e982d",
									"id": 517,
									"mutability": "constant",
									"name": "_TOKEN_PERMISSIONS_TYPEHASH",
									"nameLocation": "865:27:5",
									"nodeType": "VariableDeclaration",
									"scope": 891,
									"src": "841:113:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 513,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "841:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e7429",
												"id": 515,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "905:48:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a1",
													"typeString": "literal_string \"TokenPermissions(address token,uint256 amount)\""
												},
												"value": "TokenPermissions(address token,uint256 amount)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a1",
													"typeString": "literal_string \"TokenPermissions(address token,uint256 amount)\""
												}
											],
											"id": 514,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "895:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 516,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "895:59:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "78f16830",
									"id": 522,
									"mutability": "constant",
									"name": "_PERMIT_TRANSFER_FROM_TYPEHASH",
									"nameLocation": "985:30:5",
									"nodeType": "VariableDeclaration",
									"scope": 891,
									"src": "961:223:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 518,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "961:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d69745472616e7366657246726f6d28546f6b656e5065726d697373696f6e73207065726d69747465642c61646472657373207370656e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e7429",
												"id": 520,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1037:141:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_939c21a48a8dbe3a9a2404a1d46691e4d39f6583d6ec6b35714604c986d80106",
													"typeString": "literal_string \"PermitTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline)TokenPermissions(address token,uint256 amount)\""
												},
												"value": "PermitTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline)TokenPermissions(address token,uint256 amount)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_939c21a48a8dbe3a9a2404a1d46691e4d39f6583d6ec6b35714604c986d80106",
													"typeString": "literal_string \"PermitTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline)TokenPermissions(address token,uint256 amount)\""
												}
											],
											"id": 519,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1018:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 521,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1018:166:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "3eb8b8fd",
									"id": 527,
									"mutability": "constant",
									"name": "_PERMIT_BATCH_TRANSFER_FROM_TYPEHASH",
									"nameLocation": "1215:36:5",
									"nodeType": "VariableDeclaration",
									"scope": 891,
									"src": "1191:236:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 523,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1191:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d697442617463685472616e7366657246726f6d28546f6b656e5065726d697373696f6e735b5d207065726d69747465642c61646472657373207370656e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e7429",
												"id": 525,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1273:148:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_fcf35f5ac6a2c28868dc44c302166470266239195f02b0ee408334829333b766",
													"typeString": "literal_string \"PermitBatchTransferFrom(TokenPermissions[] permitted,address spender,uint256 nonce,uint256 deadline)TokenPermissions(address token,uint256 amount)\""
												},
												"value": "PermitBatchTransferFrom(TokenPermissions[] permitted,address spender,uint256 nonce,uint256 deadline)TokenPermissions(address token,uint256 amount)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_fcf35f5ac6a2c28868dc44c302166470266239195f02b0ee408334829333b766",
													"typeString": "literal_string \"PermitBatchTransferFrom(TokenPermissions[] permitted,address spender,uint256 nonce,uint256 deadline)TokenPermissions(address token,uint256 amount)\""
												}
											],
											"id": 524,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1254:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 526,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1254:173:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c0c7fa7e",
									"id": 530,
									"mutability": "constant",
									"name": "_TOKEN_PERMISSIONS_TYPESTRING",
									"nameLocation": "1457:29:5",
									"nodeType": "VariableDeclaration",
									"scope": 891,
									"src": "1434:103:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 528,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1434:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e7429",
										"id": 529,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1489:48:5",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a1",
											"typeString": "literal_string \"TokenPermissions(address token,uint256 amount)\""
										},
										"value": "TokenPermissions(address token,uint256 amount)"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "84b8efbb",
									"id": 533,
									"mutability": "constant",
									"name": "_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB",
									"nameLocation": "1567:43:5",
									"nodeType": "VariableDeclaration",
									"scope": 891,
									"src": "1544:179:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 531,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1544:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "5065726d69745769746e6573735472616e7366657246726f6d28546f6b656e5065726d697373696f6e73207065726d69747465642c61646472657373207370656e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e652c",
										"id": 532,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1621:102:5",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_7c29ab44842e91090848780f4cd9a6c05ba5b883d9f1f1ad134563b61518940b",
											"typeString": "literal_string \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\""
										},
										"value": "PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "90bbf2f3",
									"id": 536,
									"mutability": "constant",
									"name": "_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB",
									"nameLocation": "1753:49:5",
									"nodeType": "VariableDeclaration",
									"scope": 891,
									"src": "1730:192:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 534,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1730:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "5065726d697442617463685769746e6573735472616e7366657246726f6d28546f6b656e5065726d697373696f6e735b5d207065726d69747465642c61646472657373207370656e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e652c",
										"id": 535,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1813:109:5",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_0bf214d267f8e8fa0f37d38e2103aff5c639b54388783bd59a418a8bee49520c",
											"typeString": "literal_string \"PermitBatchWitnessTransferFrom(TokenPermissions[] permitted,address spender,uint256 nonce,uint256 deadline,\""
										},
										"value": "PermitBatchWitnessTransferFrom(TokenPermissions[] permitted,address spender,uint256 nonce,uint256 deadline,"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "2028:213:5",
										"statements": [
											{
												"assignments": [
													545
												],
												"declarations": [
													{
														"constant": false,
														"id": 545,
														"mutability": "mutable",
														"name": "permitHash",
														"nameLocation": "2046:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 563,
														"src": "2038:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 544,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2038:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 550,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 547,
																"name": "permitSingle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "2078:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PermitSingle_$88_memory_ptr",
																	"typeString": "struct IAllowanceTransfer.PermitSingle memory"
																}
															},
															"id": 548,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2091:7:5",
															"memberName": "details",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 83,
															"src": "2078:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PermitDetails_$79_memory_ptr",
																"typeString": "struct IAllowanceTransfer.PermitDetails memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PermitDetails_$79_memory_ptr",
																"typeString": "struct IAllowanceTransfer.PermitDetails memory"
															}
														],
														"id": 546,
														"name": "_hashPermitDetails",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "2059:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_PermitDetails_$79_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (struct IAllowanceTransfer.PermitDetails memory) pure returns (bytes32)"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2059:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2038:61:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 554,
																	"name": "_PERMIT_SINGLE_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 507,
																	"src": "2149:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 555,
																	"name": "permitHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 545,
																	"src": "2174:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 556,
																		"name": "permitSingle",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 539,
																		"src": "2186:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PermitSingle_$88_memory_ptr",
																			"typeString": "struct IAllowanceTransfer.PermitSingle memory"
																		}
																	},
																	"id": 557,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2199:7:5",
																	"memberName": "spender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 85,
																	"src": "2186:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 558,
																		"name": "permitSingle",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 539,
																		"src": "2208:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PermitSingle_$88_memory_ptr",
																			"typeString": "struct IAllowanceTransfer.PermitSingle memory"
																		}
																	},
																	"id": 559,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2221:11:5",
																	"memberName": "sigDeadline",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 87,
																	"src": "2208:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 552,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2138:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2142:6:5",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "2138:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2138:95:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 551,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2128:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2128:106:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 543,
												"id": 562,
												"nodeType": "Return",
												"src": "2109:125:5"
											}
										]
									},
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hash",
									"nameLocation": "1938:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "permitSingle",
												"nameLocation": "1982:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "1943:51:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitSingle_$88_memory_ptr",
													"typeString": "struct IAllowanceTransfer.PermitSingle"
												},
												"typeName": {
													"id": 538,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 537,
														"name": "IAllowanceTransfer.PermitSingle",
														"nameLocations": [
															"1943:18:5",
															"1962:12:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 88,
														"src": "1943:31:5"
													},
													"referencedDeclaration": 88,
													"src": "1943:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitSingle_$88_storage_ptr",
														"typeString": "struct IAllowanceTransfer.PermitSingle"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1942:53:5"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "2019:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 541,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2018:9:5"
									},
									"scope": 891,
									"src": "1929:312:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "2344:517:5",
										"statements": [
											{
												"assignments": [
													573
												],
												"declarations": [
													{
														"constant": false,
														"id": 573,
														"mutability": "mutable",
														"name": "numPermits",
														"nameLocation": "2362:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "2354:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 572,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2354:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 577,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 574,
															"name": "permitBatch",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "2375:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PermitBatch_$98_memory_ptr",
																"typeString": "struct IAllowanceTransfer.PermitBatch memory"
															}
														},
														"id": 575,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2387:7:5",
														"memberName": "details",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 93,
														"src": "2375:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PermitDetails_$79_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IAllowanceTransfer.PermitDetails memory[] memory"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2395:6:5",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2375:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2354:47:5"
											},
											{
												"assignments": [
													582
												],
												"declarations": [
													{
														"constant": false,
														"id": 582,
														"mutability": "mutable",
														"name": "permitHashes",
														"nameLocation": "2428:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "2411:29:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 580,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "2411:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 581,
															"nodeType": "ArrayTypeName",
															"src": "2411:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 588,
												"initialValue": {
													"arguments": [
														{
															"id": 586,
															"name": "numPermits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "2457:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2443:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes32[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 583,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "2447:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 584,
															"nodeType": "ArrayTypeName",
															"src": "2447:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2443:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2411:57:5"
											},
											{
												"body": {
													"id": 610,
													"nodeType": "Block",
													"src": "2519:85:5",
													"statements": [
														{
															"expression": {
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 599,
																		"name": "permitHashes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "2533:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																			"typeString": "bytes32[] memory"
																		}
																	},
																	"id": 601,
																	"indexExpression": {
																		"id": 600,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 590,
																		"src": "2546:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2533:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"expression": {
																					"id": 603,
																					"name": "permitBatch",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 567,
																					"src": "2570:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PermitBatch_$98_memory_ptr",
																						"typeString": "struct IAllowanceTransfer.PermitBatch memory"
																					}
																				},
																				"id": 604,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2582:7:5",
																				"memberName": "details",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 93,
																				"src": "2570:19:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_PermitDetails_$79_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct IAllowanceTransfer.PermitDetails memory[] memory"
																				}
																			},
																			"id": 606,
																			"indexExpression": {
																				"id": 605,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 590,
																				"src": "2590:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2570:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PermitDetails_$79_memory_ptr",
																				"typeString": "struct IAllowanceTransfer.PermitDetails memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_struct$_PermitDetails_$79_memory_ptr",
																				"typeString": "struct IAllowanceTransfer.PermitDetails memory"
																			}
																		],
																		"id": 602,
																		"name": "_hashPermitDetails",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 873,
																		"src": "2551:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_struct$_PermitDetails_$79_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (struct IAllowanceTransfer.PermitDetails memory) pure returns (bytes32)"
																		}
																	},
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2551:42:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "2533:60:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 609,
															"nodeType": "ExpressionStatement",
															"src": "2533:60:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 593,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "2498:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 594,
														"name": "numPermits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "2502:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2498:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 611,
												"initializationExpression": {
													"assignments": [
														590
													],
													"declarations": [
														{
															"constant": false,
															"id": 590,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2491:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 611,
															"src": "2483:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 589,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2483:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 592,
													"initialValue": {
														"hexValue": "30",
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2495:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2483:13:5"
												},
												"loopExpression": {
													"expression": {
														"id": 597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2514:3:5",
														"subExpression": {
															"id": 596,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "2516:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 598,
													"nodeType": "ExpressionStatement",
													"src": "2514:3:5"
												},
												"nodeType": "ForStatement",
												"src": "2478:126:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 615,
																	"name": "_PERMIT_BATCH_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "2671:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 619,
																					"name": "permitHashes",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 582,
																					"src": "2738:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				],
																				"expression": {
																					"id": 617,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "2721:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 618,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2725:12:5",
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "2721:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2721:30:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 616,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "2711:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2711:41:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 622,
																		"name": "permitBatch",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "2770:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PermitBatch_$98_memory_ptr",
																			"typeString": "struct IAllowanceTransfer.PermitBatch memory"
																		}
																	},
																	"id": 623,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2782:7:5",
																	"memberName": "spender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 95,
																	"src": "2770:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 624,
																		"name": "permitBatch",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "2807:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PermitBatch_$98_memory_ptr",
																			"typeString": "struct IAllowanceTransfer.PermitBatch memory"
																		}
																	},
																	"id": 625,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2819:11:5",
																	"memberName": "sigDeadline",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 97,
																	"src": "2807:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 613,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2643:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 614,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2647:6:5",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "2643:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2643:201:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 612,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2620:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2620:234:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 571,
												"id": 628,
												"nodeType": "Return",
												"src": "2613:241:5"
											}
										]
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hash",
									"nameLocation": "2256:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "permitBatch",
												"nameLocation": "2299:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "2261:49:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitBatch_$98_memory_ptr",
													"typeString": "struct IAllowanceTransfer.PermitBatch"
												},
												"typeName": {
													"id": 566,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 565,
														"name": "IAllowanceTransfer.PermitBatch",
														"nameLocations": [
															"2261:18:5",
															"2280:11:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 98,
														"src": "2261:30:5"
													},
													"referencedDeclaration": 98,
													"src": "2261:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitBatch_$98_storage_ptr",
														"typeString": "struct IAllowanceTransfer.PermitBatch"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2260:51:5"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "2335:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 569,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2335:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2334:9:5"
									},
									"scope": 891,
									"src": "2247:614:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "2966:244:5",
										"statements": [
											{
												"assignments": [
													639
												],
												"declarations": [
													{
														"constant": false,
														"id": 639,
														"mutability": "mutable",
														"name": "tokenPermissionsHash",
														"nameLocation": "2984:20:5",
														"nodeType": "VariableDeclaration",
														"scope": 659,
														"src": "2976:28:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 638,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2976:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 644,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 641,
																"name": "permit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "3029:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PermitTransferFrom_$271_memory_ptr",
																	"typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3036:9:5",
															"memberName": "permitted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 266,
															"src": "3029:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenPermissions_$262_memory_ptr",
																"typeString": "struct ISignatureTransfer.TokenPermissions memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_TokenPermissions_$262_memory_ptr",
																"typeString": "struct ISignatureTransfer.TokenPermissions memory"
															}
														],
														"id": 640,
														"name": "_hashTokenPermissions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "3007:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_TokenPermissions_$262_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (struct ISignatureTransfer.TokenPermissions memory) pure returns (bytes32)"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3007:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2976:70:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 648,
																	"name": "_PERMIT_TRANSFER_FROM_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "3097:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 649,
																	"name": "tokenPermissionsHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "3129:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 650,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3151:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3155:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3151:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 652,
																		"name": "permit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 633,
																		"src": "3163:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PermitTransferFrom_$271_memory_ptr",
																			"typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
																		}
																	},
																	"id": 653,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3170:5:5",
																	"memberName": "nonce",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 268,
																	"src": "3163:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 654,
																		"name": "permit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 633,
																		"src": "3177:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PermitTransferFrom_$271_memory_ptr",
																			"typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
																		}
																	},
																	"id": 655,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3184:8:5",
																	"memberName": "deadline",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 270,
																	"src": "3177:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 646,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "3086:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3090:6:5",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "3086:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:107:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 645,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "3063:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3063:140:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 637,
												"id": 658,
												"nodeType": "Return",
												"src": "3056:147:5"
											}
										]
									},
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hash",
									"nameLocation": "2876:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "permit",
												"nameLocation": "2926:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2881:51:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitTransferFrom_$271_memory_ptr",
													"typeString": "struct ISignatureTransfer.PermitTransferFrom"
												},
												"typeName": {
													"id": 632,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 631,
														"name": "ISignatureTransfer.PermitTransferFrom",
														"nameLocations": [
															"2881:18:5",
															"2900:18:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 271,
														"src": "2881:37:5"
													},
													"referencedDeclaration": 271,
													"src": "2881:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitTransferFrom_$271_storage_ptr",
														"typeString": "struct ISignatureTransfer.PermitTransferFrom"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2880:53:5"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2957:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 635,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2957:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2956:9:5"
									},
									"scope": 891,
									"src": "2867:343:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 727,
										"nodeType": "Block",
										"src": "3320:576:5",
										"statements": [
											{
												"assignments": [
													669
												],
												"declarations": [
													{
														"constant": false,
														"id": 669,
														"mutability": "mutable",
														"name": "numPermitted",
														"nameLocation": "3338:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 727,
														"src": "3330:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 668,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3330:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 673,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 670,
															"name": "permit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "3353:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_memory_ptr",
																"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom memory"
															}
														},
														"id": 671,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3360:9:5",
														"memberName": "permitted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 282,
														"src": "3353:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_TokenPermissions_$262_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct ISignatureTransfer.TokenPermissions memory[] memory"
														}
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3370:6:5",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3353:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3330:46:5"
											},
											{
												"assignments": [
													678
												],
												"declarations": [
													{
														"constant": false,
														"id": 678,
														"mutability": "mutable",
														"name": "tokenPermissionHashes",
														"nameLocation": "3403:21:5",
														"nodeType": "VariableDeclaration",
														"scope": 727,
														"src": "3386:38:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 676,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "3386:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 677,
															"nodeType": "ArrayTypeName",
															"src": "3386:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 684,
												"initialValue": {
													"arguments": [
														{
															"id": 682,
															"name": "numPermitted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "3441:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3427:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes32[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 679,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "3431:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 680,
															"nodeType": "ArrayTypeName",
															"src": "3431:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														}
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3427:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3386:68:5"
											},
											{
												"body": {
													"id": 706,
													"nodeType": "Block",
													"src": "3508:94:5",
													"statements": [
														{
															"expression": {
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 695,
																		"name": "tokenPermissionHashes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 678,
																		"src": "3522:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																			"typeString": "bytes32[] memory"
																		}
																	},
																	"id": 697,
																	"indexExpression": {
																		"id": 696,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 686,
																		"src": "3544:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3522:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"expression": {
																					"id": 699,
																					"name": "permit",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 663,
																					"src": "3571:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_memory_ptr",
																						"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom memory"
																					}
																				},
																				"id": 700,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3578:9:5",
																				"memberName": "permitted",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 282,
																				"src": "3571:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_TokenPermissions_$262_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct ISignatureTransfer.TokenPermissions memory[] memory"
																				}
																			},
																			"id": 702,
																			"indexExpression": {
																				"id": 701,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "3588:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3571:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenPermissions_$262_memory_ptr",
																				"typeString": "struct ISignatureTransfer.TokenPermissions memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_struct$_TokenPermissions_$262_memory_ptr",
																				"typeString": "struct ISignatureTransfer.TokenPermissions memory"
																			}
																		],
																		"id": 698,
																		"name": "_hashTokenPermissions",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 890,
																		"src": "3549:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_struct$_TokenPermissions_$262_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (struct ISignatureTransfer.TokenPermissions memory) pure returns (bytes32)"
																		}
																	},
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3549:42:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "3522:69:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 705,
															"nodeType": "ExpressionStatement",
															"src": "3522:69:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 689,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "3485:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 690,
														"name": "numPermitted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "3489:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3485:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 707,
												"initializationExpression": {
													"assignments": [
														686
													],
													"declarations": [
														{
															"constant": false,
															"id": 686,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3478:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 707,
															"src": "3470:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 685,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3470:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 688,
													"initialValue": {
														"hexValue": "30",
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3482:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3470:13:5"
												},
												"loopExpression": {
													"expression": {
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3503:3:5",
														"subExpression": {
															"id": 692,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "3505:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 694,
													"nodeType": "ExpressionStatement",
													"src": "3503:3:5"
												},
												"nodeType": "ForStatement",
												"src": "3465:137:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 711,
																	"name": "_PERMIT_BATCH_TRANSFER_FROM_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 527,
																	"src": "3670:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 715,
																					"name": "tokenPermissionHashes",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 678,
																					"src": "3751:21:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				],
																				"expression": {
																					"id": 713,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "3734:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 714,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "3738:12:5",
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "3734:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3734:39:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 712,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "3724:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3724:50:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 718,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3792:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3796:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3792:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 720,
																		"name": "permit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 663,
																		"src": "3820:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_memory_ptr",
																			"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom memory"
																		}
																	},
																	"id": 721,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3827:5:5",
																	"memberName": "nonce",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 284,
																	"src": "3820:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 722,
																		"name": "permit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 663,
																		"src": "3850:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_memory_ptr",
																			"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom memory"
																		}
																	},
																	"id": 723,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3857:8:5",
																	"memberName": "deadline",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 286,
																	"src": "3850:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 709,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "3642:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3646:6:5",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "3642:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3642:237:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 708,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "3619:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3619:270:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 667,
												"id": 726,
												"nodeType": "Return",
												"src": "3612:277:5"
											}
										]
									},
									"id": 728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hash",
									"nameLocation": "3225:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "permit",
												"nameLocation": "3280:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "3230:56:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_memory_ptr",
													"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom"
												},
												"typeName": {
													"id": 662,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 661,
														"name": "ISignatureTransfer.PermitBatchTransferFrom",
														"nameLocations": [
															"3230:18:5",
															"3249:23:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 287,
														"src": "3230:42:5"
													},
													"referencedDeclaration": 287,
													"src": "3230:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_storage_ptr",
														"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3229:58:5"
									},
									"returnParameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "3311:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 665,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3311:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3310:9:5"
									},
									"scope": 891,
									"src": "3216:680:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 772,
										"nodeType": "Block",
										"src": "4094:330:5",
										"statements": [
											{
												"assignments": [
													741
												],
												"declarations": [
													{
														"constant": false,
														"id": 741,
														"mutability": "mutable",
														"name": "typeHash",
														"nameLocation": "4112:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 772,
														"src": "4104:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 740,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4104:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 749,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 745,
																	"name": "_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "4150:43:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 746,
																	"name": "witnessTypeString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 735,
																	"src": "4195:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_calldata_ptr",
																		"typeString": "string calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_calldata_ptr",
																		"typeString": "string calldata"
																	}
																],
																"expression": {
																	"id": 743,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4133:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4137:12:5",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "4133:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4133:80:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 742,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "4123:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4123:91:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4104:110:5"
											},
											{
												"assignments": [
													751
												],
												"declarations": [
													{
														"constant": false,
														"id": 751,
														"mutability": "mutable",
														"name": "tokenPermissionsHash",
														"nameLocation": "4233:20:5",
														"nodeType": "VariableDeclaration",
														"scope": 772,
														"src": "4225:28:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 750,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4225:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 756,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 753,
																"name": "permit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 731,
																"src": "4278:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PermitTransferFrom_$271_memory_ptr",
																	"typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
																}
															},
															"id": 754,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4285:9:5",
															"memberName": "permitted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 266,
															"src": "4278:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenPermissions_$262_memory_ptr",
																"typeString": "struct ISignatureTransfer.TokenPermissions memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_TokenPermissions_$262_memory_ptr",
																"typeString": "struct ISignatureTransfer.TokenPermissions memory"
															}
														],
														"id": 752,
														"name": "_hashTokenPermissions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "4256:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_TokenPermissions_$262_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (struct ISignatureTransfer.TokenPermissions memory) pure returns (bytes32)"
														}
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4256:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4225:70:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 760,
																	"name": "typeHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 741,
																	"src": "4333:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 761,
																	"name": "tokenPermissionsHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "4343:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 762,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4365:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4369:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4365:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 764,
																		"name": "permit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 731,
																		"src": "4377:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PermitTransferFrom_$271_memory_ptr",
																			"typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
																		}
																	},
																	"id": 765,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4384:5:5",
																	"memberName": "nonce",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 268,
																	"src": "4377:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 766,
																		"name": "permit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 731,
																		"src": "4391:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PermitTransferFrom_$271_memory_ptr",
																			"typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
																		}
																	},
																	"id": 767,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4398:8:5",
																	"memberName": "deadline",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 270,
																	"src": "4391:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 768,
																	"name": "witness",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "4408:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 758,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4322:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4326:6:5",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "4322:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4322:94:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 757,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "4312:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4312:105:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 739,
												"id": 771,
												"nodeType": "Return",
												"src": "4305:112:5"
											}
										]
									},
									"id": 773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hashWithWitness",
									"nameLocation": "3911:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "permit",
												"nameLocation": "3981:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "3936:51:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitTransferFrom_$271_memory_ptr",
													"typeString": "struct ISignatureTransfer.PermitTransferFrom"
												},
												"typeName": {
													"id": 730,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 729,
														"name": "ISignatureTransfer.PermitTransferFrom",
														"nameLocations": [
															"3936:18:5",
															"3955:18:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 271,
														"src": "3936:37:5"
													},
													"referencedDeclaration": 271,
													"src": "3936:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitTransferFrom_$271_storage_ptr",
														"typeString": "struct ISignatureTransfer.PermitTransferFrom"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "witness",
												"nameLocation": "4005:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "3997:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 732,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3997:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "witnessTypeString",
												"nameLocation": "4038:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "4022:33:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 734,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4022:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3926:135:5"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "4085:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 737,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4085:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4084:9:5"
									},
									"scope": 891,
									"src": "3902:522:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "4627:712:5",
										"statements": [
											{
												"assignments": [
													786
												],
												"declarations": [
													{
														"constant": false,
														"id": 786,
														"mutability": "mutable",
														"name": "typeHash",
														"nameLocation": "4645:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 855,
														"src": "4637:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 785,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4637:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 794,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 790,
																	"name": "_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "4695:49:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 791,
																	"name": "witnessTypeString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "4746:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_calldata_ptr",
																		"typeString": "string calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_calldata_ptr",
																		"typeString": "string calldata"
																	}
																],
																"expression": {
																	"id": 788,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4678:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4682:12:5",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "4678:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4678:86:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 787,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "4668:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4668:97:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4637:128:5"
											},
											{
												"assignments": [
													796
												],
												"declarations": [
													{
														"constant": false,
														"id": 796,
														"mutability": "mutable",
														"name": "numPermitted",
														"nameLocation": "4784:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 855,
														"src": "4776:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 795,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4776:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 800,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 797,
															"name": "permit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "4799:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_memory_ptr",
																"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom memory"
															}
														},
														"id": 798,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4806:9:5",
														"memberName": "permitted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 282,
														"src": "4799:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_TokenPermissions_$262_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct ISignatureTransfer.TokenPermissions memory[] memory"
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4816:6:5",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4799:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4776:46:5"
											},
											{
												"assignments": [
													805
												],
												"declarations": [
													{
														"constant": false,
														"id": 805,
														"mutability": "mutable",
														"name": "tokenPermissionHashes",
														"nameLocation": "4849:21:5",
														"nodeType": "VariableDeclaration",
														"scope": 855,
														"src": "4832:38:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 803,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "4832:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 804,
															"nodeType": "ArrayTypeName",
															"src": "4832:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 811,
												"initialValue": {
													"arguments": [
														{
															"id": 809,
															"name": "numPermitted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "4887:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "4873:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes32[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 806,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "4877:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 807,
															"nodeType": "ArrayTypeName",
															"src": "4877:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4832:68:5"
											},
											{
												"body": {
													"id": 833,
													"nodeType": "Block",
													"src": "4954:94:5",
													"statements": [
														{
															"expression": {
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 822,
																		"name": "tokenPermissionHashes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "4968:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																			"typeString": "bytes32[] memory"
																		}
																	},
																	"id": 824,
																	"indexExpression": {
																		"id": 823,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 813,
																		"src": "4990:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4968:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"expression": {
																					"id": 826,
																					"name": "permit",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 776,
																					"src": "5017:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_memory_ptr",
																						"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom memory"
																					}
																				},
																				"id": 827,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5024:9:5",
																				"memberName": "permitted",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 282,
																				"src": "5017:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_TokenPermissions_$262_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct ISignatureTransfer.TokenPermissions memory[] memory"
																				}
																			},
																			"id": 829,
																			"indexExpression": {
																				"id": 828,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 813,
																				"src": "5034:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5017:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenPermissions_$262_memory_ptr",
																				"typeString": "struct ISignatureTransfer.TokenPermissions memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_struct$_TokenPermissions_$262_memory_ptr",
																				"typeString": "struct ISignatureTransfer.TokenPermissions memory"
																			}
																		],
																		"id": 825,
																		"name": "_hashTokenPermissions",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 890,
																		"src": "4995:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_struct$_TokenPermissions_$262_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (struct ISignatureTransfer.TokenPermissions memory) pure returns (bytes32)"
																		}
																	},
																	"id": 830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4995:42:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "4968:69:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 832,
															"nodeType": "ExpressionStatement",
															"src": "4968:69:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 816,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "4931:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 817,
														"name": "numPermitted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "4935:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4931:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 834,
												"initializationExpression": {
													"assignments": [
														813
													],
													"declarations": [
														{
															"constant": false,
															"id": 813,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4924:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 834,
															"src": "4916:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 812,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4916:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 815,
													"initialValue": {
														"hexValue": "30",
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4928:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4916:13:5"
												},
												"loopExpression": {
													"expression": {
														"id": 820,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "4949:3:5",
														"subExpression": {
															"id": 819,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "4951:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 821,
													"nodeType": "ExpressionStatement",
													"src": "4949:3:5"
												},
												"nodeType": "ForStatement",
												"src": "4911:137:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 838,
																	"name": "typeHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 786,
																	"src": "5116:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 842,
																					"name": "tokenPermissionHashes",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 805,
																					"src": "5169:21:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				],
																				"expression": {
																					"id": 840,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "5152:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 841,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "5156:12:5",
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "5152:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 843,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5152:39:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 839,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "5142:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5142:50:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 845,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5210:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5214:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5210:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 847,
																		"name": "permit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 776,
																		"src": "5238:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_memory_ptr",
																			"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom memory"
																		}
																	},
																	"id": 848,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5245:5:5",
																	"memberName": "nonce",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 284,
																	"src": "5238:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 849,
																		"name": "permit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 776,
																		"src": "5268:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_memory_ptr",
																			"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom memory"
																		}
																	},
																	"id": 850,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5275:8:5",
																	"memberName": "deadline",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 286,
																	"src": "5268:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 851,
																	"name": "witness",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 778,
																	"src": "5301:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 836,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "5088:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5092:6:5",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "5088:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:234:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 835,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "5065:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5065:267:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 784,
												"id": 854,
												"nodeType": "Return",
												"src": "5058:274:5"
											}
										]
									},
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hashWithWitness",
									"nameLocation": "4439:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "permit",
												"nameLocation": "4514:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "4464:56:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_memory_ptr",
													"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom"
												},
												"typeName": {
													"id": 775,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 774,
														"name": "ISignatureTransfer.PermitBatchTransferFrom",
														"nameLocations": [
															"4464:18:5",
															"4483:23:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 287,
														"src": "4464:42:5"
													},
													"referencedDeclaration": 287,
													"src": "4464:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_storage_ptr",
														"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "witness",
												"nameLocation": "4538:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "4530:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 777,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4530:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "witnessTypeString",
												"nameLocation": "4571:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "4555:33:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 779,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4555:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4454:140:5"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "4618:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 782,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4618:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4617:9:5"
									},
									"scope": 891,
									"src": "4430:909:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "5453:80:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 867,
																	"name": "_PERMIT_DETAILS_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "5491:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 868,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 859,
																	"src": "5517:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PermitDetails_$79_memory_ptr",
																		"typeString": "struct IAllowanceTransfer.PermitDetails memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_struct$_PermitDetails_$79_memory_ptr",
																		"typeString": "struct IAllowanceTransfer.PermitDetails memory"
																	}
																],
																"expression": {
																	"id": 865,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "5480:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5484:6:5",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "5480:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5480:45:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 864,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "5470:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5470:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 863,
												"id": 871,
												"nodeType": "Return",
												"src": "5463:63:5"
											}
										]
									},
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashPermitDetails",
									"nameLocation": "5354:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "details",
												"nameLocation": "5413:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "5373:47:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitDetails_$79_memory_ptr",
													"typeString": "struct IAllowanceTransfer.PermitDetails"
												},
												"typeName": {
													"id": 858,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 857,
														"name": "IAllowanceTransfer.PermitDetails",
														"nameLocations": [
															"5373:18:5",
															"5392:13:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 79,
														"src": "5373:32:5"
													},
													"referencedDeclaration": 79,
													"src": "5373:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitDetails_$79_storage_ptr",
														"typeString": "struct IAllowanceTransfer.PermitDetails"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5372:49:5"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "5444:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 861,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5444:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5443:9:5"
									},
									"scope": 891,
									"src": "5345:188:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 889,
										"nodeType": "Block",
										"src": "5683:85:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 884,
																	"name": "_TOKEN_PERMISSIONS_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 517,
																	"src": "5721:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 885,
																	"name": "permitted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 876,
																	"src": "5750:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenPermissions_$262_memory_ptr",
																		"typeString": "struct ISignatureTransfer.TokenPermissions memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_struct$_TokenPermissions_$262_memory_ptr",
																		"typeString": "struct ISignatureTransfer.TokenPermissions memory"
																	}
																],
																"expression": {
																	"id": 882,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "5710:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5714:6:5",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "5710:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5710:50:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 881,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "5700:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:61:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 880,
												"id": 888,
												"nodeType": "Return",
												"src": "5693:68:5"
											}
										]
									},
									"id": 890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashTokenPermissions",
									"nameLocation": "5548:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "permitted",
												"nameLocation": "5613:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "5570:52:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenPermissions_$262_memory_ptr",
													"typeString": "struct ISignatureTransfer.TokenPermissions"
												},
												"typeName": {
													"id": 875,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 874,
														"name": "ISignatureTransfer.TokenPermissions",
														"nameLocations": [
															"5570:18:5",
															"5589:16:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 262,
														"src": "5570:35:5"
													},
													"referencedDeclaration": 262,
													"src": "5570:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenPermissions_$262_storage_ptr",
														"typeString": "struct ISignatureTransfer.TokenPermissions"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5569:54:5"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "5670:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 878,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5670:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5669:9:5"
									},
									"scope": 891,
									"src": "5539:229:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 892,
							"src": "205:5565:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:5739:5"
				},
				"id": 5
			},
			"contracts/contracts/lib/SignatureVerification.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/lib/SignatureVerification.sol",
					"exportedSymbols": {
						"IERC1271": [
							232
						],
						"SignatureVerification": [
							1060
						]
					},
					"id": 1061,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 893,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "contracts/contracts/interfaces/IERC1271.sol",
							"file": "../interfaces/IERC1271.sol",
							"id": 895,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1061,
							"sourceUnit": 233,
							"src": "58:52:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 894,
										"name": "IERC1271",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 232,
										"src": "66:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignatureVerification",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1060,
							"linearizedBaseContracts": [
								1060
							],
							"name": "SignatureVerification",
							"nameLocation": "120:21:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "148:69:6",
										"text": "@notice Thrown when the passed in signature is not a valid length"
									},
									"errorSelector": "4be6321b",
									"id": 898,
									"name": "InvalidSignatureLength",
									"nameLocation": "228:22:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "250:2:6"
									},
									"src": "222:31:6"
								},
								{
									"documentation": {
										"id": 899,
										"nodeType": "StructuredDocumentation",
										"src": "259:73:6",
										"text": "@notice Thrown when the recovered signer is equal to the zero address"
									},
									"errorSelector": "8baa579f",
									"id": 901,
									"name": "InvalidSignature",
									"nameLocation": "343:16:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "359:2:6"
									},
									"src": "337:25:6"
								},
								{
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "368:77:6",
										"text": "@notice Thrown when the recovered signer does not equal the claimedSigner"
									},
									"errorSelector": "815e1d64",
									"id": 904,
									"name": "InvalidSigner",
									"nameLocation": "456:13:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "469:2:6"
									},
									"src": "450:22:6"
								},
								{
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "478:69:6",
										"text": "@notice Thrown when the recovered contract signature is incorrect"
									},
									"errorSelector": "b0669cbc",
									"id": 907,
									"name": "InvalidContractSignature",
									"nameLocation": "558:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "582:2:6"
									},
									"src": "552:33:6"
								},
								{
									"constant": true,
									"id": 911,
									"mutability": "constant",
									"name": "UPPER_BIT_MASK",
									"nameLocation": "608:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1060,
									"src": "591:102:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 908,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "591:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
												"id": 909,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "626:66:6",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
													"typeString": "int_const 5789...(69 digits omitted)...9967"
												},
												"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
											}
										],
										"id": 910,
										"isConstant": false,
										"isInlineArray": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "625:68:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9967"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1058,
										"nodeType": "Block",
										"src": "793:1016:6",
										"statements": [
											{
												"assignments": [
													921
												],
												"declarations": [
													{
														"constant": false,
														"id": 921,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "811:1:6",
														"nodeType": "VariableDeclaration",
														"scope": 1058,
														"src": "803:9:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 920,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "803:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 922,
												"nodeType": "VariableDeclarationStatement",
												"src": "803:9:6"
											},
											{
												"assignments": [
													924
												],
												"declarations": [
													{
														"constant": false,
														"id": 924,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "830:1:6",
														"nodeType": "VariableDeclaration",
														"scope": 1058,
														"src": "822:9:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 923,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "822:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 925,
												"nodeType": "VariableDeclarationStatement",
												"src": "822:9:6"
											},
											{
												"assignments": [
													927
												],
												"declarations": [
													{
														"constant": false,
														"id": 927,
														"mutability": "mutable",
														"name": "v",
														"nameLocation": "847:1:6",
														"nodeType": "VariableDeclaration",
														"scope": 1058,
														"src": "841:7:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 926,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "841:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 928,
												"nodeType": "VariableDeclarationStatement",
												"src": "841:7:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 929,
																"name": "claimedSigner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 917,
																"src": "863:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "877:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "863:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "882:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "863:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 932,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "892:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "863:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1056,
													"nodeType": "Block",
													"src": "1600:203:6",
													"statements": [
														{
															"assignments": [
																1038
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1038,
																	"mutability": "mutable",
																	"name": "magicValue",
																	"nameLocation": "1621:10:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1056,
																	"src": "1614:17:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 1037,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "1614:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1046,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1043,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 915,
																		"src": "1675:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1044,
																		"name": "signature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 913,
																		"src": "1681:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1040,
																				"name": "claimedSigner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 917,
																				"src": "1643:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1039,
																			"name": "IERC1271",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 232,
																			"src": "1634:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1271_$232_$",
																				"typeString": "type(contract IERC1271)"
																			}
																		},
																		"id": 1041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1634:23:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1271_$232",
																			"typeString": "contract IERC1271"
																		}
																	},
																	"id": 1042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1658:16:6",
																	"memberName": "isValidSignature",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 231,
																	"src": "1634:40:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (bytes32,bytes memory) view external returns (bytes4)"
																	}
																},
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1634:57:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1614:77:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																},
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1047,
																	"name": "magicValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1038,
																	"src": "1709:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"id": 1048,
																			"name": "IERC1271",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 232,
																			"src": "1723:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1271_$232_$",
																				"typeString": "type(contract IERC1271)"
																			}
																		},
																		"id": 1049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1732:16:6",
																		"memberName": "isValidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 231,
																		"src": "1723:25:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																			"typeString": "function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"
																		}
																	},
																	"id": 1050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1749:8:6",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1723:34:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"src": "1709:48:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1055,
															"nodeType": "IfStatement",
															"src": "1705:87:6",
															"trueBody": {
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1052,
																		"name": "InvalidContractSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 907,
																		"src": "1766:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1766:26:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1054,
																"nodeType": "RevertStatement",
																"src": "1759:33:6"
															}
														}
													]
												},
												"id": 1057,
												"nodeType": "IfStatement",
												"src": "859:944:6",
												"trueBody": {
													"id": 1036,
													"nodeType": "Block",
													"src": "895:699:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 934,
																		"name": "signature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 913,
																		"src": "913:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	},
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "923:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "913:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "3635",
																	"id": 936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "933:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_65_by_1",
																		"typeString": "int_const 65"
																	},
																	"value": "65"
																},
																"src": "913:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 962,
																			"name": "signature",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 913,
																			"src": "1072:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		},
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1082:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "1072:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "3634",
																		"id": 964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1092:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	"src": "1072:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 1007,
																	"nodeType": "Block",
																	"src": "1335:64:6",
																	"statements": [
																		{
																			"errorCall": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1004,
																					"name": "InvalidSignatureLength",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 898,
																					"src": "1360:22:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_error_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 1005,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1360:24:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 1006,
																			"nodeType": "RevertStatement",
																			"src": "1353:31:6"
																		}
																	]
																},
																"id": 1008,
																"nodeType": "IfStatement",
																"src": "1068:331:6",
																"trueBody": {
																	"id": 1003,
																	"nodeType": "Block",
																	"src": "1096:233:6",
																	"statements": [
																		{
																			"assignments": [
																				967
																			],
																			"declarations": [
																				{
																					"constant": false,
																					"id": 967,
																					"mutability": "mutable",
																					"name": "vs",
																					"nameLocation": "1150:2:6",
																					"nodeType": "VariableDeclaration",
																					"scope": 1003,
																					"src": "1142:10:6",
																					"stateVariable": false,
																					"storageLocation": "default",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					"typeName": {
																						"id": 966,
																						"name": "bytes32",
																						"nodeType": "ElementaryTypeName",
																						"src": "1142:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"visibility": "internal"
																				}
																			],
																			"id": 968,
																			"nodeType": "VariableDeclarationStatement",
																			"src": "1142:10:6"
																		},
																		{
																			"expression": {
																				"id": 981,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"components": [
																						{
																							"id": 969,
																							"name": "r",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 921,
																							"src": "1171:1:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						{
																							"id": 970,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 967,
																							"src": "1174:2:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"id": 971,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"nodeType": "TupleExpression",
																					"src": "1170:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
																						"typeString": "tuple(bytes32,bytes32)"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"arguments": [
																						{
																							"id": 974,
																							"name": "signature",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 913,
																							"src": "1191:9:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_calldata_ptr",
																								"typeString": "bytes calldata"
																							}
																						},
																						{
																							"components": [
																								{
																									"id": 976,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "1203:7:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_bytes32_$",
																										"typeString": "type(bytes32)"
																									},
																									"typeName": {
																										"id": 975,
																										"name": "bytes32",
																										"nodeType": "ElementaryTypeName",
																										"src": "1203:7:6",
																										"typeDescriptions": {}
																									}
																								},
																								{
																									"id": 978,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "1212:7:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_bytes32_$",
																										"typeString": "type(bytes32)"
																									},
																									"typeName": {
																										"id": 977,
																										"name": "bytes32",
																										"nodeType": "ElementaryTypeName",
																										"src": "1212:7:6",
																										"typeDescriptions": {}
																									}
																								}
																							],
																							"id": 979,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "1202:18:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_bytes32_$_$",
																								"typeString": "tuple(type(bytes32),type(bytes32))"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes_calldata_ptr",
																								"typeString": "bytes calldata"
																							},
																							{
																								"typeIdentifier": "t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_bytes32_$_$",
																								"typeString": "tuple(type(bytes32),type(bytes32))"
																							}
																						],
																						"expression": {
																							"id": 972,
																							"name": "abi",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967295,
																							"src": "1180:3:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_abi",
																								"typeString": "abi"
																							}
																						},
																						"id": 973,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "1184:6:6",
																						"memberName": "decode",
																						"nodeType": "MemberAccess",
																						"src": "1180:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 980,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1180:41:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
																						"typeString": "tuple(bytes32,bytes32)"
																					}
																				},
																				"src": "1170:51:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 982,
																			"nodeType": "ExpressionStatement",
																			"src": "1170:51:6"
																		},
																		{
																			"expression": {
																				"id": 987,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 983,
																					"name": "s",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 924,
																					"src": "1239:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					"id": 986,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 984,
																						"name": "vs",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 967,
																						"src": "1243:2:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "&",
																					"rightExpression": {
																						"id": 985,
																						"name": "UPPER_BIT_MASK",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 911,
																						"src": "1248:14:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"src": "1243:19:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"src": "1239:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"id": 988,
																			"nodeType": "ExpressionStatement",
																			"src": "1239:23:6"
																		},
																		{
																			"expression": {
																				"id": 1001,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 989,
																					"name": "v",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 927,
																					"src": "1280:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					},
																					"id": 1000,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										},
																										"id": 996,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 994,
																											"name": "vs",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 967,
																											"src": "1298:2:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bytes32",
																												"typeString": "bytes32"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": ">>",
																										"rightExpression": {
																											"hexValue": "323535",
																											"id": 995,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "1304:3:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_255_by_1",
																												"typeString": "int_const 255"
																											},
																											"value": "255"
																										},
																										"src": "1298:9:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 993,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "1290:7:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 992,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "1290:7:6",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 997,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1290:18:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 991,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1284:5:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint8_$",
																								"typeString": "type(uint8)"
																							},
																							"typeName": {
																								"id": 990,
																								"name": "uint8",
																								"nodeType": "ElementaryTypeName",
																								"src": "1284:5:6",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 998,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1284:25:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "3237",
																						"id": 999,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1312:2:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_27_by_1",
																							"typeString": "int_const 27"
																						},
																						"value": "27"
																					},
																					"src": "1284:30:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "1280:34:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"id": 1002,
																			"nodeType": "ExpressionStatement",
																			"src": "1280:34:6"
																		}
																	]
																}
															},
															"id": 1009,
															"nodeType": "IfStatement",
															"src": "909:490:6",
															"trueBody": {
																"id": 961,
																"nodeType": "Block",
																"src": "937:125:6",
																"statements": [
																	{
																		"expression": {
																			"id": 950,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"components": [
																					{
																						"id": 938,
																						"name": "r",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 921,
																						"src": "956:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					{
																						"id": 939,
																						"name": "s",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 924,
																						"src": "959:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"id": 940,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "TupleExpression",
																				"src": "955:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
																					"typeString": "tuple(bytes32,bytes32)"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 943,
																						"name": "signature",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 913,
																						"src": "975:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_calldata_ptr",
																							"typeString": "bytes calldata"
																						}
																					},
																					{
																						"components": [
																							{
																								"id": 945,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "987:7:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_bytes32_$",
																									"typeString": "type(bytes32)"
																								},
																								"typeName": {
																									"id": 944,
																									"name": "bytes32",
																									"nodeType": "ElementaryTypeName",
																									"src": "987:7:6",
																									"typeDescriptions": {}
																								}
																							},
																							{
																								"id": 947,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "996:7:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_bytes32_$",
																									"typeString": "type(bytes32)"
																								},
																								"typeName": {
																									"id": 946,
																									"name": "bytes32",
																									"nodeType": "ElementaryTypeName",
																									"src": "996:7:6",
																									"typeDescriptions": {}
																								}
																							}
																						],
																						"id": 948,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "986:18:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_bytes32_$_$",
																							"typeString": "tuple(type(bytes32),type(bytes32))"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_calldata_ptr",
																							"typeString": "bytes calldata"
																						},
																						{
																							"typeIdentifier": "t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_bytes32_$_$",
																							"typeString": "tuple(type(bytes32),type(bytes32))"
																						}
																					],
																					"expression": {
																						"id": 941,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "964:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 942,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "968:6:6",
																					"memberName": "decode",
																					"nodeType": "MemberAccess",
																					"src": "964:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 949,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "964:41:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
																					"typeString": "tuple(bytes32,bytes32)"
																				}
																			},
																			"src": "955:50:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 951,
																		"nodeType": "ExpressionStatement",
																		"src": "955:50:6"
																	},
																	{
																		"expression": {
																			"id": 959,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 952,
																				"name": "v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 927,
																				"src": "1023:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"baseExpression": {
																							"id": 955,
																							"name": "signature",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 913,
																							"src": "1033:9:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_calldata_ptr",
																								"typeString": "bytes calldata"
																							}
																						},
																						"id": 957,
																						"indexExpression": {
																							"hexValue": "3634",
																							"id": 956,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1043:2:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_64_by_1",
																								"typeString": "int_const 64"
																							},
																							"value": "64"
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "1033:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes1",
																							"typeString": "bytes1"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes1",
																							"typeString": "bytes1"
																						}
																					],
																					"id": 954,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1027:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 953,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "1027:5:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 958,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1027:20:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "1023:24:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"id": 960,
																		"nodeType": "ExpressionStatement",
																		"src": "1023:24:6"
																	}
																]
															}
														},
														{
															"assignments": [
																1011
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1011,
																	"mutability": "mutable",
																	"name": "signer",
																	"nameLocation": "1420:6:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1036,
																	"src": "1412:14:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1010,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1412:7:6",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1018,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1013,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 915,
																		"src": "1439:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1014,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 927,
																		"src": "1445:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 1015,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 921,
																		"src": "1448:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1016,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 924,
																		"src": "1451:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1012,
																	"name": "ecrecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967290,
																	"src": "1429:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
																	}
																},
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1429:24:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1412:41:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1019,
																	"name": "signer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1011,
																	"src": "1471:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1022,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1489:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1021,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1481:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1020,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1481:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1481:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1471:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1028,
															"nodeType": "IfStatement",
															"src": "1467:51:6",
															"trueBody": {
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1025,
																		"name": "InvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 901,
																		"src": "1500:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1500:18:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1027,
																"nodeType": "RevertStatement",
																"src": "1493:25:6"
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1029,
																	"name": "signer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1011,
																	"src": "1536:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1030,
																	"name": "claimedSigner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "1546:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1536:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1035,
															"nodeType": "IfStatement",
															"src": "1532:51:6",
															"trueBody": {
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1032,
																		"name": "InvalidSigner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 904,
																		"src": "1568:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1568:15:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1034,
																"nodeType": "RevertStatement",
																"src": "1561:22:6"
															}
														}
													]
												}
											}
										]
									},
									"id": 1059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verify",
									"nameLocation": "709:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "731:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "716:24:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 912,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "716:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "750:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "742:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 914,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "742:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "claimedSigner",
												"nameLocation": "764:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "756:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "756:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "715:63:6"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "793:0:6"
									},
									"scope": 1060,
									"src": "700:1109:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1061,
							"src": "112:1699:6",
							"usedErrors": [
								898,
								901,
								904,
								907
							],
							"usedEvents": []
						}
					],
					"src": "32:1780:6"
				},
				"id": 6
			},
			"contracts/contracts/permit2/AllowanceTransfer.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/permit2/AllowanceTransfer.sol",
					"exportedSymbols": {
						"Allowance": [
							491
						],
						"AllowanceTransfer": [
							1609
						],
						"EIP712": [
							1710
						],
						"ERC20": [
							2558
						],
						"IAllowanceTransfer": [
							211
						],
						"InvalidNonce": [
							1732
						],
						"PermitHash": [
							891
						],
						"SafeTransferLib": [
							2643
						],
						"SignatureExpired": [
							1729
						],
						"SignatureVerification": [
							1060
						]
					},
					"id": 1610,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1062,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:7"
						},
						{
							"absolutePath": "solmate/src/tokens/ERC20.sol",
							"file": "solmate/src/tokens/ERC20.sol",
							"id": 1064,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1610,
							"sourceUnit": 2559,
							"src": "57:51:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1063,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2558,
										"src": "65:5:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "solmate/src/utils/SafeTransferLib.sol",
							"file": "solmate/src/utils/SafeTransferLib.sol",
							"id": 1066,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1610,
							"sourceUnit": 2644,
							"src": "109:70:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1065,
										"name": "SafeTransferLib",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2643,
										"src": "117:15:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/lib/PermitHash.sol",
							"file": "../lib/PermitHash.sol",
							"id": 1068,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1610,
							"sourceUnit": 892,
							"src": "180:49:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1067,
										"name": "PermitHash",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 891,
										"src": "188:10:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/lib/SignatureVerification.sol",
							"file": "../lib/SignatureVerification.sol",
							"id": 1070,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1610,
							"sourceUnit": 1061,
							"src": "230:71:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1069,
										"name": "SignatureVerification",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1060,
										"src": "238:21:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/permit2/EIP712.sol",
							"file": "./EIP712.sol",
							"id": 1072,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1610,
							"sourceUnit": 1711,
							"src": "302:36:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1071,
										"name": "EIP712",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1710,
										"src": "310:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/interfaces/IAllowanceTransfer.sol",
							"file": "../interfaces/IAllowanceTransfer.sol",
							"id": 1074,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1610,
							"sourceUnit": 212,
							"src": "339:72:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1073,
										"name": "IAllowanceTransfer",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 211,
										"src": "347:18:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/permit2/PermitErrors.sol",
							"file": "./PermitErrors.sol",
							"id": 1077,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1610,
							"sourceUnit": 1733,
							"src": "412:66:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1075,
										"name": "SignatureExpired",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1729,
										"src": "420:16:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 1076,
										"name": "InvalidNonce",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1732,
										"src": "438:12:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/lib/Allowance.sol",
							"file": "../lib/Allowance.sol",
							"id": 1079,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1610,
							"sourceUnit": 492,
							"src": "479:47:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1078,
										"name": "Allowance",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 491,
										"src": "487:9:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1080,
										"name": "IAllowanceTransfer",
										"nameLocations": [
											"558:18:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 211,
										"src": "558:18:7"
									},
									"id": 1081,
									"nodeType": "InheritanceSpecifier",
									"src": "558:18:7"
								},
								{
									"baseName": {
										"id": 1082,
										"name": "EIP712",
										"nameLocations": [
											"578:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1710,
										"src": "578:6:7"
									},
									"id": 1083,
									"nodeType": "InheritanceSpecifier",
									"src": "578:6:7"
								}
							],
							"canonicalName": "AllowanceTransfer",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1609,
							"linearizedBaseContracts": [
								1609,
								1710,
								211,
								219
							],
							"name": "AllowanceTransfer",
							"nameLocation": "537:17:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1086,
									"libraryName": {
										"id": 1084,
										"name": "SignatureVerification",
										"nameLocations": [
											"597:21:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1060,
										"src": "597:21:7"
									},
									"nodeType": "UsingForDirective",
									"src": "591:38:7",
									"typeName": {
										"id": 1085,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "623:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									}
								},
								{
									"global": false,
									"id": 1090,
									"libraryName": {
										"id": 1087,
										"name": "SafeTransferLib",
										"nameLocations": [
											"640:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2643,
										"src": "640:15:7"
									},
									"nodeType": "UsingForDirective",
									"src": "634:32:7",
									"typeName": {
										"id": 1089,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1088,
											"name": "ERC20",
											"nameLocations": [
												"660:5:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2558,
											"src": "660:5:7"
										},
										"referencedDeclaration": 2558,
										"src": "660:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$2558",
											"typeString": "contract ERC20"
										}
									}
								},
								{
									"global": false,
									"id": 1094,
									"libraryName": {
										"id": 1091,
										"name": "PermitHash",
										"nameLocations": [
											"677:10:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 891,
										"src": "677:10:7"
									},
									"nodeType": "UsingForDirective",
									"src": "671:34:7",
									"typeName": {
										"id": 1093,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1092,
											"name": "PermitSingle",
											"nameLocations": [
												"692:12:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 88,
											"src": "692:12:7"
										},
										"referencedDeclaration": 88,
										"src": "692:12:7",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_PermitSingle_$88_storage_ptr",
											"typeString": "struct IAllowanceTransfer.PermitSingle"
										}
									}
								},
								{
									"global": false,
									"id": 1098,
									"libraryName": {
										"id": 1095,
										"name": "PermitHash",
										"nameLocations": [
											"716:10:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 891,
										"src": "716:10:7"
									},
									"nodeType": "UsingForDirective",
									"src": "710:33:7",
									"typeName": {
										"id": 1097,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1096,
											"name": "PermitBatch",
											"nameLocations": [
												"731:11:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 98,
											"src": "731:11:7"
										},
										"referencedDeclaration": 98,
										"src": "731:11:7",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_PermitBatch_$98_storage_ptr",
											"typeString": "struct IAllowanceTransfer.PermitBatch"
										}
									}
								},
								{
									"global": false,
									"id": 1102,
									"libraryName": {
										"id": 1099,
										"name": "Allowance",
										"nameLocations": [
											"754:9:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 491,
										"src": "754:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "748:36:7",
									"typeName": {
										"id": 1101,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1100,
											"name": "PackedAllowance",
											"nameLocations": [
												"768:15:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 106,
											"src": "768:15:7"
										},
										"referencedDeclaration": 106,
										"src": "768:15:7",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_PackedAllowance_$106_storage_ptr",
											"typeString": "struct IAllowanceTransfer.PackedAllowance"
										}
									}
								},
								{
									"baseFunctions": [
										138
									],
									"constant": false,
									"documentation": {
										"id": 1103,
										"nodeType": "StructuredDocumentation",
										"src": "790:284:7",
										"text": "@notice Maps users to tokens to spender addresses and information about the approval on the token\n @dev Indexed in the order of token owner address, token address, spender address\n @dev The stored word saves the allowed amount, expiration on the allowance, and nonce"
									},
									"functionSelector": "927da105",
									"id": 1112,
									"mutability": "mutable",
									"name": "allowance",
									"nameLocation": "1162:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1609,
									"src": "1079:92:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_PackedAllowance_$106_storage_$_$_$",
										"typeString": "mapping(address => mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance)))"
									},
									"typeName": {
										"id": 1111,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1104,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1087:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1079:75:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_PackedAllowance_$106_storage_$_$_$",
											"typeString": "mapping(address => mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance)))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1110,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1105,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1106:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1098:55:7",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_PackedAllowance_$106_storage_$_$",
												"typeString": "mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance))"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1109,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1117:35:7",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PackedAllowance_$106_storage_$",
													"typeString": "mapping(address => struct IAllowanceTransfer.PackedAllowance)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1108,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1107,
														"name": "PackedAllowance",
														"nameLocations": [
															"1136:15:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 106,
														"src": "1136:15:7"
													},
													"referencedDeclaration": 106,
													"src": "1136:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PackedAllowance_$106_storage_ptr",
														"typeString": "struct IAllowanceTransfer.PackedAllowance"
													}
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										150
									],
									"body": {
										"id": 1152,
										"nodeType": "Block",
										"src": "1310:222:7",
										"statements": [
											{
												"assignments": [
													1126
												],
												"declarations": [
													{
														"constant": false,
														"id": 1126,
														"mutability": "mutable",
														"name": "allowed",
														"nameLocation": "1344:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1152,
														"src": "1320:31:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PackedAllowance_$106_storage_ptr",
															"typeString": "struct IAllowanceTransfer.PackedAllowance"
														},
														"typeName": {
															"id": 1125,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1124,
																"name": "PackedAllowance",
																"nameLocations": [
																	"1320:15:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 106,
																"src": "1320:15:7"
															},
															"referencedDeclaration": 106,
															"src": "1320:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PackedAllowance_$106_storage_ptr",
																"typeString": "struct IAllowanceTransfer.PackedAllowance"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1135,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1127,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "1354:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_PackedAllowance_$106_storage_$_$_$",
																	"typeString": "mapping(address => mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref)))"
																}
															},
															"id": 1130,
															"indexExpression": {
																"expression": {
																	"id": 1128,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1364:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1368:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1364:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1354:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_PackedAllowance_$106_storage_$_$",
																"typeString": "mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref))"
															}
														},
														"id": 1132,
														"indexExpression": {
															"id": 1131,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "1376:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1354:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PackedAllowance_$106_storage_$",
															"typeString": "mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref)"
														}
													},
													"id": 1134,
													"indexExpression": {
														"id": 1133,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "1383:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1354:37:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PackedAllowance_$106_storage",
														"typeString": "struct IAllowanceTransfer.PackedAllowance storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1320:71:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1139,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "1435:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"id": 1140,
															"name": "expiration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "1443:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														],
														"expression": {
															"id": 1136,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "1401:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PackedAllowance_$106_storage_ptr",
																"typeString": "struct IAllowanceTransfer.PackedAllowance storage pointer"
															}
														},
														"id": 1138,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1409:25:7",
														"memberName": "updateAmountAndExpiration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 458,
														"src": "1401:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_PackedAllowance_$106_storage_ptr_$_t_uint160_$_t_uint48_$returns$__$attached_to$_t_struct$_PackedAllowance_$106_storage_ptr_$",
															"typeString": "function (struct IAllowanceTransfer.PackedAllowance storage pointer,uint160,uint48)"
														}
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1401:53:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1142,
												"nodeType": "ExpressionStatement",
												"src": "1401:53:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1144,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1478:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1482:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1478:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1146,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "1490:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1147,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "1497:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1148,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "1506:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"id": 1149,
															"name": "expiration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "1514:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														],
														"id": 1143,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "1469:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint160_$_t_uint48_$returns$__$",
															"typeString": "function (address,address,address,uint160,uint48)"
														}
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1469:56:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1151,
												"nodeType": "EmitStatement",
												"src": "1464:61:7"
											}
										]
									},
									"documentation": {
										"id": 1113,
										"nodeType": "StructuredDocumentation",
										"src": "1178:34:7",
										"text": "@inheritdoc IAllowanceTransfer"
									},
									"functionSelector": "87517c45",
									"id": 1153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1226:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1242:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "1234:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1257:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "1249:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1249:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1274:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "1266:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1118,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1266:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "expiration",
												"nameLocation": "1289:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "1282:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 1120,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1282:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1233:67:7"
									},
									"returnParameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1310:0:7"
									},
									"scope": 1609,
									"src": "1217:315:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										161
									],
									"body": {
										"id": 1194,
										"nodeType": "Block",
										"src": "1677:319:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1164,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1691:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1697:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1691:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1166,
															"name": "permitSingle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "1709:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PermitSingle_$88_memory_ptr",
																"typeString": "struct IAllowanceTransfer.PermitSingle memory"
															}
														},
														"id": 1167,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1722:11:7",
														"memberName": "sigDeadline",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 87,
														"src": "1709:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1691:42:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1174,
												"nodeType": "IfStatement",
												"src": "1687:97:7",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"expression": {
																	"id": 1170,
																	"name": "permitSingle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1159,
																	"src": "1759:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PermitSingle_$88_memory_ptr",
																		"typeString": "struct IAllowanceTransfer.PermitSingle memory"
																	}
																},
																"id": 1171,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1772:11:7",
																"memberName": "sigDeadline",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 87,
																"src": "1759:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1169,
															"name": "SignatureExpired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "1742:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 1172,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1742:42:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1173,
													"nodeType": "RevertStatement",
													"src": "1735:49:7"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 1179,
																			"name": "permitSingle",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1159,
																			"src": "1884:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PermitSingle_$88_memory_ptr",
																				"typeString": "struct IAllowanceTransfer.PermitSingle memory"
																			}
																		},
																		"id": 1180,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1897:4:7",
																		"memberName": "hash",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 564,
																		"src": "1884:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_struct$_PermitSingle_$88_memory_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_PermitSingle_$88_memory_ptr_$",
																			"typeString": "function (struct IAllowanceTransfer.PermitSingle memory) pure returns (bytes32)"
																		}
																	},
																	"id": 1181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1884:19:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 1178,
																"name": "_hashTypedData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1709,
																"src": "1869:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
																	"typeString": "function (bytes32) view returns (bytes32)"
																}
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1869:35:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1183,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "1906:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1175,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "1852:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														"id": 1177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1862:6:7",
														"memberName": "verify",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1059,
														"src": "1852:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes_calldata_ptr_$_t_bytes32_$_t_address_$returns$__$attached_to$_t_bytes_calldata_ptr_$",
															"typeString": "function (bytes calldata,bytes32,address) view"
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1852:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1185,
												"nodeType": "ExpressionStatement",
												"src": "1852:60:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1187,
																"name": "permitSingle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "1939:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PermitSingle_$88_memory_ptr",
																	"typeString": "struct IAllowanceTransfer.PermitSingle memory"
																}
															},
															"id": 1188,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1952:7:7",
															"memberName": "details",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 83,
															"src": "1939:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PermitDetails_$79_memory_ptr",
																"typeString": "struct IAllowanceTransfer.PermitDetails memory"
															}
														},
														{
															"id": 1189,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "1961:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1190,
																"name": "permitSingle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "1968:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PermitSingle_$88_memory_ptr",
																	"typeString": "struct IAllowanceTransfer.PermitSingle memory"
																}
															},
															"id": 1191,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1981:7:7",
															"memberName": "spender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 85,
															"src": "1968:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PermitDetails_$79_memory_ptr",
																"typeString": "struct IAllowanceTransfer.PermitDetails memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1186,
														"name": "_updateApproval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1608,
														"src": "1923:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_PermitDetails_$79_memory_ptr_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (struct IAllowanceTransfer.PermitDetails memory,address,address)"
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1923:66:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1193,
												"nodeType": "ExpressionStatement",
												"src": "1923:66:7"
											}
										]
									},
									"documentation": {
										"id": 1154,
										"nodeType": "StructuredDocumentation",
										"src": "1538:34:7",
										"text": "@inheritdoc IAllowanceTransfer"
									},
									"functionSelector": "2b67b570",
									"id": 1195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1586:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1601:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "1593:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1593:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "permitSingle",
												"nameLocation": "1628:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "1608:32:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitSingle_$88_memory_ptr",
													"typeString": "struct IAllowanceTransfer.PermitSingle"
												},
												"typeName": {
													"id": 1158,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1157,
														"name": "PermitSingle",
														"nameLocations": [
															"1608:12:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 88,
														"src": "1608:12:7"
													},
													"referencedDeclaration": 88,
													"src": "1608:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitSingle_$88_storage_ptr",
														"typeString": "struct IAllowanceTransfer.PermitSingle"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "1657:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "1642:24:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1160,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1642:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:75:7"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1677:0:7"
									},
									"scope": 1609,
									"src": "1577:419:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										172
									],
									"body": {
										"id": 1261,
										"nodeType": "Block",
										"src": "2139:512:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1206,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2153:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2159:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2153:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1208,
															"name": "permitBatch",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "2171:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PermitBatch_$98_memory_ptr",
																"typeString": "struct IAllowanceTransfer.PermitBatch memory"
															}
														},
														"id": 1209,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2183:11:7",
														"memberName": "sigDeadline",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 97,
														"src": "2171:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2153:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1216,
												"nodeType": "IfStatement",
												"src": "2149:95:7",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"expression": {
																	"id": 1212,
																	"name": "permitBatch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1201,
																	"src": "2220:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PermitBatch_$98_memory_ptr",
																		"typeString": "struct IAllowanceTransfer.PermitBatch memory"
																	}
																},
																"id": 1213,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2232:11:7",
																"memberName": "sigDeadline",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 97,
																"src": "2220:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1211,
															"name": "SignatureExpired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "2203:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2203:41:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1215,
													"nodeType": "RevertStatement",
													"src": "2196:48:7"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 1221,
																			"name": "permitBatch",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1201,
																			"src": "2344:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PermitBatch_$98_memory_ptr",
																				"typeString": "struct IAllowanceTransfer.PermitBatch memory"
																			}
																		},
																		"id": 1222,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2356:4:7",
																		"memberName": "hash",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 630,
																		"src": "2344:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_struct$_PermitBatch_$98_memory_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_PermitBatch_$98_memory_ptr_$",
																			"typeString": "function (struct IAllowanceTransfer.PermitBatch memory) pure returns (bytes32)"
																		}
																	},
																	"id": 1223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2344:18:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 1220,
																"name": "_hashTypedData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1709,
																"src": "2329:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
																	"typeString": "function (bytes32) view returns (bytes32)"
																}
															},
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2329:34:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1225,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1198,
															"src": "2365:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1217,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "2312:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2322:6:7",
														"memberName": "verify",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1059,
														"src": "2312:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes_calldata_ptr_$_t_bytes32_$_t_address_$returns$__$attached_to$_t_bytes_calldata_ptr_$",
															"typeString": "function (bytes calldata,bytes32,address) view"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2312:59:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "2312:59:7"
											},
											{
												"assignments": [
													1229
												],
												"declarations": [
													{
														"constant": false,
														"id": 1229,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "2390:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1261,
														"src": "2382:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1228,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2382:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1232,
												"initialValue": {
													"expression": {
														"id": 1230,
														"name": "permitBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "2400:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PermitBatch_$98_memory_ptr",
															"typeString": "struct IAllowanceTransfer.PermitBatch memory"
														}
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2412:7:7",
													"memberName": "spender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 95,
													"src": "2400:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2382:37:7"
											},
											{
												"id": 1260,
												"nodeType": "UncheckedBlock",
												"src": "2429:216:7",
												"statements": [
													{
														"assignments": [
															1234
														],
														"declarations": [
															{
																"constant": false,
																"id": 1234,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "2461:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1260,
																"src": "2453:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1233,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2453:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1238,
														"initialValue": {
															"expression": {
																"expression": {
																	"id": 1235,
																	"name": "permitBatch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1201,
																	"src": "2470:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PermitBatch_$98_memory_ptr",
																		"typeString": "struct IAllowanceTransfer.PermitBatch memory"
																	}
																},
																"id": 1236,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2482:7:7",
																"memberName": "details",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 93,
																"src": "2470:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PermitDetails_$79_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct IAllowanceTransfer.PermitDetails memory[] memory"
																}
															},
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2490:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2470:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2453:43:7"
													},
													{
														"body": {
															"id": 1258,
															"nodeType": "Block",
															"src": "2547:88:7",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"baseExpression": {
																					"expression": {
																						"id": 1250,
																						"name": "permitBatch",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1201,
																						"src": "2581:11:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PermitBatch_$98_memory_ptr",
																							"typeString": "struct IAllowanceTransfer.PermitBatch memory"
																						}
																					},
																					"id": 1251,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2593:7:7",
																					"memberName": "details",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 93,
																					"src": "2581:19:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_PermitDetails_$79_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct IAllowanceTransfer.PermitDetails memory[] memory"
																					}
																				},
																				"id": 1253,
																				"indexExpression": {
																					"id": 1252,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1240,
																					"src": "2601:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2581:22:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PermitDetails_$79_memory_ptr",
																					"typeString": "struct IAllowanceTransfer.PermitDetails memory"
																				}
																			},
																			{
																				"id": 1254,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1198,
																				"src": "2605:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1255,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1229,
																				"src": "2612:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_struct$_PermitDetails_$79_memory_ptr",
																					"typeString": "struct IAllowanceTransfer.PermitDetails memory"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1249,
																			"name": "_updateApproval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1608,
																			"src": "2565:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_PermitDetails_$79_memory_ptr_$_t_address_$_t_address_$returns$__$",
																				"typeString": "function (struct IAllowanceTransfer.PermitDetails memory,address,address)"
																			}
																		},
																		"id": 1256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2565:55:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1257,
																	"nodeType": "ExpressionStatement",
																	"src": "2565:55:7"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1243,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1240,
																"src": "2530:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1244,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1234,
																"src": "2534:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2530:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1259,
														"initializationExpression": {
															"assignments": [
																1240
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1240,
																	"mutability": "mutable",
																	"name": "i",
																	"nameLocation": "2523:1:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1259,
																	"src": "2515:9:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1239,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2515:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1242,
															"initialValue": {
																"hexValue": "30",
																"id": 1241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2527:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2515:13:7"
														},
														"loopExpression": {
															"expression": {
																"id": 1247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": true,
																"src": "2542:3:7",
																"subExpression": {
																	"id": 1246,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1240,
																	"src": "2544:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1248,
															"nodeType": "ExpressionStatement",
															"src": "2542:3:7"
														},
														"nodeType": "ForStatement",
														"src": "2510:125:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1196,
										"nodeType": "StructuredDocumentation",
										"src": "2002:34:7",
										"text": "@inheritdoc IAllowanceTransfer"
									},
									"functionSelector": "2a2d80d1",
									"id": 1262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "2050:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2065:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "2057:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2057:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "permitBatch",
												"nameLocation": "2091:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "2072:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitBatch_$98_memory_ptr",
													"typeString": "struct IAllowanceTransfer.PermitBatch"
												},
												"typeName": {
													"id": 1200,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1199,
														"name": "PermitBatch",
														"nameLocations": [
															"2072:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 98,
														"src": "2072:11:7"
													},
													"referencedDeclaration": 98,
													"src": "2072:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitBatch_$98_storage_ptr",
														"typeString": "struct IAllowanceTransfer.PermitBatch"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2119:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "2104:24:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1202,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2104:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2056:73:7"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2139:0:7"
									},
									"scope": 1609,
									"src": "2041:610:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										184
									],
									"body": {
										"id": 1281,
										"nodeType": "Block",
										"src": "2784:51:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1275,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1265,
															"src": "2804:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1276,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "2810:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1277,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "2814:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"id": 1278,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "2822:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1274,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1408,
														"src": "2794:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint160_$_t_address_$returns$__$",
															"typeString": "function (address,address,uint160,address)"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1280,
												"nodeType": "ExpressionStatement",
												"src": "2794:34:7"
											}
										]
									},
									"documentation": {
										"id": 1263,
										"nodeType": "StructuredDocumentation",
										"src": "2657:34:7",
										"text": "@inheritdoc IAllowanceTransfer"
									},
									"functionSelector": "36c78516",
									"id": 1282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2705:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2726:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "2718:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2740:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "2732:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2732:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2752:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "2744:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1268,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2744:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2768:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "2760:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2760:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:57:7"
									},
									"returnParameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2784:0:7"
									},
									"scope": 1609,
									"src": "2696:139:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										192
									],
									"body": {
										"id": 1326,
										"nodeType": "Block",
										"src": "2964:352:7",
										"statements": [
											{
												"id": 1325,
												"nodeType": "UncheckedBlock",
												"src": "2974:336:7",
												"statements": [
													{
														"assignments": [
															1291
														],
														"declarations": [
															{
																"constant": false,
																"id": 1291,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "3006:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1325,
																"src": "2998:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1290,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2998:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1294,
														"initialValue": {
															"expression": {
																"id": 1292,
																"name": "transferDetails",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "3015:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_AllowanceTransferDetails_$122_calldata_ptr_$dyn_calldata_ptr",
																	"typeString": "struct IAllowanceTransfer.AllowanceTransferDetails calldata[] calldata"
																}
															},
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3031:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3015:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2998:39:7"
													},
													{
														"body": {
															"id": 1323,
															"nodeType": "Block",
															"src": "3088:212:7",
															"statements": [
																{
																	"assignments": [
																		1307
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1307,
																			"mutability": "mutable",
																			"name": "transferDetail",
																			"nameLocation": "3138:14:7",
																			"nodeType": "VariableDeclaration",
																			"scope": 1323,
																			"src": "3106:46:7",
																			"stateVariable": false,
																			"storageLocation": "memory",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AllowanceTransferDetails_$122_memory_ptr",
																				"typeString": "struct IAllowanceTransfer.AllowanceTransferDetails"
																			},
																			"typeName": {
																				"id": 1306,
																				"nodeType": "UserDefinedTypeName",
																				"pathNode": {
																					"id": 1305,
																					"name": "AllowanceTransferDetails",
																					"nameLocations": [
																						"3106:24:7"
																					],
																					"nodeType": "IdentifierPath",
																					"referencedDeclaration": 122,
																					"src": "3106:24:7"
																				},
																				"referencedDeclaration": 122,
																				"src": "3106:24:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_AllowanceTransferDetails_$122_storage_ptr",
																					"typeString": "struct IAllowanceTransfer.AllowanceTransferDetails"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1311,
																	"initialValue": {
																		"baseExpression": {
																			"id": 1308,
																			"name": "transferDetails",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1287,
																			"src": "3155:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_AllowanceTransferDetails_$122_calldata_ptr_$dyn_calldata_ptr",
																				"typeString": "struct IAllowanceTransfer.AllowanceTransferDetails calldata[] calldata"
																			}
																		},
																		"id": 1310,
																		"indexExpression": {
																			"id": 1309,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1296,
																			"src": "3171:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3155:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AllowanceTransferDetails_$122_calldata_ptr",
																			"typeString": "struct IAllowanceTransfer.AllowanceTransferDetails calldata"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "3106:67:7"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1313,
																					"name": "transferDetail",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1307,
																					"src": "3201:14:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AllowanceTransferDetails_$122_memory_ptr",
																						"typeString": "struct IAllowanceTransfer.AllowanceTransferDetails memory"
																					}
																				},
																				"id": 1314,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3216:4:7",
																				"memberName": "from",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 115,
																				"src": "3201:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"expression": {
																					"id": 1315,
																					"name": "transferDetail",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1307,
																					"src": "3222:14:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AllowanceTransferDetails_$122_memory_ptr",
																						"typeString": "struct IAllowanceTransfer.AllowanceTransferDetails memory"
																					}
																				},
																				"id": 1316,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3237:2:7",
																				"memberName": "to",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 117,
																				"src": "3222:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"expression": {
																					"id": 1317,
																					"name": "transferDetail",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1307,
																					"src": "3241:14:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AllowanceTransferDetails_$122_memory_ptr",
																						"typeString": "struct IAllowanceTransfer.AllowanceTransferDetails memory"
																					}
																				},
																				"id": 1318,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3256:6:7",
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 119,
																				"src": "3241:21:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"expression": {
																					"id": 1319,
																					"name": "transferDetail",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1307,
																					"src": "3264:14:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AllowanceTransferDetails_$122_memory_ptr",
																						"typeString": "struct IAllowanceTransfer.AllowanceTransferDetails memory"
																					}
																				},
																				"id": 1320,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3279:5:7",
																				"memberName": "token",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 121,
																				"src": "3264:20:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1312,
																			"name": "_transfer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1408,
																			"src": "3191:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint160_$_t_address_$returns$__$",
																				"typeString": "function (address,address,uint160,address)"
																			}
																		},
																		"id": 1321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3191:94:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1322,
																	"nodeType": "ExpressionStatement",
																	"src": "3191:94:7"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1299,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1296,
																"src": "3071:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1300,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1291,
																"src": "3075:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3071:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1324,
														"initializationExpression": {
															"assignments": [
																1296
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1296,
																	"mutability": "mutable",
																	"name": "i",
																	"nameLocation": "3064:1:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1324,
																	"src": "3056:9:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1295,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3056:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1298,
															"initialValue": {
																"hexValue": "30",
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3068:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3056:13:7"
														},
														"loopExpression": {
															"expression": {
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": true,
																"src": "3083:3:7",
																"subExpression": {
																	"id": 1302,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1296,
																	"src": "3085:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1304,
															"nodeType": "ExpressionStatement",
															"src": "3083:3:7"
														},
														"nodeType": "ForStatement",
														"src": "3051:249:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1283,
										"nodeType": "StructuredDocumentation",
										"src": "2841:34:7",
										"text": "@inheritdoc IAllowanceTransfer"
									},
									"functionSelector": "0d58b1db",
									"id": 1327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2889:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "transferDetails",
												"nameLocation": "2938:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "2902:51:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_AllowanceTransferDetails_$122_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IAllowanceTransfer.AllowanceTransferDetails[]"
												},
												"typeName": {
													"baseType": {
														"id": 1285,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1284,
															"name": "AllowanceTransferDetails",
															"nameLocations": [
																"2902:24:7"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 122,
															"src": "2902:24:7"
														},
														"referencedDeclaration": 122,
														"src": "2902:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AllowanceTransferDetails_$122_storage_ptr",
															"typeString": "struct IAllowanceTransfer.AllowanceTransferDetails"
														}
													},
													"id": 1286,
													"nodeType": "ArrayTypeName",
													"src": "2902:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_AllowanceTransferDetails_$122_storage_$dyn_storage_ptr",
														"typeString": "struct IAllowanceTransfer.AllowanceTransferDetails[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2901:53:7"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2964:0:7"
									},
									"scope": 1609,
									"src": "2880:436:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1407,
										"nodeType": "Block",
										"src": "3547:653:7",
										"statements": [
											{
												"assignments": [
													1341
												],
												"declarations": [
													{
														"constant": false,
														"id": 1341,
														"mutability": "mutable",
														"name": "allowed",
														"nameLocation": "3581:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1407,
														"src": "3557:31:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PackedAllowance_$106_storage_ptr",
															"typeString": "struct IAllowanceTransfer.PackedAllowance"
														},
														"typeName": {
															"id": 1340,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1339,
																"name": "PackedAllowance",
																"nameLocations": [
																	"3557:15:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 106,
																"src": "3557:15:7"
															},
															"referencedDeclaration": 106,
															"src": "3557:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PackedAllowance_$106_storage_ptr",
																"typeString": "struct IAllowanceTransfer.PackedAllowance"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1350,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1342,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "3591:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_PackedAllowance_$106_storage_$_$_$",
																	"typeString": "mapping(address => mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref)))"
																}
															},
															"id": 1344,
															"indexExpression": {
																"id": 1343,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1330,
																"src": "3601:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3591:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_PackedAllowance_$106_storage_$_$",
																"typeString": "mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref))"
															}
														},
														"id": 1346,
														"indexExpression": {
															"id": 1345,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "3607:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3591:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PackedAllowance_$106_storage_$",
															"typeString": "mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref)"
														}
													},
													"id": 1349,
													"indexExpression": {
														"expression": {
															"id": 1347,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3614:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3618:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3614:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3591:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PackedAllowance_$106_storage",
														"typeString": "struct IAllowanceTransfer.PackedAllowance storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3557:68:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1351,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3640:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3646:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3640:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1353,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1341,
															"src": "3658:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PackedAllowance_$106_storage_ptr",
																"typeString": "struct IAllowanceTransfer.PackedAllowance storage pointer"
															}
														},
														"id": 1354,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3666:10:7",
														"memberName": "expiration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 103,
														"src": "3658:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "3640:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1361,
												"nodeType": "IfStatement",
												"src": "3636:85:7",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"expression": {
																	"id": 1357,
																	"name": "allowed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1341,
																	"src": "3702:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PackedAllowance_$106_storage_ptr",
																		"typeString": "struct IAllowanceTransfer.PackedAllowance storage pointer"
																	}
																},
																"id": 1358,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3710:10:7",
																"memberName": "expiration",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 103,
																"src": "3702:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																}
															],
															"id": 1356,
															"name": "AllowanceExpired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "3685:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 1359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3685:36:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1360,
													"nodeType": "RevertStatement",
													"src": "3678:43:7"
												}
											},
											{
												"assignments": [
													1363
												],
												"declarations": [
													{
														"constant": false,
														"id": 1363,
														"mutability": "mutable",
														"name": "maxAmount",
														"nameLocation": "3740:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1407,
														"src": "3732:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1362,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3732:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1366,
												"initialValue": {
													"expression": {
														"id": 1364,
														"name": "allowed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "3752:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PackedAllowance_$106_storage_ptr",
															"typeString": "struct IAllowanceTransfer.PackedAllowance storage pointer"
														}
													},
													"id": 1365,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3760:6:7",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 101,
													"src": "3752:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3732:34:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1367,
														"name": "maxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1363,
														"src": "3780:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3798:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1369,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "3798:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	}
																],
																"id": 1368,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3793:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3793:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint160",
																"typeString": "type(uint160)"
															}
														},
														"id": 1372,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3807:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3793:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "3780:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1397,
												"nodeType": "IfStatement",
												"src": "3776:289:7",
												"trueBody": {
													"id": 1396,
													"nodeType": "Block",
													"src": "3812:253:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1374,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "3830:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1375,
																	"name": "maxAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1363,
																	"src": "3839:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3830:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1394,
																"nodeType": "Block",
																"src": "3928:127:7",
																"statements": [
																	{
																		"id": 1393,
																		"nodeType": "UncheckedBlock",
																		"src": "3946:95:7",
																		"statements": [
																			{
																				"expression": {
																					"id": 1391,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 1382,
																							"name": "allowed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1341,
																							"src": "3978:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PackedAllowance_$106_storage_ptr",
																								"typeString": "struct IAllowanceTransfer.PackedAllowance storage pointer"
																							}
																						},
																						"id": 1384,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "3986:6:7",
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 101,
																						"src": "3978:14:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						},
																						"id": 1390,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"arguments": [
																								{
																									"id": 1387,
																									"name": "maxAmount",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1363,
																									"src": "4003:9:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 1386,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "3995:7:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint160_$",
																									"typeString": "type(uint160)"
																								},
																								"typeName": {
																									"id": 1385,
																									"name": "uint160",
																									"nodeType": "ElementaryTypeName",
																									"src": "3995:7:7",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1388,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "3995:18:7",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint160",
																								"typeString": "uint160"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 1389,
																							"name": "amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1334,
																							"src": "4016:6:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint160",
																								"typeString": "uint160"
																							}
																						},
																						"src": "3995:27:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"src": "3978:44:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"id": 1392,
																				"nodeType": "ExpressionStatement",
																				"src": "3978:44:7"
																			}
																		]
																	}
																]
															},
															"id": 1395,
															"nodeType": "IfStatement",
															"src": "3826:229:7",
															"trueBody": {
																"id": 1381,
																"nodeType": "Block",
																"src": "3850:72:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1378,
																					"name": "maxAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1363,
																					"src": "3897:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1377,
																				"name": "InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 16,
																				"src": "3875:21:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 1379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3875:32:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1380,
																		"nodeType": "RevertStatement",
																		"src": "3868:39:7"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1402,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "4176:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1403,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "4182:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1404,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "4186:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1399,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1336,
																	"src": "4152:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1398,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2558,
																"src": "4146:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$2558_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 1400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4146:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$2558",
																"typeString": "contract ERC20"
															}
														},
														"id": 1401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4159:16:7",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2602,
														"src": "4146:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$2558_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_ERC20_$2558_$",
															"typeString": "function (contract ERC20,address,address,uint256)"
														}
													},
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4146:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1406,
												"nodeType": "ExpressionStatement",
												"src": "4146:47:7"
											}
										]
									},
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "3322:136:7",
										"text": "@notice Internal function for transferring tokens using stored allowances\n @dev Will fail if the allowed timeframe has passed"
									},
									"id": 1408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "3472:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3490:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "3482:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3482:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3504:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "3496:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3496:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3516:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "3508:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1333,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3508:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3532:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "3524:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3524:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3481:57:7"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3547:0:7"
									},
									"scope": 1609,
									"src": "3463:737:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										200
									],
									"body": {
										"id": 1470,
										"nodeType": "Block",
										"src": "4311:476:7",
										"statements": [
											{
												"assignments": [
													1417
												],
												"declarations": [
													{
														"constant": false,
														"id": 1417,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4329:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1470,
														"src": "4321:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1416,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4321:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1420,
												"initialValue": {
													"expression": {
														"id": 1418,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4337:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4341:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4337:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4321:26:7"
											},
											{
												"id": 1469,
												"nodeType": "UncheckedBlock",
												"src": "4424:357:7",
												"statements": [
													{
														"assignments": [
															1422
														],
														"declarations": [
															{
																"constant": false,
																"id": 1422,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "4456:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1469,
																"src": "4448:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1421,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4448:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1425,
														"initialValue": {
															"expression": {
																"id": 1423,
																"name": "approvals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "4465:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_TokenSpenderPair_$112_calldata_ptr_$dyn_calldata_ptr",
																	"typeString": "struct IAllowanceTransfer.TokenSpenderPair calldata[] calldata"
																}
															},
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4475:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4465:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4448:33:7"
													},
													{
														"body": {
															"id": 1467,
															"nodeType": "Block",
															"src": "4532:239:7",
															"statements": [
																{
																	"assignments": [
																		1437
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1437,
																			"mutability": "mutable",
																			"name": "token",
																			"nameLocation": "4558:5:7",
																			"nodeType": "VariableDeclaration",
																			"scope": 1467,
																			"src": "4550:13:7",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"typeName": {
																				"id": 1436,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4550:7:7",
																				"stateMutability": "nonpayable",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1442,
																	"initialValue": {
																		"expression": {
																			"baseExpression": {
																				"id": 1438,
																				"name": "approvals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1413,
																				"src": "4566:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_TokenSpenderPair_$112_calldata_ptr_$dyn_calldata_ptr",
																					"typeString": "struct IAllowanceTransfer.TokenSpenderPair calldata[] calldata"
																				}
																			},
																			"id": 1440,
																			"indexExpression": {
																				"id": 1439,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1427,
																				"src": "4576:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4566:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenSpenderPair_$112_calldata_ptr",
																				"typeString": "struct IAllowanceTransfer.TokenSpenderPair calldata"
																			}
																		},
																		"id": 1441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4579:5:7",
																		"memberName": "token",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 109,
																		"src": "4566:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "4550:34:7"
																},
																{
																	"assignments": [
																		1444
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1444,
																			"mutability": "mutable",
																			"name": "spender",
																			"nameLocation": "4610:7:7",
																			"nodeType": "VariableDeclaration",
																			"scope": 1467,
																			"src": "4602:15:7",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"typeName": {
																				"id": 1443,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:7:7",
																				"stateMutability": "nonpayable",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1449,
																	"initialValue": {
																		"expression": {
																			"baseExpression": {
																				"id": 1445,
																				"name": "approvals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1413,
																				"src": "4620:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_TokenSpenderPair_$112_calldata_ptr_$dyn_calldata_ptr",
																					"typeString": "struct IAllowanceTransfer.TokenSpenderPair calldata[] calldata"
																				}
																			},
																			"id": 1447,
																			"indexExpression": {
																				"id": 1446,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1427,
																				"src": "4630:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4620:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenSpenderPair_$112_calldata_ptr",
																				"typeString": "struct IAllowanceTransfer.TokenSpenderPair calldata"
																			}
																		},
																		"id": 1448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4633:7:7",
																		"memberName": "spender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 111,
																		"src": "4620:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "4602:38:7"
																},
																{
																	"expression": {
																		"id": 1459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"baseExpression": {
																					"baseExpression": {
																						"baseExpression": {
																							"id": 1450,
																							"name": "allowance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1112,
																							"src": "4659:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_PackedAllowance_$106_storage_$_$_$",
																								"typeString": "mapping(address => mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref)))"
																							}
																						},
																						"id": 1454,
																						"indexExpression": {
																							"id": 1451,
																							"name": "owner",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1417,
																							"src": "4669:5:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "4659:16:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_PackedAllowance_$106_storage_$_$",
																							"typeString": "mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref))"
																						}
																					},
																					"id": 1455,
																					"indexExpression": {
																						"id": 1452,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1437,
																						"src": "4676:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4659:23:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PackedAllowance_$106_storage_$",
																						"typeString": "mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref)"
																					}
																				},
																				"id": 1456,
																				"indexExpression": {
																					"id": 1453,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1444,
																					"src": "4683:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4659:32:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PackedAllowance_$106_storage",
																					"typeString": "struct IAllowanceTransfer.PackedAllowance storage ref"
																				}
																			},
																			"id": 1457,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "4692:6:7",
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 101,
																			"src": "4659:39:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "30",
																			"id": 1458,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4701:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "4659:43:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	"id": 1460,
																	"nodeType": "ExpressionStatement",
																	"src": "4659:43:7"
																},
																{
																	"eventCall": {
																		"arguments": [
																			{
																				"id": 1462,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1417,
																				"src": "4734:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1463,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1437,
																				"src": "4741:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1464,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1444,
																				"src": "4748:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1461,
																			"name": "Lockdown",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 69,
																			"src": "4725:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
																				"typeString": "function (address,address,address)"
																			}
																		},
																		"id": 1465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4725:31:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1466,
																	"nodeType": "EmitStatement",
																	"src": "4720:36:7"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1430,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1427,
																"src": "4515:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1431,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1422,
																"src": "4519:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4515:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1468,
														"initializationExpression": {
															"assignments": [
																1427
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1427,
																	"mutability": "mutable",
																	"name": "i",
																	"nameLocation": "4508:1:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1468,
																	"src": "4500:9:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1426,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4500:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1429,
															"initialValue": {
																"hexValue": "30",
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4512:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4500:13:7"
														},
														"loopExpression": {
															"expression": {
																"id": 1434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": true,
																"src": "4527:3:7",
																"subExpression": {
																	"id": 1433,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1427,
																	"src": "4529:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1435,
															"nodeType": "ExpressionStatement",
															"src": "4527:3:7"
														},
														"nodeType": "ForStatement",
														"src": "4495:276:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1409,
										"nodeType": "StructuredDocumentation",
										"src": "4206:34:7",
										"text": "@inheritdoc IAllowanceTransfer"
									},
									"functionSelector": "cc53287f",
									"id": 1471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lockdown",
									"nameLocation": "4254:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "approvals",
												"nameLocation": "4291:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "4263:37:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenSpenderPair_$112_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IAllowanceTransfer.TokenSpenderPair[]"
												},
												"typeName": {
													"baseType": {
														"id": 1411,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1410,
															"name": "TokenSpenderPair",
															"nameLocations": [
																"4263:16:7"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 112,
															"src": "4263:16:7"
														},
														"referencedDeclaration": 112,
														"src": "4263:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenSpenderPair_$112_storage_ptr",
															"typeString": "struct IAllowanceTransfer.TokenSpenderPair"
														}
													},
													"id": 1412,
													"nodeType": "ArrayTypeName",
													"src": "4263:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenSpenderPair_$112_storage_$dyn_storage_ptr",
														"typeString": "struct IAllowanceTransfer.TokenSpenderPair[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4262:39:7"
									},
									"returnParameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4311:0:7"
									},
									"scope": 1609,
									"src": "4245:542:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										210
									],
									"body": {
										"id": 1539,
										"nodeType": "Block",
										"src": "4916:516:7",
										"statements": [
											{
												"assignments": [
													1482
												],
												"declarations": [
													{
														"constant": false,
														"id": 1482,
														"mutability": "mutable",
														"name": "oldNonce",
														"nameLocation": "4933:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1539,
														"src": "4926:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														},
														"typeName": {
															"id": 1481,
															"name": "uint48",
															"nodeType": "ElementaryTypeName",
															"src": "4926:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1492,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1483,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1112,
																	"src": "4944:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_PackedAllowance_$106_storage_$_$_$",
																		"typeString": "mapping(address => mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref)))"
																	}
																},
																"id": 1486,
																"indexExpression": {
																	"expression": {
																		"id": 1484,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4954:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4958:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4954:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4944:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_PackedAllowance_$106_storage_$_$",
																	"typeString": "mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref))"
																}
															},
															"id": 1488,
															"indexExpression": {
																"id": 1487,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1474,
																"src": "4966:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4944:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PackedAllowance_$106_storage_$",
																"typeString": "mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref)"
															}
														},
														"id": 1490,
														"indexExpression": {
															"id": 1489,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1476,
															"src": "4973:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4944:37:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PackedAllowance_$106_storage",
															"typeString": "struct IAllowanceTransfer.PackedAllowance storage ref"
														}
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4982:5:7",
													"memberName": "nonce",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 105,
													"src": "4944:43:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4926:61:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1493,
														"name": "newNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1478,
														"src": "5002:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1494,
														"name": "oldNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "5014:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "5002:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1499,
												"nodeType": "IfStatement",
												"src": "4998:47:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1496,
															"name": "InvalidNonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1732,
															"src": "5031:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5031:14:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1498,
													"nodeType": "RevertStatement",
													"src": "5024:21:7"
												}
											},
											{
												"id": 1517,
												"nodeType": "UncheckedBlock",
												"src": "5138:143:7",
												"statements": [
													{
														"assignments": [
															1501
														],
														"declarations": [
															{
																"constant": false,
																"id": 1501,
																"mutability": "mutable",
																"name": "delta",
																"nameLocation": "5169:5:7",
																"nodeType": "VariableDeclaration",
																"scope": 1517,
																"src": "5162:12:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																},
																"typeName": {
																	"id": 1500,
																	"name": "uint48",
																	"nodeType": "ElementaryTypeName",
																	"src": "5162:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1505,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															},
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1502,
																"name": "newNonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1478,
																"src": "5177:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1503,
																"name": "oldNonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1482,
																"src": "5188:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																}
															},
															"src": "5177:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5162:34:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															},
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1506,
																"name": "delta",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1501,
																"src": "5214:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5227:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint16_$",
																				"typeString": "type(uint16)"
																			},
																			"typeName": {
																				"id": 1508,
																				"name": "uint16",
																				"nodeType": "ElementaryTypeName",
																				"src": "5227:6:7",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint16_$",
																				"typeString": "type(uint16)"
																			}
																		],
																		"id": 1507,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "5222:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5222:12:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint16",
																		"typeString": "type(uint16)"
																	}
																},
																"id": 1511,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5235:3:7",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "5222:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "5214:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1516,
														"nodeType": "IfStatement",
														"src": "5210:60:7",
														"trueBody": {
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1513,
																	"name": "ExcessiveInvalidation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "5247:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5247:23:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1515,
															"nodeType": "RevertStatement",
															"src": "5240:30:7"
														}
													}
												]
											},
											{
												"expression": {
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1518,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1112,
																		"src": "5291:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_PackedAllowance_$106_storage_$_$_$",
																			"typeString": "mapping(address => mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref)))"
																		}
																	},
																	"id": 1523,
																	"indexExpression": {
																		"expression": {
																			"id": 1519,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5301:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5305:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5301:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5291:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_PackedAllowance_$106_storage_$_$",
																		"typeString": "mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref))"
																	}
																},
																"id": 1524,
																"indexExpression": {
																	"id": 1521,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1474,
																	"src": "5313:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5291:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PackedAllowance_$106_storage_$",
																	"typeString": "mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref)"
																}
															},
															"id": 1525,
															"indexExpression": {
																"id": 1522,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1476,
																"src": "5320:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5291:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PackedAllowance_$106_storage",
																"typeString": "struct IAllowanceTransfer.PackedAllowance storage ref"
															}
														},
														"id": 1526,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5329:5:7",
														"memberName": "nonce",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 105,
														"src": "5291:43:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1527,
														"name": "newNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1478,
														"src": "5337:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "5291:54:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"id": 1529,
												"nodeType": "ExpressionStatement",
												"src": "5291:54:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1531,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5378:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5382:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5378:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1533,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "5390:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1534,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1476,
															"src": "5397:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1535,
															"name": "newNonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "5406:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														{
															"id": 1536,
															"name": "oldNonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "5416:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															},
															{
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														],
														"id": 1530,
														"name": "NonceInvalidation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "5360:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint48_$_t_uint48_$returns$__$",
															"typeString": "function (address,address,address,uint48,uint48)"
														}
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5360:65:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1538,
												"nodeType": "EmitStatement",
												"src": "5355:70:7"
											}
										]
									},
									"documentation": {
										"id": 1472,
										"nodeType": "StructuredDocumentation",
										"src": "4793:34:7",
										"text": "@inheritdoc IAllowanceTransfer"
									},
									"functionSelector": "65d9723c",
									"id": 1540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invalidateNonces",
									"nameLocation": "4841:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4866:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "4858:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4858:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4881:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "4873:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4873:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "newNonce",
												"nameLocation": "4897:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "4890:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 1477,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "4890:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4857:49:7"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4916:0:7"
									},
									"scope": 1609,
									"src": "4832:600:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1607,
										"nodeType": "Block",
										"src": "5757:435:7",
										"statements": [
											{
												"assignments": [
													1552
												],
												"declarations": [
													{
														"constant": false,
														"id": 1552,
														"mutability": "mutable",
														"name": "nonce",
														"nameLocation": "5774:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1607,
														"src": "5767:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														},
														"typeName": {
															"id": 1551,
															"name": "uint48",
															"nodeType": "ElementaryTypeName",
															"src": "5767:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1555,
												"initialValue": {
													"expression": {
														"id": 1553,
														"name": "details",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1544,
														"src": "5782:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PermitDetails_$79_memory_ptr",
															"typeString": "struct IAllowanceTransfer.PermitDetails memory"
														}
													},
													"id": 1554,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5790:5:7",
													"memberName": "nonce",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 78,
													"src": "5782:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5767:28:7"
											},
											{
												"assignments": [
													1557
												],
												"declarations": [
													{
														"constant": false,
														"id": 1557,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "5813:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1607,
														"src": "5805:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1556,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5805:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1560,
												"initialValue": {
													"expression": {
														"id": 1558,
														"name": "details",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1544,
														"src": "5821:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PermitDetails_$79_memory_ptr",
															"typeString": "struct IAllowanceTransfer.PermitDetails memory"
														}
													},
													"id": 1559,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5829:5:7",
													"memberName": "token",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 72,
													"src": "5821:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5805:29:7"
											},
											{
												"assignments": [
													1562
												],
												"declarations": [
													{
														"constant": false,
														"id": 1562,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "5852:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1607,
														"src": "5844:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 1561,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "5844:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1565,
												"initialValue": {
													"expression": {
														"id": 1563,
														"name": "details",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1544,
														"src": "5861:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PermitDetails_$79_memory_ptr",
															"typeString": "struct IAllowanceTransfer.PermitDetails memory"
														}
													},
													"id": 1564,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5869:6:7",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 74,
													"src": "5861:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5844:31:7"
											},
											{
												"assignments": [
													1567
												],
												"declarations": [
													{
														"constant": false,
														"id": 1567,
														"mutability": "mutable",
														"name": "expiration",
														"nameLocation": "5892:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1607,
														"src": "5885:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														},
														"typeName": {
															"id": 1566,
															"name": "uint48",
															"nodeType": "ElementaryTypeName",
															"src": "5885:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1570,
												"initialValue": {
													"expression": {
														"id": 1568,
														"name": "details",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1544,
														"src": "5905:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PermitDetails_$79_memory_ptr",
															"typeString": "struct IAllowanceTransfer.PermitDetails memory"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5913:10:7",
													"memberName": "expiration",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 76,
													"src": "5905:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5885:38:7"
											},
											{
												"assignments": [
													1573
												],
												"declarations": [
													{
														"constant": false,
														"id": 1573,
														"mutability": "mutable",
														"name": "allowed",
														"nameLocation": "5957:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1607,
														"src": "5933:31:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PackedAllowance_$106_storage_ptr",
															"typeString": "struct IAllowanceTransfer.PackedAllowance"
														},
														"typeName": {
															"id": 1572,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1571,
																"name": "PackedAllowance",
																"nameLocations": [
																	"5933:15:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 106,
																"src": "5933:15:7"
															},
															"referencedDeclaration": 106,
															"src": "5933:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PackedAllowance_$106_storage_ptr",
																"typeString": "struct IAllowanceTransfer.PackedAllowance"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1581,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1574,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "5967:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_PackedAllowance_$106_storage_$_$_$",
																	"typeString": "mapping(address => mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref)))"
																}
															},
															"id": 1576,
															"indexExpression": {
																"id": 1575,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1546,
																"src": "5977:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5967:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_PackedAllowance_$106_storage_$_$",
																"typeString": "mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref))"
															}
														},
														"id": 1578,
														"indexExpression": {
															"id": 1577,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1557,
															"src": "5984:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5967:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PackedAllowance_$106_storage_$",
															"typeString": "mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref)"
														}
													},
													"id": 1580,
													"indexExpression": {
														"id": 1579,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1548,
														"src": "5991:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5967:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PackedAllowance_$106_storage",
														"typeString": "struct IAllowanceTransfer.PackedAllowance storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5933:66:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													},
													"id": 1585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1582,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1573,
															"src": "6014:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PackedAllowance_$106_storage_ptr",
																"typeString": "struct IAllowanceTransfer.PackedAllowance storage pointer"
															}
														},
														"id": 1583,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6022:5:7",
														"memberName": "nonce",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 105,
														"src": "6014:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1584,
														"name": "nonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1552,
														"src": "6031:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "6014:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1589,
												"nodeType": "IfStatement",
												"src": "6010:49:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1586,
															"name": "InvalidNonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1732,
															"src": "6045:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6045:14:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1588,
													"nodeType": "RevertStatement",
													"src": "6038:21:7"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1593,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "6088:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"id": 1594,
															"name": "expiration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1567,
															"src": "6096:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														{
															"id": 1595,
															"name": "nonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1552,
															"src": "6108:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															},
															{
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														],
														"expression": {
															"id": 1590,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1573,
															"src": "6070:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PackedAllowance_$106_storage_ptr",
																"typeString": "struct IAllowanceTransfer.PackedAllowance storage pointer"
															}
														},
														"id": 1592,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6078:9:7",
														"memberName": "updateAll",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 425,
														"src": "6070:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_PackedAllowance_$106_storage_ptr_$_t_uint160_$_t_uint48_$_t_uint48_$returns$__$attached_to$_t_struct$_PackedAllowance_$106_storage_ptr_$",
															"typeString": "function (struct IAllowanceTransfer.PackedAllowance storage pointer,uint160,uint48,uint48)"
														}
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6070:44:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1597,
												"nodeType": "ExpressionStatement",
												"src": "6070:44:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1599,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1546,
															"src": "6136:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1600,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1557,
															"src": "6143:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1601,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1548,
															"src": "6150:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1602,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "6159:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"id": 1603,
															"name": "expiration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1567,
															"src": "6167:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														{
															"id": 1604,
															"name": "nonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1552,
															"src": "6179:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															},
															{
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														],
														"id": 1598,
														"name": "Permit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "6129:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint160_$_t_uint48_$_t_uint48_$returns$__$",
															"typeString": "function (address,address,address,uint160,uint48,uint48)"
														}
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6129:56:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1606,
												"nodeType": "EmitStatement",
												"src": "6124:61:7"
											}
										]
									},
									"documentation": {
										"id": 1541,
										"nodeType": "StructuredDocumentation",
										"src": "5438:219:7",
										"text": "@notice Sets the new values for amount, expiration, and nonce.\n @dev Will check that the signed nonce is equal to the current nonce and then incrememnt the nonce value by 1.\n @dev Emits a Permit event."
									},
									"id": 1608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateApproval",
									"nameLocation": "5671:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "details",
												"nameLocation": "5708:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "5687:28:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitDetails_$79_memory_ptr",
													"typeString": "struct IAllowanceTransfer.PermitDetails"
												},
												"typeName": {
													"id": 1543,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1542,
														"name": "PermitDetails",
														"nameLocations": [
															"5687:13:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 79,
														"src": "5687:13:7"
													},
													"referencedDeclaration": 79,
													"src": "5687:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitDetails_$79_storage_ptr",
														"typeString": "struct IAllowanceTransfer.PermitDetails"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5725:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "5717:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5717:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5740:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "5732:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5732:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:62:7"
									},
									"returnParameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5757:0:7"
									},
									"scope": 1609,
									"src": "5662:530:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1610,
							"src": "528:5666:7",
							"usedErrors": [
								11,
								16,
								19,
								898,
								901,
								904,
								907,
								1729,
								1732
							],
							"usedEvents": [
								32,
								45,
								60,
								69
							]
						}
					],
					"src": "32:6163:7"
				},
				"id": 7
			},
			"contracts/contracts/permit2/EIP712.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/permit2/EIP712.sol",
					"exportedSymbols": {
						"EIP712": [
							1710
						],
						"IEIP712": [
							219
						]
					},
					"id": 1711,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1611,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:8"
						},
						{
							"absolutePath": "contracts/contracts/interfaces/IEIP712.sol",
							"file": "../interfaces/IEIP712.sol",
							"id": 1613,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1711,
							"sourceUnit": 220,
							"src": "57:50:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1612,
										"name": "IEIP712",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 219,
										"src": "65:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1615,
										"name": "IEIP712",
										"nameLocations": [
											"366:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 219,
										"src": "366:7:8"
									},
									"id": 1616,
									"nodeType": "InheritanceSpecifier",
									"src": "366:7:8"
								}
							],
							"canonicalName": "EIP712",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1614,
								"nodeType": "StructuredDocumentation",
								"src": "109:238:8",
								"text": "@notice EIP712 helpers for permit2\n @dev Maintains cross-chain replay protection in the event of a fork\n @dev Reference: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/EIP712.sol"
							},
							"fullyImplemented": true,
							"id": 1710,
							"linearizedBaseContracts": [
								1710,
								219
							],
							"name": "EIP712",
							"nameLocation": "356:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1618,
									"mutability": "immutable",
									"name": "_CACHED_DOMAIN_SEPARATOR",
									"nameLocation": "598:24:8",
									"nodeType": "VariableDeclaration",
									"scope": 1710,
									"src": "572:50:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1617,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "572:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1620,
									"mutability": "immutable",
									"name": "_CACHED_CHAIN_ID",
									"nameLocation": "654:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 1710,
									"src": "628:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1619,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "628:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1625,
									"mutability": "constant",
									"name": "_HASHED_NAME",
									"nameLocation": "702:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1710,
									"src": "677:60:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1621,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "677:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d697432",
												"id": 1623,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "727:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a",
													"typeString": "literal_string \"Permit2\""
												},
												"value": "Permit2"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a",
													"typeString": "literal_string \"Permit2\""
												}
											],
											"id": 1622,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "717:9:8",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1624,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "717:20:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1630,
									"mutability": "constant",
									"name": "_TYPE_HASH",
									"nameLocation": "768:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1710,
									"src": "743:126:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1626,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "743:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 1628,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "799:69:8",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 1627,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "789:9:8",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1629,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "789:80:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1645,
										"nodeType": "Block",
										"src": "890:133:8",
										"statements": [
											{
												"expression": {
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1633,
														"name": "_CACHED_CHAIN_ID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1620,
														"src": "900:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1634,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "919:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "925:7:8",
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "919:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "900:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1637,
												"nodeType": "ExpressionStatement",
												"src": "900:32:8"
											},
											{
												"expression": {
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1638,
														"name": "_CACHED_DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1618,
														"src": "942:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1640,
																"name": "_TYPE_HASH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1630,
																"src": "991:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 1641,
																"name": "_HASHED_NAME",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1625,
																"src": "1003:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1639,
															"name": "_buildDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1690,
															"src": "969:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																"typeString": "function (bytes32,bytes32) view returns (bytes32)"
															}
														},
														"id": 1642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "969:47:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "942:74:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1644,
												"nodeType": "ExpressionStatement",
												"src": "942:74:8"
											}
										]
									},
									"id": 1646,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "887:2:8"
									},
									"returnParameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "890:0:8"
									},
									"scope": 1710,
									"src": "876:147:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										218
									],
									"body": {
										"id": 1664,
										"nodeType": "Block",
										"src": "1253:158:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1656,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1653,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1270:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1276:7:8",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "1270:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1655,
															"name": "_CACHED_CHAIN_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1620,
															"src": "1287:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1270:33:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 1659,
																"name": "_TYPE_HASH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1630,
																"src": "1379:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 1660,
																"name": "_HASHED_NAME",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1625,
																"src": "1391:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1658,
															"name": "_buildDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1690,
															"src": "1357:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																"typeString": "function (bytes32,bytes32) view returns (bytes32)"
															}
														},
														"id": 1661,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1357:47:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1270:134:8",
													"trueExpression": {
														"id": 1657,
														"name": "_CACHED_DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1618,
														"src": "1318:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1652,
												"id": 1663,
												"nodeType": "Return",
												"src": "1263:141:8"
											}
										]
									},
									"documentation": {
										"id": 1647,
										"nodeType": "StructuredDocumentation",
										"src": "1029:152:8",
										"text": "@notice Returns the domain separator for the current chain.\n @dev Uses cached version if chainid and address are unchanged from construction."
									},
									"functionSelector": "3644e515",
									"id": 1665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "1195:16:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1649,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1226:8:8"
									},
									"parameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1211:2:8"
									},
									"returnParameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "1244:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1650,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:9:8"
									},
									"scope": 1710,
									"src": "1186:225:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1689,
										"nodeType": "Block",
										"src": "1605:95:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1678,
																	"name": "typeHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1668,
																	"src": "1643:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1679,
																	"name": "nameHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1670,
																	"src": "1653:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 1680,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1663:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1669:7:8",
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "1663:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1684,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1686:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EIP712_$1710",
																				"typeString": "contract EIP712"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EIP712_$1710",
																				"typeString": "contract EIP712"
																			}
																		],
																		"id": 1683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1678:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1682,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1678:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1678:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1676,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1632:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1636:6:8",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "1632:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1632:60:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1675,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "1622:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1622:71:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1674,
												"id": 1688,
												"nodeType": "Return",
												"src": "1615:78:8"
											}
										]
									},
									"documentation": {
										"id": 1666,
										"nodeType": "StructuredDocumentation",
										"src": "1417:85:8",
										"text": "@notice Builds a domain separator using the current chainId and contract address."
									},
									"id": 1690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_buildDomainSeparator",
									"nameLocation": "1516:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "typeHash",
												"nameLocation": "1546:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "1538:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1667,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1538:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "nameHash",
												"nameLocation": "1564:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "1556:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1669,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1556:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1537:36:8"
									},
									"returnParameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "1596:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1672,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1596:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1595:9:8"
									},
									"scope": 1710,
									"src": "1507:193:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1708,
										"nodeType": "Block",
										"src": "1831:93:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1901",
																	"id": 1701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1875:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1702,
																		"name": "DOMAIN_SEPARATOR",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1665,
																		"src": "1887:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																			"typeString": "function () view returns (bytes32)"
																		}
																	},
																	"id": 1703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1887:18:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1704,
																	"name": "dataHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1693,
																	"src": "1907:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1699,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1858:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1862:12:8",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1858:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1858:58:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1698,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "1848:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1848:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1697,
												"id": 1707,
												"nodeType": "Return",
												"src": "1841:76:8"
											}
										]
									},
									"documentation": {
										"id": 1691,
										"nodeType": "StructuredDocumentation",
										"src": "1706:46:8",
										"text": "@notice Creates an EIP-712 typed data hash"
									},
									"id": 1709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashTypedData",
									"nameLocation": "1766:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "dataHash",
												"nameLocation": "1789:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "1781:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1692,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:18:8"
									},
									"returnParameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "1822:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1695,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1822:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1821:9:8"
									},
									"scope": 1710,
									"src": "1757:167:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1711,
							"src": "347:1579:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1895:8"
				},
				"id": 8
			},
			"contracts/contracts/permit2/Permit2.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/permit2/Permit2.sol",
					"exportedSymbols": {
						"AllowanceTransfer": [
							1609
						],
						"Permit2": [
							1722
						],
						"SignatureTransfer": [
							2170
						]
					},
					"id": 1723,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1712,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"absolutePath": "contracts/contracts/permit2/SignatureTransfer.sol",
							"file": "./SignatureTransfer.sol",
							"id": 1714,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1723,
							"sourceUnit": 2171,
							"src": "57:58:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1713,
										"name": "SignatureTransfer",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2170,
										"src": "65:17:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/permit2/AllowanceTransfer.sol",
							"file": "./AllowanceTransfer.sol",
							"id": 1716,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1723,
							"sourceUnit": 1610,
							"src": "116:58:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1715,
										"name": "AllowanceTransfer",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1609,
										"src": "124:17:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1718,
										"name": "SignatureTransfer",
										"nameLocations": [
											"405:17:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2170,
										"src": "405:17:9"
									},
									"id": 1719,
									"nodeType": "InheritanceSpecifier",
									"src": "405:17:9"
								},
								{
									"baseName": {
										"id": 1720,
										"name": "AllowanceTransfer",
										"nameLocations": [
											"424:17:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1609,
										"src": "424:17:9"
									},
									"id": 1721,
									"nodeType": "InheritanceSpecifier",
									"src": "424:17:9"
								}
							],
							"canonicalName": "Permit2",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1717,
								"nodeType": "StructuredDocumentation",
								"src": "176:209:9",
								"text": "@notice Permit2 handles signature-based transfers in SignatureTransfer and allowance-based transfers in AllowanceTransfer.\n @dev Users must approve Permit2 before calling any of the transfer functions."
							},
							"fullyImplemented": true,
							"id": 1722,
							"linearizedBaseContracts": [
								1722,
								1609,
								2170,
								1710,
								211,
								372,
								219
							],
							"name": "Permit2",
							"nameLocation": "394:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 1723,
							"src": "385:152:9",
							"usedErrors": [
								11,
								16,
								19,
								244,
								247,
								898,
								901,
								904,
								907,
								1729,
								1732
							],
							"usedEvents": [
								32,
								45,
								60,
								69,
								256
							]
						}
					],
					"src": "32:506:9"
				},
				"id": 9
			},
			"contracts/contracts/permit2/PermitErrors.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/permit2/PermitErrors.sol",
					"exportedSymbols": {
						"InvalidNonce": [
							1732
						],
						"SignatureExpired": [
							1729
						]
					},
					"id": 1733,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1724,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:10"
						},
						{
							"documentation": {
								"id": 1725,
								"nodeType": "StructuredDocumentation",
								"src": "149:154:10",
								"text": "@notice Thrown when validating an inputted signature that is stale\n @param signatureDeadline The timestamp at which a signature is no longer valid"
							},
							"errorSelector": "cd21db4f",
							"id": 1729,
							"name": "SignatureExpired",
							"nameLocation": "309:16:10",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1728,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1727,
										"mutability": "mutable",
										"name": "signatureDeadline",
										"nameLocation": "334:17:10",
										"nodeType": "VariableDeclaration",
										"scope": 1729,
										"src": "326:25:10",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1726,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "326:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "325:27:10"
							},
							"src": "303:50:10"
						},
						{
							"documentation": {
								"id": 1730,
								"nodeType": "StructuredDocumentation",
								"src": "355:77:10",
								"text": "@notice Thrown when validating that the inputted nonce has not been used"
							},
							"errorSelector": "756688fe",
							"id": 1732,
							"name": "InvalidNonce",
							"nameLocation": "438:12:10",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1731,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "450:2:10"
							},
							"src": "432:21:10"
						}
					],
					"src": "32:422:10"
				},
				"id": 10
			},
			"contracts/contracts/permit2/SignatureTransfer.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/permit2/SignatureTransfer.sol",
					"exportedSymbols": {
						"EIP712": [
							1710
						],
						"ERC20": [
							2558
						],
						"ISignatureTransfer": [
							372
						],
						"InvalidNonce": [
							1732
						],
						"PermitHash": [
							891
						],
						"SafeTransferLib": [
							2643
						],
						"SignatureExpired": [
							1729
						],
						"SignatureTransfer": [
							2170
						],
						"SignatureVerification": [
							1060
						]
					},
					"id": 2171,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1734,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:11"
						},
						{
							"absolutePath": "contracts/contracts/interfaces/ISignatureTransfer.sol",
							"file": "../interfaces/ISignatureTransfer.sol",
							"id": 1736,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2171,
							"sourceUnit": 373,
							"src": "57:72:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1735,
										"name": "ISignatureTransfer",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 372,
										"src": "65:18:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/permit2/PermitErrors.sol",
							"file": "./PermitErrors.sol",
							"id": 1739,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2171,
							"sourceUnit": 1733,
							"src": "130:66:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1737,
										"name": "SignatureExpired",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1729,
										"src": "138:16:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 1738,
										"name": "InvalidNonce",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1732,
										"src": "156:12:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "solmate/src/tokens/ERC20.sol",
							"file": "solmate/src/tokens/ERC20.sol",
							"id": 1741,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2171,
							"sourceUnit": 2559,
							"src": "197:51:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1740,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2558,
										"src": "205:5:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "solmate/src/utils/SafeTransferLib.sol",
							"file": "solmate/src/utils/SafeTransferLib.sol",
							"id": 1743,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2171,
							"sourceUnit": 2644,
							"src": "249:70:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1742,
										"name": "SafeTransferLib",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2643,
										"src": "257:15:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/lib/SignatureVerification.sol",
							"file": "../lib/SignatureVerification.sol",
							"id": 1745,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2171,
							"sourceUnit": 1061,
							"src": "320:71:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1744,
										"name": "SignatureVerification",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1060,
										"src": "328:21:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/lib/PermitHash.sol",
							"file": "../lib/PermitHash.sol",
							"id": 1747,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2171,
							"sourceUnit": 892,
							"src": "392:49:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1746,
										"name": "PermitHash",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 891,
										"src": "400:10:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/permit2/EIP712.sol",
							"file": "./EIP712.sol",
							"id": 1749,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2171,
							"sourceUnit": 1711,
							"src": "442:36:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1748,
										"name": "EIP712",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1710,
										"src": "450:6:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1750,
										"name": "ISignatureTransfer",
										"nameLocations": [
											"510:18:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 372,
										"src": "510:18:11"
									},
									"id": 1751,
									"nodeType": "InheritanceSpecifier",
									"src": "510:18:11"
								},
								{
									"baseName": {
										"id": 1752,
										"name": "EIP712",
										"nameLocations": [
											"530:6:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1710,
										"src": "530:6:11"
									},
									"id": 1753,
									"nodeType": "InheritanceSpecifier",
									"src": "530:6:11"
								}
							],
							"canonicalName": "SignatureTransfer",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2170,
							"linearizedBaseContracts": [
								2170,
								1710,
								372,
								219
							],
							"name": "SignatureTransfer",
							"nameLocation": "489:17:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1756,
									"libraryName": {
										"id": 1754,
										"name": "SignatureVerification",
										"nameLocations": [
											"549:21:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1060,
										"src": "549:21:11"
									},
									"nodeType": "UsingForDirective",
									"src": "543:38:11",
									"typeName": {
										"id": 1755,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "575:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									}
								},
								{
									"global": false,
									"id": 1760,
									"libraryName": {
										"id": 1757,
										"name": "SafeTransferLib",
										"nameLocations": [
											"592:15:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2643,
										"src": "592:15:11"
									},
									"nodeType": "UsingForDirective",
									"src": "586:32:11",
									"typeName": {
										"id": 1759,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1758,
											"name": "ERC20",
											"nameLocations": [
												"612:5:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2558,
											"src": "612:5:11"
										},
										"referencedDeclaration": 2558,
										"src": "612:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$2558",
											"typeString": "contract ERC20"
										}
									}
								},
								{
									"global": false,
									"id": 1764,
									"libraryName": {
										"id": 1761,
										"name": "PermitHash",
										"nameLocations": [
											"629:10:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 891,
										"src": "629:10:11"
									},
									"nodeType": "UsingForDirective",
									"src": "623:40:11",
									"typeName": {
										"id": 1763,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1762,
											"name": "PermitTransferFrom",
											"nameLocations": [
												"644:18:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 271,
											"src": "644:18:11"
										},
										"referencedDeclaration": 271,
										"src": "644:18:11",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_PermitTransferFrom_$271_storage_ptr",
											"typeString": "struct ISignatureTransfer.PermitTransferFrom"
										}
									}
								},
								{
									"global": false,
									"id": 1768,
									"libraryName": {
										"id": 1765,
										"name": "PermitHash",
										"nameLocations": [
											"674:10:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 891,
										"src": "674:10:11"
									},
									"nodeType": "UsingForDirective",
									"src": "668:45:11",
									"typeName": {
										"id": 1767,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1766,
											"name": "PermitBatchTransferFrom",
											"nameLocations": [
												"689:23:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 287,
											"src": "689:23:11"
										},
										"referencedDeclaration": 287,
										"src": "689:23:11",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_storage_ptr",
											"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom"
										}
									}
								},
								{
									"baseFunctions": [
										297
									],
									"constant": false,
									"documentation": {
										"id": 1769,
										"nodeType": "StructuredDocumentation",
										"src": "719:34:11",
										"text": "@inheritdoc ISignatureTransfer"
									},
									"functionSelector": "4fe02b44",
									"id": 1775,
									"mutability": "mutable",
									"name": "nonceBitmap",
									"nameLocation": "813:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2170,
									"src": "758:66:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 1774,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1770,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "766:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "758:47:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1773,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1771,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "785:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "777:27:11",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1772,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "796:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										311
									],
									"body": {
										"id": 1799,
										"nodeType": "Block",
										"src": "1071:94:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1790,
															"name": "permit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "1101:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PermitTransferFrom_$271_memory_ptr",
																"typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
															}
														},
														{
															"id": 1791,
															"name": "transferDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "1109:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SignatureTransferDetails_$277_calldata_ptr",
																"typeString": "struct ISignatureTransfer.SignatureTransferDetails calldata"
															}
														},
														{
															"id": 1792,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "1126:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1793,
																	"name": "permit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1779,
																	"src": "1133:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PermitTransferFrom_$271_memory_ptr",
																		"typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
																	}
																},
																"id": 1794,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1140:4:11",
																"memberName": "hash",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 660,
																"src": "1133:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_PermitTransferFrom_$271_memory_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_PermitTransferFrom_$271_memory_ptr_$",
																	"typeString": "function (struct ISignatureTransfer.PermitTransferFrom memory) view returns (bytes32)"
																}
															},
															"id": 1795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1133:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1796,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1786,
															"src": "1148:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PermitTransferFrom_$271_memory_ptr",
																"typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
															},
															{
																"typeIdentifier": "t_struct$_SignatureTransferDetails_$277_calldata_ptr",
																"typeString": "struct ISignatureTransfer.SignatureTransferDetails calldata"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 1789,
														"name": "_permitTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1903,
															2075
														],
														"referencedDeclaration": 1903,
														"src": "1081:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_PermitTransferFrom_$271_memory_ptr_$_t_struct$_SignatureTransferDetails_$277_calldata_ptr_$_t_address_$_t_bytes32_$_t_bytes_calldata_ptr_$returns$__$",
															"typeString": "function (struct ISignatureTransfer.PermitTransferFrom memory,struct ISignatureTransfer.SignatureTransferDetails calldata,address,bytes32,bytes calldata)"
														}
													},
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1081:77:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1798,
												"nodeType": "ExpressionStatement",
												"src": "1081:77:11"
											}
										]
									},
									"documentation": {
										"id": 1776,
										"nodeType": "StructuredDocumentation",
										"src": "831:34:11",
										"text": "@inheritdoc ISignatureTransfer"
									},
									"functionSelector": "30f28b7a",
									"id": 1800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permitTransferFrom",
									"nameLocation": "879:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "permit",
												"nameLocation": "933:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "907:32:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitTransferFrom_$271_memory_ptr",
													"typeString": "struct ISignatureTransfer.PermitTransferFrom"
												},
												"typeName": {
													"id": 1778,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1777,
														"name": "PermitTransferFrom",
														"nameLocations": [
															"907:18:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 271,
														"src": "907:18:11"
													},
													"referencedDeclaration": 271,
													"src": "907:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitTransferFrom_$271_storage_ptr",
														"typeString": "struct ISignatureTransfer.PermitTransferFrom"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "transferDetails",
												"nameLocation": "983:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "949:49:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SignatureTransferDetails_$277_calldata_ptr",
													"typeString": "struct ISignatureTransfer.SignatureTransferDetails"
												},
												"typeName": {
													"id": 1781,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1780,
														"name": "SignatureTransferDetails",
														"nameLocations": [
															"949:24:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 277,
														"src": "949:24:11"
													},
													"referencedDeclaration": 277,
													"src": "949:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SignatureTransferDetails_$277_storage_ptr",
														"typeString": "struct ISignatureTransfer.SignatureTransferDetails"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1016:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "1008:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "1046:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "1031:24:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1785,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1031:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "897:164:11"
									},
									"returnParameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1071:0:11"
									},
									"scope": 2170,
									"src": "870:295:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										329
									],
									"body": {
										"id": 1830,
										"nodeType": "Block",
										"src": "1486:153:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1819,
															"name": "permit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1804,
															"src": "1529:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PermitTransferFrom_$271_memory_ptr",
																"typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
															}
														},
														{
															"id": 1820,
															"name": "transferDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "1537:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SignatureTransferDetails_$277_calldata_ptr",
																"typeString": "struct ISignatureTransfer.SignatureTransferDetails calldata"
															}
														},
														{
															"id": 1821,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1809,
															"src": "1554:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1824,
																	"name": "witness",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1811,
																	"src": "1584:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1825,
																	"name": "witnessTypeString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1813,
																	"src": "1593:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_calldata_ptr",
																		"typeString": "string calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_string_calldata_ptr",
																		"typeString": "string calldata"
																	}
																],
																"expression": {
																	"id": 1822,
																	"name": "permit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1804,
																	"src": "1561:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PermitTransferFrom_$271_memory_ptr",
																		"typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
																	}
																},
																"id": 1823,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1568:15:11",
																"memberName": "hashWithWitness",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 773,
																"src": "1561:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_PermitTransferFrom_$271_memory_ptr_$_t_bytes32_$_t_string_calldata_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_PermitTransferFrom_$271_memory_ptr_$",
																	"typeString": "function (struct ISignatureTransfer.PermitTransferFrom memory,bytes32,string calldata) view returns (bytes32)"
																}
															},
															"id": 1826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1561:50:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1827,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1815,
															"src": "1613:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PermitTransferFrom_$271_memory_ptr",
																"typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
															},
															{
																"typeIdentifier": "t_struct$_SignatureTransferDetails_$277_calldata_ptr",
																"typeString": "struct ISignatureTransfer.SignatureTransferDetails calldata"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 1818,
														"name": "_permitTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1903,
															2075
														],
														"referencedDeclaration": 1903,
														"src": "1496:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_PermitTransferFrom_$271_memory_ptr_$_t_struct$_SignatureTransferDetails_$277_calldata_ptr_$_t_address_$_t_bytes32_$_t_bytes_calldata_ptr_$returns$__$",
															"typeString": "function (struct ISignatureTransfer.PermitTransferFrom memory,struct ISignatureTransfer.SignatureTransferDetails calldata,address,bytes32,bytes calldata)"
														}
													},
													"id": 1828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1496:136:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1829,
												"nodeType": "ExpressionStatement",
												"src": "1496:136:11"
											}
										]
									},
									"documentation": {
										"id": 1801,
										"nodeType": "StructuredDocumentation",
										"src": "1171:34:11",
										"text": "@inheritdoc ISignatureTransfer"
									},
									"functionSelector": "137c29fe",
									"id": 1831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permitWitnessTransferFrom",
									"nameLocation": "1219:25:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "permit",
												"nameLocation": "1280:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "1254:32:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitTransferFrom_$271_memory_ptr",
													"typeString": "struct ISignatureTransfer.PermitTransferFrom"
												},
												"typeName": {
													"id": 1803,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1802,
														"name": "PermitTransferFrom",
														"nameLocations": [
															"1254:18:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 271,
														"src": "1254:18:11"
													},
													"referencedDeclaration": 271,
													"src": "1254:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitTransferFrom_$271_storage_ptr",
														"typeString": "struct ISignatureTransfer.PermitTransferFrom"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "transferDetails",
												"nameLocation": "1330:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "1296:49:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SignatureTransferDetails_$277_calldata_ptr",
													"typeString": "struct ISignatureTransfer.SignatureTransferDetails"
												},
												"typeName": {
													"id": 1806,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1805,
														"name": "SignatureTransferDetails",
														"nameLocations": [
															"1296:24:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 277,
														"src": "1296:24:11"
													},
													"referencedDeclaration": 277,
													"src": "1296:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SignatureTransferDetails_$277_storage_ptr",
														"typeString": "struct ISignatureTransfer.SignatureTransferDetails"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1363:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "1355:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "witness",
												"nameLocation": "1386:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "1378:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1810,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1378:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "witnessTypeString",
												"nameLocation": "1419:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "1403:33:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1812,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1403:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "1461:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "1446:24:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1814,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1446:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1244:232:11"
									},
									"returnParameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1486:0:11"
									},
									"scope": 2170,
									"src": "1210:429:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1902,
										"nodeType": "Block",
										"src": "2293:477:11",
										"statements": [
											{
												"assignments": [
													1848
												],
												"declarations": [
													{
														"constant": false,
														"id": 1848,
														"mutability": "mutable",
														"name": "requestedAmount",
														"nameLocation": "2311:15:11",
														"nodeType": "VariableDeclaration",
														"scope": 1902,
														"src": "2303:23:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1847,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2303:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1851,
												"initialValue": {
													"expression": {
														"id": 1849,
														"name": "transferDetails",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1838,
														"src": "2329:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SignatureTransferDetails_$277_calldata_ptr",
															"typeString": "struct ISignatureTransfer.SignatureTransferDetails calldata"
														}
													},
													"id": 1850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2345:15:11",
													"memberName": "requestedAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 276,
													"src": "2329:31:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2303:57:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1852,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2375:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2381:9:11",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2375:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1854,
															"name": "permit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1835,
															"src": "2393:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PermitTransferFrom_$271_memory_ptr",
																"typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
															}
														},
														"id": 1855,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2400:8:11",
														"memberName": "deadline",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 270,
														"src": "2393:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2375:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1862,
												"nodeType": "IfStatement",
												"src": "2371:79:11",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"expression": {
																	"id": 1858,
																	"name": "permit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1835,
																	"src": "2434:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PermitTransferFrom_$271_memory_ptr",
																		"typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
																	}
																},
																"id": 1859,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2441:8:11",
																"memberName": "deadline",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 270,
																"src": "2434:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1857,
															"name": "SignatureExpired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "2417:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 1860,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2417:33:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1861,
													"nodeType": "RevertStatement",
													"src": "2410:40:11"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1863,
														"name": "requestedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1848,
														"src": "2464:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 1864,
																"name": "permit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1835,
																"src": "2482:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PermitTransferFrom_$271_memory_ptr",
																	"typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
																}
															},
															"id": 1865,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2489:9:11",
															"memberName": "permitted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 266,
															"src": "2482:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenPermissions_$262_memory_ptr",
																"typeString": "struct ISignatureTransfer.TokenPermissions memory"
															}
														},
														"id": 1866,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2499:6:11",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 261,
														"src": "2482:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2464:41:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1874,
												"nodeType": "IfStatement",
												"src": "2460:92:11",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"expression": {
																	"expression": {
																		"id": 1869,
																		"name": "permit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1835,
																		"src": "2528:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PermitTransferFrom_$271_memory_ptr",
																			"typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
																		}
																	},
																	"id": 1870,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2535:9:11",
																	"memberName": "permitted",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 266,
																	"src": "2528:16:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenPermissions_$262_memory_ptr",
																		"typeString": "struct ISignatureTransfer.TokenPermissions memory"
																	}
																},
																"id": 1871,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2545:6:11",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 261,
																"src": "2528:23:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1868,
															"name": "InvalidAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "2514:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 1872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2514:38:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1873,
													"nodeType": "RevertStatement",
													"src": "2507:45:11"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1876,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1840,
															"src": "2582:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1877,
																"name": "permit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1835,
																"src": "2589:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PermitTransferFrom_$271_memory_ptr",
																	"typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
																}
															},
															"id": 1878,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2596:5:11",
															"memberName": "nonce",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 268,
															"src": "2589:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1875,
														"name": "_useUnorderedNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2169,
														"src": "2563:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2563:39:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1880,
												"nodeType": "ExpressionStatement",
												"src": "2563:39:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1885,
																	"name": "dataHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1842,
																	"src": "2645:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 1884,
																"name": "_hashTypedData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1709,
																"src": "2630:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
																	"typeString": "function (bytes32) view returns (bytes32)"
																}
															},
															"id": 1886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2630:24:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1887,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1840,
															"src": "2656:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1881,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1844,
															"src": "2613:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														"id": 1883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2623:6:11",
														"memberName": "verify",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1059,
														"src": "2613:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes_calldata_ptr_$_t_bytes32_$_t_address_$returns$__$attached_to$_t_bytes_calldata_ptr_$",
															"typeString": "function (bytes calldata,bytes32,address) view"
														}
													},
													"id": 1888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2613:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1889,
												"nodeType": "ExpressionStatement",
												"src": "2613:49:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1896,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1840,
															"src": "2720:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1897,
																"name": "transferDetails",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1838,
																"src": "2727:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SignatureTransferDetails_$277_calldata_ptr",
																	"typeString": "struct ISignatureTransfer.SignatureTransferDetails calldata"
																}
															},
															"id": 1898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2743:2:11",
															"memberName": "to",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 274,
															"src": "2727:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1899,
															"name": "requestedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1848,
															"src": "2747:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1891,
																			"name": "permit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1835,
																			"src": "2679:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PermitTransferFrom_$271_memory_ptr",
																				"typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
																			}
																		},
																		"id": 1892,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2686:9:11",
																		"memberName": "permitted",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 266,
																		"src": "2679:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenPermissions_$262_memory_ptr",
																			"typeString": "struct ISignatureTransfer.TokenPermissions memory"
																		}
																	},
																	"id": 1893,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2696:5:11",
																	"memberName": "token",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 259,
																	"src": "2679:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1890,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2558,
																"src": "2673:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$2558_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 1894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2673:29:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$2558",
																"typeString": "contract ERC20"
															}
														},
														"id": 1895,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2703:16:11",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2602,
														"src": "2673:46:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$2558_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_ERC20_$2558_$",
															"typeString": "function (contract ERC20,address,address,uint256)"
														}
													},
													"id": 1900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2673:90:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1901,
												"nodeType": "ExpressionStatement",
												"src": "2673:90:11"
											}
										]
									},
									"documentation": {
										"id": 1832,
										"nodeType": "StructuredDocumentation",
										"src": "1645:416:11",
										"text": "@notice Transfers a token using a signed permit message.\n @param permit The permit data signed over by the owner\n @param dataHash The EIP-712 hash of permit data to include when checking signature\n @param owner The owner of the tokens to transfer\n @param transferDetails The spender's requested transfer details for the permitted token\n @param signature The signature to verify"
									},
									"id": 1903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_permitTransferFrom",
									"nameLocation": "2075:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "permit",
												"nameLocation": "2130:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1903,
												"src": "2104:32:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitTransferFrom_$271_memory_ptr",
													"typeString": "struct ISignatureTransfer.PermitTransferFrom"
												},
												"typeName": {
													"id": 1834,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1833,
														"name": "PermitTransferFrom",
														"nameLocations": [
															"2104:18:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 271,
														"src": "2104:18:11"
													},
													"referencedDeclaration": 271,
													"src": "2104:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitTransferFrom_$271_storage_ptr",
														"typeString": "struct ISignatureTransfer.PermitTransferFrom"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "transferDetails",
												"nameLocation": "2180:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 1903,
												"src": "2146:49:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SignatureTransferDetails_$277_calldata_ptr",
													"typeString": "struct ISignatureTransfer.SignatureTransferDetails"
												},
												"typeName": {
													"id": 1837,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1836,
														"name": "SignatureTransferDetails",
														"nameLocations": [
															"2146:24:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 277,
														"src": "2146:24:11"
													},
													"referencedDeclaration": 277,
													"src": "2146:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SignatureTransferDetails_$277_storage_ptr",
														"typeString": "struct ISignatureTransfer.SignatureTransferDetails"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2213:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1903,
												"src": "2205:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2205:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "dataHash",
												"nameLocation": "2236:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1903,
												"src": "2228:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1841,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2228:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2269:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1903,
												"src": "2254:24:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1843,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2254:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2094:190:11"
									},
									"returnParameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2293:0:11"
									},
									"scope": 2170,
									"src": "2066:704:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										344
									],
									"body": {
										"id": 1928,
										"nodeType": "Block",
										"src": "3023:94:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1919,
															"name": "permit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1907,
															"src": "3053:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_memory_ptr",
																"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom memory"
															}
														},
														{
															"id": 1920,
															"name": "transferDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1911,
															"src": "3061:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_SignatureTransferDetails_$277_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct ISignatureTransfer.SignatureTransferDetails calldata[] calldata"
															}
														},
														{
															"id": 1921,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1913,
															"src": "3078:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1922,
																	"name": "permit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1907,
																	"src": "3085:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_memory_ptr",
																		"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom memory"
																	}
																},
																"id": 1923,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3092:4:11",
																"memberName": "hash",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 728,
																"src": "3085:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_PermitBatchTransferFrom_$287_memory_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_PermitBatchTransferFrom_$287_memory_ptr_$",
																	"typeString": "function (struct ISignatureTransfer.PermitBatchTransferFrom memory) view returns (bytes32)"
																}
															},
															"id": 1924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3085:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1925,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1915,
															"src": "3100:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_memory_ptr",
																"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom memory"
															},
															{
																"typeIdentifier": "t_array$_t_struct$_SignatureTransferDetails_$277_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct ISignatureTransfer.SignatureTransferDetails calldata[] calldata"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 1918,
														"name": "_permitTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1903,
															2075
														],
														"referencedDeclaration": 2075,
														"src": "3033:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_PermitBatchTransferFrom_$287_memory_ptr_$_t_array$_t_struct$_SignatureTransferDetails_$277_calldata_ptr_$dyn_calldata_ptr_$_t_address_$_t_bytes32_$_t_bytes_calldata_ptr_$returns$__$",
															"typeString": "function (struct ISignatureTransfer.PermitBatchTransferFrom memory,struct ISignatureTransfer.SignatureTransferDetails calldata[] calldata,address,bytes32,bytes calldata)"
														}
													},
													"id": 1926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3033:77:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1927,
												"nodeType": "ExpressionStatement",
												"src": "3033:77:11"
											}
										]
									},
									"documentation": {
										"id": 1904,
										"nodeType": "StructuredDocumentation",
										"src": "2776:34:11",
										"text": "@inheritdoc ISignatureTransfer"
									},
									"functionSelector": "edd9444b",
									"id": 1929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permitTransferFrom",
									"nameLocation": "2824:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "permit",
												"nameLocation": "2883:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "2852:37:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_memory_ptr",
													"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom"
												},
												"typeName": {
													"id": 1906,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1905,
														"name": "PermitBatchTransferFrom",
														"nameLocations": [
															"2852:23:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 287,
														"src": "2852:23:11"
													},
													"referencedDeclaration": 287,
													"src": "2852:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_storage_ptr",
														"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "transferDetails",
												"nameLocation": "2935:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "2899:51:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_SignatureTransferDetails_$277_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct ISignatureTransfer.SignatureTransferDetails[]"
												},
												"typeName": {
													"baseType": {
														"id": 1909,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1908,
															"name": "SignatureTransferDetails",
															"nameLocations": [
																"2899:24:11"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 277,
															"src": "2899:24:11"
														},
														"referencedDeclaration": 277,
														"src": "2899:24:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SignatureTransferDetails_$277_storage_ptr",
															"typeString": "struct ISignatureTransfer.SignatureTransferDetails"
														}
													},
													"id": 1910,
													"nodeType": "ArrayTypeName",
													"src": "2899:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SignatureTransferDetails_$277_storage_$dyn_storage_ptr",
														"typeString": "struct ISignatureTransfer.SignatureTransferDetails[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2968:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "2960:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2960:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2998:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "2983:24:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1914,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2983:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2842:171:11"
									},
									"returnParameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3023:0:11"
									},
									"scope": 2170,
									"src": "2815:302:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										363
									],
									"body": {
										"id": 1960,
										"nodeType": "Block",
										"src": "3445:153:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1949,
															"name": "permit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1933,
															"src": "3488:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_memory_ptr",
																"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom memory"
															}
														},
														{
															"id": 1950,
															"name": "transferDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1937,
															"src": "3496:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_SignatureTransferDetails_$277_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct ISignatureTransfer.SignatureTransferDetails calldata[] calldata"
															}
														},
														{
															"id": 1951,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1939,
															"src": "3513:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1954,
																	"name": "witness",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1941,
																	"src": "3543:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1955,
																	"name": "witnessTypeString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1943,
																	"src": "3552:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_calldata_ptr",
																		"typeString": "string calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_string_calldata_ptr",
																		"typeString": "string calldata"
																	}
																],
																"expression": {
																	"id": 1952,
																	"name": "permit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1933,
																	"src": "3520:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_memory_ptr",
																		"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom memory"
																	}
																},
																"id": 1953,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3527:15:11",
																"memberName": "hashWithWitness",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 856,
																"src": "3520:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_PermitBatchTransferFrom_$287_memory_ptr_$_t_bytes32_$_t_string_calldata_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_PermitBatchTransferFrom_$287_memory_ptr_$",
																	"typeString": "function (struct ISignatureTransfer.PermitBatchTransferFrom memory,bytes32,string calldata) view returns (bytes32)"
																}
															},
															"id": 1956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3520:50:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1957,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1945,
															"src": "3572:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_memory_ptr",
																"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom memory"
															},
															{
																"typeIdentifier": "t_array$_t_struct$_SignatureTransferDetails_$277_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct ISignatureTransfer.SignatureTransferDetails calldata[] calldata"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 1948,
														"name": "_permitTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1903,
															2075
														],
														"referencedDeclaration": 2075,
														"src": "3455:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_PermitBatchTransferFrom_$287_memory_ptr_$_t_array$_t_struct$_SignatureTransferDetails_$277_calldata_ptr_$dyn_calldata_ptr_$_t_address_$_t_bytes32_$_t_bytes_calldata_ptr_$returns$__$",
															"typeString": "function (struct ISignatureTransfer.PermitBatchTransferFrom memory,struct ISignatureTransfer.SignatureTransferDetails calldata[] calldata,address,bytes32,bytes calldata)"
														}
													},
													"id": 1958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3455:136:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1959,
												"nodeType": "ExpressionStatement",
												"src": "3455:136:11"
											}
										]
									},
									"documentation": {
										"id": 1930,
										"nodeType": "StructuredDocumentation",
										"src": "3123:34:11",
										"text": "@inheritdoc ISignatureTransfer"
									},
									"functionSelector": "fe8ec1a7",
									"id": 1961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permitWitnessTransferFrom",
									"nameLocation": "3171:25:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "permit",
												"nameLocation": "3237:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "3206:37:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_memory_ptr",
													"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom"
												},
												"typeName": {
													"id": 1932,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1931,
														"name": "PermitBatchTransferFrom",
														"nameLocations": [
															"3206:23:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 287,
														"src": "3206:23:11"
													},
													"referencedDeclaration": 287,
													"src": "3206:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_storage_ptr",
														"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "transferDetails",
												"nameLocation": "3289:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "3253:51:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_SignatureTransferDetails_$277_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct ISignatureTransfer.SignatureTransferDetails[]"
												},
												"typeName": {
													"baseType": {
														"id": 1935,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1934,
															"name": "SignatureTransferDetails",
															"nameLocations": [
																"3253:24:11"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 277,
															"src": "3253:24:11"
														},
														"referencedDeclaration": 277,
														"src": "3253:24:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SignatureTransferDetails_$277_storage_ptr",
															"typeString": "struct ISignatureTransfer.SignatureTransferDetails"
														}
													},
													"id": 1936,
													"nodeType": "ArrayTypeName",
													"src": "3253:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SignatureTransferDetails_$277_storage_$dyn_storage_ptr",
														"typeString": "struct ISignatureTransfer.SignatureTransferDetails[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3322:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "3314:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "witness",
												"nameLocation": "3345:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "3337:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1940,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3337:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "witnessTypeString",
												"nameLocation": "3378:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "3362:33:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1942,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3362:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3420:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "3405:24:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1944,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3405:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3196:239:11"
									},
									"returnParameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3445:0:11"
									},
									"scope": 2170,
									"src": "3162:436:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2074,
										"nodeType": "Block",
										"src": "4162:960:11",
										"statements": [
											{
												"assignments": [
													1979
												],
												"declarations": [
													{
														"constant": false,
														"id": 1979,
														"mutability": "mutable",
														"name": "numPermitted",
														"nameLocation": "4180:12:11",
														"nodeType": "VariableDeclaration",
														"scope": 2074,
														"src": "4172:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1978,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4172:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1983,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 1980,
															"name": "permit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1965,
															"src": "4195:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_memory_ptr",
																"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom memory"
															}
														},
														"id": 1981,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4202:9:11",
														"memberName": "permitted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 282,
														"src": "4195:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_TokenPermissions_$262_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct ISignatureTransfer.TokenPermissions memory[] memory"
														}
													},
													"id": 1982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4212:6:11",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4195:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4172:46:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1984,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4233:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4239:9:11",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4233:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1986,
															"name": "permit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1965,
															"src": "4251:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_memory_ptr",
																"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom memory"
															}
														},
														"id": 1987,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4258:8:11",
														"memberName": "deadline",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 286,
														"src": "4251:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4233:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1994,
												"nodeType": "IfStatement",
												"src": "4229:79:11",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"expression": {
																	"id": 1990,
																	"name": "permit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1965,
																	"src": "4292:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_memory_ptr",
																		"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom memory"
																	}
																},
																"id": 1991,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4299:8:11",
																"memberName": "deadline",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 286,
																"src": "4292:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1989,
															"name": "SignatureExpired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "4275:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 1992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4275:33:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1993,
													"nodeType": "RevertStatement",
													"src": "4268:40:11"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1995,
														"name": "numPermitted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1979,
														"src": "4322:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 1996,
															"name": "transferDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1969,
															"src": "4338:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_SignatureTransferDetails_$277_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct ISignatureTransfer.SignatureTransferDetails calldata[] calldata"
															}
														},
														"id": 1997,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4354:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4338:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4322:38:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2002,
												"nodeType": "IfStatement",
												"src": "4318:67:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1999,
															"name": "LengthMismatch",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "4369:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2000,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4369:16:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2001,
													"nodeType": "RevertStatement",
													"src": "4362:23:11"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2004,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1971,
															"src": "4415:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2005,
																"name": "permit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1965,
																"src": "4422:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_memory_ptr",
																	"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom memory"
																}
															},
															"id": 2006,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4429:5:11",
															"memberName": "nonce",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 284,
															"src": "4422:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2003,
														"name": "_useUnorderedNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2169,
														"src": "4396:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4396:39:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2008,
												"nodeType": "ExpressionStatement",
												"src": "4396:39:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2013,
																	"name": "dataHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1973,
																	"src": "4477:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2012,
																"name": "_hashTypedData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1709,
																"src": "4462:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
																	"typeString": "function (bytes32) view returns (bytes32)"
																}
															},
															"id": 2014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4462:24:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2015,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1971,
															"src": "4488:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2009,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1975,
															"src": "4445:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														"id": 2011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4455:6:11",
														"memberName": "verify",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1059,
														"src": "4445:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes_calldata_ptr_$_t_bytes32_$_t_address_$returns$__$attached_to$_t_bytes_calldata_ptr_$",
															"typeString": "function (bytes calldata,bytes32,address) view"
														}
													},
													"id": 2016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4445:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2017,
												"nodeType": "ExpressionStatement",
												"src": "4445:49:11"
											},
											{
												"id": 2073,
												"nodeType": "UncheckedBlock",
												"src": "4505:611:11",
												"statements": [
													{
														"body": {
															"id": 2071,
															"nodeType": "Block",
															"src": "4572:534:11",
															"statements": [
																{
																	"assignments": [
																		2030
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2030,
																			"mutability": "mutable",
																			"name": "permitted",
																			"nameLocation": "4614:9:11",
																			"nodeType": "VariableDeclaration",
																			"scope": 2071,
																			"src": "4590:33:11",
																			"stateVariable": false,
																			"storageLocation": "memory",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenPermissions_$262_memory_ptr",
																				"typeString": "struct ISignatureTransfer.TokenPermissions"
																			},
																			"typeName": {
																				"id": 2029,
																				"nodeType": "UserDefinedTypeName",
																				"pathNode": {
																					"id": 2028,
																					"name": "TokenPermissions",
																					"nameLocations": [
																						"4590:16:11"
																					],
																					"nodeType": "IdentifierPath",
																					"referencedDeclaration": 262,
																					"src": "4590:16:11"
																				},
																				"referencedDeclaration": 262,
																				"src": "4590:16:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenPermissions_$262_storage_ptr",
																					"typeString": "struct ISignatureTransfer.TokenPermissions"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2035,
																	"initialValue": {
																		"baseExpression": {
																			"expression": {
																				"id": 2031,
																				"name": "permit",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1965,
																				"src": "4626:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_memory_ptr",
																					"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom memory"
																				}
																			},
																			"id": 2032,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4633:9:11",
																			"memberName": "permitted",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 282,
																			"src": "4626:16:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_TokenPermissions_$262_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct ISignatureTransfer.TokenPermissions memory[] memory"
																			}
																		},
																		"id": 2034,
																		"indexExpression": {
																			"id": 2033,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2019,
																			"src": "4643:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4626:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenPermissions_$262_memory_ptr",
																			"typeString": "struct ISignatureTransfer.TokenPermissions memory"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "4590:55:11"
																},
																{
																	"assignments": [
																		2037
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2037,
																			"mutability": "mutable",
																			"name": "requestedAmount",
																			"nameLocation": "4671:15:11",
																			"nodeType": "VariableDeclaration",
																			"scope": 2071,
																			"src": "4663:23:11",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2036,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "4663:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2042,
																	"initialValue": {
																		"expression": {
																			"baseExpression": {
																				"id": 2038,
																				"name": "transferDetails",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1969,
																				"src": "4689:15:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_SignatureTransferDetails_$277_calldata_ptr_$dyn_calldata_ptr",
																					"typeString": "struct ISignatureTransfer.SignatureTransferDetails calldata[] calldata"
																				}
																			},
																			"id": 2040,
																			"indexExpression": {
																				"id": 2039,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2019,
																				"src": "4705:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4689:18:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SignatureTransferDetails_$277_calldata_ptr",
																				"typeString": "struct ISignatureTransfer.SignatureTransferDetails calldata"
																			}
																		},
																		"id": 2041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4708:15:11",
																		"memberName": "requestedAmount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 276,
																		"src": "4689:34:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "4663:60:11"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2043,
																			"name": "requestedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2037,
																			"src": "4746:15:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"expression": {
																				"id": 2044,
																				"name": "permitted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2030,
																				"src": "4764:9:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenPermissions_$262_memory_ptr",
																					"typeString": "struct ISignatureTransfer.TokenPermissions memory"
																				}
																			},
																			"id": 2045,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4774:6:11",
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 261,
																			"src": "4764:16:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4746:34:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2052,
																	"nodeType": "IfStatement",
																	"src": "4742:78:11",
																	"trueBody": {
																		"errorCall": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 2048,
																						"name": "permitted",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2030,
																						"src": "4803:9:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TokenPermissions_$262_memory_ptr",
																							"typeString": "struct ISignatureTransfer.TokenPermissions memory"
																						}
																					},
																					"id": 2049,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4813:6:11",
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 261,
																					"src": "4803:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2047,
																				"name": "InvalidAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 244,
																				"src": "4789:13:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 2050,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4789:31:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2051,
																		"nodeType": "RevertStatement",
																		"src": "4782:38:11"
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2053,
																			"name": "requestedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2037,
																			"src": "4843:15:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2054,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4862:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "4843:20:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2070,
																	"nodeType": "IfStatement",
																	"src": "4839:253:11",
																	"trueBody": {
																		"id": 2069,
																		"nodeType": "Block",
																		"src": "4865:227:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 2061,
																							"name": "owner",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1971,
																							"src": "5027:5:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"expression": {
																								"baseExpression": {
																									"id": 2062,
																									"name": "transferDetails",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1969,
																									"src": "5034:15:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_SignatureTransferDetails_$277_calldata_ptr_$dyn_calldata_ptr",
																										"typeString": "struct ISignatureTransfer.SignatureTransferDetails calldata[] calldata"
																									}
																								},
																								"id": 2064,
																								"indexExpression": {
																									"id": 2063,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2019,
																									"src": "5050:1:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "5034:18:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_SignatureTransferDetails_$277_calldata_ptr",
																									"typeString": "struct ISignatureTransfer.SignatureTransferDetails calldata"
																								}
																							},
																							"id": 2065,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5053:2:11",
																							"memberName": "to",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 274,
																							"src": "5034:21:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 2066,
																							"name": "requestedAmount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2037,
																							"src": "5057:15:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"arguments": [
																								{
																									"expression": {
																										"id": 2057,
																										"name": "permitted",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2030,
																										"src": "4993:9:11",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_TokenPermissions_$262_memory_ptr",
																											"typeString": "struct ISignatureTransfer.TokenPermissions memory"
																										}
																									},
																									"id": 2058,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "5003:5:11",
																									"memberName": "token",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 259,
																									"src": "4993:15:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								],
																								"id": 2056,
																								"name": "ERC20",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2558,
																								"src": "4987:5:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_ERC20_$2558_$",
																									"typeString": "type(contract ERC20)"
																								}
																							},
																							"id": 2059,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "4987:22:11",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_ERC20_$2558",
																								"typeString": "contract ERC20"
																							}
																						},
																						"id": 2060,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "5010:16:11",
																						"memberName": "safeTransferFrom",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2602,
																						"src": "4987:39:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$2558_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_ERC20_$2558_$",
																							"typeString": "function (contract ERC20,address,address,uint256)"
																						}
																					},
																					"id": 2067,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4987:86:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2068,
																				"nodeType": "ExpressionStatement",
																				"src": "4987:86:11"
																			}
																		]
																	}
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2022,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2019,
																"src": "4549:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2023,
																"name": "numPermitted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1979,
																"src": "4553:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4549:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2072,
														"initializationExpression": {
															"assignments": [
																2019
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2019,
																	"mutability": "mutable",
																	"name": "i",
																	"nameLocation": "4542:1:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 2072,
																	"src": "4534:9:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2018,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4534:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2021,
															"initialValue": {
																"hexValue": "30",
																"id": 2020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4546:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4534:13:11"
														},
														"loopExpression": {
															"expression": {
																"id": 2026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": true,
																"src": "4567:3:11",
																"subExpression": {
																	"id": 2025,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2019,
																	"src": "4569:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2027,
															"nodeType": "ExpressionStatement",
															"src": "4567:3:11"
														},
														"nodeType": "ForStatement",
														"src": "4529:577:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1962,
										"nodeType": "StructuredDocumentation",
										"src": "3604:319:11",
										"text": "@notice Transfers tokens using a signed permit messages\n @param permit The permit data signed over by the owner\n @param dataHash The EIP-712 hash of permit data to include when checking signature\n @param owner The owner of the tokens to transfer\n @param signature The signature to verify"
									},
									"id": 2075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_permitTransferFrom",
									"nameLocation": "3937:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "permit",
												"nameLocation": "3997:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "3966:37:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_memory_ptr",
													"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom"
												},
												"typeName": {
													"id": 1964,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1963,
														"name": "PermitBatchTransferFrom",
														"nameLocations": [
															"3966:23:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 287,
														"src": "3966:23:11"
													},
													"referencedDeclaration": 287,
													"src": "3966:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$287_storage_ptr",
														"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "transferDetails",
												"nameLocation": "4049:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "4013:51:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_SignatureTransferDetails_$277_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct ISignatureTransfer.SignatureTransferDetails[]"
												},
												"typeName": {
													"baseType": {
														"id": 1967,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1966,
															"name": "SignatureTransferDetails",
															"nameLocations": [
																"4013:24:11"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 277,
															"src": "4013:24:11"
														},
														"referencedDeclaration": 277,
														"src": "4013:24:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SignatureTransferDetails_$277_storage_ptr",
															"typeString": "struct ISignatureTransfer.SignatureTransferDetails"
														}
													},
													"id": 1968,
													"nodeType": "ArrayTypeName",
													"src": "4013:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SignatureTransferDetails_$277_storage_$dyn_storage_ptr",
														"typeString": "struct ISignatureTransfer.SignatureTransferDetails[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4082:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "4074:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4074:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "dataHash",
												"nameLocation": "4105:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "4097:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1972,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4097:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "4138:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "4123:24:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1974,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4123:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3956:197:11"
									},
									"returnParameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4162:0:11"
									},
									"scope": 2170,
									"src": "3928:1194:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										371
									],
									"body": {
										"id": 2099,
										"nodeType": "Block",
										"src": "5242:126:11",
										"statements": [
											{
												"expression": {
													"id": 2090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2083,
																"name": "nonceBitmap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1775,
																"src": "5252:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2087,
															"indexExpression": {
																"expression": {
																	"id": 2084,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5264:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5268:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5264:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5252:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2088,
														"indexExpression": {
															"id": 2086,
															"name": "wordPos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2078,
															"src": "5276:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5252:32:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"id": 2089,
														"name": "mask",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2080,
														"src": "5288:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5252:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2091,
												"nodeType": "ExpressionStatement",
												"src": "5252:40:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2093,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5335:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5339:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5335:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2095,
															"name": "wordPos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2078,
															"src": "5347:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2096,
															"name": "mask",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2080,
															"src": "5356:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2092,
														"name": "UnorderedNonceInvalidation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "5308:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5308:53:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2098,
												"nodeType": "EmitStatement",
												"src": "5303:58:11"
											}
										]
									},
									"documentation": {
										"id": 2076,
										"nodeType": "StructuredDocumentation",
										"src": "5128:34:11",
										"text": "@inheritdoc ISignatureTransfer"
									},
									"functionSelector": "3ff9dcb1",
									"id": 2100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invalidateUnorderedNonces",
									"nameLocation": "5176:25:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "wordPos",
												"nameLocation": "5210:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "5202:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5202:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "mask",
												"nameLocation": "5227:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "5219:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5219:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5201:31:11"
									},
									"returnParameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5242:0:11"
									},
									"scope": 2170,
									"src": "5167:201:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2126,
										"nodeType": "Block",
										"src": "5946:77:11",
										"statements": [
											{
												"expression": {
													"id": 2117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2110,
														"name": "wordPos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2106,
														"src": "5956:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2113,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2103,
																	"src": "5974:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5983:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "5974:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5966:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint248_$",
																"typeString": "type(uint248)"
															},
															"typeName": {
																"id": 2111,
																"name": "uint248",
																"nodeType": "ElementaryTypeName",
																"src": "5966:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 2116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5966:19:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint248",
															"typeString": "uint248"
														}
													},
													"src": "5956:29:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2118,
												"nodeType": "ExpressionStatement",
												"src": "5956:29:11"
											},
											{
												"expression": {
													"id": 2124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2119,
														"name": "bitPos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2108,
														"src": "5995:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2122,
																"name": "nonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2103,
																"src": "6010:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6004:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															},
															"typeName": {
																"id": 2120,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "6004:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 2123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6004:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "5995:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2125,
												"nodeType": "ExpressionStatement",
												"src": "5995:21:11"
											}
										]
									},
									"documentation": {
										"id": 2101,
										"nodeType": "StructuredDocumentation",
										"src": "5374:472:11",
										"text": "@notice Returns the index of the bitmap and the bit position within the bitmap. Used for unordered nonces\n @param nonce The nonce to get the associated word and bit positions\n @return wordPos The word position or index into the nonceBitmap\n @return bitPos The bit position\n @dev The first 248 bits of the nonce value is the index of the desired bitmap\n @dev The last 8 bits of the nonce value is the position of the bit in the bitmap"
									},
									"id": 2127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bitmapPositions",
									"nameLocation": "5860:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "5884:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2127,
												"src": "5876:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5876:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5875:15:11"
									},
									"returnParameters": {
										"id": 2109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "wordPos",
												"nameLocation": "5921:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2127,
												"src": "5913:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5913:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "bitPos",
												"nameLocation": "5938:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2127,
												"src": "5930:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5930:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5912:33:11"
									},
									"scope": 2170,
									"src": "5851:172:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2168,
										"nodeType": "Block",
										"src": "6307:227:11",
										"statements": [
											{
												"assignments": [
													2136,
													2138
												],
												"declarations": [
													{
														"constant": false,
														"id": 2136,
														"mutability": "mutable",
														"name": "wordPos",
														"nameLocation": "6326:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2168,
														"src": "6318:15:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2135,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6318:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2138,
														"mutability": "mutable",
														"name": "bitPos",
														"nameLocation": "6343:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2168,
														"src": "6335:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2137,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6335:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2142,
												"initialValue": {
													"arguments": [
														{
															"id": 2140,
															"name": "nonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2132,
															"src": "6369:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2139,
														"name": "bitmapPositions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2127,
														"src": "6353:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256,uint256)"
														}
													},
													"id": 2141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6353:22:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6317:58:11"
											},
											{
												"assignments": [
													2144
												],
												"declarations": [
													{
														"constant": false,
														"id": 2144,
														"mutability": "mutable",
														"name": "bit",
														"nameLocation": "6393:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 2168,
														"src": "6385:11:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2143,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6385:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2148,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6399:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 2146,
														"name": "bitPos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2138,
														"src": "6404:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6399:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6385:25:11"
											},
											{
												"assignments": [
													2150
												],
												"declarations": [
													{
														"constant": false,
														"id": 2150,
														"mutability": "mutable",
														"name": "flipped",
														"nameLocation": "6428:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2168,
														"src": "6420:15:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2149,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6420:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2158,
												"initialValue": {
													"id": 2157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2151,
																"name": "nonceBitmap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1775,
																"src": "6438:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2153,
															"indexExpression": {
																"id": 2152,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2130,
																"src": "6450:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6438:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2155,
														"indexExpression": {
															"id": 2154,
															"name": "wordPos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2136,
															"src": "6456:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6438:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "^=",
													"rightHandSide": {
														"id": 2156,
														"name": "bit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2144,
														"src": "6468:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6438:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6420:51:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2159,
															"name": "flipped",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2150,
															"src": "6486:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"id": 2160,
															"name": "bit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2144,
															"src": "6496:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6486:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2162,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6503:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6486:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2167,
												"nodeType": "IfStatement",
												"src": "6482:45:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2164,
															"name": "InvalidNonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1732,
															"src": "6513:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6513:14:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2166,
													"nodeType": "RevertStatement",
													"src": "6506:21:11"
												}
											}
										]
									},
									"documentation": {
										"id": 2128,
										"nodeType": "StructuredDocumentation",
										"src": "6029:207:11",
										"text": "@notice Checks whether a nonce is taken and sets the bit at the bit position in the bitmap at the word position\n @param from The address to use the nonce at\n @param nonce The nonce to spend"
									},
									"id": 2169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useUnorderedNonce",
									"nameLocation": "6250:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6277:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2169,
												"src": "6269:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6269:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "6291:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2169,
												"src": "6283:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6283:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6268:29:11"
									},
									"returnParameters": {
										"id": 2134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6307:0:11"
									},
									"scope": 2170,
									"src": "6241:293:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2171,
							"src": "480:6056:11",
							"usedErrors": [
								244,
								247,
								898,
								901,
								904,
								907,
								1729,
								1732
							],
							"usedEvents": [
								256
							]
						}
					],
					"src": "32:6505:11"
				},
				"id": 11
			},
			"solmate/src/tokens/ERC20.sol": {
				"ast": {
					"absolutePath": "solmate/src/tokens/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							2558
						]
					},
					"id": 2559,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2172,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:12"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2173,
								"nodeType": "StructuredDocumentation",
								"src": "68:406:12",
								"text": "@notice Modern and gas efficient ERC20 + EIP-2612 implementation.\n @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\n @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\n @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it."
							},
							"fullyImplemented": true,
							"id": 2558,
							"linearizedBaseContracts": [
								2558
							],
							"name": "ERC20",
							"nameLocation": "492:5:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2181,
									"name": "Transfer",
									"nameLocation": "689:8:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2175,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "714:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "698:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "698:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2177,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "736:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "720:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "720:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2179,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "748:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "740:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:58:12"
									},
									"src": "683:73:12"
								},
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2189,
									"name": "Approval",
									"nameLocation": "768:8:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2183,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "793:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "777:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2185,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "816:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "800:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "800:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2187,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "833:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "825:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "825:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:64:12"
									},
									"src": "762:79:12"
								},
								{
									"constant": false,
									"functionSelector": "06fdde03",
									"id": 2191,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "1045:4:12",
									"nodeType": "VariableDeclaration",
									"scope": 2558,
									"src": "1031:18:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2190,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1031:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "95d89b41",
									"id": 2193,
									"mutability": "mutable",
									"name": "symbol",
									"nameLocation": "1070:6:12",
									"nodeType": "VariableDeclaration",
									"scope": 2558,
									"src": "1056:20:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2192,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1056:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "313ce567",
									"id": 2195,
									"mutability": "immutable",
									"name": "decimals",
									"nameLocation": "1106:8:12",
									"nodeType": "VariableDeclaration",
									"scope": 2558,
									"src": "1083:31:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2194,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1083:5:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 2197,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "1319:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 2558,
									"src": "1304:26:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2196,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1304:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "70a08231",
									"id": 2201,
									"mutability": "mutable",
									"name": "balanceOf",
									"nameLocation": "1372:9:12",
									"nodeType": "VariableDeclaration",
									"scope": 2558,
									"src": "1337:44:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2200,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2198,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1345:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1337:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2199,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1356:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dd62ed3e",
									"id": 2207,
									"mutability": "mutable",
									"name": "allowance",
									"nameLocation": "1443:9:12",
									"nodeType": "VariableDeclaration",
									"scope": 2558,
									"src": "1388:64:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 2206,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2202,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1396:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1388:47:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2205,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2203,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1415:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1407:27:12",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2204,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1426:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2209,
									"mutability": "immutable",
									"name": "INITIAL_CHAIN_ID",
									"nameLocation": "1670:16:12",
									"nodeType": "VariableDeclaration",
									"scope": 2558,
									"src": "1643:43:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2208,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1643:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2211,
									"mutability": "immutable",
									"name": "INITIAL_DOMAIN_SEPARATOR",
									"nameLocation": "1720:24:12",
									"nodeType": "VariableDeclaration",
									"scope": 2558,
									"src": "1693:51:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2210,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1693:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "7ecebe00",
									"id": 2215,
									"mutability": "mutable",
									"name": "nonces",
									"nameLocation": "1786:6:12",
									"nodeType": "VariableDeclaration",
									"scope": 2558,
									"src": "1751:41:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2214,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2212,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1759:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1751:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2213,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1770:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2246,
										"nodeType": "Block",
										"src": "2084:189:12",
										"statements": [
											{
												"expression": {
													"id": 2226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2224,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2191,
														"src": "2094:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2225,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2217,
														"src": "2101:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2094:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2227,
												"nodeType": "ExpressionStatement",
												"src": "2094:12:12"
											},
											{
												"expression": {
													"id": 2230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2228,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2193,
														"src": "2116:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2229,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2219,
														"src": "2125:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2116:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2231,
												"nodeType": "ExpressionStatement",
												"src": "2116:16:12"
											},
											{
												"expression": {
													"id": 2234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2232,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2195,
														"src": "2142:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2233,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2221,
														"src": "2153:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "2142:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 2235,
												"nodeType": "ExpressionStatement",
												"src": "2142:20:12"
											},
											{
												"expression": {
													"id": 2239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2236,
														"name": "INITIAL_CHAIN_ID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2209,
														"src": "2173:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2237,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2192:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2198:7:12",
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "2192:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2173:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2240,
												"nodeType": "ExpressionStatement",
												"src": "2173:32:12"
											},
											{
												"expression": {
													"id": 2244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2241,
														"name": "INITIAL_DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2211,
														"src": "2215:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2242,
															"name": "computeDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2501,
															"src": "2242:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 2243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2242:24:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2215:51:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2245,
												"nodeType": "ExpressionStatement",
												"src": "2215:51:12"
											}
										]
									},
									"id": 2247,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "2016:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "2002:19:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2216,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2002:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "2045:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "2031:21:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2218,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2031:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2221,
												"mutability": "mutable",
												"name": "_decimals",
												"nameLocation": "2068:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "2062:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2220,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2062:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1992:91:12"
									},
									"returnParameters": {
										"id": 2223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2084:0:12"
									},
									"scope": 2558,
									"src": "1981:292:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2274,
										"nodeType": "Block",
										"src": "2541:131:12",
										"statements": [
											{
												"expression": {
													"id": 2263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2256,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2207,
																"src": "2551:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 2260,
															"indexExpression": {
																"expression": {
																	"id": 2257,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2561:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2565:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2561:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2551:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2261,
														"indexExpression": {
															"id": 2259,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2249,
															"src": "2573:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2551:30:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2262,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2251,
														"src": "2584:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2551:39:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2264,
												"nodeType": "ExpressionStatement",
												"src": "2551:39:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2266,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2615:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2619:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2615:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2268,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2249,
															"src": "2627:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2269,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2251,
															"src": "2636:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2265,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2189,
														"src": "2606:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2606:37:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2271,
												"nodeType": "EmitStatement",
												"src": "2601:42:12"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2272,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2661:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2255,
												"id": 2273,
												"nodeType": "Return",
												"src": "2654:11:12"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 2275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2470:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2486:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "2478:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2478:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2503:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "2495:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2495:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2477:33:12"
									},
									"returnParameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "2535:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2253,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2535:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2534:6:12"
									},
									"scope": 2558,
									"src": "2461:211:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2307,
										"nodeType": "Block",
										"src": "2754:297:12",
										"statements": [
											{
												"expression": {
													"id": 2289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2284,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2201,
															"src": "2764:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2287,
														"indexExpression": {
															"expression": {
																"id": 2285,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2774:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2778:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2774:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2764:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2288,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2279,
														"src": "2789:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2764:31:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2290,
												"nodeType": "ExpressionStatement",
												"src": "2764:31:12"
											},
											{
												"id": 2297,
												"nodeType": "UncheckedBlock",
												"src": "2917:58:12",
												"statements": [
													{
														"expression": {
															"id": 2295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2291,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2201,
																	"src": "2941:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2293,
																"indexExpression": {
																	"id": 2292,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2277,
																	"src": "2951:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "2941:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2294,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2279,
																"src": "2958:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2941:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2296,
														"nodeType": "ExpressionStatement",
														"src": "2941:23:12"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2299,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2999:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3003:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2999:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2301,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2277,
															"src": "3011:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2302,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2279,
															"src": "3015:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2298,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2181,
														"src": "2990:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2990:32:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2304,
												"nodeType": "EmitStatement",
												"src": "2985:37:12"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2305,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3040:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2283,
												"id": 2306,
												"nodeType": "Return",
												"src": "3033:11:12"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 2308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2687:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2704:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2308,
												"src": "2696:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2696:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2279,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2716:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2308,
												"src": "2708:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2695:28:12"
									},
									"returnParameters": {
										"id": 2283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2308,
												"src": "2748:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2281,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2748:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2747:6:12"
									},
									"scope": 2558,
									"src": "2678:373:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2368,
										"nodeType": "Block",
										"src": "3181:468:12",
										"statements": [
											{
												"assignments": [
													2320
												],
												"declarations": [
													{
														"constant": false,
														"id": 2320,
														"mutability": "mutable",
														"name": "allowed",
														"nameLocation": "3199:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 2368,
														"src": "3191:15:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2319,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3191:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2327,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2321,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2207,
															"src": "3209:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 2323,
														"indexExpression": {
															"id": 2322,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2310,
															"src": "3219:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3209:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2326,
													"indexExpression": {
														"expression": {
															"id": 2324,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3225:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3229:6:12",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3225:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3209:27:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3191:45:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2328,
														"name": "allowed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2320,
														"src": "3287:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3303:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2330,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3303:7:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 2329,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3298:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3298:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 2333,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3312:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3298:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3287:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2346,
												"nodeType": "IfStatement",
												"src": "3283:80:12",
												"trueBody": {
													"expression": {
														"id": 2344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"baseExpression": {
																"baseExpression": {
																	"id": 2335,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2207,
																	"src": "3317:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 2339,
																"indexExpression": {
																	"id": 2336,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2310,
																	"src": "3327:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3317:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2340,
															"indexExpression": {
																"expression": {
																	"id": 2337,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3333:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3337:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3333:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "IndexAccess",
															"src": "3317:27:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2341,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2320,
																"src": "3347:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2342,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2314,
																"src": "3357:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3347:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3317:46:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2345,
													"nodeType": "ExpressionStatement",
													"src": "3317:46:12"
												}
											},
											{
												"expression": {
													"id": 2351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2347,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2201,
															"src": "3374:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2349,
														"indexExpression": {
															"id": 2348,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2310,
															"src": "3384:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3374:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2350,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2314,
														"src": "3393:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3374:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2352,
												"nodeType": "ExpressionStatement",
												"src": "3374:25:12"
											},
											{
												"id": 2359,
												"nodeType": "UncheckedBlock",
												"src": "3521:58:12",
												"statements": [
													{
														"expression": {
															"id": 2357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2353,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2201,
																	"src": "3545:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2355,
																"indexExpression": {
																	"id": 2354,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2312,
																	"src": "3555:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "3545:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2356,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2314,
																"src": "3562:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3545:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2358,
														"nodeType": "ExpressionStatement",
														"src": "3545:23:12"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2361,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2310,
															"src": "3603:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2362,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2312,
															"src": "3609:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2363,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2314,
															"src": "3613:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2360,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2181,
														"src": "3594:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3594:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2365,
												"nodeType": "EmitStatement",
												"src": "3589:31:12"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2366,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3638:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2318,
												"id": 2367,
												"nodeType": "Return",
												"src": "3631:11:12"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 2369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3066:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2310,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3096:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "3088:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3088:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3118:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "3110:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3110:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2314,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3138:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "3130:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3130:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3078:72:12"
									},
									"returnParameters": {
										"id": 2318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "3175:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2316,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3175:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3174:6:12"
									},
									"scope": 2558,
									"src": "3057:592:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2455,
										"nodeType": "Block",
										"src": "4027:1294:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2387,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2377,
																"src": "4045:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 2388,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4057:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4063:9:12",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4057:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4045:27:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5045524d49545f444541444c494e455f45585049524544",
															"id": 2391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4074:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e",
																"typeString": "literal_string \"PERMIT_DEADLINE_EXPIRED\""
															},
															"value": "PERMIT_DEADLINE_EXPIRED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e",
																"typeString": "literal_string \"PERMIT_DEADLINE_EXPIRED\""
															}
														],
														"id": 2386,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4037:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:63:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2393,
												"nodeType": "ExpressionStatement",
												"src": "4037:63:12"
											},
											{
												"id": 2448,
												"nodeType": "UncheckedBlock",
												"src": "4241:1027:12",
												"statements": [
													{
														"assignments": [
															2395
														],
														"declarations": [
															{
																"constant": false,
																"id": 2395,
																"mutability": "mutable",
																"name": "recoveredAddress",
																"nameLocation": "4273:16:12",
																"nodeType": "VariableDeclaration",
																"scope": 2448,
																"src": "4265:24:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"typeName": {
																	"id": 2394,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4265:7:12",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2425,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "1901",
																					"id": 2400,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4392:10:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																						"typeString": "literal_string hex\"1901\""
																					},
																					"value": "\u0019\u0001"
																				},
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 2401,
																						"name": "DOMAIN_SEPARATOR",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2471,
																						"src": "4428:16:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																							"typeString": "function () view returns (bytes32)"
																						}
																					},
																					"id": 2402,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4428:18:12",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
																											"id": 2407,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "string",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "4602:84:12",
																											"typeDescriptions": {
																												"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
																												"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
																											},
																											"value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
																												"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
																											}
																										],
																										"id": 2406,
																										"name": "keccak256",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967288,
																										"src": "4555:9:12",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																											"typeString": "function (bytes memory) pure returns (bytes32)"
																										}
																									},
																									"id": 2408,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "4555:165:12",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								},
																								{
																									"id": 2409,
																									"name": "owner",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2371,
																									"src": "4754:5:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"id": 2410,
																									"name": "spender",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2373,
																									"src": "4793:7:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"id": 2411,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2375,
																									"src": "4834:5:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								{
																									"id": 2415,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "UnaryOperation",
																									"operator": "++",
																									"prefix": false,
																									"src": "4873:15:12",
																									"subExpression": {
																										"baseExpression": {
																											"id": 2412,
																											"name": "nonces",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2215,
																											"src": "4873:6:12",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																												"typeString": "mapping(address => uint256)"
																											}
																										},
																										"id": 2414,
																										"indexExpression": {
																											"id": 2413,
																											"name": "owner",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2371,
																											"src": "4880:5:12",
																											"typeDescriptions": {
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"nodeType": "IndexAccess",
																										"src": "4873:13:12",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								{
																									"id": 2416,
																									"name": "deadline",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2377,
																									"src": "4922:8:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									},
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"id": 2404,
																									"name": "abi",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967295,
																									"src": "4511:3:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_abi",
																										"typeString": "abi"
																									}
																								},
																								"id": 2405,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"memberLocation": "4515:6:12",
																								"memberName": "encode",
																								"nodeType": "MemberAccess",
																								"src": "4511:10:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																									"typeString": "function () pure returns (bytes memory)"
																								}
																							},
																							"id": 2417,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "4511:449:12",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						],
																						"id": 2403,
																						"name": "keccak256",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967288,
																						"src": "4472:9:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																							"typeString": "function (bytes memory) pure returns (bytes32)"
																						}
																					},
																					"id": 2418,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4472:514:12",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																						"typeString": "literal_string hex\"1901\""
																					},
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"expression": {
																					"id": 2398,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "4350:3:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 2399,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "4354:12:12",
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "4350:16:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 2419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4350:658:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 2397,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "4319:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 2420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4319:707:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2421,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2379,
																	"src": "5044:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 2422,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2381,
																	"src": "5063:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2423,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2383,
																	"src": "5082:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2396,
																"name": "ecrecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967290,
																"src": "4292:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
																}
															},
															"id": 2424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4292:805:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4265:832:12"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2427,
																			"name": "recoveredAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2395,
																			"src": "5120:16:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 2430,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5148:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 2429,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5140:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2428,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5140:7:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5140:10:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "5120:30:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2433,
																			"name": "recoveredAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2395,
																			"src": "5154:16:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 2434,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2371,
																			"src": "5174:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "5154:25:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5120:59:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "494e56414c49445f5349474e4552",
																	"id": 2437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5181:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c",
																		"typeString": "literal_string \"INVALID_SIGNER\""
																	},
																	"value": "INVALID_SIGNER"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c",
																		"typeString": "literal_string \"INVALID_SIGNER\""
																	}
																],
																"id": 2426,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5112:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5112:86:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2439,
														"nodeType": "ExpressionStatement",
														"src": "5112:86:12"
													},
													{
														"expression": {
															"id": 2446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 2440,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2207,
																		"src": "5213:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 2443,
																	"indexExpression": {
																		"id": 2441,
																		"name": "recoveredAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2395,
																		"src": "5223:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5213:27:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2444,
																"indexExpression": {
																	"id": 2442,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2373,
																	"src": "5241:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5213:36:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 2445,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2375,
																"src": "5252:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5213:44:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2447,
														"nodeType": "ExpressionStatement",
														"src": "5213:44:12"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2450,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2371,
															"src": "5292:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2451,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2373,
															"src": "5299:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2452,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2375,
															"src": "5308:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2449,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2189,
														"src": "5283:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5283:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2454,
												"nodeType": "EmitStatement",
												"src": "5278:36:12"
											}
										]
									},
									"functionSelector": "d505accf",
									"id": 2456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3847:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3871:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "3863:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3894:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "3886:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3886:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3919:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "3911:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3911:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3942:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "3934:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3934:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2379,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3966:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "3960:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2378,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3960:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2381,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3985:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "3977:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2380,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3977:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2383,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "4004:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "3996:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2382,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3853:158:12"
									},
									"returnParameters": {
										"id": 2385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4027:0:12"
									},
									"scope": 2558,
									"src": "3838:1483:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2470,
										"nodeType": "Block",
										"src": "5393:111:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2461,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5410:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5416:7:12",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "5410:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2463,
															"name": "INITIAL_CHAIN_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2209,
															"src": "5427:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5410:33:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2466,
															"name": "computeDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2501,
															"src": "5473:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 2467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5473:24:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 2468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5410:87:12",
													"trueExpression": {
														"id": 2465,
														"name": "INITIAL_DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2211,
														"src": "5446:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2460,
												"id": 2469,
												"nodeType": "Return",
												"src": "5403:94:12"
											}
										]
									},
									"functionSelector": "3644e515",
									"id": 2471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "5336:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5352:2:12"
									},
									"returnParameters": {
										"id": 2460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "5384:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2458,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5384:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5383:9:12"
									},
									"scope": 2558,
									"src": "5327:177:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2500,
										"nodeType": "Block",
										"src": "5584:372:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																			"id": 2480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5682:84:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																				"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																			},
																			"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																				"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																			}
																		],
																		"id": 2479,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "5672:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 2481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5672:95:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2485,
																					"name": "name",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2191,
																					"src": "5805:4:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				],
																				"id": 2484,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5799:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": {
																					"id": 2483,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "5799:5:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5799:11:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_storage_ptr",
																				"typeString": "bytes storage pointer"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_storage_ptr",
																				"typeString": "bytes storage pointer"
																			}
																		],
																		"id": 2482,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "5789:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 2487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5789:22:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "31",
																			"id": 2489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5843:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																				"typeString": "literal_string \"1\""
																			},
																			"value": "1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																				"typeString": "literal_string \"1\""
																			}
																		],
																		"id": 2488,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "5833:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 2490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5833:14:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 2491,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "5869:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5875:7:12",
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "5869:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2495,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5912:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ERC20_$2558",
																				"typeString": "contract ERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_ERC20_$2558",
																				"typeString": "contract ERC20"
																			}
																		],
																		"id": 2494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5904:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2493,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5904:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5904:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2477,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "5640:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5644:6:12",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "5640:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5640:295:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2476,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "5613:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5613:336:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2475,
												"id": 2499,
												"nodeType": "Return",
												"src": "5594:355:12"
											}
										]
									},
									"id": 2501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeDomainSeparator",
									"nameLocation": "5519:22:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5541:2:12"
									},
									"returnParameters": {
										"id": 2475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2501,
												"src": "5575:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2473,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5575:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5574:9:12"
									},
									"scope": 2558,
									"src": "5510:446:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2528,
										"nodeType": "Block",
										"src": "6210:265:12",
										"statements": [
											{
												"expression": {
													"id": 2510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2508,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2197,
														"src": "6220:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2509,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2505,
														"src": "6235:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6220:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2511,
												"nodeType": "ExpressionStatement",
												"src": "6220:21:12"
											},
											{
												"id": 2518,
												"nodeType": "UncheckedBlock",
												"src": "6363:58:12",
												"statements": [
													{
														"expression": {
															"id": 2516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2512,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2201,
																	"src": "6387:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2514,
																"indexExpression": {
																	"id": 2513,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2503,
																	"src": "6397:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "6387:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2515,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2505,
																"src": "6404:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6387:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2517,
														"nodeType": "ExpressionStatement",
														"src": "6387:23:12"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6453:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6445:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2520,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6445:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6445:10:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2503,
															"src": "6457:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2525,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2505,
															"src": "6461:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2519,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2181,
														"src": "6436:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6436:32:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2527,
												"nodeType": "EmitStatement",
												"src": "6431:37:12"
											}
										]
									},
									"id": 2529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "6159:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2503,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6173:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2529,
												"src": "6165:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6165:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2505,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6185:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2529,
												"src": "6177:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6177:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6164:28:12"
									},
									"returnParameters": {
										"id": 2507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6210:0:12"
									},
									"scope": 2558,
									"src": "6150:325:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2556,
										"nodeType": "Block",
										"src": "6543:266:12",
										"statements": [
											{
												"expression": {
													"id": 2540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2536,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2201,
															"src": "6553:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2538,
														"indexExpression": {
															"id": 2537,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2531,
															"src": "6563:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6553:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2539,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2533,
														"src": "6572:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6553:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2541,
												"nodeType": "ExpressionStatement",
												"src": "6553:25:12"
											},
											{
												"id": 2546,
												"nodeType": "UncheckedBlock",
												"src": "6697:56:12",
												"statements": [
													{
														"expression": {
															"id": 2544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2542,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2197,
																"src": "6721:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 2543,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2533,
																"src": "6736:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6721:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2545,
														"nodeType": "ExpressionStatement",
														"src": "6721:21:12"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2548,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2531,
															"src": "6777:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6791:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6783:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2549,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6783:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6783:10:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2553,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2533,
															"src": "6795:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2547,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2181,
														"src": "6768:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6768:34:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2555,
												"nodeType": "EmitStatement",
												"src": "6763:39:12"
											}
										]
									},
									"id": 2557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "6490:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2531,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6504:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "6496:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6496:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2533,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6518:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "6510:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6510:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6495:30:12"
									},
									"returnParameters": {
										"id": 2535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6543:0:12"
									},
									"scope": 2558,
									"src": "6481:328:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2559,
							"src": "474:6337:12",
							"usedErrors": [],
							"usedEvents": [
								2181,
								2189
							]
						}
					],
					"src": "42:6770:12"
				},
				"id": 12
			},
			"solmate/src/utils/SafeTransferLib.sol": {
				"ast": {
					"absolutePath": "solmate/src/utils/SafeTransferLib.sol",
					"exportedSymbols": {
						"ERC20": [
							2558
						],
						"SafeTransferLib": [
							2643
						]
					},
					"id": 2644,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2560,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:13"
						},
						{
							"absolutePath": "solmate/src/tokens/ERC20.sol",
							"file": "../tokens/ERC20.sol",
							"id": 2562,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2644,
							"sourceUnit": 2559,
							"src": "68:42:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2561,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2558,
										"src": "76:5:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeTransferLib",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2563,
								"nodeType": "StructuredDocumentation",
								"src": "112:474:13",
								"text": "@notice Safe ETH and ERC20 transfer library that gracefully handles missing return values.\n @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/SafeTransferLib.sol)\n @dev Use with caution! Some functions in this library knowingly create dirty bits at the destination of the free memory pointer.\n @dev Note that none of the functions in this library check that a token has code at all! That responsibility is delegated to the caller."
							},
							"fullyImplemented": true,
							"id": 2643,
							"linearizedBaseContracts": [
								2643
							],
							"name": "SafeTransferLib",
							"nameLocation": "594:15:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2579,
										"nodeType": "Block",
										"src": "861:277:13",
										"statements": [
											{
												"assignments": [
													2571
												],
												"declarations": [
													{
														"constant": false,
														"id": 2571,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "876:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 2579,
														"src": "871:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2570,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "871:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2572,
												"nodeType": "VariableDeclarationStatement",
												"src": "871:12:13"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "946:136:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1026:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "1042:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1042:5:13"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "1049:2:13"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "1053:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1061:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1067:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1070:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "1037:4:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1037:35:13"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nodeType": "YulIdentifier",
																	"src": "1026:7:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2567,
														"isOffset": false,
														"isSlot": false,
														"src": "1053:6:13",
														"valueSize": 1
													},
													{
														"declaration": 2571,
														"isOffset": false,
														"isSlot": false,
														"src": "1026:7:13",
														"valueSize": 1
													},
													{
														"declaration": 2565,
														"isOffset": false,
														"isSlot": false,
														"src": "1049:2:13",
														"valueSize": 1
													}
												],
												"id": 2573,
												"nodeType": "InlineAssembly",
												"src": "937:145:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2575,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2571,
															"src": "1100:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4554485f5452414e534645525f4641494c4544",
															"id": 2576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1109:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d383913ea1996930a2623a0d739b8fc033c734c1d71d4759d3ccba1d3a719c29",
																"typeString": "literal_string \"ETH_TRANSFER_FAILED\""
															},
															"value": "ETH_TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d383913ea1996930a2623a0d739b8fc033c734c1d71d4759d3ccba1d3a719c29",
																"typeString": "literal_string \"ETH_TRANSFER_FAILED\""
															}
														],
														"id": 2574,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1092:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1092:39:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2578,
												"nodeType": "ExpressionStatement",
												"src": "1092:39:13"
											}
										]
									},
									"id": 2580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "808:15:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2565,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "832:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2580,
												"src": "824:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "824:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "844:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2580,
												"src": "836:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "823:28:13"
									},
									"returnParameters": {
										"id": 2569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "861:0:13"
									},
									"scope": 2643,
									"src": "799:339:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2601,
										"nodeType": "Block",
										"src": "1456:1654:13",
										"statements": [
											{
												"assignments": [
													2593
												],
												"declarations": [
													{
														"constant": false,
														"id": 2593,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1471:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 2601,
														"src": "1466:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2592,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1466:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2594,
												"nodeType": "VariableDeclarationStatement",
												"src": "1466:12:13"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1541:1512:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1605:36:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1636:4:13",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1630:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1630:11:13"
															},
															"variables": [
																{
																	"name": "freeMemoryPointer",
																	"nodeType": "YulTypedName",
																	"src": "1609:17:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "freeMemoryPointer",
																		"nodeType": "YulIdentifier",
																		"src": "1759:17:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1778:66:13",
																		"type": "",
																		"value": "0x23b872dd00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1752:93:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "freeMemoryPointer",
																				"nodeType": "YulIdentifier",
																				"src": "1869:17:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1888:1:13",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1865:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1865:25:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "from",
																				"nodeType": "YulIdentifier",
																				"src": "1896:4:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1902:42:13",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1892:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1892:53:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1858:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1858:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1858:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "freeMemoryPointer",
																				"nodeType": "YulIdentifier",
																				"src": "2010:17:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2029:2:13",
																				"type": "",
																				"value": "36"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2006:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2006:26:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "to",
																				"nodeType": "YulIdentifier",
																				"src": "2038:2:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2042:42:13",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2034:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2034:51:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1999:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1999:87:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1999:87:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "freeMemoryPointer",
																				"nodeType": "YulIdentifier",
																				"src": "2148:17:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2167:2:13",
																				"type": "",
																				"value": "68"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2144:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2144:26:13"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "2172:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2137:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2137:42:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2137:42:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2276:767:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2503:1:13",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2497:5:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2497:8:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2507:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "eq",
																							"nodeType": "YulIdentifier",
																							"src": "2494:2:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2494:15:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "returndatasize",
																									"nodeType": "YulIdentifier",
																									"src": "2514:14:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2514:16:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2532:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "gt",
																							"nodeType": "YulIdentifier",
																							"src": "2511:2:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2511:24:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2490:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2490:46:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "2545:14:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2545:16:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2538:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2538:24:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "2487:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2487:76:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "gas",
																					"nodeType": "YulIdentifier",
																					"src": "2982:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2982:5:13"
																			},
																			{
																				"name": "token",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2996:1:13",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "freeMemoryPointer",
																				"nodeType": "YulIdentifier",
																				"src": "2999:17:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3018:3:13",
																				"type": "",
																				"value": "100"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3023:1:13",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3026:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "call",
																			"nodeType": "YulIdentifier",
																			"src": "2977:4:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2977:52:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2287:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2287:756:13"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nodeType": "YulIdentifier",
																	"src": "2276:7:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2589,
														"isOffset": false,
														"isSlot": false,
														"src": "2172:6:13",
														"valueSize": 1
													},
													{
														"declaration": 2585,
														"isOffset": false,
														"isSlot": false,
														"src": "1896:4:13",
														"valueSize": 1
													},
													{
														"declaration": 2593,
														"isOffset": false,
														"isSlot": false,
														"src": "2276:7:13",
														"valueSize": 1
													},
													{
														"declaration": 2587,
														"isOffset": false,
														"isSlot": false,
														"src": "2038:2:13",
														"valueSize": 1
													},
													{
														"declaration": 2583,
														"isOffset": false,
														"isSlot": false,
														"src": "2989:5:13",
														"valueSize": 1
													}
												],
												"id": 2595,
												"nodeType": "InlineAssembly",
												"src": "1532:1521:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2597,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2593,
															"src": "3071:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5452414e534645525f46524f4d5f4641494c4544",
															"id": 2598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3080:22:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_77631768048ee92f9dcf4b9b9d762877d6b9723214862c733f0596708fc219b7",
																"typeString": "literal_string \"TRANSFER_FROM_FAILED\""
															},
															"value": "TRANSFER_FROM_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_77631768048ee92f9dcf4b9b9d762877d6b9723214862c733f0596708fc219b7",
																"typeString": "literal_string \"TRANSFER_FROM_FAILED\""
															}
														],
														"id": 2596,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3063:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3063:40:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2600,
												"nodeType": "ExpressionStatement",
												"src": "3063:40:13"
											}
										]
									},
									"id": 2602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1337:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2583,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1369:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "1363:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$2558",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"id": 2582,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2581,
														"name": "ERC20",
														"nameLocations": [
															"1363:5:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2558,
														"src": "1363:5:13"
													},
													"referencedDeclaration": 2558,
													"src": "1363:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$2558",
														"typeString": "contract ERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2585,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1392:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "1384:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1384:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2587,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1414:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "1406:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2589,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1434:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "1426:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1426:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1353:93:13"
									},
									"returnParameters": {
										"id": 2591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1456:0:13"
									},
									"scope": 2643,
									"src": "1328:1782:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2621,
										"nodeType": "Block",
										"src": "3218:1505:13",
										"statements": [
											{
												"assignments": [
													2613
												],
												"declarations": [
													{
														"constant": false,
														"id": 2613,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3233:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 2621,
														"src": "3228:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2612,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3228:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2614,
												"nodeType": "VariableDeclarationStatement",
												"src": "3228:12:13"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3303:1368:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3367:36:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3398:4:13",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3392:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3392:11:13"
															},
															"variables": [
																{
																	"name": "freeMemoryPointer",
																	"nodeType": "YulTypedName",
																	"src": "3371:17:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "freeMemoryPointer",
																		"nodeType": "YulIdentifier",
																		"src": "3521:17:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3540:66:13",
																		"type": "",
																		"value": "0xa9059cbb00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3514:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3514:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3514:93:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "freeMemoryPointer",
																				"nodeType": "YulIdentifier",
																				"src": "3631:17:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3650:1:13",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3627:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3627:25:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "to",
																				"nodeType": "YulIdentifier",
																				"src": "3658:2:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3662:42:13",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3654:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3654:51:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3620:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3620:86:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3620:86:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "freeMemoryPointer",
																				"nodeType": "YulIdentifier",
																				"src": "3768:17:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3787:2:13",
																				"type": "",
																				"value": "36"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3764:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3764:26:13"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "3792:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3757:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3757:42:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3757:42:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3896:765:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4123:1:13",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4117:5:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4117:8:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4127:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "eq",
																							"nodeType": "YulIdentifier",
																							"src": "4114:2:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4114:15:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "returndatasize",
																									"nodeType": "YulIdentifier",
																									"src": "4134:14:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4134:16:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4152:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "gt",
																							"nodeType": "YulIdentifier",
																							"src": "4131:2:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4131:24:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4110:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4110:46:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "4165:14:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4165:16:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4158:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4158:24:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "4107:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4107:76:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "gas",
																					"nodeType": "YulIdentifier",
																					"src": "4601:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4601:5:13"
																			},
																			{
																				"name": "token",
																				"nodeType": "YulIdentifier",
																				"src": "4608:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4615:1:13",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "freeMemoryPointer",
																				"nodeType": "YulIdentifier",
																				"src": "4618:17:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4637:2:13",
																				"type": "",
																				"value": "68"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4641:1:13",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4644:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "call",
																			"nodeType": "YulIdentifier",
																			"src": "4596:4:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4596:51:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3907:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3907:754:13"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nodeType": "YulIdentifier",
																	"src": "3896:7:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2609,
														"isOffset": false,
														"isSlot": false,
														"src": "3792:6:13",
														"valueSize": 1
													},
													{
														"declaration": 2613,
														"isOffset": false,
														"isSlot": false,
														"src": "3896:7:13",
														"valueSize": 1
													},
													{
														"declaration": 2607,
														"isOffset": false,
														"isSlot": false,
														"src": "3658:2:13",
														"valueSize": 1
													},
													{
														"declaration": 2605,
														"isOffset": false,
														"isSlot": false,
														"src": "4608:5:13",
														"valueSize": 1
													}
												],
												"id": 2615,
												"nodeType": "InlineAssembly",
												"src": "3294:1377:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2617,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2613,
															"src": "4689:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5452414e534645525f4641494c4544",
															"id": 2618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4698:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8bf8f0d780f13740660fe63233b17f96cb1813889e7dce4121e55b817b367b72",
																"typeString": "literal_string \"TRANSFER_FAILED\""
															},
															"value": "TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8bf8f0d780f13740660fe63233b17f96cb1813889e7dce4121e55b817b367b72",
																"typeString": "literal_string \"TRANSFER_FAILED\""
															}
														],
														"id": 2616,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4681:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4681:35:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2620,
												"nodeType": "ExpressionStatement",
												"src": "4681:35:13"
											}
										]
									},
									"id": 2622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "3125:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2605,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3153:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2622,
												"src": "3147:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$2558",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"id": 2604,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2603,
														"name": "ERC20",
														"nameLocations": [
															"3147:5:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2558,
														"src": "3147:5:13"
													},
													"referencedDeclaration": 2558,
													"src": "3147:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$2558",
														"typeString": "contract ERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2607,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3176:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2622,
												"src": "3168:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3168:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2609,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3196:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2622,
												"src": "3188:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3188:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3137:71:13"
									},
									"returnParameters": {
										"id": 2611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3218:0:13"
									},
									"scope": 2643,
									"src": "3116:1607:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2641,
										"nodeType": "Block",
										"src": "4830:1504:13",
										"statements": [
											{
												"assignments": [
													2633
												],
												"declarations": [
													{
														"constant": false,
														"id": 2633,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4845:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 2641,
														"src": "4840:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2632,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4840:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2634,
												"nodeType": "VariableDeclarationStatement",
												"src": "4840:12:13"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4915:1368:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4979:36:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5010:4:13",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5004:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5004:11:13"
															},
															"variables": [
																{
																	"name": "freeMemoryPointer",
																	"nodeType": "YulTypedName",
																	"src": "4983:17:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "freeMemoryPointer",
																		"nodeType": "YulIdentifier",
																		"src": "5133:17:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5152:66:13",
																		"type": "",
																		"value": "0x095ea7b300000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5126:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5126:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5126:93:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "freeMemoryPointer",
																				"nodeType": "YulIdentifier",
																				"src": "5243:17:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5262:1:13",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5239:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5239:25:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "to",
																				"nodeType": "YulIdentifier",
																				"src": "5270:2:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5274:42:13",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5266:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5266:51:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5232:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5232:86:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5232:86:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "freeMemoryPointer",
																				"nodeType": "YulIdentifier",
																				"src": "5380:17:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5399:2:13",
																				"type": "",
																				"value": "36"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5376:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5376:26:13"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "5404:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5369:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5369:42:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5369:42:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5508:765:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5735:1:13",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5729:5:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5729:8:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5739:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "eq",
																							"nodeType": "YulIdentifier",
																							"src": "5726:2:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5726:15:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "returndatasize",
																									"nodeType": "YulIdentifier",
																									"src": "5746:14:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5746:16:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5764:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "gt",
																							"nodeType": "YulIdentifier",
																							"src": "5743:2:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5743:24:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "5722:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5722:46:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "5777:14:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5777:16:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5770:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5770:24:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "5719:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5719:76:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "gas",
																					"nodeType": "YulIdentifier",
																					"src": "6213:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6213:5:13"
																			},
																			{
																				"name": "token",
																				"nodeType": "YulIdentifier",
																				"src": "6220:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6227:1:13",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "freeMemoryPointer",
																				"nodeType": "YulIdentifier",
																				"src": "6230:17:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6249:2:13",
																				"type": "",
																				"value": "68"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6253:1:13",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6256:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "call",
																			"nodeType": "YulIdentifier",
																			"src": "6208:4:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6208:51:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5519:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5519:754:13"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nodeType": "YulIdentifier",
																	"src": "5508:7:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2629,
														"isOffset": false,
														"isSlot": false,
														"src": "5404:6:13",
														"valueSize": 1
													},
													{
														"declaration": 2633,
														"isOffset": false,
														"isSlot": false,
														"src": "5508:7:13",
														"valueSize": 1
													},
													{
														"declaration": 2627,
														"isOffset": false,
														"isSlot": false,
														"src": "5270:2:13",
														"valueSize": 1
													},
													{
														"declaration": 2625,
														"isOffset": false,
														"isSlot": false,
														"src": "6220:5:13",
														"valueSize": 1
													}
												],
												"id": 2635,
												"nodeType": "InlineAssembly",
												"src": "4906:1377:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2637,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2633,
															"src": "6301:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "415050524f56455f4641494c4544",
															"id": 2638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6310:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cd400c5237ae346977ee020ef8d0d26a880c07edf7eba69a8848f0d31e9a88f2",
																"typeString": "literal_string \"APPROVE_FAILED\""
															},
															"value": "APPROVE_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cd400c5237ae346977ee020ef8d0d26a880c07edf7eba69a8848f0d31e9a88f2",
																"typeString": "literal_string \"APPROVE_FAILED\""
															}
														],
														"id": 2636,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6293:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:34:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2640,
												"nodeType": "ExpressionStatement",
												"src": "6293:34:13"
											}
										]
									},
									"id": 2642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "4738:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2625,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4765:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2642,
												"src": "4759:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$2558",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"id": 2624,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2623,
														"name": "ERC20",
														"nameLocations": [
															"4759:5:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2558,
														"src": "4759:5:13"
													},
													"referencedDeclaration": 2558,
													"src": "4759:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$2558",
														"typeString": "contract ERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2627,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4788:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2642,
												"src": "4780:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4780:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2629,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4808:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2642,
												"src": "4800:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4800:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4749:71:13"
									},
									"returnParameters": {
										"id": 2631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4830:0:13"
									},
									"scope": 2643,
									"src": "4729:1605:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2644,
							"src": "586:5750:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "42:6295:13"
				},
				"id": 13
			}
		}
	}
}