{
	"id": "8b9968d316befc12bc6f9683034461e5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/protocol/PoolOrganizer.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport \"../interfaces/IPoolOrganizer.sol\";\r\n\r\nerror Unauthorized();\r\nerror InvalidAddress();\r\nerror PoolAlreadyRegistered();\r\nerror PoolNotRegistered();\r\n\r\ncontract PoolOrganizer is AccessControl, IPoolOrganizer {\r\n    bytes32 public constant POOL_MANAGER_ROLE = keccak256(\"POOL_MANAGER_ROLE\");\r\n\r\n    address[] private pools;\r\n    mapping(address => PoolDetails) private poolDetails;\r\n    mapping(address => address[]) private lenderPools;\r\n    mapping(address => address) public poolVaults;\r\n\r\n\r\n    event PoolRegistered(address indexed pool, address indexed lender, address indexed borrower, address vault);\r\n    event PoolDeregistered(address indexed pool);\r\n\r\n    constructor() {\r\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n        _grantRole(POOL_MANAGER_ROLE, msg.sender);\r\n    }\r\n\r\n   function registerPool(address pool, address lender, address borrower, address vault) external onlyRole(POOL_MANAGER_ROLE) {\r\n    require(pool != address(0) && lender != address(0) && vault != address(0), \"Invalid input\");\r\n    require(poolDetails[pool].lender == address(0), \"Pool already registered\");\r\n    \r\n    // Assign the pool to its lender, borrower, and creation time\r\n    poolDetails[pool] = PoolDetails(lender, borrower, block.timestamp, vault);\r\n    lenderPools[lender].push(pool);\r\n    pools.push(pool);\r\n    poolVaults[pool] = vault; // Link the pool to its vault\r\n\r\n    emit PoolRegistered(pool, lender, borrower, vault);\r\n}\r\n\r\n\r\n    function deregisterPool(address pool) external onlyRole(POOL_MANAGER_ROLE) {\r\n        if (poolDetails[pool].lender == address(0)) revert PoolNotRegistered();\r\n\r\n        _removePoolFromLenderArray(poolDetails[pool].lender, pool);\r\n        _removePoolFromMainArray(pool);\r\n\r\n        delete poolDetails[pool];\r\n        emit PoolDeregistered(pool);\r\n    }\r\n\r\n\r\n    function getTotalPools() external view returns (uint256) {\r\n        return pools.length;\r\n    }\r\n\r\n    function getPoolsByLender(address lender) external view returns (address[] memory) {\r\n        return lenderPools[lender];\r\n    }\r\n\r\n    function getPoolDetails(address pool) external view returns (PoolDetails memory) {\r\n        if (poolDetails[pool].lender == address(0)) revert PoolNotRegistered();\r\n        return poolDetails[pool];\r\n    }\r\n\r\n    function getVaultForPool(address pool) external view returns (address) {\r\n        require(poolVaults[pool] != address(0), \"Pool not registered or has no vault\");\r\n        return poolVaults[pool];\r\n    }\r\n\r\n    function grantFactoryAccess(address factoryAddress) external {\r\n        require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"Caller is not an admin\");\r\n        grantRole(POOL_MANAGER_ROLE, factoryAddress);\r\n    }\r\n\r\n    // Internal helper functions\r\n    function _removePoolFromLenderArray(address lender, address pool) private {\r\n        uint256 index = findIndexInArray(lenderPools[lender], pool);\r\n        uint256 lastIndex = lenderPools[lender].length - 1;\r\n        lenderPools[lender][index] = lenderPools[lender][lastIndex];\r\n        lenderPools[lender].pop();\r\n    }\r\n\r\n    function _removePoolFromMainArray(address pool) private {\r\n        uint256 index = findIndexInArray(pools, pool);\r\n        uint256 lastIndex = pools.length - 1;\r\n        pools[index] = pools[lastIndex];\r\n        pools.pop();\r\n    }\r\n\r\n    function findIndexInArray(address[] storage array, address target) private view returns (uint256) {\r\n        for (uint256 i = 0; i < array.length; i++) {\r\n            if (array[i] == target) return i;\r\n        }\r\n        return type(uint256).max;\r\n    }\r\n}\r\n"
			},
			"contracts/interfaces/IPoolOrganizer.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IPoolOrganizer {\r\n    struct PoolDetails {\r\n        address lender;\r\n        address borrower;\r\n        uint256 creationTime;\r\n        address vault;\r\n    }\r\n\r\n    function registerPool(address pool, address lender, address borrower, address vault) external;\r\n\r\n    function deregisterPool(address pool) external;\r\n\r\n    function getTotalPools() external view returns (uint256);\r\n\r\n    function getPoolsByLender(address lender) external view returns (address[] memory);\r\n\r\n    function getPoolDetails(address pool) external view returns (PoolDetails memory);\r\n\r\n    function getVaultForPool(address pool) external view returns (address);\r\n\r\n    function grantFactoryAccess(address factoryAddress) external;\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IPoolOrganizer.sol": {
				"IPoolOrganizer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "deregisterPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "getPoolDetails",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "lender",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "borrower",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "creationTime",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "vault",
											"type": "address"
										}
									],
									"internalType": "struct IPoolOrganizer.PoolDetails",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "lender",
									"type": "address"
								}
							],
							"name": "getPoolsByLender",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalPools",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "getVaultForPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "factoryAddress",
									"type": "address"
								}
							],
							"name": "grantFactoryAccess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "lender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "borrower",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "registerPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deregisterPool(address)": "7e72c7d7",
							"getPoolDetails(address)": "d3e90fa0",
							"getPoolsByLender(address)": "24a44efb",
							"getTotalPools()": "d3ffe67a",
							"getVaultForPool(address)": "7570e389",
							"grantFactoryAccess(address)": "5d102df7",
							"registerPool(address,address,address,address)": "0cf9c72e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"deregisterPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"internalType\":\"struct IPoolOrganizer.PoolDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"}],\"name\":\"getPoolsByLender\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalPools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getVaultForPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factoryAddress\",\"type\":\"address\"}],\"name\":\"grantFactoryAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"registerPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPoolOrganizer.sol\":\"IPoolOrganizer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPoolOrganizer.sol\":{\"keccak256\":\"0xd775392d30efe3c4178835c0432e13ef235984497bc044538f1ef66bd650ece3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c600c03761f00b8202ddf4254e62b79215f6e5e6b43c6a3ae06a50953b59898\",\"dweb:/ipfs/QmZnENAWkdZrx9zWY1m7bqjEstLuiDo65JwXGhJ1LHGhFC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/protocol/PoolOrganizer.sol": {
				"PoolOrganizer": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PoolNotRegistered",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "PoolDeregistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "lender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "borrower",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "PoolRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "POOL_MANAGER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "deregisterPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "getPoolDetails",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "lender",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "borrower",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "creationTime",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "vault",
											"type": "address"
										}
									],
									"internalType": "struct IPoolOrganizer.PoolDetails",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "lender",
									"type": "address"
								}
							],
							"name": "getPoolsByLender",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalPools",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "getVaultForPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "factoryAddress",
									"type": "address"
								}
							],
							"name": "grantFactoryAccess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "poolVaults",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "lender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "borrower",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "registerPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/protocol/PoolOrganizer.sol\":276:3667  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/protocol/PoolOrganizer.sol\":789:916  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/protocol/PoolOrganizer.sol\":814:856  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"contracts/protocol/PoolOrganizer.sol\":845:855  msg.sender */\n  caller\n    /* \"contracts/protocol/PoolOrganizer.sol\":814:824  _grantRole */\n  tag_5\n    /* \"contracts/protocol/PoolOrganizer.sol\":814:856  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  jump\t// in\ntag_4:\n  pop\n    /* \"contracts/protocol/PoolOrganizer.sol\":867:908  _grantRole(POOL_MANAGER_ROLE, msg.sender) */\n  tag_6\n    /* \"contracts/protocol/PoolOrganizer.sol\":383:413  keccak256(\"POOL_MANAGER_ROLE\") */\n  0x6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98aff\n    /* \"contracts/protocol/PoolOrganizer.sol\":897:907  msg.sender */\n  caller\n    /* \"contracts/protocol/PoolOrganizer.sol\":867:877  _grantRole */\n  tag_5\n    /* \"contracts/protocol/PoolOrganizer.sol\":867:908  _grantRole(POOL_MANAGER_ROLE, msg.sender) */\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/protocol/PoolOrganizer.sol\":276:3667  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n  jump(tag_7)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  dup2\n  keccak256\n  sload\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup4\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  dup7\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_12\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  jump\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\ntag_12:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_11:\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/protocol/PoolOrganizer.sol\":276:3667  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/protocol/PoolOrganizer.sol\":276:3667  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5d102df7\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa217fddf\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xd3e90fa0\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd3ffe67a\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x5d102df7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x7570e389\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x7e72c7d7\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x24a44efb\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x24a44efb\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x56d73568\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0cf9c72e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1e4966ab\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/protocol/PoolOrganizer.sol\":923:1561  function registerPool(address pool, address lender, address borrower, address vault) external onlyRole(POOL_MANAGER_ROLE) {... */\n    tag_4:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      stop\n        /* \"contracts/protocol/PoolOrganizer.sol\":566:611  mapping(address => address) public poolVaults */\n    tag_5:\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_32:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1444:1476   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1426:1477   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1414:1416   */\n      0x20\n        /* \"#utility.yul\":1399:1417   */\n      add\n        /* \"contracts/protocol/PoolOrganizer.sol\":566:611  mapping(address => address) public poolVaults */\n      tag_26\n        /* \"#utility.yul\":1280:1483   */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_6:\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      jump\n    tag_38:\n      mload(0x40)\n        /* \"#utility.yul\":1819:1844   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1807:1809   */\n      0x20\n        /* \"#utility.yul\":1792:1810   */\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      tag_26\n        /* \"#utility.yul\":1673:1850   */\n      jump\n        /* \"contracts/protocol/PoolOrganizer.sol\":2035:2163  function getPoolsByLender(address lender) external view returns (address[] memory) {... */\n    tag_7:\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_8:\n      tag_28\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_9:\n      tag_28\n      tag_54\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n        /* \"contracts/protocol/PoolOrganizer.sol\":339:413  bytes32 public constant POOL_MANAGER_ROLE = keccak256(\"POOL_MANAGER_ROLE\") */\n    tag_10:\n      tag_38\n      0x00\n      dup1\n      mload\n      0x20\n      data_cea5b988323acc73cd81db0e6f2932cdc75f39072539d65cbfa79c56b2a64e51\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup2\n      jump\n        /* \"contracts/protocol/PoolOrganizer.sol\":2594:2803  function grantFactoryAccess(address factoryAddress) external {... */\n    tag_11:\n      tag_28\n      tag_60\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n        /* \"contracts/protocol/PoolOrganizer.sol\":2384:2586  function getVaultForPool(address pool) external view returns (address) {... */\n    tag_12:\n      tag_32\n      tag_63\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n        /* \"contracts/protocol/PoolOrganizer.sol\":1571:1922  function deregisterPool(address pool) external onlyRole(POOL_MANAGER_ROLE) {... */\n    tag_13:\n      tag_28\n      tag_67\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_14:\n      tag_22\n      tag_70\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_15:\n      tag_38\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"contracts/protocol/PoolOrganizer.sol\":2171:2376  function getPoolDetails(address pool) external view returns (PoolDetails memory) {... */\n    tag_16:\n      tag_76\n      tag_77\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n        /* \"#utility.yul\":3040:3053   */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3036:3058   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":3018:3059   */\n      dup3\n      mstore\n        /* \"#utility.yul\":3119:3123   */\n      0x20\n        /* \"#utility.yul\":3107:3124   */\n      dup1\n      dup5\n      add\n        /* \"#utility.yul\":3101:3125   */\n      mload\n        /* \"#utility.yul\":3097:3130   */\n      dup3\n      and\n        /* \"#utility.yul\":3075:3095   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":3068:3131   */\n      mstore\n        /* \"#utility.yul\":3187:3191   */\n      0x40\n        /* \"#utility.yul\":3175:3192   */\n      dup1\n      dup5\n      add\n        /* \"#utility.yul\":3169:3193   */\n      mload\n        /* \"#utility.yul\":3147:3167   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":3140:3194   */\n      mstore\n        /* \"#utility.yul\":3254:3258   */\n      0x60\n        /* \"#utility.yul\":3242:3259   */\n      swap3\n      dup4\n      add\n        /* \"#utility.yul\":3236:3260   */\n      mload\n        /* \"#utility.yul\":3232:3265   */\n      and\n        /* \"#utility.yul\":3210:3230   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":3203:3266   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2967:2970   */\n      0x80\n        /* \"#utility.yul\":2952:2971   */\n      add\n      swap1\n        /* \"#utility.yul\":2777:3272   */\n      jump\n        /* \"contracts/protocol/PoolOrganizer.sol\":1932:2027  function getTotalPools() external view returns (uint256) {... */\n    tag_17:\n        /* \"contracts/protocol/PoolOrganizer.sol\":2007:2012  pools */\n      0x01\n        /* \"contracts/protocol/PoolOrganizer.sol\":2007:2019  pools.length */\n      sload\n        /* \"contracts/protocol/PoolOrganizer.sol\":1932:2027  function getTotalPools() external view returns (uint256) {... */\n      jump(tag_38)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_18:\n      tag_28\n      tag_86\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      tag_90\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/protocol/PoolOrganizer.sol\":923:1561  function registerPool(address pool, address lender, address borrower, address vault) external onlyRole(POOL_MANAGER_ROLE) {... */\n    tag_31:\n      0x00\n      dup1\n      mload\n      0x20\n      data_cea5b988323acc73cd81db0e6f2932cdc75f39072539d65cbfa79c56b2a64e51\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_93\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_94\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/PoolOrganizer.sol\":1060:1078  pool != address(0) */\n      dup6\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/protocol/PoolOrganizer.sol\":1060:1102  pool != address(0) && lender != address(0) */\n      tag_96\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/PoolOrganizer.sol\":1082:1102  lender != address(0) */\n      dup5\n      and\n      iszero\n      iszero\n        /* \"contracts/protocol/PoolOrganizer.sol\":1060:1102  pool != address(0) && lender != address(0) */\n    tag_96:\n        /* \"contracts/protocol/PoolOrganizer.sol\":1060:1125  pool != address(0) && lender != address(0) && vault != address(0) */\n      dup1\n      iszero\n      tag_97\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/PoolOrganizer.sol\":1106:1125  vault != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"contracts/protocol/PoolOrganizer.sol\":1060:1125  pool != address(0) && lender != address(0) && vault != address(0) */\n    tag_97:\n        /* \"contracts/protocol/PoolOrganizer.sol\":1052:1143  require(pool != address(0) && lender != address(0) && vault != address(0), \"Invalid input\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3661:3663   */\n      0x20\n        /* \"contracts/protocol/PoolOrganizer.sol\":1052:1143  require(pool != address(0) && lender != address(0) && vault != address(0), \"Invalid input\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3643:3664   */\n      mstore\n        /* \"#utility.yul\":3700:3702   */\n      0x0d\n        /* \"#utility.yul\":3680:3698   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3673:3703   */\n      mstore\n      shl(0x9a, 0x125b9d985b1a59081a5b9c1d5d)\n        /* \"#utility.yul\":3719:3737   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3712:3755   */\n      mstore\n        /* \"#utility.yul\":3772:3790   */\n      0x64\n      add\n        /* \"contracts/protocol/PoolOrganizer.sol\":1052:1143  require(pool != address(0) && lender != address(0) && vault != address(0), \"Invalid input\") */\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/PoolOrganizer.sol\":1158:1175  poolDetails[pool] */\n      dup6\n      dup2\n      and\n        /* \"contracts/protocol/PoolOrganizer.sol\":1194:1195  0 */\n      0x00\n        /* \"contracts/protocol/PoolOrganizer.sol\":1158:1175  poolDetails[pool] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/protocol/PoolOrganizer.sol\":1158:1169  poolDetails */\n      0x02\n        /* \"contracts/protocol/PoolOrganizer.sol\":1158:1175  poolDetails[pool] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/protocol/PoolOrganizer.sol\":1158:1182  poolDetails[pool].lender */\n      sload\n      and\n        /* \"contracts/protocol/PoolOrganizer.sol\":1158:1196  poolDetails[pool].lender == address(0) */\n      iszero\n        /* \"contracts/protocol/PoolOrganizer.sol\":1150:1224  require(poolDetails[pool].lender == address(0), \"Pool already registered\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4003:4005   */\n      0x20\n        /* \"contracts/protocol/PoolOrganizer.sol\":1150:1224  require(poolDetails[pool].lender == address(0), \"Pool already registered\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3985:4006   */\n      mstore\n        /* \"#utility.yul\":4042:4044   */\n      0x17\n        /* \"#utility.yul\":4022:4040   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4015:4045   */\n      mstore\n        /* \"#utility.yul\":4081:4106   */\n      0x506f6f6c20616c72656164792072656769737465726564000000000000000000\n        /* \"#utility.yul\":4061:4079   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4054:4107   */\n      mstore\n        /* \"#utility.yul\":4124:4142   */\n      0x64\n      add\n        /* \"contracts/protocol/PoolOrganizer.sol\":1150:1224  require(poolDetails[pool].lender == address(0), \"Pool already registered\") */\n      tag_99\n        /* \"#utility.yul\":3801:4148   */\n      jump\n        /* \"contracts/protocol/PoolOrganizer.sol\":1150:1224  require(poolDetails[pool].lender == address(0), \"Pool already registered\") */\n    tag_101:\n        /* \"contracts/protocol/PoolOrganizer.sol\":1324:1377  PoolDetails(lender, borrower, block.timestamp, vault) */\n      0x40\n      dup1\n      mload\n      0x80\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      dup2\n      and\n      dup1\n      dup4\n      mstore\n      dup7\n      dup3\n      and\n      0x20\n      dup1\n      dup6\n      add\n      dup3\n      dup2\n      mstore\n        /* \"contracts/protocol/PoolOrganizer.sol\":1354:1369  block.timestamp */\n      timestamp\n        /* \"contracts/protocol/PoolOrganizer.sol\":1324:1377  PoolDetails(lender, borrower, block.timestamp, vault) */\n      dup7\n      dup9\n      add\n      swap1\n      dup2\n      mstore\n      dup10\n      dup7\n      and\n      0x60\n      dup9\n      add\n      dup2\n      dup2\n      mstore\n        /* \"contracts/protocol/PoolOrganizer.sol\":1304:1321  poolDetails[pool] */\n      dup15\n      dup9\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/protocol/PoolOrganizer.sol\":1304:1315  poolDetails */\n      0x02\n        /* \"contracts/protocol/PoolOrganizer.sol\":1304:1321  poolDetails[pool] */\n      dup1\n      dup9\n      mstore\n      dup13\n      dup3\n      keccak256\n        /* \"contracts/protocol/PoolOrganizer.sol\":1304:1377  poolDetails[pool] = PoolDetails(lender, borrower, block.timestamp, vault) */\n      swap12\n      mload\n      dup13\n      sload\n      swap1\n      dup13\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap2\n      dup3\n      and\n      or\n      dup14\n      sstore\n      swap7\n      mload\n      0x01\n      dup1\n      dup15\n      add\n      dup1\n      sload\n      swap3\n      dup15\n      and\n      swap3\n      dup11\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n      swap6\n      mload\n      swap1\n      dup13\n      add\n      sstore\n      swap2\n      mload\n      0x03\n      swap11\n      dup12\n      add\n      dup1\n      sload\n      swap2\n      swap1\n      swap11\n      and\n      swap1\n      dup7\n      and\n      or\n      swap1\n      swap9\n      sstore\n        /* \"contracts/protocol/PoolOrganizer.sol\":1384:1403  lenderPools[lender] */\n      dup7\n      dup2\n      mstore\n      swap8\n      dup5\n      mstore\n      dup9\n      dup9\n      keccak256\n        /* \"contracts/protocol/PoolOrganizer.sol\":1384:1414  lenderPools[lender].push(pool) */\n      dup1\n      sload\n      dup1\n      dup5\n      add\n      dup3\n      sstore\n      swap1\n      dup10\n      mstore\n      dup5\n      dup10\n      keccak256\n      add\n      dup1\n      sload\n      dup5\n      and\n      dup9\n      or\n      swap1\n      sstore\n        /* \"contracts/protocol/PoolOrganizer.sol\":1421:1437  pools.push(pool) */\n      dup2\n      sload\n      dup1\n      dup4\n      add\n      swap1\n      swap3\n      sstore\n      0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      dup4\n      and\n      dup8\n      or\n      swap1\n      sstore\n        /* \"contracts/protocol/PoolOrganizer.sol\":1444:1460  poolVaults[pool] */\n      dup6\n      dup8\n      mstore\n        /* \"contracts/protocol/PoolOrganizer.sol\":1444:1454  poolVaults */\n      0x04\n        /* \"contracts/protocol/PoolOrganizer.sol\":1444:1460  poolVaults[pool] */\n      dup4\n      mstore\n      swap6\n      dup8\n      swap1\n      keccak256\n        /* \"contracts/protocol/PoolOrganizer.sol\":1444:1468  poolVaults[pool] = vault */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      dup7\n      or\n      swap1\n      sstore\n        /* \"contracts/protocol/PoolOrganizer.sol\":1512:1557  PoolRegistered(pool, lender, borrower, vault) */\n      swap5\n      mload\n        /* \"#utility.yul\":1426:1477   */\n      swap4\n      dup5\n      mstore\n        /* \"contracts/protocol/PoolOrganizer.sol\":1324:1377  PoolDetails(lender, borrower, block.timestamp, vault) */\n      swap4\n      swap1\n      swap3\n        /* \"contracts/protocol/PoolOrganizer.sol\":1512:1557  PoolRegistered(pool, lender, borrower, vault) */\n      0x928b994ad535a478f217ab28f23fbbf04f79d765f407b8df7cc2df7174aef90b\n      swap2\n        /* \"#utility.yul\":1399:1417   */\n      add\n        /* \"contracts/protocol/PoolOrganizer.sol\":1512:1557  PoolRegistered(pool, lender, borrower, vault) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/protocol/PoolOrganizer.sol\":923:1561  function registerPool(address pool, address lender, address borrower, address vault) external onlyRole(POOL_MANAGER_ROLE) {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/protocol/PoolOrganizer.sol\":2035:2163  function getPoolsByLender(address lender) external view returns (address[] memory) {... */\n    tag_46:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/PoolOrganizer.sol\":2136:2155  lenderPools[lender] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/protocol/PoolOrganizer.sol\":2136:2147  lenderPools */\n      0x03\n        /* \"contracts/protocol/PoolOrganizer.sol\":2136:2155  lenderPools[lender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/protocol/PoolOrganizer.sol\":2129:2155  return lenderPools[lender] */\n      dup1\n      sload\n      dup4\n      mload\n      dup2\n      dup5\n      mul\n      dup2\n      add\n      dup5\n      add\n      swap1\n      swap5\n      mstore\n      dup1\n      dup5\n      mstore\n        /* \"contracts/protocol/PoolOrganizer.sol\":2100:2116  address[] memory */\n      0x60\n      swap4\n        /* \"contracts/protocol/PoolOrganizer.sol\":2129:2155  return lenderPools[lender] */\n      swap3\n      dup4\n      add\n        /* \"contracts/protocol/PoolOrganizer.sol\":2136:2155  lenderPools[lender] */\n      dup3\n        /* \"contracts/protocol/PoolOrganizer.sol\":2129:2155  return lenderPools[lender] */\n      dup3\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_110:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_110\n      jumpi\n    tag_109:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/protocol/PoolOrganizer.sol\":2035:2163  function getPoolsByLender(address lender) external view returns (address[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_113\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_94\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_115\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_116\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_115:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_55:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_120\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      shl(0xe1, 0x334bd919)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_121\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_122\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_121:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/protocol/PoolOrganizer.sol\":2594:2803  function grantFactoryAccess(address factoryAddress) external {... */\n    tag_61:\n        /* \"contracts/protocol/PoolOrganizer.sol\":2674:2713  hasRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n      tag_124\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"contracts/protocol/PoolOrganizer.sol\":2702:2712  msg.sender */\n      caller\n        /* \"contracts/protocol/PoolOrganizer.sol\":2674:2681  hasRole */\n      tag_71\n        /* \"contracts/protocol/PoolOrganizer.sol\":2674:2713  hasRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/protocol/PoolOrganizer.sol\":2666:2740  require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"Caller is not an admin\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4355:4357   */\n      0x20\n        /* \"contracts/protocol/PoolOrganizer.sol\":2666:2740  require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"Caller is not an admin\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4337:4358   */\n      mstore\n        /* \"#utility.yul\":4394:4396   */\n      0x16\n        /* \"#utility.yul\":4374:4392   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4367:4397   */\n      mstore\n      shl(0x51, 0x21b0b63632b91034b9903737ba1030b71030b236b4b7)\n        /* \"#utility.yul\":4413:4431   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4406:4458   */\n      mstore\n        /* \"#utility.yul\":4475:4493   */\n      0x64\n      add\n        /* \"contracts/protocol/PoolOrganizer.sol\":2666:2740  require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"Caller is not an admin\") */\n      tag_99\n        /* \"#utility.yul\":4153:4499   */\n      jump\n        /* \"contracts/protocol/PoolOrganizer.sol\":2666:2740  require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"Caller is not an admin\") */\n    tag_125:\n        /* \"contracts/protocol/PoolOrganizer.sol\":2751:2795  grantRole(POOL_MANAGER_ROLE, factoryAddress) */\n      tag_128\n      0x00\n      dup1\n      mload\n      0x20\n      data_cea5b988323acc73cd81db0e6f2932cdc75f39072539d65cbfa79c56b2a64e51\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/protocol/PoolOrganizer.sol\":2780:2794  factoryAddress */\n      dup3\n        /* \"contracts/protocol/PoolOrganizer.sol\":2751:2760  grantRole */\n      tag_52\n        /* \"contracts/protocol/PoolOrganizer.sol\":2751:2795  grantRole(POOL_MANAGER_ROLE, factoryAddress) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/protocol/PoolOrganizer.sol\":2594:2803  function grantFactoryAccess(address factoryAddress) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/protocol/PoolOrganizer.sol\":2384:2586  function getVaultForPool(address pool) external view returns (address) {... */\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/PoolOrganizer.sol\":2474:2490  poolVaults[pool] */\n      dup2\n      dup2\n      and\n        /* \"contracts/protocol/PoolOrganizer.sol\":2446:2453  address */\n      0x00\n        /* \"contracts/protocol/PoolOrganizer.sol\":2474:2490  poolVaults[pool] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/protocol/PoolOrganizer.sol\":2474:2484  poolVaults */\n      0x04\n        /* \"contracts/protocol/PoolOrganizer.sol\":2474:2490  poolVaults[pool] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/protocol/PoolOrganizer.sol\":2446:2453  address */\n      swap1\n      swap2\n        /* \"contracts/protocol/PoolOrganizer.sol\":2474:2490  poolVaults[pool] */\n      and\n        /* \"contracts/protocol/PoolOrganizer.sol\":2466:2544  require(poolVaults[pool] != address(0), \"Pool not registered or has no vault\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4706:4708   */\n      0x20\n        /* \"contracts/protocol/PoolOrganizer.sol\":2466:2544  require(poolVaults[pool] != address(0), \"Pool not registered or has no vault\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4688:4709   */\n      mstore\n        /* \"#utility.yul\":4745:4747   */\n      0x23\n        /* \"#utility.yul\":4725:4743   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4718:4748   */\n      mstore\n        /* \"#utility.yul\":4784:4818   */\n      0x506f6f6c206e6f742072656769737465726564206f7220686173206e6f207661\n        /* \"#utility.yul\":4764:4782   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4757:4819   */\n      mstore\n      shl(0xea, 0x1d5b1d)\n        /* \"#utility.yul\":4835:4853   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4828:4861   */\n      mstore\n        /* \"#utility.yul\":4878:4897   */\n      0x84\n      add\n        /* \"contracts/protocol/PoolOrganizer.sol\":2466:2544  require(poolVaults[pool] != address(0), \"Pool not registered or has no vault\") */\n      tag_99\n        /* \"#utility.yul\":4504:4903   */\n      jump\n        /* \"contracts/protocol/PoolOrganizer.sol\":2466:2544  require(poolVaults[pool] != address(0), \"Pool not registered or has no vault\") */\n    tag_130:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/PoolOrganizer.sol\":2562:2578  poolVaults[pool] */\n      swap1\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/protocol/PoolOrganizer.sol\":2562:2572  poolVaults */\n      0x04\n        /* \"contracts/protocol/PoolOrganizer.sol\":2562:2578  poolVaults[pool] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      and\n      swap1\n        /* \"contracts/protocol/PoolOrganizer.sol\":2384:2586  function getVaultForPool(address pool) external view returns (address) {... */\n      jump\t// out\n        /* \"contracts/protocol/PoolOrganizer.sol\":1571:1922  function deregisterPool(address pool) external onlyRole(POOL_MANAGER_ROLE) {... */\n    tag_68:\n      0x00\n      dup1\n      mload\n      0x20\n      data_cea5b988323acc73cd81db0e6f2932cdc75f39072539d65cbfa79c56b2a64e51\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_134\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_94\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/PoolOrganizer.sol\":1661:1678  poolDetails[pool] */\n      dup3\n      dup2\n      and\n        /* \"contracts/protocol/PoolOrganizer.sol\":1697:1698  0 */\n      0x00\n        /* \"contracts/protocol/PoolOrganizer.sol\":1661:1678  poolDetails[pool] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/protocol/PoolOrganizer.sol\":1661:1672  poolDetails */\n      0x02\n        /* \"contracts/protocol/PoolOrganizer.sol\":1661:1678  poolDetails[pool] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/protocol/PoolOrganizer.sol\":1661:1685  poolDetails[pool].lender */\n      sload\n      and\n        /* \"contracts/protocol/PoolOrganizer.sol\":1657:1727  if (poolDetails[pool].lender == address(0)) revert PoolNotRegistered() */\n      tag_136\n      jumpi\n        /* \"contracts/protocol/PoolOrganizer.sol\":1708:1727  PoolNotRegistered() */\n      mload(0x40)\n      shl(0xe0, 0x739f4185)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/protocol/PoolOrganizer.sol\":1657:1727  if (poolDetails[pool].lender == address(0)) revert PoolNotRegistered() */\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/PoolOrganizer.sol\":1767:1784  poolDetails[pool] */\n      dup1\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/protocol/PoolOrganizer.sol\":1767:1778  poolDetails */\n      0x02\n        /* \"contracts/protocol/PoolOrganizer.sol\":1767:1784  poolDetails[pool] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/protocol/PoolOrganizer.sol\":1767:1791  poolDetails[pool].lender */\n      sload\n        /* \"contracts/protocol/PoolOrganizer.sol\":1740:1798  _removePoolFromLenderArray(poolDetails[pool].lender, pool) */\n      tag_137\n      swap2\n        /* \"contracts/protocol/PoolOrganizer.sol\":1767:1791  poolDetails[pool].lender */\n      and\n        /* \"contracts/protocol/PoolOrganizer.sol\":1779:1783  pool */\n      dup4\n        /* \"contracts/protocol/PoolOrganizer.sol\":1740:1766  _removePoolFromLenderArray */\n      tag_138\n        /* \"contracts/protocol/PoolOrganizer.sol\":1740:1798  _removePoolFromLenderArray(poolDetails[pool].lender, pool) */\n      jump\t// in\n    tag_137:\n        /* \"contracts/protocol/PoolOrganizer.sol\":1809:1839  _removePoolFromMainArray(pool) */\n      tag_139\n        /* \"contracts/protocol/PoolOrganizer.sol\":1834:1838  pool */\n      dup3\n        /* \"contracts/protocol/PoolOrganizer.sol\":1809:1833  _removePoolFromMainArray */\n      tag_140\n        /* \"contracts/protocol/PoolOrganizer.sol\":1809:1839  _removePoolFromMainArray(pool) */\n      jump\t// in\n    tag_139:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/PoolOrganizer.sol\":1859:1876  poolDetails[pool] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/protocol/PoolOrganizer.sol\":1859:1870  poolDetails */\n      0x02\n        /* \"contracts/protocol/PoolOrganizer.sol\":1859:1876  poolDetails[pool] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/protocol/PoolOrganizer.sol\":1852:1876  delete poolDetails[pool] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      dup3\n      sstore\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      dup3\n      and\n      swap1\n      sstore\n      swap3\n      dup2\n      add\n      dup5\n      swap1\n      sstore\n      0x03\n      add\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      swap1\n      swap2\n      sstore\n        /* \"contracts/protocol/PoolOrganizer.sol\":1892:1914  PoolDeregistered(pool) */\n      mload\n      0x334d0b2111287dfddebe4b4c1c5af3ae644909d7fcd024377bf601e236ed5abb\n      swap2\n        /* \"contracts/protocol/PoolOrganizer.sol\":1859:1876  poolDetails[pool] */\n      swap1\n        /* \"contracts/protocol/PoolOrganizer.sol\":1892:1914  PoolDeregistered(pool) */\n      log2\n        /* \"contracts/protocol/PoolOrganizer.sol\":1571:1922  function deregisterPool(address pool) external onlyRole(POOL_MANAGER_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"contracts/protocol/PoolOrganizer.sol\":2171:2376  function getPoolDetails(address pool) external view returns (PoolDetails memory) {... */\n    tag_78:\n      0x40\n      dup1\n      mload\n      0x80\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x60\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/PoolOrganizer.sol\":2267:2284  poolDetails[pool] */\n      dup3\n      dup2\n      and\n        /* \"contracts/protocol/PoolOrganizer.sol\":2303:2304  0 */\n      0x00\n        /* \"contracts/protocol/PoolOrganizer.sol\":2267:2284  poolDetails[pool] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/protocol/PoolOrganizer.sol\":2267:2278  poolDetails */\n      0x02\n        /* \"contracts/protocol/PoolOrganizer.sol\":2267:2284  poolDetails[pool] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/protocol/PoolOrganizer.sol\":2267:2291  poolDetails[pool].lender */\n      sload\n      and\n        /* \"contracts/protocol/PoolOrganizer.sol\":2263:2333  if (poolDetails[pool].lender == address(0)) revert PoolNotRegistered() */\n      tag_145\n      jumpi\n        /* \"contracts/protocol/PoolOrganizer.sol\":2314:2333  PoolNotRegistered() */\n      mload(0x40)\n      shl(0xe0, 0x739f4185)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/protocol/PoolOrganizer.sol\":2263:2333  if (poolDetails[pool].lender == address(0)) revert PoolNotRegistered() */\n    tag_145:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/PoolOrganizer.sol\":2351:2368  poolDetails[pool] */\n      swap1\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/protocol/PoolOrganizer.sol\":2351:2362  poolDetails */\n      0x02\n        /* \"contracts/protocol/PoolOrganizer.sol\":2351:2368  poolDetails[pool] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap3\n      dup4\n      swap1\n      keccak256\n        /* \"contracts/protocol/PoolOrganizer.sol\":2344:2368  return poolDetails[pool] */\n      dup4\n      mload\n      0x80\n      dup2\n      add\n      dup6\n      mstore\n      dup2\n      sload\n      dup7\n      and\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      dup7\n      and\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      swap2\n      dup3\n      add\n      sload\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x03\n      add\n      sload\n      swap1\n      swap2\n      and\n      0x60\n      dup3\n      add\n      mstore\n      swap1\n        /* \"contracts/protocol/PoolOrganizer.sol\":2171:2376  function getPoolDetails(address pool) external view returns (PoolDetails memory) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_149\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_94\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_115\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_122\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_128\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_156\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_158\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_71\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_159\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_160\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n    tag_160:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      jump(tag_90)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_159:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      jump(tag_90)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_164\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_71\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_159\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      dup7\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup7\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      log4\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      jump(tag_90)\n        /* \"contracts/protocol/PoolOrganizer.sol\":2845:3164  function _removePoolFromLenderArray(address lender, address pool) private {... */\n    tag_138:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/PoolOrganizer.sol\":2963:2982  lenderPools[lender] */\n      dup3\n      and\n        /* \"contracts/protocol/PoolOrganizer.sol\":2930:2943  uint256 index */\n      0x00\n        /* \"contracts/protocol/PoolOrganizer.sol\":2963:2982  lenderPools[lender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/protocol/PoolOrganizer.sol\":2963:2974  lenderPools */\n      0x03\n        /* \"contracts/protocol/PoolOrganizer.sol\":2963:2982  lenderPools[lender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/protocol/PoolOrganizer.sol\":2946:2989  findIndexInArray(lenderPools[lender], pool) */\n      tag_169\n      swap1\n        /* \"contracts/protocol/PoolOrganizer.sol\":2984:2988  pool */\n      dup4\n        /* \"contracts/protocol/PoolOrganizer.sol\":2946:2962  findIndexInArray */\n      tag_170\n        /* \"contracts/protocol/PoolOrganizer.sol\":2946:2989  findIndexInArray(lenderPools[lender], pool) */\n      jump\t// in\n    tag_169:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/PoolOrganizer.sol\":3020:3039  lenderPools[lender] */\n      dup5\n      and\n        /* \"contracts/protocol/PoolOrganizer.sol\":3000:3017  uint256 lastIndex */\n      0x00\n        /* \"contracts/protocol/PoolOrganizer.sol\":3020:3039  lenderPools[lender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/protocol/PoolOrganizer.sol\":3020:3031  lenderPools */\n      0x03\n        /* \"contracts/protocol/PoolOrganizer.sol\":3020:3039  lenderPools[lender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/protocol/PoolOrganizer.sol\":3020:3046  lenderPools[lender].length */\n      sload\n        /* \"contracts/protocol/PoolOrganizer.sol\":2930:2989  uint256 index = findIndexInArray(lenderPools[lender], pool) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/protocol/PoolOrganizer.sol\":3000:3017  uint256 lastIndex */\n      swap1\n        /* \"contracts/protocol/PoolOrganizer.sol\":3020:3050  lenderPools[lender].length - 1 */\n      tag_171\n      swap1\n        /* \"contracts/protocol/PoolOrganizer.sol\":3049:3050  1 */\n      0x01\n      swap1\n        /* \"contracts/protocol/PoolOrganizer.sol\":3020:3050  lenderPools[lender].length - 1 */\n      tag_172\n      jump\t// in\n    tag_171:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/PoolOrganizer.sol\":3090:3109  lenderPools[lender] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/protocol/PoolOrganizer.sol\":3090:3101  lenderPools */\n      0x03\n        /* \"contracts/protocol/PoolOrganizer.sol\":3090:3109  lenderPools[lender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/protocol/PoolOrganizer.sol\":3090:3120  lenderPools[lender][lastIndex] */\n      dup1\n      sload\n        /* \"contracts/protocol/PoolOrganizer.sol\":3000:3050  uint256 lastIndex = lenderPools[lender].length - 1 */\n      swap2\n      swap3\n      pop\n        /* \"contracts/protocol/PoolOrganizer.sol\":3090:3109  lenderPools[lender] */\n      swap1\n        /* \"contracts/protocol/PoolOrganizer.sol\":3000:3050  uint256 lastIndex = lenderPools[lender].length - 1 */\n      dup3\n      swap1\n        /* \"contracts/protocol/PoolOrganizer.sol\":3090:3120  lenderPools[lender][lastIndex] */\n      dup2\n      lt\n      tag_174\n      jumpi\n      tag_174\n      tag_175\n      jump\t// in\n    tag_174:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/PoolOrganizer.sol\":3061:3080  lenderPools[lender] */\n      dup8\n      dup2\n      and\n      dup5\n      mstore\n        /* \"contracts/protocol/PoolOrganizer.sol\":3061:3072  lenderPools */\n      0x03\n        /* \"contracts/protocol/PoolOrganizer.sol\":3061:3080  lenderPools[lender] */\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      swap3\n      keccak256\n        /* \"contracts/protocol/PoolOrganizer.sol\":3061:3087  lenderPools[lender][index] */\n      dup1\n      sload\n        /* \"contracts/protocol/PoolOrganizer.sol\":3090:3120  lenderPools[lender][lastIndex] */\n      swap2\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/protocol/PoolOrganizer.sol\":3061:3080  lenderPools[lender] */\n      swap1\n        /* \"contracts/protocol/PoolOrganizer.sol\":3081:3086  index */\n      dup5\n      swap1\n        /* \"contracts/protocol/PoolOrganizer.sol\":3061:3087  lenderPools[lender][index] */\n      dup2\n      lt\n      tag_178\n      jumpi\n      tag_178\n      tag_175\n      jump\t// in\n    tag_178:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/protocol/PoolOrganizer.sol\":3061:3120  lenderPools[lender][index] = lenderPools[lender][lastIndex] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/protocol/PoolOrganizer.sol\":3131:3150  lenderPools[lender] */\n      swap2\n      dup7\n      and\n      dup2\n      mstore\n        /* \"contracts/protocol/PoolOrganizer.sol\":3131:3142  lenderPools */\n      0x03\n        /* \"contracts/protocol/PoolOrganizer.sol\":3131:3150  lenderPools[lender] */\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/protocol/PoolOrganizer.sol\":3131:3156  lenderPools[lender].pop() */\n      dup1\n      sload\n      dup1\n      tag_181\n      jumpi\n      tag_181\n      tag_182\n      jump\t// in\n    tag_181:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      swap1\n      keccak256\n      dup2\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      add\n      swap1\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/protocol/PoolOrganizer.sol\":2845:3164  function _removePoolFromLenderArray(address lender, address pool) private {... */\n      jump\t// out\n        /* \"contracts/protocol/PoolOrganizer.sol\":3172:3403  function _removePoolFromMainArray(address pool) private {... */\n    tag_140:\n        /* \"contracts/protocol/PoolOrganizer.sol\":3239:3252  uint256 index */\n      0x00\n        /* \"contracts/protocol/PoolOrganizer.sol\":3255:3284  findIndexInArray(pools, pool) */\n      tag_185\n        /* \"contracts/protocol/PoolOrganizer.sol\":3272:3277  pools */\n      0x01\n        /* \"contracts/protocol/PoolOrganizer.sol\":3279:3283  pool */\n      dup4\n        /* \"contracts/protocol/PoolOrganizer.sol\":3255:3271  findIndexInArray */\n      tag_170\n        /* \"contracts/protocol/PoolOrganizer.sol\":3255:3284  findIndexInArray(pools, pool) */\n      jump\t// in\n    tag_185:\n        /* \"contracts/protocol/PoolOrganizer.sol\":3330:3331  1 */\n      0x01\n        /* \"contracts/protocol/PoolOrganizer.sol\":3315:3327  pools.length */\n      dup1\n      sload\n        /* \"contracts/protocol/PoolOrganizer.sol\":3239:3284  uint256 index = findIndexInArray(pools, pool) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/protocol/PoolOrganizer.sol\":3295:3312  uint256 lastIndex */\n      0x00\n      swap2\n        /* \"contracts/protocol/PoolOrganizer.sol\":3315:3331  pools.length - 1 */\n      tag_186\n      swap2\n        /* \"contracts/protocol/PoolOrganizer.sol\":3330:3331  1 */\n      swap1\n        /* \"contracts/protocol/PoolOrganizer.sol\":3315:3331  pools.length - 1 */\n      tag_172\n      jump\t// in\n    tag_186:\n        /* \"contracts/protocol/PoolOrganizer.sol\":3295:3331  uint256 lastIndex = pools.length - 1 */\n      swap1\n      pop\n        /* \"contracts/protocol/PoolOrganizer.sol\":3357:3362  pools */\n      0x01\n        /* \"contracts/protocol/PoolOrganizer.sol\":3363:3372  lastIndex */\n      dup2\n        /* \"contracts/protocol/PoolOrganizer.sol\":3357:3373  pools[lastIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_188\n      jumpi\n      tag_188\n      tag_175\n      jump\t// in\n    tag_188:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      0x01\n        /* \"contracts/protocol/PoolOrganizer.sol\":3342:3354  pools[index] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/PoolOrganizer.sol\":3357:3373  pools[lastIndex] */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/protocol/PoolOrganizer.sol\":3348:3353  index */\n      dup5\n      swap1\n        /* \"contracts/protocol/PoolOrganizer.sol\":3342:3354  pools[index] */\n      dup2\n      lt\n      tag_191\n      jumpi\n      tag_191\n      tag_175\n      jump\t// in\n    tag_191:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"contracts/protocol/PoolOrganizer.sol\":3342:3373  pools[index] = pools[lastIndex] */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/protocol/PoolOrganizer.sol\":3384:3389  pools */\n      0x01\n        /* \"contracts/protocol/PoolOrganizer.sol\":3384:3395  pools.pop() */\n      dup1\n      sload\n      dup1\n      tag_194\n      jumpi\n      tag_194\n      tag_182\n      jump\t// in\n    tag_194:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      swap1\n      keccak256\n      dup2\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      add\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/protocol/PoolOrganizer.sol\":3172:3403  function _removePoolFromMainArray(address pool) private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_197\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_71\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_198\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      shl(0xe0, 0xe2517d3f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5594:5626   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5576:5627   */\n      mstore\n        /* \"#utility.yul\":5643:5661   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":5636:5670   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":5549:5567   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      tag_99\n        /* \"#utility.yul\":5402:5676   */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/protocol/PoolOrganizer.sol\":3411:3664  function findIndexInArray(address[] storage array, address target) private view returns (uint256) {... */\n    tag_170:\n        /* \"contracts/protocol/PoolOrganizer.sol\":3500:3507  uint256 */\n      0x00\n      dup1\n        /* \"contracts/protocol/PoolOrganizer.sol\":3520:3622  for (uint256 i = 0; i < array.length; i++) {... */\n    tag_202:\n        /* \"contracts/protocol/PoolOrganizer.sol\":3544:3556  array.length */\n      dup4\n      sload\n        /* \"contracts/protocol/PoolOrganizer.sol\":3540:3556  i < array.length */\n      dup2\n      lt\n        /* \"contracts/protocol/PoolOrganizer.sol\":3520:3622  for (uint256 i = 0; i < array.length; i++) {... */\n      iszero\n      tag_203\n      jumpi\n        /* \"contracts/protocol/PoolOrganizer.sol\":3594:3600  target */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/PoolOrganizer.sol\":3582:3600  array[i] == target */\n      and\n        /* \"contracts/protocol/PoolOrganizer.sol\":3582:3587  array */\n      dup5\n        /* \"contracts/protocol/PoolOrganizer.sol\":3588:3589  i */\n      dup3\n        /* \"contracts/protocol/PoolOrganizer.sol\":3582:3590  array[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_206\n      jumpi\n      tag_206\n      tag_175\n      jump\t// in\n    tag_206:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/protocol/PoolOrganizer.sol\":3582:3600  array[i] == target */\n      sub\n        /* \"contracts/protocol/PoolOrganizer.sol\":3578:3610  if (array[i] == target) return i */\n      tag_208\n      jumpi\n        /* \"contracts/protocol/PoolOrganizer.sol\":3609:3610  i */\n      swap1\n      pop\n        /* \"contracts/protocol/PoolOrganizer.sol\":3602:3610  return i */\n      jump(tag_90)\n        /* \"contracts/protocol/PoolOrganizer.sol\":3578:3610  if (array[i] == target) return i */\n    tag_208:\n        /* \"contracts/protocol/PoolOrganizer.sol\":3558:3561  i++ */\n      0x01\n      add\n        /* \"contracts/protocol/PoolOrganizer.sol\":3520:3622  for (uint256 i = 0; i < array.length; i++) {... */\n      jump(tag_202)\n    tag_203:\n      pop\n      not(0x00)\n        /* \"contracts/protocol/PoolOrganizer.sol\":3639:3656  type(uint256).max */\n      swap4\n        /* \"contracts/protocol/PoolOrganizer.sol\":3411:3664  function findIndexInArray(address[] storage array, address target) private view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_24:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_212:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_213\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":199:270   */\n    tag_213:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":497:670   */\n    tag_209:\n        /* \"#utility.yul\":565:585   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":614:645   */\n      dup2\n      and\n        /* \"#utility.yul\":604:646   */\n      dup2\n      eq\n        /* \"#utility.yul\":594:664   */\n      tag_216\n      jumpi\n        /* \"#utility.yul\":660:661   */\n      0x00\n        /* \"#utility.yul\":657:658   */\n      dup1\n        /* \"#utility.yul\":650:662   */\n      revert\n        /* \"#utility.yul\":594:664   */\n    tag_216:\n        /* \"#utility.yul\":497:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":675:1084   */\n    tag_30:\n        /* \"#utility.yul\":761:767   */\n      0x00\n        /* \"#utility.yul\":769:775   */\n      dup1\n        /* \"#utility.yul\":777:783   */\n      0x00\n        /* \"#utility.yul\":785:791   */\n      dup1\n        /* \"#utility.yul\":838:841   */\n      0x80\n        /* \"#utility.yul\":826:835   */\n      dup6\n        /* \"#utility.yul\":817:824   */\n      dup8\n        /* \"#utility.yul\":813:836   */\n      sub\n        /* \"#utility.yul\":809:842   */\n      slt\n        /* \"#utility.yul\":806:859   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":855:856   */\n      0x00\n        /* \"#utility.yul\":852:853   */\n      dup1\n        /* \"#utility.yul\":845:857   */\n      revert\n        /* \"#utility.yul\":806:859   */\n    tag_218:\n        /* \"#utility.yul\":878:907   */\n      tag_219\n        /* \"#utility.yul\":897:906   */\n      dup6\n        /* \"#utility.yul\":878:907   */\n      tag_209\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":868:907   */\n      swap4\n      pop\n        /* \"#utility.yul\":926:964   */\n      tag_220\n        /* \"#utility.yul\":960:962   */\n      0x20\n        /* \"#utility.yul\":949:958   */\n      dup7\n        /* \"#utility.yul\":945:963   */\n      add\n        /* \"#utility.yul\":926:964   */\n      tag_209\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":916:964   */\n      swap3\n      pop\n        /* \"#utility.yul\":983:1021   */\n      tag_221\n        /* \"#utility.yul\":1017:1019   */\n      0x40\n        /* \"#utility.yul\":1006:1015   */\n      dup7\n        /* \"#utility.yul\":1002:1020   */\n      add\n        /* \"#utility.yul\":983:1021   */\n      tag_209\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":973:1021   */\n      swap2\n      pop\n        /* \"#utility.yul\":1040:1078   */\n      tag_222\n        /* \"#utility.yul\":1074:1076   */\n      0x60\n        /* \"#utility.yul\":1063:1072   */\n      dup7\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1040:1078   */\n      tag_209\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":1030:1078   */\n      swap1\n      pop\n        /* \"#utility.yul\":675:1084   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1089:1275   */\n    tag_34:\n        /* \"#utility.yul\":1148:1154   */\n      0x00\n        /* \"#utility.yul\":1201:1203   */\n      0x20\n        /* \"#utility.yul\":1189:1198   */\n      dup3\n        /* \"#utility.yul\":1180:1187   */\n      dup5\n        /* \"#utility.yul\":1176:1199   */\n      sub\n        /* \"#utility.yul\":1172:1204   */\n      slt\n        /* \"#utility.yul\":1169:1221   */\n      iszero\n      tag_224\n      jumpi\n        /* \"#utility.yul\":1217:1218   */\n      0x00\n        /* \"#utility.yul\":1214:1215   */\n      dup1\n        /* \"#utility.yul\":1207:1219   */\n      revert\n        /* \"#utility.yul\":1169:1221   */\n    tag_224:\n        /* \"#utility.yul\":1240:1269   */\n      tag_213\n        /* \"#utility.yul\":1259:1268   */\n      dup3\n        /* \"#utility.yul\":1240:1269   */\n      tag_209\n      jump\t// in\n        /* \"#utility.yul\":1488:1668   */\n    tag_40:\n        /* \"#utility.yul\":1547:1553   */\n      0x00\n        /* \"#utility.yul\":1600:1602   */\n      0x20\n        /* \"#utility.yul\":1588:1597   */\n      dup3\n        /* \"#utility.yul\":1579:1586   */\n      dup5\n        /* \"#utility.yul\":1575:1598   */\n      sub\n        /* \"#utility.yul\":1571:1603   */\n      slt\n        /* \"#utility.yul\":1568:1620   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":1616:1617   */\n      0x00\n        /* \"#utility.yul\":1613:1614   */\n      dup1\n        /* \"#utility.yul\":1606:1618   */\n      revert\n        /* \"#utility.yul\":1568:1620   */\n    tag_228:\n      pop\n        /* \"#utility.yul\":1639:1662   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1488:1668   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1855:2513   */\n    tag_48:\n        /* \"#utility.yul\":2026:2028   */\n      0x20\n        /* \"#utility.yul\":2078:2099   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2148:2161   */\n      dup3\n      mload\n        /* \"#utility.yul\":2051:2069   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":2170:2192   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1997:2001   */\n      0x00\n      swap2\n        /* \"#utility.yul\":2026:2028   */\n      swap1\n        /* \"#utility.yul\":2249:2264   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":2223:2225   */\n      0x40\n        /* \"#utility.yul\":2208:2226   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":1997:2001   */\n      dup5\n        /* \"#utility.yul\":2292:2487   */\n    tag_231:\n        /* \"#utility.yul\":2306:2312   */\n      dup2\n        /* \"#utility.yul\":2303:2304   */\n      dup2\n        /* \"#utility.yul\":2300:2313   */\n      lt\n        /* \"#utility.yul\":2292:2487   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":2371:2384   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2367:2406   */\n      and\n        /* \"#utility.yul\":2355:2407   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2462:2477   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":2427:2439   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":2403:2404   */\n      0x01\n        /* \"#utility.yul\":2321:2330   */\n      add\n        /* \"#utility.yul\":2292:2487   */\n      jump(tag_231)\n    tag_233:\n      pop\n        /* \"#utility.yul\":2504:2507   */\n      swap1\n      swap7\n        /* \"#utility.yul\":1855:2513   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2518:2772   */\n    tag_51:\n        /* \"#utility.yul\":2586:2592   */\n      0x00\n        /* \"#utility.yul\":2594:2600   */\n      dup1\n        /* \"#utility.yul\":2647:2649   */\n      0x40\n        /* \"#utility.yul\":2635:2644   */\n      dup4\n        /* \"#utility.yul\":2626:2633   */\n      dup6\n        /* \"#utility.yul\":2622:2645   */\n      sub\n        /* \"#utility.yul\":2618:2650   */\n      slt\n        /* \"#utility.yul\":2615:2667   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":2663:2664   */\n      0x00\n        /* \"#utility.yul\":2660:2661   */\n      dup1\n        /* \"#utility.yul\":2653:2665   */\n      revert\n        /* \"#utility.yul\":2615:2667   */\n    tag_235:\n        /* \"#utility.yul\":2699:2708   */\n      dup3\n        /* \"#utility.yul\":2686:2709   */\n      calldataload\n        /* \"#utility.yul\":2676:2709   */\n      swap2\n      pop\n        /* \"#utility.yul\":2728:2766   */\n      tag_236\n        /* \"#utility.yul\":2762:2764   */\n      0x20\n        /* \"#utility.yul\":2751:2760   */\n      dup5\n        /* \"#utility.yul\":2747:2765   */\n      add\n        /* \"#utility.yul\":2728:2766   */\n      tag_209\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":2718:2766   */\n      swap1\n      pop\n        /* \"#utility.yul\":2518:2772   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4908:5133   */\n    tag_172:\n        /* \"#utility.yul\":4975:4984   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":4996:5007   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":4993:5127   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":5049:5059   */\n      0x4e487b71\n        /* \"#utility.yul\":5044:5047   */\n      0xe0\n        /* \"#utility.yul\":5040:5060   */\n      shl\n        /* \"#utility.yul\":5037:5038   */\n      0x00\n        /* \"#utility.yul\":5030:5061   */\n      mstore\n        /* \"#utility.yul\":5084:5088   */\n      0x11\n        /* \"#utility.yul\":5081:5082   */\n      0x04\n        /* \"#utility.yul\":5074:5089   */\n      mstore\n        /* \"#utility.yul\":5112:5116   */\n      0x24\n        /* \"#utility.yul\":5109:5110   */\n      0x00\n        /* \"#utility.yul\":5102:5117   */\n      revert\n        /* \"#utility.yul\":5138:5265   */\n    tag_175:\n        /* \"#utility.yul\":5199:5209   */\n      0x4e487b71\n        /* \"#utility.yul\":5194:5197   */\n      0xe0\n        /* \"#utility.yul\":5190:5210   */\n      shl\n        /* \"#utility.yul\":5187:5188   */\n      0x00\n        /* \"#utility.yul\":5180:5211   */\n      mstore\n        /* \"#utility.yul\":5230:5234   */\n      0x32\n        /* \"#utility.yul\":5227:5228   */\n      0x04\n        /* \"#utility.yul\":5220:5235   */\n      mstore\n        /* \"#utility.yul\":5254:5258   */\n      0x24\n        /* \"#utility.yul\":5251:5252   */\n      0x00\n        /* \"#utility.yul\":5244:5259   */\n      revert\n        /* \"#utility.yul\":5270:5397   */\n    tag_182:\n        /* \"#utility.yul\":5331:5341   */\n      0x4e487b71\n        /* \"#utility.yul\":5326:5329   */\n      0xe0\n        /* \"#utility.yul\":5322:5342   */\n      shl\n        /* \"#utility.yul\":5319:5320   */\n      0x00\n        /* \"#utility.yul\":5312:5343   */\n      mstore\n        /* \"#utility.yul\":5362:5366   */\n      0x31\n        /* \"#utility.yul\":5359:5360   */\n      0x04\n        /* \"#utility.yul\":5352:5367   */\n      mstore\n        /* \"#utility.yul\":5386:5390   */\n      0x24\n        /* \"#utility.yul\":5383:5384   */\n      0x00\n        /* \"#utility.yul\":5376:5391   */\n      revert\n    stop\n    data_cea5b988323acc73cd81db0e6f2932cdc75f39072539d65cbfa79c56b2a64e51 6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98aff\n\n    auxdata: 0xa26469706673582212200ce86c251d0ebae85779b638f6911a6e7bf61ed0753deff622d1128a21ec1a3c64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_573": {
									"entryPoint": null,
									"id": 573,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 75,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_390": {
									"entryPoint": null,
									"id": 390,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": null,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5061001a5f3361004b565b506100457f6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98aff3361004b565b506100f4565b5f828152602081815260408083206001600160a01b038516845290915281205460ff166100eb575f838152602081815260408083206001600160a01b03861684529091529020805460ff191660011790556100a33390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016100ee565b505f5b92915050565b610e1f806101015f395ff3fe608060405234801561000f575f80fd5b50600436106100fb575f3560e01c80635d102df711610093578063a217fddf11610063578063a217fddf14610252578063d3e90fa014610259578063d3ffe67a146102ad578063d547741f146102b5575f80fd5b80635d102df7146102065780637570e389146102195780637e72c7d71461022c57806391d148541461023f575f80fd5b806324a44efb116100ce57806324a44efb146101ac5780632f2ff15d146101cc57806336568abe146101df57806356d73568146101f2575f80fd5b806301ffc9a7146100ff5780630cf9c72e146101275780631e4966ab1461013c578063248a9ca31461017c575b5f80fd5b61011261010d366004610c42565b6102c8565b60405190151581526020015b60405180910390f35b61013a610135366004610c8b565b6102fe565b005b61016461014a366004610cdc565b60046020525f90815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161011e565b61019e61018a366004610cf5565b5f9081526020819052604090206001015490565b60405190815260200161011e565b6101bf6101ba366004610cdc565b61051b565b60405161011e9190610d0c565b61013a6101da366004610d58565b61058e565b61013a6101ed366004610d58565b6105b8565b61019e5f80516020610dca83398151915281565b61013a610214366004610cdc565b6105f0565b610164610227366004610cdc565b610659565b61013a61023a366004610cdc565b6106eb565b61011261024d366004610d58565b6107d4565b61019e5f81565b61026c610267366004610cdc565b6107fc565b60405161011e919081516001600160a01b03908116825260208084015182169083015260408084015190830152606092830151169181019190915260800190565b60015461019e565b61013a6102c3366004610d58565b6108a9565b5f6001600160e01b03198216637965db0b60e01b14806102f857506301ffc9a760e01b6001600160e01b03198316145b92915050565b5f80516020610dca833981519152610315816108cd565b6001600160a01b0385161580159061033557506001600160a01b03841615155b801561034957506001600160a01b03821615155b61038a5760405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a59081a5b9c1d5d609a1b60448201526064015b60405180910390fd5b6001600160a01b038581165f9081526002602052604090205416156103f15760405162461bcd60e51b815260206004820152601760248201527f506f6f6c20616c726561647920726567697374657265640000000000000000006044820152606401610381565b604080516080810182526001600160a01b03868116808352868216602080850182815242868801908152898616606088018181528e88165f81815260028088528c82209b518c54908c166001600160a01b0319918216178d5596516001808e018054928e16928a16929092179091559551908c0155915160039a8b01805491909a16908616179098558681529784528888208054808401825590895284892001805484168817905581548083019092557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69091018054831687179055858752600483529587902080549091168617905594519384529390927f928b994ad535a478f217ab28f23fbbf04f79d765f407b8df7cc2df7174aef90b910160405180910390a45050505050565b6001600160a01b0381165f9081526003602090815260409182902080548351818402810184019094528084526060939283018282801561058257602002820191905f5260205f20905b81546001600160a01b03168152600190910190602001808311610564575b50505050509050919050565b5f828152602081905260409020600101546105a8816108cd565b6105b283836108d7565b50505050565b6001600160a01b03811633146105e15760405163334bd91960e11b815260040160405180910390fd5b6105eb8282610966565b505050565b6105fa5f336107d4565b61063f5760405162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1030b71030b236b4b760511b6044820152606401610381565b6106565f80516020610dca8339815191528261058e565b50565b6001600160a01b038181165f908152600460205260408120549091166106cd5760405162461bcd60e51b815260206004820152602360248201527f506f6f6c206e6f742072656769737465726564206f7220686173206e6f2076616044820152621d5b1d60ea1b6064820152608401610381565b506001600160a01b039081165f908152600460205260409020541690565b5f80516020610dca833981519152610702816108cd565b6001600160a01b038281165f90815260026020526040902054166107395760405163739f418560e01b815260040160405180910390fd5b6001600160a01b038083165f9081526002602052604090205461075d9116836109cf565b61076682610aeb565b6001600160a01b0382165f81815260026020819052604080832080546001600160a01b03199081168255600182018054821690559281018490556003018054909216909155517f334d0b2111287dfddebe4b4c1c5af3ae644909d7fcd024377bf601e236ed5abb9190a25050565b5f918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b604080516080810182525f8082526020820181905291810182905260608101919091526001600160a01b038281165f90815260026020526040902054166108565760405163739f418560e01b815260040160405180910390fd5b506001600160a01b039081165f9081526002602081815260409283902083516080810185528154861681526001820154861692810192909252918201549281019290925260030154909116606082015290565b5f828152602081905260409020600101546108c3816108cd565b6105b28383610966565b6106568133610bab565b5f6108e283836107d4565b61095f575f838152602081815260408083206001600160a01b03861684529091529020805460ff191660011790556109173390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016102f8565b505f6102f8565b5f61097183836107d4565b1561095f575f838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45060016102f8565b6001600160a01b0382165f9081526003602052604081206109f09083610be8565b6001600160a01b0384165f9081526003602052604081205491925090610a1890600190610d82565b6001600160a01b0385165f90815260036020526040902080549192509082908110610a4557610a45610da1565b5f9182526020808320909101546001600160a01b03878116845260039092526040909220805491909216919084908110610a8157610a81610da1565b5f91825260208083209190910180546001600160a01b0319166001600160a01b039485161790559186168152600390915260409020805480610ac557610ac5610db5565b5f8281526020902081015f1990810180546001600160a01b031916905501905550505050565b5f610af7600183610be8565b600180549192505f91610b0a9190610d82565b905060018181548110610b1f57610b1f610da1565b5f91825260209091200154600180546001600160a01b039092169184908110610b4a57610b4a610da1565b905f5260205f20015f6101000a8154816001600160a01b0302191690836001600160a01b031602179055506001805480610b8657610b86610db5565b5f8281526020902081015f1990810180546001600160a01b0319169055019055505050565b610bb582826107d4565b610be45760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610381565b5050565b5f805b8354811015610c3857826001600160a01b0316848281548110610c1057610c10610da1565b5f918252602090912001546001600160a01b031603610c305790506102f8565b600101610beb565b505f199392505050565b5f60208284031215610c52575f80fd5b81356001600160e01b031981168114610c69575f80fd5b9392505050565b80356001600160a01b0381168114610c86575f80fd5b919050565b5f805f8060808587031215610c9e575f80fd5b610ca785610c70565b9350610cb560208601610c70565b9250610cc360408601610c70565b9150610cd160608601610c70565b905092959194509250565b5f60208284031215610cec575f80fd5b610c6982610c70565b5f60208284031215610d05575f80fd5b5035919050565b602080825282518282018190525f9190848201906040850190845b81811015610d4c5783516001600160a01b031683529284019291840191600101610d27565b50909695505050505050565b5f8060408385031215610d69575f80fd5b82359150610d7960208401610c70565b90509250929050565b818103818111156102f857634e487b7160e01b5f52601160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52603160045260245ffdfe6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98affa26469706673582212200ce86c251d0ebae85779b638f6911a6e7bf61ed0753deff622d1128a21ec1a3c64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A PUSH0 CALLER PUSH2 0x4B JUMP JUMPDEST POP PUSH2 0x45 PUSH32 0x6077685936C8169D09204A1D97DB12E41713588C38E1D29A61867D3DCEE98AFF CALLER PUSH2 0x4B JUMP JUMPDEST POP PUSH2 0xF4 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xEB JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xA3 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0xEE JUMP JUMPDEST POP PUSH0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE1F DUP1 PUSH2 0x101 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D102DF7 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xD3E90FA0 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0xD3FFE67A EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5D102DF7 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x7570E389 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x7E72C7D7 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x23F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x24A44EFB GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x24A44EFB EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x56D73568 EQ PUSH2 0x1F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xCF9C72E EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x1E4966AB EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x17C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x112 PUSH2 0x10D CALLDATASIZE PUSH1 0x4 PUSH2 0xC42 JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH2 0x135 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8B JUMP JUMPDEST PUSH2 0x2FE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x164 PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xCDC JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11E JUMP JUMPDEST PUSH2 0x19E PUSH2 0x18A CALLDATASIZE PUSH1 0x4 PUSH2 0xCF5 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11E JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0xCDC JUMP JUMPDEST PUSH2 0x51B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0xD0C JUMP JUMPDEST PUSH2 0x13A PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0xD58 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST PUSH2 0x13A PUSH2 0x1ED CALLDATASIZE PUSH1 0x4 PUSH2 0xD58 JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0x19E PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xDCA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x13A PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0xCDC JUMP JUMPDEST PUSH2 0x5F0 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0xCDC JUMP JUMPDEST PUSH2 0x659 JUMP JUMPDEST PUSH2 0x13A PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0xCDC JUMP JUMPDEST PUSH2 0x6EB JUMP JUMPDEST PUSH2 0x112 PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0xD58 JUMP JUMPDEST PUSH2 0x7D4 JUMP JUMPDEST PUSH2 0x19E PUSH0 DUP2 JUMP JUMPDEST PUSH2 0x26C PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0xCDC JUMP JUMPDEST PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD DUP3 AND SWAP1 DUP4 ADD MSTORE PUSH1 0x40 DUP1 DUP5 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x60 SWAP3 DUP4 ADD MLOAD AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x19E JUMP JUMPDEST PUSH2 0x13A PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0xD58 JUMP JUMPDEST PUSH2 0x8A9 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x2F8 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xDCA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x315 DUP2 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x335 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x349 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x125B9D985B1A59081A5B9C1D5D PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20616C72656164792072656769737465726564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP1 DUP4 MSTORE DUP7 DUP3 AND PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE TIMESTAMP DUP7 DUP9 ADD SWAP1 DUP2 MSTORE DUP10 DUP7 AND PUSH1 0x60 DUP9 ADD DUP2 DUP2 MSTORE DUP15 DUP9 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP1 DUP9 MSTORE DUP13 DUP3 KECCAK256 SWAP12 MLOAD DUP13 SLOAD SWAP1 DUP13 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP14 SSTORE SWAP7 MLOAD PUSH1 0x1 DUP1 DUP15 ADD DUP1 SLOAD SWAP3 DUP15 AND SWAP3 DUP11 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP6 MLOAD SWAP1 DUP13 ADD SSTORE SWAP2 MLOAD PUSH1 0x3 SWAP11 DUP12 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP11 AND SWAP1 DUP7 AND OR SWAP1 SWAP9 SSTORE DUP7 DUP2 MSTORE SWAP8 DUP5 MSTORE DUP9 DUP9 KECCAK256 DUP1 SLOAD DUP1 DUP5 ADD DUP3 SSTORE SWAP1 DUP10 MSTORE DUP5 DUP10 KECCAK256 ADD DUP1 SLOAD DUP5 AND DUP9 OR SWAP1 SSTORE DUP2 SLOAD DUP1 DUP4 ADD SWAP1 SWAP3 SSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP1 SWAP2 ADD DUP1 SLOAD DUP4 AND DUP8 OR SWAP1 SSTORE DUP6 DUP8 MSTORE PUSH1 0x4 DUP4 MSTORE SWAP6 DUP8 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND DUP7 OR SWAP1 SSTORE SWAP5 MLOAD SWAP4 DUP5 MSTORE SWAP4 SWAP1 SWAP3 PUSH32 0x928B994AD535A478F217AB28F23FBBF04F79D765F407B8DF7CC2DF7174AEF90B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x582 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x564 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x5A8 DUP2 PUSH2 0x8CD JUMP JUMPDEST PUSH2 0x5B2 DUP4 DUP4 PUSH2 0x8D7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x5E1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5EB DUP3 DUP3 PUSH2 0x966 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5FA PUSH0 CALLER PUSH2 0x7D4 JUMP JUMPDEST PUSH2 0x63F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x21B0B63632B91034B9903737BA1030B71030B236B4B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x656 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xDCA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH2 0x58E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND PUSH2 0x6CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C206E6F742072656769737465726564206F7220686173206E6F207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1D5B1D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xDCA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x702 DUP2 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x739 JUMPI PUSH1 0x40 MLOAD PUSH4 0x739F4185 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x75D SWAP2 AND DUP4 PUSH2 0x9CF JUMP JUMPDEST PUSH2 0x766 DUP3 PUSH2 0xAEB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD DUP3 AND SWAP1 SSTORE SWAP3 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x3 ADD DUP1 SLOAD SWAP1 SWAP3 AND SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x334D0B2111287DFDDEBE4B4C1C5AF3AE644909D7FCD024377BF601E236ED5ABB SWAP2 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x856 JUMPI PUSH1 0x40 MLOAD PUSH4 0x739F4185 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP7 AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP7 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x8C3 DUP2 PUSH2 0x8CD JUMP JUMPDEST PUSH2 0x5B2 DUP4 DUP4 PUSH2 0x966 JUMP JUMPDEST PUSH2 0x656 DUP2 CALLER PUSH2 0xBAB JUMP JUMPDEST PUSH0 PUSH2 0x8E2 DUP4 DUP4 PUSH2 0x7D4 JUMP JUMPDEST PUSH2 0x95F JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x917 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x2F8 JUMP JUMPDEST POP PUSH0 PUSH2 0x2F8 JUMP JUMPDEST PUSH0 PUSH2 0x971 DUP4 DUP4 PUSH2 0x7D4 JUMP JUMPDEST ISZERO PUSH2 0x95F JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x9F0 SWAP1 DUP4 PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0xA18 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 DUP3 SWAP1 DUP2 LT PUSH2 0xA45 JUMPI PUSH2 0xA45 PUSH2 0xDA1 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0xA81 JUMPI PUSH2 0xA81 PUSH2 0xDA1 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP2 DUP7 AND DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0xAC5 JUMPI PUSH2 0xAC5 PUSH2 0xDB5 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAF7 PUSH1 0x1 DUP4 PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP2 SWAP3 POP PUSH0 SWAP2 PUSH2 0xB0A SWAP2 SWAP1 PUSH2 0xD82 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB1F JUMPI PUSH2 0xB1F PUSH2 0xDA1 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP5 SWAP1 DUP2 LT PUSH2 0xB4A JUMPI PUSH2 0xB4A PUSH2 0xDA1 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP1 SLOAD DUP1 PUSH2 0xB86 JUMPI PUSH2 0xB86 PUSH2 0xDB5 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xBB5 DUP3 DUP3 PUSH2 0x7D4 JUMP JUMPDEST PUSH2 0xBE4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x381 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 JUMPDEST DUP4 SLOAD DUP2 LT ISZERO PUSH2 0xC38 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC10 JUMPI PUSH2 0xC10 PUSH2 0xDA1 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xC30 JUMPI SWAP1 POP PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xBEB JUMP JUMPDEST POP PUSH0 NOT SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC52 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xC69 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC86 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xC9E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCA7 DUP6 PUSH2 0xC70 JUMP JUMPDEST SWAP4 POP PUSH2 0xCB5 PUSH1 0x20 DUP7 ADD PUSH2 0xC70 JUMP JUMPDEST SWAP3 POP PUSH2 0xCC3 PUSH1 0x40 DUP7 ADD PUSH2 0xC70 JUMP JUMPDEST SWAP2 POP PUSH2 0xCD1 PUSH1 0x60 DUP7 ADD PUSH2 0xC70 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCEC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC69 DUP3 PUSH2 0xC70 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD05 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD4C JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xD27 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD69 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xD79 PUSH1 0x20 DUP5 ADD PUSH2 0xC70 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2F8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID PUSH1 0x77 PUSH9 0x5936C8169D09204A1D SWAP8 0xDB SLT 0xE4 OR SGT PC DUP13 CODESIZE 0xE1 0xD2 SWAP11 PUSH2 0x867D RETURNDATASIZE 0xCE 0xE9 DUP11 SELFDESTRUCT LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xE8 PUSH13 0x251D0EBAE85779B638F6911A6E PUSH28 0xF61ED0753DEFF622D1128A21EC1A3C64736F6C634300081900330000 ",
							"sourceMap": "276:3391:6:-:0;;;789:127;;;;;;;;;-1:-1:-1;814:42:6;2232:4:0;845:10:6;814;:42::i;:::-;-1:-1:-1;867:41:6;383:30;897:10;867;:41::i;:::-;;276:3391;;6179:316:0;6256:4;2954:12;;;;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;6272:217;;6315:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:2;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6272:217;6179:316;;;;:::o;276:3391:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": null,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@POOL_MANAGER_ROLE_526": {
									"entryPoint": null,
									"id": 526,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 2987,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 2253,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 2263,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_390": {
									"entryPoint": null,
									"id": 390,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_removePoolFromLenderArray_842": {
									"entryPoint": 2511,
									"id": 842,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_removePoolFromMainArray_875": {
									"entryPoint": 2795,
									"id": 875,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_revokeRole_294": {
									"entryPoint": 2406,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@deregisterPool_706": {
									"entryPoint": 1771,
									"id": 706,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@findIndexInArray_913": {
									"entryPoint": 3048,
									"id": 913,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getPoolDetails_754": {
									"entryPoint": 2044,
									"id": 754,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getPoolsByLender_728": {
									"entryPoint": 1307,
									"id": 728,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRoleAdmin_128": {
									"entryPoint": null,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTotalPools_715": {
									"entryPoint": null,
									"id": 715,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getVaultForPool_778": {
									"entryPoint": 1625,
									"id": 778,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantFactoryAccess_798": {
									"entryPoint": 1520,
									"id": 798,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@grantRole_147": {
									"entryPoint": 1422,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 2004,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@poolVaults_543": {
									"entryPoint": null,
									"id": 543,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@registerPool_663": {
									"entryPoint": 766,
									"id": 663,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@renounceRole_189": {
									"entryPoint": 1464,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 2217,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_431": {
									"entryPoint": null,
									"id": 431,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 712,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_address": {
									"entryPoint": 3211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 3317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 3416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 3340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_39a3b1530e3b6596e085e382bff955d043a269a2081635a9d861923ef05dbbcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc861dfb3d1e0446599e73c98b2e7d579c1ecdb9e65a09f726c97d864f2bf3dd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_PoolDetails_$455_memory_ptr__to_t_struct$_PoolDetails_$455_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x31": {
									"entryPoint": 3509,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3489,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5678:7",
										"nodeType": "YulBlock",
										"src": "0:5678:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "83:217:7",
													"nodeType": "YulBlock",
													"src": "83:217:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "129:16:7",
																"nodeType": "YulBlock",
																"src": "129:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "138:1:7",
																					"nodeType": "YulLiteral",
																					"src": "138:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "141:1:7",
																					"nodeType": "YulLiteral",
																					"src": "141:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "131:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:7"
																			},
																			"nativeSrc": "131:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:7"
																		},
																		"nativeSrc": "131:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "104:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "113:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "100:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:7"
																		},
																		"nativeSrc": "100:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "125:2:7",
																		"nodeType": "YulLiteral",
																		"src": "125:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "96:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:7"
																},
																"nativeSrc": "96:32:7",
																"nodeType": "YulFunctionCall",
																"src": "96:32:7"
															},
															"nativeSrc": "93:52:7",
															"nodeType": "YulIf",
															"src": "93:52:7"
														},
														{
															"nativeSrc": "154:36:7",
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "180:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "167:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:7"
																},
																"nativeSrc": "167:23:7",
																"nodeType": "YulFunctionCall",
																"src": "167:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "158:5:7",
																	"nodeType": "YulTypedName",
																	"src": "158:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "254:16:7",
																"nodeType": "YulBlock",
																"src": "254:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "263:1:7",
																					"nodeType": "YulLiteral",
																					"src": "263:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "266:1:7",
																					"nodeType": "YulLiteral",
																					"src": "266:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "256:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:7"
																			},
																			"nativeSrc": "256:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:7"
																		},
																		"nativeSrc": "256:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "212:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "223:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "234:3:7",
																								"nodeType": "YulLiteral",
																								"src": "234:3:7",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "239:10:7",
																								"nodeType": "YulLiteral",
																								"src": "239:10:7",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "230:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:7"
																						},
																						"nativeSrc": "230:20:7",
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "219:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:7"
																				},
																				"nativeSrc": "219:32:7",
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "209:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:7"
																		},
																		"nativeSrc": "209:43:7",
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "202:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:7"
																},
																"nativeSrc": "202:51:7",
																"nodeType": "YulFunctionCall",
																"src": "202:51:7"
															},
															"nativeSrc": "199:71:7",
															"nodeType": "YulIf",
															"src": "199:71:7"
														},
														{
															"nativeSrc": "279:15:7",
															"nodeType": "YulAssignment",
															"src": "279:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "289:5:7",
																"nodeType": "YulIdentifier",
																"src": "289:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "279:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "14:286:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "49:9:7",
														"nodeType": "YulTypedName",
														"src": "49:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "60:7:7",
														"nodeType": "YulTypedName",
														"src": "60:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "72:6:7",
														"nodeType": "YulTypedName",
														"src": "72:6:7",
														"type": ""
													}
												],
												"src": "14:286:7"
											},
											{
												"body": {
													"nativeSrc": "400:92:7",
													"nodeType": "YulBlock",
													"src": "400:92:7",
													"statements": [
														{
															"nativeSrc": "410:26:7",
															"nodeType": "YulAssignment",
															"src": "410:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "422:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "433:2:7",
																		"nodeType": "YulLiteral",
																		"src": "433:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "418:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:7"
																},
																"nativeSrc": "418:18:7",
																"nodeType": "YulFunctionCall",
																"src": "418:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "410:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "452:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "477:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "470:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:7"
																				},
																				"nativeSrc": "470:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "463:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:7"
																		},
																		"nativeSrc": "463:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "445:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:7"
																},
																"nativeSrc": "445:41:7",
																"nodeType": "YulFunctionCall",
																"src": "445:41:7"
															},
															"nativeSrc": "445:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "445:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "305:187:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "369:9:7",
														"nodeType": "YulTypedName",
														"src": "369:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "380:6:7",
														"nodeType": "YulTypedName",
														"src": "380:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "391:4:7",
														"nodeType": "YulTypedName",
														"src": "391:4:7",
														"type": ""
													}
												],
												"src": "305:187:7"
											},
											{
												"body": {
													"nativeSrc": "546:124:7",
													"nodeType": "YulBlock",
													"src": "546:124:7",
													"statements": [
														{
															"nativeSrc": "556:29:7",
															"nodeType": "YulAssignment",
															"src": "556:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "578:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "578:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "565:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "565:12:7"
																},
																"nativeSrc": "565:20:7",
																"nodeType": "YulFunctionCall",
																"src": "565:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "556:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "556:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "648:16:7",
																"nodeType": "YulBlock",
																"src": "648:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "657:1:7",
																					"nodeType": "YulLiteral",
																					"src": "657:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "660:1:7",
																					"nodeType": "YulLiteral",
																					"src": "660:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "650:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "650:6:7"
																			},
																			"nativeSrc": "650:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "650:12:7"
																		},
																		"nativeSrc": "650:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "650:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "607:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "607:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "618:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "618:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "633:3:7",
																										"nodeType": "YulLiteral",
																										"src": "633:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "638:1:7",
																										"nodeType": "YulLiteral",
																										"src": "638:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "629:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "629:3:7"
																								},
																								"nativeSrc": "629:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "629:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "642:1:7",
																								"nodeType": "YulLiteral",
																								"src": "642:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "625:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "625:3:7"
																						},
																						"nativeSrc": "625:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "625:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "614:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "614:3:7"
																				},
																				"nativeSrc": "614:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "614:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "604:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "604:2:7"
																		},
																		"nativeSrc": "604:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "604:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "597:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:7"
																},
																"nativeSrc": "597:50:7",
																"nodeType": "YulFunctionCall",
																"src": "597:50:7"
															},
															"nativeSrc": "594:70:7",
															"nodeType": "YulIf",
															"src": "594:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "497:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "525:6:7",
														"nodeType": "YulTypedName",
														"src": "525:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "536:5:7",
														"nodeType": "YulTypedName",
														"src": "536:5:7",
														"type": ""
													}
												],
												"src": "497:173:7"
											},
											{
												"body": {
													"nativeSrc": "796:288:7",
													"nodeType": "YulBlock",
													"src": "796:288:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "843:16:7",
																"nodeType": "YulBlock",
																"src": "843:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "852:1:7",
																					"nodeType": "YulLiteral",
																					"src": "852:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "855:1:7",
																					"nodeType": "YulLiteral",
																					"src": "855:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "845:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "845:6:7"
																			},
																			"nativeSrc": "845:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "845:12:7"
																		},
																		"nativeSrc": "845:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "845:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "817:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "817:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "826:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "813:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "813:3:7"
																		},
																		"nativeSrc": "813:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "813:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "838:3:7",
																		"nodeType": "YulLiteral",
																		"src": "838:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "809:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "809:3:7"
																},
																"nativeSrc": "809:33:7",
																"nodeType": "YulFunctionCall",
																"src": "809:33:7"
															},
															"nativeSrc": "806:53:7",
															"nodeType": "YulIf",
															"src": "806:53:7"
														},
														{
															"nativeSrc": "868:39:7",
															"nodeType": "YulAssignment",
															"src": "868:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "897:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "897:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "878:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "878:18:7"
																},
																"nativeSrc": "878:29:7",
																"nodeType": "YulFunctionCall",
																"src": "878:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "868:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "868:6:7"
																}
															]
														},
														{
															"nativeSrc": "916:48:7",
															"nodeType": "YulAssignment",
															"src": "916:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "949:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "949:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "960:2:7",
																				"nodeType": "YulLiteral",
																				"src": "960:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "945:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "945:3:7"
																		},
																		"nativeSrc": "945:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "945:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "926:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "926:18:7"
																},
																"nativeSrc": "926:38:7",
																"nodeType": "YulFunctionCall",
																"src": "926:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "916:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "916:6:7"
																}
															]
														},
														{
															"nativeSrc": "973:48:7",
															"nodeType": "YulAssignment",
															"src": "973:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1006:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1006:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1017:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1017:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1002:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1002:3:7"
																		},
																		"nativeSrc": "1002:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1002:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "983:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "983:18:7"
																},
																"nativeSrc": "983:38:7",
																"nodeType": "YulFunctionCall",
																"src": "983:38:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "973:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "973:6:7"
																}
															]
														},
														{
															"nativeSrc": "1030:48:7",
															"nodeType": "YulAssignment",
															"src": "1030:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1063:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1063:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1074:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1074:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1059:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1059:3:7"
																		},
																		"nativeSrc": "1059:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1059:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1040:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1040:18:7"
																},
																"nativeSrc": "1040:38:7",
																"nodeType": "YulFunctionCall",
																"src": "1040:38:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "1030:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1030:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_address",
												"nativeSrc": "675:409:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "738:9:7",
														"nodeType": "YulTypedName",
														"src": "738:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "749:7:7",
														"nodeType": "YulTypedName",
														"src": "749:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "761:6:7",
														"nodeType": "YulTypedName",
														"src": "761:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "769:6:7",
														"nodeType": "YulTypedName",
														"src": "769:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "777:6:7",
														"nodeType": "YulTypedName",
														"src": "777:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "785:6:7",
														"nodeType": "YulTypedName",
														"src": "785:6:7",
														"type": ""
													}
												],
												"src": "675:409:7"
											},
											{
												"body": {
													"nativeSrc": "1159:116:7",
													"nodeType": "YulBlock",
													"src": "1159:116:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1205:16:7",
																"nodeType": "YulBlock",
																"src": "1205:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1214:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1214:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1217:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1217:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1207:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1207:6:7"
																			},
																			"nativeSrc": "1207:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1207:12:7"
																		},
																		"nativeSrc": "1207:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1207:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1180:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1180:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1189:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1189:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1176:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1176:3:7"
																		},
																		"nativeSrc": "1176:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1176:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1201:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1201:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1172:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1172:3:7"
																},
																"nativeSrc": "1172:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1172:32:7"
															},
															"nativeSrc": "1169:52:7",
															"nodeType": "YulIf",
															"src": "1169:52:7"
														},
														{
															"nativeSrc": "1230:39:7",
															"nodeType": "YulAssignment",
															"src": "1230:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1259:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1259:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1240:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1240:18:7"
																},
																"nativeSrc": "1240:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1240:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1230:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1230:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1089:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1125:9:7",
														"nodeType": "YulTypedName",
														"src": "1125:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1136:7:7",
														"nodeType": "YulTypedName",
														"src": "1136:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1148:6:7",
														"nodeType": "YulTypedName",
														"src": "1148:6:7",
														"type": ""
													}
												],
												"src": "1089:186:7"
											},
											{
												"body": {
													"nativeSrc": "1381:102:7",
													"nodeType": "YulBlock",
													"src": "1381:102:7",
													"statements": [
														{
															"nativeSrc": "1391:26:7",
															"nodeType": "YulAssignment",
															"src": "1391:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1403:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1403:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1414:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1414:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1399:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1399:3:7"
																},
																"nativeSrc": "1399:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1399:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1391:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1391:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1433:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1433:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1448:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1448:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1464:3:7",
																								"nodeType": "YulLiteral",
																								"src": "1464:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1469:1:7",
																								"nodeType": "YulLiteral",
																								"src": "1469:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1460:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1460:3:7"
																						},
																						"nativeSrc": "1460:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1460:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1473:1:7",
																						"nodeType": "YulLiteral",
																						"src": "1473:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1456:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1456:3:7"
																				},
																				"nativeSrc": "1456:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1456:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1444:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1444:3:7"
																		},
																		"nativeSrc": "1444:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1444:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1426:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1426:6:7"
																},
																"nativeSrc": "1426:51:7",
																"nodeType": "YulFunctionCall",
																"src": "1426:51:7"
															},
															"nativeSrc": "1426:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "1426:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1280:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1350:9:7",
														"nodeType": "YulTypedName",
														"src": "1350:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1361:6:7",
														"nodeType": "YulTypedName",
														"src": "1361:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1372:4:7",
														"nodeType": "YulTypedName",
														"src": "1372:4:7",
														"type": ""
													}
												],
												"src": "1280:203:7"
											},
											{
												"body": {
													"nativeSrc": "1558:110:7",
													"nodeType": "YulBlock",
													"src": "1558:110:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1604:16:7",
																"nodeType": "YulBlock",
																"src": "1604:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1613:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1613:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1616:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1616:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1606:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1606:6:7"
																			},
																			"nativeSrc": "1606:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1606:12:7"
																		},
																		"nativeSrc": "1606:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1606:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1579:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1579:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1588:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1588:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1575:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1575:3:7"
																		},
																		"nativeSrc": "1575:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1575:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1600:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1600:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1571:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1571:3:7"
																},
																"nativeSrc": "1571:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1571:32:7"
															},
															"nativeSrc": "1568:52:7",
															"nodeType": "YulIf",
															"src": "1568:52:7"
														},
														{
															"nativeSrc": "1629:33:7",
															"nodeType": "YulAssignment",
															"src": "1629:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1652:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1652:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1639:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1639:12:7"
																},
																"nativeSrc": "1639:23:7",
																"nodeType": "YulFunctionCall",
																"src": "1639:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1629:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1629:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "1488:180:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1524:9:7",
														"nodeType": "YulTypedName",
														"src": "1524:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1535:7:7",
														"nodeType": "YulTypedName",
														"src": "1535:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1547:6:7",
														"nodeType": "YulTypedName",
														"src": "1547:6:7",
														"type": ""
													}
												],
												"src": "1488:180:7"
											},
											{
												"body": {
													"nativeSrc": "1774:76:7",
													"nodeType": "YulBlock",
													"src": "1774:76:7",
													"statements": [
														{
															"nativeSrc": "1784:26:7",
															"nodeType": "YulAssignment",
															"src": "1784:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1796:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1796:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1807:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1792:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1792:3:7"
																},
																"nativeSrc": "1792:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1792:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1784:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1784:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1826:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1826:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1837:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1837:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1819:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1819:6:7"
																},
																"nativeSrc": "1819:25:7",
																"nodeType": "YulFunctionCall",
																"src": "1819:25:7"
															},
															"nativeSrc": "1819:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "1819:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "1673:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1743:9:7",
														"nodeType": "YulTypedName",
														"src": "1743:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1754:6:7",
														"nodeType": "YulTypedName",
														"src": "1754:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1765:4:7",
														"nodeType": "YulTypedName",
														"src": "1765:4:7",
														"type": ""
													}
												],
												"src": "1673:177:7"
											},
											{
												"body": {
													"nativeSrc": "2006:507:7",
													"nodeType": "YulBlock",
													"src": "2006:507:7",
													"statements": [
														{
															"nativeSrc": "2016:12:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2016:12:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2026:2:7",
																"nodeType": "YulLiteral",
																"src": "2026:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2020:2:7",
																	"nodeType": "YulTypedName",
																	"src": "2020:2:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2037:32:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2037:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2055:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2055:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2066:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2066:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2051:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2051:3:7"
																},
																"nativeSrc": "2051:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2051:18:7"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "2041:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2041:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2085:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2085:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2096:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2096:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2078:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2078:6:7"
																},
																"nativeSrc": "2078:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2078:21:7"
															},
															"nativeSrc": "2078:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "2078:21:7"
														},
														{
															"nativeSrc": "2108:17:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2108:17:7",
															"value": {
																"name": "tail_1",
																"nativeSrc": "2119:6:7",
																"nodeType": "YulIdentifier",
																"src": "2119:6:7"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "2112:3:7",
																	"nodeType": "YulTypedName",
																	"src": "2112:3:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2134:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2134:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2154:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2154:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2148:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2148:5:7"
																},
																"nativeSrc": "2148:13:7",
																"nodeType": "YulFunctionCall",
																"src": "2148:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2138:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2138:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "2177:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2177:6:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2185:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2185:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2170:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2170:6:7"
																},
																"nativeSrc": "2170:22:7",
																"nodeType": "YulFunctionCall",
																"src": "2170:22:7"
															},
															"nativeSrc": "2170:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "2170:22:7"
														},
														{
															"nativeSrc": "2201:25:7",
															"nodeType": "YulAssignment",
															"src": "2201:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2212:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2212:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2223:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2223:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2208:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2208:3:7"
																},
																"nativeSrc": "2208:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2208:18:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2201:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2201:3:7"
																}
															]
														},
														{
															"nativeSrc": "2235:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2235:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2253:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2253:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2261:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2261:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2249:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2249:3:7"
																},
																"nativeSrc": "2249:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2249:15:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "2239:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2239:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2273:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2273:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2282:1:7",
																"nodeType": "YulLiteral",
																"src": "2282:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "2277:1:7",
																	"nodeType": "YulTypedName",
																	"src": "2277:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2341:146:7",
																"nodeType": "YulBlock",
																"src": "2341:146:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "2362:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2362:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nativeSrc": "2377:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "2377:6:7"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "2371:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "2371:5:7"
																							},
																							"nativeSrc": "2371:13:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2371:13:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2394:3:7",
																											"nodeType": "YulLiteral",
																											"src": "2394:3:7",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "2399:1:7",
																											"nodeType": "YulLiteral",
																											"src": "2399:1:7",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2390:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "2390:3:7"
																									},
																									"nativeSrc": "2390:11:7",
																									"nodeType": "YulFunctionCall",
																									"src": "2390:11:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2403:1:7",
																									"nodeType": "YulLiteral",
																									"src": "2403:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "2386:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "2386:3:7"
																							},
																							"nativeSrc": "2386:19:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2386:19:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2367:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2367:3:7"
																					},
																					"nativeSrc": "2367:39:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2367:39:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2355:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2355:6:7"
																			},
																			"nativeSrc": "2355:52:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2355:52:7"
																		},
																		"nativeSrc": "2355:52:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2355:52:7"
																	},
																	{
																		"nativeSrc": "2420:19:7",
																		"nodeType": "YulAssignment",
																		"src": "2420:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "2431:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2431:3:7"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2436:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "2436:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2427:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2427:3:7"
																			},
																			"nativeSrc": "2427:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2427:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "2420:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2420:3:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2452:25:7",
																		"nodeType": "YulAssignment",
																		"src": "2452:25:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "2466:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2466:6:7"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2474:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "2474:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2462:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2462:3:7"
																			},
																			"nativeSrc": "2462:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2462:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "2452:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2452:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "2303:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2303:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2306:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2306:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2300:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2300:2:7"
																},
																"nativeSrc": "2300:13:7",
																"nodeType": "YulFunctionCall",
																"src": "2300:13:7"
															},
															"nativeSrc": "2292:195:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2314:18:7",
																"nodeType": "YulBlock",
																"src": "2314:18:7",
																"statements": [
																	{
																		"nativeSrc": "2316:14:7",
																		"nodeType": "YulAssignment",
																		"src": "2316:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "2325:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "2325:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2328:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2328:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2321:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2321:3:7"
																			},
																			"nativeSrc": "2321:9:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2321:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "2316:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "2316:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2296:3:7",
																"nodeType": "YulBlock",
																"src": "2296:3:7",
																"statements": []
															},
															"src": "2292:195:7"
														},
														{
															"nativeSrc": "2496:11:7",
															"nodeType": "YulAssignment",
															"src": "2496:11:7",
															"value": {
																"name": "pos",
																"nativeSrc": "2504:3:7",
																"nodeType": "YulIdentifier",
																"src": "2504:3:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2496:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2496:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "1855:658:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1975:9:7",
														"nodeType": "YulTypedName",
														"src": "1975:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1986:6:7",
														"nodeType": "YulTypedName",
														"src": "1986:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1997:4:7",
														"nodeType": "YulTypedName",
														"src": "1997:4:7",
														"type": ""
													}
												],
												"src": "1855:658:7"
											},
											{
												"body": {
													"nativeSrc": "2605:167:7",
													"nodeType": "YulBlock",
													"src": "2605:167:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2651:16:7",
																"nodeType": "YulBlock",
																"src": "2651:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2660:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2660:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2653:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2653:6:7"
																			},
																			"nativeSrc": "2653:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2653:12:7"
																		},
																		"nativeSrc": "2653:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2653:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2626:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2626:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2635:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2635:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2622:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2622:3:7"
																		},
																		"nativeSrc": "2622:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2622:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2647:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2647:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2618:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2618:3:7"
																},
																"nativeSrc": "2618:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2618:32:7"
															},
															"nativeSrc": "2615:52:7",
															"nodeType": "YulIf",
															"src": "2615:52:7"
														},
														{
															"nativeSrc": "2676:33:7",
															"nodeType": "YulAssignment",
															"src": "2676:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2699:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2699:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2686:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2686:12:7"
																},
																"nativeSrc": "2686:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2686:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2676:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2676:6:7"
																}
															]
														},
														{
															"nativeSrc": "2718:48:7",
															"nodeType": "YulAssignment",
															"src": "2718:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2751:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2751:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2762:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2762:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2747:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2747:3:7"
																		},
																		"nativeSrc": "2747:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2747:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2728:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2728:18:7"
																},
																"nativeSrc": "2728:38:7",
																"nodeType": "YulFunctionCall",
																"src": "2728:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2718:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2718:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "2518:254:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2563:9:7",
														"nodeType": "YulTypedName",
														"src": "2563:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2574:7:7",
														"nodeType": "YulTypedName",
														"src": "2574:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2586:6:7",
														"nodeType": "YulTypedName",
														"src": "2586:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2594:6:7",
														"nodeType": "YulTypedName",
														"src": "2594:6:7",
														"type": ""
													}
												],
												"src": "2518:254:7"
											},
											{
												"body": {
													"nativeSrc": "2934:338:7",
													"nodeType": "YulBlock",
													"src": "2934:338:7",
													"statements": [
														{
															"nativeSrc": "2944:27:7",
															"nodeType": "YulAssignment",
															"src": "2944:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2956:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2956:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2967:3:7",
																		"nodeType": "YulLiteral",
																		"src": "2967:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2952:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2952:3:7"
																},
																"nativeSrc": "2952:19:7",
																"nodeType": "YulFunctionCall",
																"src": "2952:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2944:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2944:4:7"
																}
															]
														},
														{
															"nativeSrc": "2980:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2980:29:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2998:3:7",
																				"nodeType": "YulLiteral",
																				"src": "2998:3:7",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3003:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3003:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2994:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2994:3:7"
																		},
																		"nativeSrc": "2994:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2994:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3007:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3007:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "2990:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2990:3:7"
																},
																"nativeSrc": "2990:19:7",
																"nodeType": "YulFunctionCall",
																"src": "2990:19:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2984:2:7",
																	"nodeType": "YulTypedName",
																	"src": "2984:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3025:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3025:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "3046:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3046:6:7"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "3040:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3040:5:7"
																				},
																				"nativeSrc": "3040:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3040:13:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "3055:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "3055:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3036:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3036:3:7"
																		},
																		"nativeSrc": "3036:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3036:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3018:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3018:6:7"
																},
																"nativeSrc": "3018:41:7",
																"nodeType": "YulFunctionCall",
																"src": "3018:41:7"
															},
															"nativeSrc": "3018:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "3018:41:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3079:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3079:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3090:4:7",
																				"nodeType": "YulLiteral",
																				"src": "3090:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3075:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3075:3:7"
																		},
																		"nativeSrc": "3075:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3075:20:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nativeSrc": "3111:6:7",
																								"nodeType": "YulIdentifier",
																								"src": "3111:6:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3119:4:7",
																								"nodeType": "YulLiteral",
																								"src": "3119:4:7",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "3107:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "3107:3:7"
																						},
																						"nativeSrc": "3107:17:7",
																						"nodeType": "YulFunctionCall",
																						"src": "3107:17:7"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "3101:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3101:5:7"
																				},
																				"nativeSrc": "3101:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3101:24:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "3127:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "3127:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3097:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3097:3:7"
																		},
																		"nativeSrc": "3097:33:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3097:33:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3068:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3068:6:7"
																},
																"nativeSrc": "3068:63:7",
																"nodeType": "YulFunctionCall",
																"src": "3068:63:7"
															},
															"nativeSrc": "3068:63:7",
															"nodeType": "YulExpressionStatement",
															"src": "3068:63:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3151:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3151:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3162:4:7",
																				"nodeType": "YulLiteral",
																				"src": "3162:4:7",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3147:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3147:3:7"
																		},
																		"nativeSrc": "3147:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3147:20:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "3179:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3179:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3187:4:7",
																						"nodeType": "YulLiteral",
																						"src": "3187:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3175:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3175:3:7"
																				},
																				"nativeSrc": "3175:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3175:17:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3169:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "3169:5:7"
																		},
																		"nativeSrc": "3169:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3169:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3140:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3140:6:7"
																},
																"nativeSrc": "3140:54:7",
																"nodeType": "YulFunctionCall",
																"src": "3140:54:7"
															},
															"nativeSrc": "3140:54:7",
															"nodeType": "YulExpressionStatement",
															"src": "3140:54:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3214:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3214:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3225:4:7",
																				"nodeType": "YulLiteral",
																				"src": "3225:4:7",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3210:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3210:3:7"
																		},
																		"nativeSrc": "3210:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3210:20:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nativeSrc": "3246:6:7",
																								"nodeType": "YulIdentifier",
																								"src": "3246:6:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3254:4:7",
																								"nodeType": "YulLiteral",
																								"src": "3254:4:7",
																								"type": "",
																								"value": "0x60"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "3242:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "3242:3:7"
																						},
																						"nativeSrc": "3242:17:7",
																						"nodeType": "YulFunctionCall",
																						"src": "3242:17:7"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "3236:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3236:5:7"
																				},
																				"nativeSrc": "3236:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3236:24:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "3262:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "3262:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3232:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3232:3:7"
																		},
																		"nativeSrc": "3232:33:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3232:33:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3203:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3203:6:7"
																},
																"nativeSrc": "3203:63:7",
																"nodeType": "YulFunctionCall",
																"src": "3203:63:7"
															},
															"nativeSrc": "3203:63:7",
															"nodeType": "YulExpressionStatement",
															"src": "3203:63:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_PoolDetails_$455_memory_ptr__to_t_struct$_PoolDetails_$455_memory_ptr__fromStack_reversed",
												"nativeSrc": "2777:495:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2903:9:7",
														"nodeType": "YulTypedName",
														"src": "2903:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2914:6:7",
														"nodeType": "YulTypedName",
														"src": "2914:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2925:4:7",
														"nodeType": "YulTypedName",
														"src": "2925:4:7",
														"type": ""
													}
												],
												"src": "2777:495:7"
											},
											{
												"body": {
													"nativeSrc": "3378:76:7",
													"nodeType": "YulBlock",
													"src": "3378:76:7",
													"statements": [
														{
															"nativeSrc": "3388:26:7",
															"nodeType": "YulAssignment",
															"src": "3388:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3400:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3400:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3411:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3411:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3396:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3396:3:7"
																},
																"nativeSrc": "3396:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3396:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3388:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3388:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3430:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3430:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3441:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3441:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3423:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3423:6:7"
																},
																"nativeSrc": "3423:25:7",
																"nodeType": "YulFunctionCall",
																"src": "3423:25:7"
															},
															"nativeSrc": "3423:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "3423:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3277:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3347:9:7",
														"nodeType": "YulTypedName",
														"src": "3347:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3358:6:7",
														"nodeType": "YulTypedName",
														"src": "3358:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3369:4:7",
														"nodeType": "YulTypedName",
														"src": "3369:4:7",
														"type": ""
													}
												],
												"src": "3277:177:7"
											},
											{
												"body": {
													"nativeSrc": "3633:163:7",
													"nodeType": "YulBlock",
													"src": "3633:163:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3650:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3650:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3661:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3661:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3643:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3643:6:7"
																},
																"nativeSrc": "3643:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3643:21:7"
															},
															"nativeSrc": "3643:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "3643:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3684:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3684:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3695:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3695:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3680:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3680:3:7"
																		},
																		"nativeSrc": "3680:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3680:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3700:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3700:2:7",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3673:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3673:6:7"
																},
																"nativeSrc": "3673:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3673:30:7"
															},
															"nativeSrc": "3673:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "3673:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3723:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3723:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3734:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3734:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3719:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3719:3:7"
																		},
																		"nativeSrc": "3719:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3719:18:7"
																	},
																	{
																		"hexValue": "496e76616c696420696e707574",
																		"kind": "string",
																		"nativeSrc": "3739:15:7",
																		"nodeType": "YulLiteral",
																		"src": "3739:15:7",
																		"type": "",
																		"value": "Invalid input"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3712:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3712:6:7"
																},
																"nativeSrc": "3712:43:7",
																"nodeType": "YulFunctionCall",
																"src": "3712:43:7"
															},
															"nativeSrc": "3712:43:7",
															"nodeType": "YulExpressionStatement",
															"src": "3712:43:7"
														},
														{
															"nativeSrc": "3764:26:7",
															"nodeType": "YulAssignment",
															"src": "3764:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3776:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3776:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3787:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3787:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3772:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3772:3:7"
																},
																"nativeSrc": "3772:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3772:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3764:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3764:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3459:337:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3610:9:7",
														"nodeType": "YulTypedName",
														"src": "3610:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3624:4:7",
														"nodeType": "YulTypedName",
														"src": "3624:4:7",
														"type": ""
													}
												],
												"src": "3459:337:7"
											},
											{
												"body": {
													"nativeSrc": "3975:173:7",
													"nodeType": "YulBlock",
													"src": "3975:173:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3992:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3992:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4003:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4003:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3985:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3985:6:7"
																},
																"nativeSrc": "3985:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3985:21:7"
															},
															"nativeSrc": "3985:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "3985:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4026:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4026:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4037:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4037:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4022:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4022:3:7"
																		},
																		"nativeSrc": "4022:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4022:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4042:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4042:2:7",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4015:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4015:6:7"
																},
																"nativeSrc": "4015:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4015:30:7"
															},
															"nativeSrc": "4015:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "4015:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4065:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4065:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4076:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4076:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4061:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4061:3:7"
																		},
																		"nativeSrc": "4061:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4061:18:7"
																	},
																	{
																		"hexValue": "506f6f6c20616c72656164792072656769737465726564",
																		"kind": "string",
																		"nativeSrc": "4081:25:7",
																		"nodeType": "YulLiteral",
																		"src": "4081:25:7",
																		"type": "",
																		"value": "Pool already registered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4054:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4054:6:7"
																},
																"nativeSrc": "4054:53:7",
																"nodeType": "YulFunctionCall",
																"src": "4054:53:7"
															},
															"nativeSrc": "4054:53:7",
															"nodeType": "YulExpressionStatement",
															"src": "4054:53:7"
														},
														{
															"nativeSrc": "4116:26:7",
															"nodeType": "YulAssignment",
															"src": "4116:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4128:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4128:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4139:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4139:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4124:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4124:3:7"
																},
																"nativeSrc": "4124:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4124:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4116:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4116:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc861dfb3d1e0446599e73c98b2e7d579c1ecdb9e65a09f726c97d864f2bf3dd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3801:347:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3952:9:7",
														"nodeType": "YulTypedName",
														"src": "3952:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3966:4:7",
														"nodeType": "YulTypedName",
														"src": "3966:4:7",
														"type": ""
													}
												],
												"src": "3801:347:7"
											},
											{
												"body": {
													"nativeSrc": "4327:172:7",
													"nodeType": "YulBlock",
													"src": "4327:172:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4344:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4344:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4355:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4355:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4337:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4337:6:7"
																},
																"nativeSrc": "4337:21:7",
																"nodeType": "YulFunctionCall",
																"src": "4337:21:7"
															},
															"nativeSrc": "4337:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "4337:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4378:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4378:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4389:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4389:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4374:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4374:3:7"
																		},
																		"nativeSrc": "4374:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4374:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4394:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4394:2:7",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4367:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4367:6:7"
																},
																"nativeSrc": "4367:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4367:30:7"
															},
															"nativeSrc": "4367:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "4367:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4417:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4417:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4428:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4428:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4413:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4413:3:7"
																		},
																		"nativeSrc": "4413:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4413:18:7"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f7420616e2061646d696e",
																		"kind": "string",
																		"nativeSrc": "4433:24:7",
																		"nodeType": "YulLiteral",
																		"src": "4433:24:7",
																		"type": "",
																		"value": "Caller is not an admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4406:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4406:6:7"
																},
																"nativeSrc": "4406:52:7",
																"nodeType": "YulFunctionCall",
																"src": "4406:52:7"
															},
															"nativeSrc": "4406:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "4406:52:7"
														},
														{
															"nativeSrc": "4467:26:7",
															"nodeType": "YulAssignment",
															"src": "4467:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4479:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4479:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4490:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4490:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4475:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4475:3:7"
																},
																"nativeSrc": "4475:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4475:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4467:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4467:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4153:346:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4304:9:7",
														"nodeType": "YulTypedName",
														"src": "4304:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4318:4:7",
														"nodeType": "YulTypedName",
														"src": "4318:4:7",
														"type": ""
													}
												],
												"src": "4153:346:7"
											},
											{
												"body": {
													"nativeSrc": "4678:225:7",
													"nodeType": "YulBlock",
													"src": "4678:225:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4695:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4695:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4706:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4706:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4688:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4688:6:7"
																},
																"nativeSrc": "4688:21:7",
																"nodeType": "YulFunctionCall",
																"src": "4688:21:7"
															},
															"nativeSrc": "4688:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "4688:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4729:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4729:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4740:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4740:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4725:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4725:3:7"
																		},
																		"nativeSrc": "4725:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4725:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4745:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4745:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4718:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4718:6:7"
																},
																"nativeSrc": "4718:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4718:30:7"
															},
															"nativeSrc": "4718:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "4718:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4768:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4768:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4779:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4779:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4764:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4764:3:7"
																		},
																		"nativeSrc": "4764:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4764:18:7"
																	},
																	{
																		"hexValue": "506f6f6c206e6f742072656769737465726564206f7220686173206e6f207661",
																		"kind": "string",
																		"nativeSrc": "4784:34:7",
																		"nodeType": "YulLiteral",
																		"src": "4784:34:7",
																		"type": "",
																		"value": "Pool not registered or has no va"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4757:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4757:6:7"
																},
																"nativeSrc": "4757:62:7",
																"nodeType": "YulFunctionCall",
																"src": "4757:62:7"
															},
															"nativeSrc": "4757:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "4757:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4839:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4839:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4850:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4850:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4835:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4835:3:7"
																		},
																		"nativeSrc": "4835:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4835:18:7"
																	},
																	{
																		"hexValue": "756c74",
																		"kind": "string",
																		"nativeSrc": "4855:5:7",
																		"nodeType": "YulLiteral",
																		"src": "4855:5:7",
																		"type": "",
																		"value": "ult"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4828:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4828:6:7"
																},
																"nativeSrc": "4828:33:7",
																"nodeType": "YulFunctionCall",
																"src": "4828:33:7"
															},
															"nativeSrc": "4828:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "4828:33:7"
														},
														{
															"nativeSrc": "4870:27:7",
															"nodeType": "YulAssignment",
															"src": "4870:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4882:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4882:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4893:3:7",
																		"nodeType": "YulLiteral",
																		"src": "4893:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4878:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4878:3:7"
																},
																"nativeSrc": "4878:19:7",
																"nodeType": "YulFunctionCall",
																"src": "4878:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4870:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4870:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_39a3b1530e3b6596e085e382bff955d043a269a2081635a9d861923ef05dbbcd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4504:399:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4655:9:7",
														"nodeType": "YulTypedName",
														"src": "4655:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4669:4:7",
														"nodeType": "YulTypedName",
														"src": "4669:4:7",
														"type": ""
													}
												],
												"src": "4504:399:7"
											},
											{
												"body": {
													"nativeSrc": "4957:176:7",
													"nodeType": "YulBlock",
													"src": "4957:176:7",
													"statements": [
														{
															"nativeSrc": "4967:17:7",
															"nodeType": "YulAssignment",
															"src": "4967:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4979:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4979:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4982:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4982:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4975:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4975:3:7"
																},
																"nativeSrc": "4975:9:7",
																"nodeType": "YulFunctionCall",
																"src": "4975:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "4967:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4967:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5016:111:7",
																"nodeType": "YulBlock",
																"src": "5016:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5037:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5037:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5044:3:7",
																							"nodeType": "YulLiteral",
																							"src": "5044:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5049:10:7",
																							"nodeType": "YulLiteral",
																							"src": "5049:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5040:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5040:3:7"
																					},
																					"nativeSrc": "5040:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5040:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5030:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5030:6:7"
																			},
																			"nativeSrc": "5030:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5030:31:7"
																		},
																		"nativeSrc": "5030:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5030:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5081:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5081:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5084:4:7",
																					"nodeType": "YulLiteral",
																					"src": "5084:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5074:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5074:6:7"
																			},
																			"nativeSrc": "5074:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5074:15:7"
																		},
																		"nativeSrc": "5074:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5074:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5109:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5109:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5112:4:7",
																					"nodeType": "YulLiteral",
																					"src": "5112:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5102:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5102:6:7"
																			},
																			"nativeSrc": "5102:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5102:15:7"
																		},
																		"nativeSrc": "5102:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5102:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "4999:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5005:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5005:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4996:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:7"
																},
																"nativeSrc": "4996:11:7",
																"nodeType": "YulFunctionCall",
																"src": "4996:11:7"
															},
															"nativeSrc": "4993:134:7",
															"nodeType": "YulIf",
															"src": "4993:134:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "4908:225:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4939:1:7",
														"nodeType": "YulTypedName",
														"src": "4939:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4942:1:7",
														"nodeType": "YulTypedName",
														"src": "4942:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "4948:4:7",
														"nodeType": "YulTypedName",
														"src": "4948:4:7",
														"type": ""
													}
												],
												"src": "4908:225:7"
											},
											{
												"body": {
													"nativeSrc": "5170:95:7",
													"nodeType": "YulBlock",
													"src": "5170:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5187:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5187:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5194:3:7",
																				"nodeType": "YulLiteral",
																				"src": "5194:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5199:10:7",
																				"nodeType": "YulLiteral",
																				"src": "5199:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5190:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5190:3:7"
																		},
																		"nativeSrc": "5190:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5190:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5180:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5180:6:7"
																},
																"nativeSrc": "5180:31:7",
																"nodeType": "YulFunctionCall",
																"src": "5180:31:7"
															},
															"nativeSrc": "5180:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "5180:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5227:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5227:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5230:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5230:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5220:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5220:6:7"
																},
																"nativeSrc": "5220:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5220:15:7"
															},
															"nativeSrc": "5220:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "5220:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5251:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5251:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5254:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5254:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5244:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5244:6:7"
																},
																"nativeSrc": "5244:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5244:15:7"
															},
															"nativeSrc": "5244:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "5244:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "5138:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5138:127:7"
											},
											{
												"body": {
													"nativeSrc": "5302:95:7",
													"nodeType": "YulBlock",
													"src": "5302:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5319:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5319:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5326:3:7",
																				"nodeType": "YulLiteral",
																				"src": "5326:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5331:10:7",
																				"nodeType": "YulLiteral",
																				"src": "5331:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5322:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5322:3:7"
																		},
																		"nativeSrc": "5322:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5322:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5312:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5312:6:7"
																},
																"nativeSrc": "5312:31:7",
																"nodeType": "YulFunctionCall",
																"src": "5312:31:7"
															},
															"nativeSrc": "5312:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "5312:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5359:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5359:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5362:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5362:4:7",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5352:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5352:6:7"
																},
																"nativeSrc": "5352:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5352:15:7"
															},
															"nativeSrc": "5352:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "5352:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5383:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5383:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5386:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5386:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5376:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5376:6:7"
																},
																"nativeSrc": "5376:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5376:15:7"
															},
															"nativeSrc": "5376:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "5376:15:7"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "5270:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5270:127:7"
											},
											{
												"body": {
													"nativeSrc": "5531:145:7",
													"nodeType": "YulBlock",
													"src": "5531:145:7",
													"statements": [
														{
															"nativeSrc": "5541:26:7",
															"nodeType": "YulAssignment",
															"src": "5541:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5553:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5553:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5564:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5564:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5549:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5549:3:7"
																},
																"nativeSrc": "5549:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5549:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5541:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5541:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5583:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5583:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5598:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5598:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5614:3:7",
																								"nodeType": "YulLiteral",
																								"src": "5614:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5619:1:7",
																								"nodeType": "YulLiteral",
																								"src": "5619:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5610:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "5610:3:7"
																						},
																						"nativeSrc": "5610:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "5610:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5623:1:7",
																						"nodeType": "YulLiteral",
																						"src": "5623:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5606:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5606:3:7"
																				},
																				"nativeSrc": "5606:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5606:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5594:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5594:3:7"
																		},
																		"nativeSrc": "5594:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5594:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5576:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5576:6:7"
																},
																"nativeSrc": "5576:51:7",
																"nodeType": "YulFunctionCall",
																"src": "5576:51:7"
															},
															"nativeSrc": "5576:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "5576:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5647:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5647:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5658:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5658:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5643:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5643:3:7"
																		},
																		"nativeSrc": "5643:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5643:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5663:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5663:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5636:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5636:6:7"
																},
																"nativeSrc": "5636:34:7",
																"nodeType": "YulFunctionCall",
																"src": "5636:34:7"
															},
															"nativeSrc": "5636:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "5636:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "5402:274:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5492:9:7",
														"nodeType": "YulTypedName",
														"src": "5492:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5503:6:7",
														"nodeType": "YulTypedName",
														"src": "5503:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5511:6:7",
														"nodeType": "YulTypedName",
														"src": "5511:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5522:4:7",
														"nodeType": "YulTypedName",
														"src": "5522:4:7",
														"type": ""
													}
												],
												"src": "5402:274:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := abi_decode_address(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_struct$_PoolDetails_$455_memory_ptr__to_t_struct$_PoolDetails_$455_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(mload(value0), _1))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), _1))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), and(mload(add(value0, 0x60)), _1))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Invalid input\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc861dfb3d1e0446599e73c98b2e7d579c1ecdb9e65a09f726c97d864f2bf3dd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Pool already registered\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Caller is not an admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_39a3b1530e3b6596e085e382bff955d043a269a2081635a9d861923ef05dbbcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Pool not registered or has no va\")\n        mstore(add(headStart, 96), \"ult\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100fb575f3560e01c80635d102df711610093578063a217fddf11610063578063a217fddf14610252578063d3e90fa014610259578063d3ffe67a146102ad578063d547741f146102b5575f80fd5b80635d102df7146102065780637570e389146102195780637e72c7d71461022c57806391d148541461023f575f80fd5b806324a44efb116100ce57806324a44efb146101ac5780632f2ff15d146101cc57806336568abe146101df57806356d73568146101f2575f80fd5b806301ffc9a7146100ff5780630cf9c72e146101275780631e4966ab1461013c578063248a9ca31461017c575b5f80fd5b61011261010d366004610c42565b6102c8565b60405190151581526020015b60405180910390f35b61013a610135366004610c8b565b6102fe565b005b61016461014a366004610cdc565b60046020525f90815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161011e565b61019e61018a366004610cf5565b5f9081526020819052604090206001015490565b60405190815260200161011e565b6101bf6101ba366004610cdc565b61051b565b60405161011e9190610d0c565b61013a6101da366004610d58565b61058e565b61013a6101ed366004610d58565b6105b8565b61019e5f80516020610dca83398151915281565b61013a610214366004610cdc565b6105f0565b610164610227366004610cdc565b610659565b61013a61023a366004610cdc565b6106eb565b61011261024d366004610d58565b6107d4565b61019e5f81565b61026c610267366004610cdc565b6107fc565b60405161011e919081516001600160a01b03908116825260208084015182169083015260408084015190830152606092830151169181019190915260800190565b60015461019e565b61013a6102c3366004610d58565b6108a9565b5f6001600160e01b03198216637965db0b60e01b14806102f857506301ffc9a760e01b6001600160e01b03198316145b92915050565b5f80516020610dca833981519152610315816108cd565b6001600160a01b0385161580159061033557506001600160a01b03841615155b801561034957506001600160a01b03821615155b61038a5760405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a59081a5b9c1d5d609a1b60448201526064015b60405180910390fd5b6001600160a01b038581165f9081526002602052604090205416156103f15760405162461bcd60e51b815260206004820152601760248201527f506f6f6c20616c726561647920726567697374657265640000000000000000006044820152606401610381565b604080516080810182526001600160a01b03868116808352868216602080850182815242868801908152898616606088018181528e88165f81815260028088528c82209b518c54908c166001600160a01b0319918216178d5596516001808e018054928e16928a16929092179091559551908c0155915160039a8b01805491909a16908616179098558681529784528888208054808401825590895284892001805484168817905581548083019092557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69091018054831687179055858752600483529587902080549091168617905594519384529390927f928b994ad535a478f217ab28f23fbbf04f79d765f407b8df7cc2df7174aef90b910160405180910390a45050505050565b6001600160a01b0381165f9081526003602090815260409182902080548351818402810184019094528084526060939283018282801561058257602002820191905f5260205f20905b81546001600160a01b03168152600190910190602001808311610564575b50505050509050919050565b5f828152602081905260409020600101546105a8816108cd565b6105b283836108d7565b50505050565b6001600160a01b03811633146105e15760405163334bd91960e11b815260040160405180910390fd5b6105eb8282610966565b505050565b6105fa5f336107d4565b61063f5760405162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1030b71030b236b4b760511b6044820152606401610381565b6106565f80516020610dca8339815191528261058e565b50565b6001600160a01b038181165f908152600460205260408120549091166106cd5760405162461bcd60e51b815260206004820152602360248201527f506f6f6c206e6f742072656769737465726564206f7220686173206e6f2076616044820152621d5b1d60ea1b6064820152608401610381565b506001600160a01b039081165f908152600460205260409020541690565b5f80516020610dca833981519152610702816108cd565b6001600160a01b038281165f90815260026020526040902054166107395760405163739f418560e01b815260040160405180910390fd5b6001600160a01b038083165f9081526002602052604090205461075d9116836109cf565b61076682610aeb565b6001600160a01b0382165f81815260026020819052604080832080546001600160a01b03199081168255600182018054821690559281018490556003018054909216909155517f334d0b2111287dfddebe4b4c1c5af3ae644909d7fcd024377bf601e236ed5abb9190a25050565b5f918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b604080516080810182525f8082526020820181905291810182905260608101919091526001600160a01b038281165f90815260026020526040902054166108565760405163739f418560e01b815260040160405180910390fd5b506001600160a01b039081165f9081526002602081815260409283902083516080810185528154861681526001820154861692810192909252918201549281019290925260030154909116606082015290565b5f828152602081905260409020600101546108c3816108cd565b6105b28383610966565b6106568133610bab565b5f6108e283836107d4565b61095f575f838152602081815260408083206001600160a01b03861684529091529020805460ff191660011790556109173390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016102f8565b505f6102f8565b5f61097183836107d4565b1561095f575f838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45060016102f8565b6001600160a01b0382165f9081526003602052604081206109f09083610be8565b6001600160a01b0384165f9081526003602052604081205491925090610a1890600190610d82565b6001600160a01b0385165f90815260036020526040902080549192509082908110610a4557610a45610da1565b5f9182526020808320909101546001600160a01b03878116845260039092526040909220805491909216919084908110610a8157610a81610da1565b5f91825260208083209190910180546001600160a01b0319166001600160a01b039485161790559186168152600390915260409020805480610ac557610ac5610db5565b5f8281526020902081015f1990810180546001600160a01b031916905501905550505050565b5f610af7600183610be8565b600180549192505f91610b0a9190610d82565b905060018181548110610b1f57610b1f610da1565b5f91825260209091200154600180546001600160a01b039092169184908110610b4a57610b4a610da1565b905f5260205f20015f6101000a8154816001600160a01b0302191690836001600160a01b031602179055506001805480610b8657610b86610db5565b5f8281526020902081015f1990810180546001600160a01b0319169055019055505050565b610bb582826107d4565b610be45760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610381565b5050565b5f805b8354811015610c3857826001600160a01b0316848281548110610c1057610c10610da1565b5f918252602090912001546001600160a01b031603610c305790506102f8565b600101610beb565b505f199392505050565b5f60208284031215610c52575f80fd5b81356001600160e01b031981168114610c69575f80fd5b9392505050565b80356001600160a01b0381168114610c86575f80fd5b919050565b5f805f8060808587031215610c9e575f80fd5b610ca785610c70565b9350610cb560208601610c70565b9250610cc360408601610c70565b9150610cd160608601610c70565b905092959194509250565b5f60208284031215610cec575f80fd5b610c6982610c70565b5f60208284031215610d05575f80fd5b5035919050565b602080825282518282018190525f9190848201906040850190845b81811015610d4c5783516001600160a01b031683529284019291840191600101610d27565b50909695505050505050565b5f8060408385031215610d69575f80fd5b82359150610d7960208401610c70565b90509250929050565b818103818111156102f857634e487b7160e01b5f52601160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52603160045260245ffdfe6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98affa26469706673582212200ce86c251d0ebae85779b638f6911a6e7bf61ed0753deff622d1128a21ec1a3c64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D102DF7 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xD3E90FA0 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0xD3FFE67A EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5D102DF7 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x7570E389 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x7E72C7D7 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x23F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x24A44EFB GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x24A44EFB EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x56D73568 EQ PUSH2 0x1F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xCF9C72E EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x1E4966AB EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x17C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x112 PUSH2 0x10D CALLDATASIZE PUSH1 0x4 PUSH2 0xC42 JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH2 0x135 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8B JUMP JUMPDEST PUSH2 0x2FE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x164 PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xCDC JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11E JUMP JUMPDEST PUSH2 0x19E PUSH2 0x18A CALLDATASIZE PUSH1 0x4 PUSH2 0xCF5 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11E JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0xCDC JUMP JUMPDEST PUSH2 0x51B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0xD0C JUMP JUMPDEST PUSH2 0x13A PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0xD58 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST PUSH2 0x13A PUSH2 0x1ED CALLDATASIZE PUSH1 0x4 PUSH2 0xD58 JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0x19E PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xDCA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x13A PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0xCDC JUMP JUMPDEST PUSH2 0x5F0 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0xCDC JUMP JUMPDEST PUSH2 0x659 JUMP JUMPDEST PUSH2 0x13A PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0xCDC JUMP JUMPDEST PUSH2 0x6EB JUMP JUMPDEST PUSH2 0x112 PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0xD58 JUMP JUMPDEST PUSH2 0x7D4 JUMP JUMPDEST PUSH2 0x19E PUSH0 DUP2 JUMP JUMPDEST PUSH2 0x26C PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0xCDC JUMP JUMPDEST PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD DUP3 AND SWAP1 DUP4 ADD MSTORE PUSH1 0x40 DUP1 DUP5 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x60 SWAP3 DUP4 ADD MLOAD AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x19E JUMP JUMPDEST PUSH2 0x13A PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0xD58 JUMP JUMPDEST PUSH2 0x8A9 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x2F8 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xDCA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x315 DUP2 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x335 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x349 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x125B9D985B1A59081A5B9C1D5D PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20616C72656164792072656769737465726564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP1 DUP4 MSTORE DUP7 DUP3 AND PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE TIMESTAMP DUP7 DUP9 ADD SWAP1 DUP2 MSTORE DUP10 DUP7 AND PUSH1 0x60 DUP9 ADD DUP2 DUP2 MSTORE DUP15 DUP9 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP1 DUP9 MSTORE DUP13 DUP3 KECCAK256 SWAP12 MLOAD DUP13 SLOAD SWAP1 DUP13 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP14 SSTORE SWAP7 MLOAD PUSH1 0x1 DUP1 DUP15 ADD DUP1 SLOAD SWAP3 DUP15 AND SWAP3 DUP11 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP6 MLOAD SWAP1 DUP13 ADD SSTORE SWAP2 MLOAD PUSH1 0x3 SWAP11 DUP12 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP11 AND SWAP1 DUP7 AND OR SWAP1 SWAP9 SSTORE DUP7 DUP2 MSTORE SWAP8 DUP5 MSTORE DUP9 DUP9 KECCAK256 DUP1 SLOAD DUP1 DUP5 ADD DUP3 SSTORE SWAP1 DUP10 MSTORE DUP5 DUP10 KECCAK256 ADD DUP1 SLOAD DUP5 AND DUP9 OR SWAP1 SSTORE DUP2 SLOAD DUP1 DUP4 ADD SWAP1 SWAP3 SSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP1 SWAP2 ADD DUP1 SLOAD DUP4 AND DUP8 OR SWAP1 SSTORE DUP6 DUP8 MSTORE PUSH1 0x4 DUP4 MSTORE SWAP6 DUP8 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND DUP7 OR SWAP1 SSTORE SWAP5 MLOAD SWAP4 DUP5 MSTORE SWAP4 SWAP1 SWAP3 PUSH32 0x928B994AD535A478F217AB28F23FBBF04F79D765F407B8DF7CC2DF7174AEF90B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x582 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x564 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x5A8 DUP2 PUSH2 0x8CD JUMP JUMPDEST PUSH2 0x5B2 DUP4 DUP4 PUSH2 0x8D7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x5E1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5EB DUP3 DUP3 PUSH2 0x966 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5FA PUSH0 CALLER PUSH2 0x7D4 JUMP JUMPDEST PUSH2 0x63F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x21B0B63632B91034B9903737BA1030B71030B236B4B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x656 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xDCA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH2 0x58E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND PUSH2 0x6CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C206E6F742072656769737465726564206F7220686173206E6F207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1D5B1D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xDCA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x702 DUP2 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x739 JUMPI PUSH1 0x40 MLOAD PUSH4 0x739F4185 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x75D SWAP2 AND DUP4 PUSH2 0x9CF JUMP JUMPDEST PUSH2 0x766 DUP3 PUSH2 0xAEB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD DUP3 AND SWAP1 SSTORE SWAP3 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x3 ADD DUP1 SLOAD SWAP1 SWAP3 AND SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x334D0B2111287DFDDEBE4B4C1C5AF3AE644909D7FCD024377BF601E236ED5ABB SWAP2 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x856 JUMPI PUSH1 0x40 MLOAD PUSH4 0x739F4185 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP7 AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP7 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x8C3 DUP2 PUSH2 0x8CD JUMP JUMPDEST PUSH2 0x5B2 DUP4 DUP4 PUSH2 0x966 JUMP JUMPDEST PUSH2 0x656 DUP2 CALLER PUSH2 0xBAB JUMP JUMPDEST PUSH0 PUSH2 0x8E2 DUP4 DUP4 PUSH2 0x7D4 JUMP JUMPDEST PUSH2 0x95F JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x917 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x2F8 JUMP JUMPDEST POP PUSH0 PUSH2 0x2F8 JUMP JUMPDEST PUSH0 PUSH2 0x971 DUP4 DUP4 PUSH2 0x7D4 JUMP JUMPDEST ISZERO PUSH2 0x95F JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x9F0 SWAP1 DUP4 PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0xA18 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 DUP3 SWAP1 DUP2 LT PUSH2 0xA45 JUMPI PUSH2 0xA45 PUSH2 0xDA1 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0xA81 JUMPI PUSH2 0xA81 PUSH2 0xDA1 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP2 DUP7 AND DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0xAC5 JUMPI PUSH2 0xAC5 PUSH2 0xDB5 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAF7 PUSH1 0x1 DUP4 PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP2 SWAP3 POP PUSH0 SWAP2 PUSH2 0xB0A SWAP2 SWAP1 PUSH2 0xD82 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB1F JUMPI PUSH2 0xB1F PUSH2 0xDA1 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP5 SWAP1 DUP2 LT PUSH2 0xB4A JUMPI PUSH2 0xB4A PUSH2 0xDA1 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP1 SLOAD DUP1 PUSH2 0xB86 JUMPI PUSH2 0xB86 PUSH2 0xDB5 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xBB5 DUP3 DUP3 PUSH2 0x7D4 JUMP JUMPDEST PUSH2 0xBE4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x381 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 JUMPDEST DUP4 SLOAD DUP2 LT ISZERO PUSH2 0xC38 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC10 JUMPI PUSH2 0xC10 PUSH2 0xDA1 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xC30 JUMPI SWAP1 POP PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xBEB JUMP JUMPDEST POP PUSH0 NOT SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC52 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xC69 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC86 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xC9E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCA7 DUP6 PUSH2 0xC70 JUMP JUMPDEST SWAP4 POP PUSH2 0xCB5 PUSH1 0x20 DUP7 ADD PUSH2 0xC70 JUMP JUMPDEST SWAP3 POP PUSH2 0xCC3 PUSH1 0x40 DUP7 ADD PUSH2 0xC70 JUMP JUMPDEST SWAP2 POP PUSH2 0xCD1 PUSH1 0x60 DUP7 ADD PUSH2 0xC70 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCEC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC69 DUP3 PUSH2 0xC70 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD05 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD4C JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xD27 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD69 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xD79 PUSH1 0x20 DUP5 ADD PUSH2 0xC70 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2F8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID PUSH1 0x77 PUSH9 0x5936C8169D09204A1D SWAP8 0xDB SLT 0xE4 OR SGT PC DUP13 CODESIZE 0xE1 0xD2 SWAP11 PUSH2 0x867D RETURNDATASIZE 0xCE 0xE9 DUP11 SELFDESTRUCT LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xE8 PUSH13 0x251D0EBAE85779B638F6911A6E PUSH28 0xF61ED0753DEFF622D1128A21EC1A3C64736F6C634300081900330000 ",
							"sourceMap": "276:3391:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;:::i;:::-;;:::i;:::-;;;470:14:7;;463:22;445:41;;433:2;418:18;2565:202:0;;;;;;;;923:638:6;;;;;;:::i;:::-;;:::i;:::-;;566:45;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;566:45:6;;;;;;-1:-1:-1;;;;;1444:32:7;;;1426:51;;1414:2;1399:18;566:45:6;1280:203:7;3810:120:0;;;;;;:::i;:::-;3875:7;3901:12;;;;;;;;;;:22;;;;3810:120;;;;1819:25:7;;;1807:2;1792:18;3810:120:0;1673:177:7;2035:128:6;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4226:136:0:-;;;;;;:::i;:::-;;:::i;5328:245::-;;;;;;:::i;:::-;;:::i;339:74:6:-;;-1:-1:-1;;;;;;;;;;;339:74:6;;2594:209;;;;;;:::i;:::-;;:::i;2384:202::-;;;;;;:::i;:::-;;:::i;1571:351::-;;;;;;:::i;:::-;;:::i;2854:136:0:-;;;;;;:::i;:::-;;:::i;2187:49::-;;2232:4;2187:49;;2171:205:6;;;;;;:::i;:::-;;:::i;:::-;;;;;;3040:13:7;;-1:-1:-1;;;;;3036:22:7;;;3018:41;;3119:4;3107:17;;;3101:24;3097:33;;3075:20;;;3068:63;3187:4;3175:17;;;3169:24;3147:20;;;3140:54;3254:4;3242:17;;;3236:24;3232:33;3210:20;;;3203:63;;;;2967:3;2952:19;;2777:495;1932:95:6;2007:5;:12;1932:95;;4642:138:0;;;;;;:::i;:::-;;:::i;2565:202::-;2650:4;-1:-1:-1;;;;;;2673:47:0;;-1:-1:-1;;;2673:47:0;;:87;;-1:-1:-1;;;;;;;;;;861:40:3;;;2724:36:0;2666:94;2565:202;-1:-1:-1;;2565:202:0:o;923:638:6:-;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;1060:18:6;::::1;::::0;;::::1;::::0;:42:::1;;-1:-1:-1::0;;;;;;1082:20:6;::::1;::::0;::::1;1060:42;:65;;;;-1:-1:-1::0;;;;;;1106:19:6;::::1;::::0;::::1;1060:65;1052:91;;;::::0;-1:-1:-1;;;1052:91:6;;3661:2:7;1052:91:6::1;::::0;::::1;3643:21:7::0;3700:2;3680:18;;;3673:30;-1:-1:-1;;;3719:18:7;;;3712:43;3772:18;;1052:91:6::1;;;;;;;;;-1:-1:-1::0;;;;;1158:17:6;;::::1;1194:1;1158:17:::0;;;:11:::1;:17;::::0;;;;:24;::::1;:38:::0;1150:74:::1;;;::::0;-1:-1:-1;;;1150:74:6;;4003:2:7;1150:74:6::1;::::0;::::1;3985:21:7::0;4042:2;4022:18;;;4015:30;4081:25;4061:18;;;4054:53;4124:18;;1150:74:6::1;3801:347:7::0;1150:74:6::1;1324:53;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;1324:53:6;;::::1;::::0;;;;;::::1;;::::0;;::::1;::::0;;;1354:15:::1;1324:53:::0;;;;;;;;::::1;::::0;;;;;;1304:17;;::::1;-1:-1:-1::0;1304:17:6;;;:11:::1;:17:::0;;;;;;:73;;;;;;::::1;-1:-1:-1::0;;;;;;1304:73:6;;::::1;;::::0;;;;-1:-1:-1;1304:73:6;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;;;::::1;::::0;;::::1;;::::0;;;1384:19;;;;;;;;;:30;;;;::::1;::::0;;;;;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;1421:16;;;;::::1;::::0;;;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;1444;;;:10:::1;:16:::0;;;;;;:24;;;;::::1;::::0;::::1;::::0;;1512:45;;1426:51:7;;;1324:53:6;;;1512:45:::1;::::0;1399:18:7;1512:45:6::1;;;;;;;923:638:::0;;;;;:::o;2035:128::-;-1:-1:-1;;;;;2136:19:6;;;;;;:11;:19;;;;;;;;;2129:26;;;;;;;;;;;;;;;;;2100:16;;2129:26;;;2136:19;2129:26;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2129:26:6;;;;;;;;;;;;;;;;;;;;;;;2035:128;;;:::o;4226:136:0:-;3875:7;3901:12;;;;;;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;-1:-1:-1;;;;;5421:34:0;;735:10:2;5421:34:0;5417:102;;5478:30;;-1:-1:-1;;;5478:30:0;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;2594:209:6:-;2674:39;2232:4:0;2702:10:6;2674:7;:39::i;:::-;2666:74;;;;-1:-1:-1;;;2666:74:6;;4355:2:7;2666:74:6;;;4337:21:7;4394:2;4374:18;;;4367:30;-1:-1:-1;;;4413:18:7;;;4406:52;4475:18;;2666:74:6;4153:346:7;2666:74:6;2751:44;-1:-1:-1;;;;;;;;;;;2780:14:6;2751:9;:44::i;:::-;2594:209;:::o;2384:202::-;-1:-1:-1;;;;;2474:16:6;;;2446:7;2474:16;;;:10;:16;;;;;;2446:7;;2474:16;2466:78;;;;-1:-1:-1;;;2466:78:6;;4706:2:7;2466:78:6;;;4688:21:7;4745:2;4725:18;;;4718:30;4784:34;4764:18;;;4757:62;-1:-1:-1;;;4835:18:7;;;4828:33;4878:19;;2466:78:6;4504:399:7;2466:78:6;-1:-1:-1;;;;;;2562:16:6;;;;;;;:10;:16;;;;;;;;2384:202::o;1571:351::-;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;1661:17:6;;::::1;1697:1;1661:17:::0;;;:11:::1;:17;::::0;;;;:24;::::1;1657:70;;1708:19;;-1:-1:-1::0;;;1708:19:6::1;;;;;;;;;;;1657:70;-1:-1:-1::0;;;;;1767:17:6;;::::1;;::::0;;;:11:::1;:17;::::0;;;;:24;1740:58:::1;::::0;1767:24:::1;1779:4:::0;1740:26:::1;:58::i;:::-;1809:30;1834:4;1809:24;:30::i;:::-;-1:-1:-1::0;;;;;1859:17:6;::::1;;::::0;;;:11:::1;:17;::::0;;;;;;;1852:24;;-1:-1:-1;;;;;;1852:24:6;;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;;;::::1;;::::0;;;;::::1;::::0;;;1892:22;::::1;::::0;1859:17;1892:22:::1;1571:351:::0;;:::o;2854:136:0:-;2931:4;2954:12;;;;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;;;;2854:136::o;2171:205:6:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2267:17:6;;;2303:1;2267:17;;;:11;:17;;;;;:24;;2263:70;;2314:19;;-1:-1:-1;;;2314:19:6;;;;;;;;;;;2263:70;-1:-1:-1;;;;;;2351:17:6;;;;;;;:11;:17;;;;;;;;;2344:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2171:205::o;4642:138:0:-;3875:7;3901:12;;;;;;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;3199:103::-:0;3265:30;3276:4;735:10:2;3265::0;:30::i;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6315:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:2;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6466:12;;6730:317;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:12;;;;;;;;;;;-1:-1:-1;;;;;6866:29:0;;;;;;;;;;:37;;-1:-1:-1;;6866:37:0;;;6922:40;735:10:2;;6866:12:0;;6922:40;;6898:5;6922:40;-1:-1:-1;6983:4:0;6976:11;;2845:319:6;-1:-1:-1;;;;;2963:19:6;;2930:13;2963:19;;;:11;:19;;;;;2946:43;;2984:4;2946:16;:43::i;:::-;-1:-1:-1;;;;;3020:19:6;;3000:17;3020:19;;;:11;:19;;;;;:26;2930:59;;-1:-1:-1;3000:17:6;3020:30;;3049:1;;3020:30;:::i;:::-;-1:-1:-1;;;;;3090:19:6;;;;;;:11;:19;;;;;:30;;3000:50;;-1:-1:-1;3090:19:6;3000:50;;3090:30;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;3061:19:6;;;;;:11;:19;;;;;;;:26;;3090:30;;;;;3061:19;3081:5;;3061:26;;;;;;:::i;:::-;;;;;;;;;;;;;:59;;-1:-1:-1;;;;;;3061:59:6;-1:-1:-1;;;;;3061:59:6;;;;;;3131:19;;;;;:11;:19;;;;;;:25;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;3131:25:6;;;;;-1:-1:-1;;;;;;3131:25:6;;;;;;-1:-1:-1;;;;2845:319:6:o;3172:231::-;3239:13;3255:29;3272:5;3279:4;3255:16;:29::i;:::-;3330:1;3315:12;;3239:45;;-1:-1:-1;3295:17:6;;3315:16;;3330:1;3315:16;:::i;:::-;3295:36;;3357:5;3363:9;3357:16;;;;;;;;:::i;:::-;;;;;;;;;;;;3342:12;;-1:-1:-1;;;;;3357:16:6;;;;3348:5;;3342:12;;;;;;:::i;:::-;;;;;;;;;:31;;;;;-1:-1:-1;;;;;3342:31:6;;;;;-1:-1:-1;;;;;3342:31:6;;;;;;3384:5;:11;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;3384:11:6;;;;;-1:-1:-1;;;;;;3384:11:6;;;;;;-1:-1:-1;;;3172:231:6:o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3565:47;;-1:-1:-1;;;3565:47:0;;-1:-1:-1;;;;;5594:32:7;;3565:47:0;;;5576:51:7;5643:18;;;5636:34;;;5549:18;;3565:47:0;5402:274:7;3515:108:0;3432:197;;:::o;3411:253:6:-;3500:7;;3520:102;3544:12;;3540:16;;3520:102;;;3594:6;-1:-1:-1;;;;;3582:18:6;:5;3588:1;3582:8;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;3582:8:6;:18;3578:32;;3609:1;-1:-1:-1;3602:8:6;;3578:32;3558:3;;3520:102;;;-1:-1:-1;;;3639:17:6;3411:253;-1:-1:-1;;;3411:253:6:o;14:286:7:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:7;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:7:o;497:173::-;565:20;;-1:-1:-1;;;;;614:31:7;;604:42;;594:70;;660:1;657;650:12;594:70;497:173;;;:::o;675:409::-;761:6;769;777;785;838:3;826:9;817:7;813:23;809:33;806:53;;;855:1;852;845:12;806:53;878:29;897:9;878:29;:::i;:::-;868:39;;926:38;960:2;949:9;945:18;926:38;:::i;:::-;916:48;;983:38;1017:2;1006:9;1002:18;983:38;:::i;:::-;973:48;;1040:38;1074:2;1063:9;1059:18;1040:38;:::i;:::-;1030:48;;675:409;;;;;;;:::o;1089:186::-;1148:6;1201:2;1189:9;1180:7;1176:23;1172:32;1169:52;;;1217:1;1214;1207:12;1169:52;1240:29;1259:9;1240:29;:::i;1488:180::-;1547:6;1600:2;1588:9;1579:7;1575:23;1571:32;1568:52;;;1616:1;1613;1606:12;1568:52;-1:-1:-1;1639:23:7;;1488:180;-1:-1:-1;1488:180:7:o;1855:658::-;2026:2;2078:21;;;2148:13;;2051:18;;;2170:22;;;1997:4;;2026:2;2249:15;;;;2223:2;2208:18;;;1997:4;2292:195;2306:6;2303:1;2300:13;2292:195;;;2371:13;;-1:-1:-1;;;;;2367:39:7;2355:52;;2462:15;;;;2427:12;;;;2403:1;2321:9;2292:195;;;-1:-1:-1;2504:3:7;;1855:658;-1:-1:-1;;;;;;1855:658:7:o;2518:254::-;2586:6;2594;2647:2;2635:9;2626:7;2622:23;2618:32;2615:52;;;2663:1;2660;2653:12;2615:52;2699:9;2686:23;2676:33;;2728:38;2762:2;2751:9;2747:18;2728:38;:::i;:::-;2718:48;;2518:254;;;;;:::o;4908:225::-;4975:9;;;4996:11;;;4993:134;;;5049:10;5044:3;5040:20;5037:1;5030:31;5084:4;5081:1;5074:15;5112:4;5109:1;5102:15;5138:127;5199:10;5194:3;5190:20;5187:1;5180:31;5230:4;5227:1;5220:15;5254:4;5251:1;5244:15;5270:127;5331:10;5326:3;5322:20;5319:1;5312:31;5362:4;5359:1;5352:15;5386:4;5383:1;5376:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "723000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "215",
								"POOL_MANAGER_ROLE()": "infinite",
								"deregisterPool(address)": "infinite",
								"getPoolDetails(address)": "11508",
								"getPoolsByLender(address)": "infinite",
								"getRoleAdmin(bytes32)": "2534",
								"getTotalPools()": "2357",
								"getVaultForPool(address)": "4838",
								"grantFactoryAccess(address)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "2737",
								"poolVaults(address)": "2623",
								"registerPool(address,address,address,address)": "infinite",
								"renounceRole(bytes32,address)": "29085",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "447"
							},
							"internal": {
								"_removePoolFromLenderArray(address,address)": "infinite",
								"_removePoolFromMainArray(address)": "infinite",
								"findIndexInArray(address[] storage pointer,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 276,
									"end": 3667,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 276,
									"end": 3667,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 276,
									"end": 3667,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 789,
									"end": 916,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 789,
									"end": 916,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 789,
									"end": 916,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 789,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 789,
									"end": 916,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 789,
									"end": 916,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 789,
									"end": 916,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 789,
									"end": 916,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 789,
									"end": 916,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 789,
									"end": 916,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 814,
									"end": 856,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2232,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 845,
									"end": 855,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 814,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 814,
									"end": 856,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 814,
									"end": 856,
									"name": "tag",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 814,
									"end": 856,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 867,
									"end": 908,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 383,
									"end": 413,
									"name": "PUSH",
									"source": 6,
									"value": "6077685936C8169D09204A1D97DB12E41713588C38E1D29A61867D3DCEE98AFF"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 867,
									"end": 877,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 867,
									"end": 908,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 867,
									"end": 908,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 867,
									"end": 908,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 867,
									"end": 908,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 276,
									"end": 3667,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 276,
									"end": 3667,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 735,
									"end": 745,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 276,
									"end": 3667,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 276,
									"end": 3667,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 276,
									"end": 3667,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 3667,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 276,
									"end": 3667,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 3667,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 3667,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 276,
									"end": 3667,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 3667,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200ce86c251d0ebae85779b638f6911a6e7bf61ed0753deff622d1128a21ec1a3c64736f6c63430008190033",
									".code": [
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "5D102DF7"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "A217FDDF"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "A217FDDF"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "D3E90FA0"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "D3FFE67A"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "D547741F"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "5D102DF7"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "7570E389"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "7E72C7D7"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "91D14854"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "24A44EFB"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "24A44EFB"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "2F2FF15D"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "36568ABE"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "56D73568"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "1FFC9A7"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "CF9C72E"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "1E4966AB"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "248A9CA3"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 276,
											"end": 3667,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 923,
											"end": 1561,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 923,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 923,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 923,
											"end": 1561,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 923,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 923,
											"end": 1561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1561,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 923,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 923,
											"end": 1561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1561,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 923,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1561,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 566,
											"end": 611,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 566,
											"end": 611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 566,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 566,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 566,
											"end": 611,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 566,
											"end": 611,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 566,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 566,
											"end": 611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 566,
											"end": 611,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 566,
											"end": 611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 566,
											"end": 611,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 566,
											"end": 611,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 566,
											"end": 611,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 566,
											"end": 611,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 566,
											"end": 611,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 566,
											"end": 611,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 566,
											"end": 611,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 566,
											"end": 611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 566,
											"end": 611,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 566,
											"end": 611,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 566,
											"end": 611,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 566,
											"end": 611,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 566,
											"end": 611,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 566,
											"end": 611,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 566,
											"end": 611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 566,
											"end": 611,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 566,
											"end": 611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1426,
											"end": 1477,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1426,
											"end": 1477,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1414,
											"end": 1416,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1399,
											"end": 1417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 566,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1280,
											"end": 1483,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1844,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1819,
											"end": 1844,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1819,
											"end": 1844,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1807,
											"end": 1809,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1792,
											"end": 1810,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1673,
											"end": 1850,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2035,
											"end": 2163,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2035,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2035,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2035,
											"end": 2163,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2163,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2035,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2035,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2163,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2035,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2035,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2163,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2035,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2163,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2035,
											"end": 2163,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2035,
											"end": 2163,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2163,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2035,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 339,
											"end": 413,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 339,
											"end": 413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 339,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CEA5B988323ACC73CD81DB0E6F2932CDC75F39072539D65CBFA79C56B2A64E51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 339,
											"end": 413,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 339,
											"end": 413,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2594,
											"end": 2803,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2594,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2594,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2594,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2594,
											"end": 2803,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2594,
											"end": 2803,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2594,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2594,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2594,
											"end": 2803,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2594,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2594,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2594,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2586,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2384,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2384,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2384,
											"end": 2586,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2586,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2384,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2384,
											"end": 2586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2586,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2384,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2384,
											"end": 2586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1922,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1571,
											"end": 1922,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1571,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1571,
											"end": 1922,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1922,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1571,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1571,
											"end": 1922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1922,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1571,
											"end": 1922,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1571,
											"end": 1922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2376,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 2171,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2171,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2171,
											"end": 2376,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2376,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2171,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2171,
											"end": 2376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2376,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2171,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2171,
											"end": 2376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2376,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2171,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2376,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2171,
											"end": 2376,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2171,
											"end": 2376,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2376,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3040,
											"end": 3053,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3040,
											"end": 3053,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3036,
											"end": 3058,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3036,
											"end": 3058,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3036,
											"end": 3058,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3018,
											"end": 3059,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3018,
											"end": 3059,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3119,
											"end": 3123,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3107,
											"end": 3124,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3107,
											"end": 3124,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3107,
											"end": 3124,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3125,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3130,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3130,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3075,
											"end": 3095,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3075,
											"end": 3095,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3075,
											"end": 3095,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3068,
											"end": 3131,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3187,
											"end": 3191,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3175,
											"end": 3192,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3175,
											"end": 3192,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3175,
											"end": 3192,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3169,
											"end": 3193,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3147,
											"end": 3167,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3147,
											"end": 3167,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3147,
											"end": 3167,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3140,
											"end": 3194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3254,
											"end": 3258,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3242,
											"end": 3259,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3242,
											"end": 3259,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3242,
											"end": 3259,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3236,
											"end": 3260,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3265,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3230,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3230,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3266,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3266,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3266,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3266,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2967,
											"end": 2970,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2952,
											"end": 2971,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2952,
											"end": 2971,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2777,
											"end": 3272,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1932,
											"end": 2027,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1932,
											"end": 2027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2012,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1932,
											"end": 2027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1932,
											"end": 2027,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 861,
											"end": 901,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 923,
											"end": 1561,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 923,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CEA5B988323ACC73CD81DB0E6F2932CDC75F39072539D65CBFA79C56B2A64E51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1060,
											"end": 1078,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1060,
											"end": 1078,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1060,
											"end": 1078,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1060,
											"end": 1078,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1060,
											"end": 1078,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1060,
											"end": 1078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1060,
											"end": 1102,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1060,
											"end": 1102,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1082,
											"end": 1102,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1082,
											"end": 1102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1082,
											"end": 1102,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1082,
											"end": 1102,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1060,
											"end": 1102,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1060,
											"end": 1102,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1060,
											"end": 1125,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1060,
											"end": 1125,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1060,
											"end": 1125,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1060,
											"end": 1125,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1106,
											"end": 1125,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1106,
											"end": 1125,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1106,
											"end": 1125,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1106,
											"end": 1125,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1060,
											"end": 1125,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1060,
											"end": 1125,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1143,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1052,
											"end": 1143,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1143,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1052,
											"end": 1143,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1143,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3663,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1052,
											"end": 1143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1052,
											"end": 1143,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1143,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3643,
											"end": 3664,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3700,
											"end": 3702,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 3680,
											"end": 3698,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3680,
											"end": 3698,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3680,
											"end": 3698,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3673,
											"end": 3703,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081A5B9C1D5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3719,
											"end": 3737,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3719,
											"end": 3737,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3737,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3772,
											"end": 3790,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3772,
											"end": 3790,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1143,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1052,
											"end": 1143,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1143,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1143,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1143,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1143,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1143,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1143,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1143,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1052,
											"end": 1143,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1158,
											"end": 1175,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1175,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1175,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1158,
											"end": 1175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1175,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1175,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1158,
											"end": 1175,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1158,
											"end": 1175,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1175,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1158,
											"end": 1175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1175,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1182,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1182,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1196,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1150,
											"end": 1224,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1150,
											"end": 1224,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1150,
											"end": 1224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1150,
											"end": 1224,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1150,
											"end": 1224,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1150,
											"end": 1224,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4003,
											"end": 4005,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1150,
											"end": 1224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1150,
											"end": 1224,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1150,
											"end": 1224,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3985,
											"end": 4006,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 4044,
											"name": "PUSH",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 4022,
											"end": 4040,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4022,
											"end": 4040,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4040,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4015,
											"end": 4045,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4106,
											"name": "PUSH",
											"source": 7,
											"value": "506F6F6C20616C72656164792072656769737465726564000000000000000000"
										},
										{
											"begin": 4061,
											"end": 4079,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4061,
											"end": 4079,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4061,
											"end": 4079,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4054,
											"end": 4107,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4142,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4124,
											"end": 4142,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1150,
											"end": 1224,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3801,
											"end": 4148,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1150,
											"end": 1224,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1150,
											"end": 1224,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1354,
											"end": 1369,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1321,
											"name": "DUP15",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1321,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1321,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1304,
											"end": 1321,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1321,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1321,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1304,
											"end": 1321,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1321,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1321,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1321,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1321,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1321,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "SWAP12",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "DUP15",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "DUP15",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "SWAP11",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "SWAP11",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1377,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1403,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1403,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1403,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1403,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1403,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1403,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1403,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1403,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1403,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1414,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1414,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1414,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1414,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1414,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1414,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1414,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1414,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1414,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1414,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1414,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1414,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1414,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1414,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1414,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1414,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1414,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1414,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1414,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1414,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1414,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1414,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1421,
											"end": 1437,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1421,
											"end": 1437,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1421,
											"end": 1437,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1421,
											"end": 1437,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1421,
											"end": 1437,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1421,
											"end": 1437,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1421,
											"end": 1437,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1421,
											"end": 1437,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1421,
											"end": 1437,
											"name": "PUSH",
											"source": 6,
											"value": "B10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"
										},
										{
											"begin": 1421,
											"end": 1437,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1421,
											"end": 1437,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1421,
											"end": 1437,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1421,
											"end": 1437,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1421,
											"end": 1437,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1421,
											"end": 1437,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1421,
											"end": 1437,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1421,
											"end": 1437,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1421,
											"end": 1437,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1421,
											"end": 1437,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1421,
											"end": 1437,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1460,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1460,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1460,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1454,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1444,
											"end": 1460,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1460,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1460,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1460,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1460,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1468,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1468,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1468,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1468,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1468,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1468,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1468,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1468,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1468,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1557,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1557,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1426,
											"end": 1477,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1426,
											"end": 1477,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1426,
											"end": 1477,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1377,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "928B994AD535A478F217AB28F23FBBF04F79D765F407B8DF7CC2DF7174AEF90B"
										},
										{
											"begin": 1512,
											"end": 1557,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1399,
											"end": 1417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1512,
											"end": 1557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 1557,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1557,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1557,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1557,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1557,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1557,
											"modifierDepth": 1,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2163,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2035,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2136,
											"end": 2155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2155,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2155,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2136,
											"end": 2155,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2155,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2147,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2136,
											"end": 2155,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2136,
											"end": 2155,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2155,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2155,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2136,
											"end": 2155,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2155,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2155,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2155,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2116,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2100,
											"end": 2116,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2155,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2155,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2163,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2163,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "334BD919"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2803,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2594,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2674,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2712,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2674,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2674,
											"end": 2713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2674,
											"end": 2713,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2674,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2666,
											"end": 2740,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2666,
											"end": 2740,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2666,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4355,
											"end": 4357,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2666,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2666,
											"end": 2740,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4358,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4394,
											"end": 4396,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 4374,
											"end": 4392,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4374,
											"end": 4392,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4374,
											"end": 4392,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4397,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21B0B63632B91034B9903737BA1030B71030B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4413,
											"end": 4431,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4413,
											"end": 4431,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4413,
											"end": 4431,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4406,
											"end": 4458,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4475,
											"end": 4493,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4475,
											"end": 4493,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2666,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 4153,
											"end": 4499,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2666,
											"end": 2740,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2666,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CEA5B988323ACC73CD81DB0E6F2932CDC75F39072539D65CBFA79C56B2A64E51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2780,
											"end": 2794,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 2751,
											"end": 2795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2795,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2751,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2594,
											"end": 2803,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2594,
											"end": 2803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2586,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2384,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2474,
											"end": 2490,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2490,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2490,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2453,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2474,
											"end": 2490,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2490,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2490,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2484,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2474,
											"end": 2490,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2474,
											"end": 2490,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2490,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2474,
											"end": 2490,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2490,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2490,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2453,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2490,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2466,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2466,
											"end": 2544,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2466,
											"end": 2544,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2466,
											"end": 2544,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2466,
											"end": 2544,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2466,
											"end": 2544,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4708,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2466,
											"end": 2544,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2466,
											"end": 2544,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2466,
											"end": 2544,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4688,
											"end": 4709,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4745,
											"end": 4747,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 4725,
											"end": 4743,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4725,
											"end": 4743,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4725,
											"end": 4743,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4718,
											"end": 4748,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4784,
											"end": 4818,
											"name": "PUSH",
											"source": 7,
											"value": "506F6F6C206E6F742072656769737465726564206F7220686173206E6F207661"
										},
										{
											"begin": 4764,
											"end": 4782,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4764,
											"end": 4782,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4764,
											"end": 4782,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4757,
											"end": 4819,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D5B1D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4835,
											"end": 4853,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4835,
											"end": 4853,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4835,
											"end": 4853,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4828,
											"end": 4861,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4878,
											"end": 4897,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4878,
											"end": 4897,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2466,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 4504,
											"end": 4903,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2466,
											"end": 2544,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2466,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2562,
											"end": 2578,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2578,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2578,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2578,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2562,
											"end": 2578,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2578,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2578,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2572,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2562,
											"end": 2578,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2562,
											"end": 2578,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2578,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2562,
											"end": 2578,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2578,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2578,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2578,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2578,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1922,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1571,
											"end": 1922,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CEA5B988323ACC73CD81DB0E6F2932CDC75F39072539D65CBFA79C56B2A64E51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1661,
											"end": 1678,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1697,
											"end": 1698,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1661,
											"end": 1672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1661,
											"end": 1678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1661,
											"end": 1685,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1661,
											"end": 1685,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1657,
											"end": 1727,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1657,
											"end": 1727,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1708,
											"end": 1727,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "739F4185"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1708,
											"end": 1727,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1727,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1708,
											"end": 1727,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1708,
											"end": 1727,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1727,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1727,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1727,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1727,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1727,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1657,
											"end": 1727,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1657,
											"end": 1727,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1767,
											"end": 1784,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1784,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1784,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1784,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1784,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1784,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1767,
											"end": 1784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1767,
											"end": 1784,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1767,
											"end": 1784,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1784,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1740,
											"end": 1798,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 1740,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1791,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1783,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1740,
											"end": 1766,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 1740,
											"end": 1798,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1740,
											"end": 1798,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 1740,
											"end": 1798,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1809,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 1834,
											"end": 1838,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1809,
											"end": 1833,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1809,
											"end": 1839,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1809,
											"end": 1839,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 1809,
											"end": 1839,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1859,
											"end": 1876,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1859,
											"end": 1876,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1859,
											"end": 1876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1859,
											"end": 1876,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1859,
											"end": 1876,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1859,
											"end": 1876,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1859,
											"end": 1870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1859,
											"end": 1876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1859,
											"end": 1876,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1859,
											"end": 1876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1859,
											"end": 1876,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1859,
											"end": 1876,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1859,
											"end": 1876,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1859,
											"end": 1876,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1859,
											"end": 1876,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1876,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1876,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1852,
											"end": 1876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1876,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1876,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1876,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1876,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1876,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1852,
											"end": 1876,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1876,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1876,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1876,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1876,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1876,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1876,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1876,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1876,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1876,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1876,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1876,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1852,
											"end": 1876,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1876,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1876,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1876,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1876,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1876,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1876,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 1914,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 1914,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "334D0B2111287DFDDEBE4B4C1C5AF3AE644909D7FCD024377BF601E236ED5ABB"
										},
										{
											"begin": 1892,
											"end": 1914,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1859,
											"end": 1876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 1914,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1922,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1922,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2376,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2171,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2267,
											"end": 2284,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2284,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2284,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2304,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2284,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2284,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2284,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2278,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2267,
											"end": 2284,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2267,
											"end": 2284,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2284,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2284,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2284,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2291,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2291,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2263,
											"end": 2333,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2333,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2314,
											"end": 2333,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "739F4185"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2314,
											"end": 2333,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2333,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2333,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2314,
											"end": 2333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2333,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2314,
											"end": 2333,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2333,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2333,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2333,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2333,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2333,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2333,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2263,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2351,
											"end": 2368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2368,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2368,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2368,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2351,
											"end": 2368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2368,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2368,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2351,
											"end": 2368,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2351,
											"end": 2368,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2368,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2368,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2368,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2351,
											"end": 2368,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2368,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2368,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2845,
											"end": 3164,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2845,
											"end": 3164,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2963,
											"end": 2982,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 2982,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2930,
											"end": 2943,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2963,
											"end": 2982,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 2982,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 2982,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 2974,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2963,
											"end": 2982,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2963,
											"end": 2982,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 2982,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2963,
											"end": 2982,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 2982,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2946,
											"end": 2989,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2984,
											"end": 2988,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2946,
											"end": 2989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2989,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2946,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3017,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3031,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3046,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2930,
											"end": 2989,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2930,
											"end": 2989,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3000,
											"end": 3017,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 3020,
											"end": 3050,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3049,
											"end": 3050,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3049,
											"end": 3050,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 3020,
											"end": 3050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3050,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 3020,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3090,
											"end": 3109,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3109,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3109,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3090,
											"end": 3109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3109,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3109,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3101,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3090,
											"end": 3109,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3090,
											"end": 3109,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3109,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3090,
											"end": 3109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3109,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3120,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3120,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3050,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3050,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3090,
											"end": 3109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3050,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3050,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3120,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3120,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 3090,
											"end": 3120,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 3090,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 3090,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3120,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 3090,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3120,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3090,
											"end": 3120,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3120,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3120,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3120,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3090,
											"end": 3120,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3120,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3120,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3120,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3120,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3120,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3120,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3061,
											"end": 3080,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3080,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3080,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3072,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3061,
											"end": 3080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3080,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3080,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3061,
											"end": 3080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3080,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3080,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3087,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3087,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3120,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3120,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3120,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3120,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3120,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3081,
											"end": 3086,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3081,
											"end": 3086,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3087,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3087,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 3061,
											"end": 3087,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 3061,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 3061,
											"end": 3087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3087,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 3061,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3087,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3061,
											"end": 3087,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3087,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3087,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3087,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3061,
											"end": 3087,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3087,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3087,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3087,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3087,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3087,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3087,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3120,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3120,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3061,
											"end": 3120,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3061,
											"end": 3120,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3120,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3120,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3120,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3120,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3120,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3150,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3150,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3150,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3150,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3150,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3142,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3131,
											"end": 3150,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3150,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3150,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3150,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3131,
											"end": 3150,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3150,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3156,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3156,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3156,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3131,
											"end": 3156,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3131,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 3131,
											"end": 3156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3156,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3131,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3156,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3131,
											"end": 3156,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3156,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3156,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3156,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3131,
											"end": 3156,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3156,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3156,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3156,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3131,
											"end": 3156,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3156,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3156,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3156,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3156,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3131,
											"end": 3156,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3156,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3156,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3156,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3156,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3156,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2845,
											"end": 3164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3172,
											"end": 3403,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 3172,
											"end": 3403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3239,
											"end": 3252,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3255,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 3272,
											"end": 3277,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3279,
											"end": 3283,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 3255,
											"end": 3284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3284,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 3255,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3330,
											"end": 3331,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3315,
											"end": 3327,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3327,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3239,
											"end": 3284,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3239,
											"end": 3284,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3295,
											"end": 3312,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3295,
											"end": 3312,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3330,
											"end": 3331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 3315,
											"end": 3331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3295,
											"end": 3331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3295,
											"end": 3331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3362,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3363,
											"end": 3372,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3373,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3373,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3373,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3373,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3357,
											"end": 3373,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3357,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 3357,
											"end": 3373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3373,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3357,
											"end": 3373,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3373,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3357,
											"end": 3373,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3373,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3373,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3373,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3357,
											"end": 3373,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3373,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3373,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3373,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3373,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3373,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3357,
											"end": 3373,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3373,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3373,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3373,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3348,
											"end": 3353,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3348,
											"end": 3353,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 3342,
											"end": 3354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3373,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3342,
											"end": 3373,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3373,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3373,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3373,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3342,
											"end": 3373,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3373,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3373,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3373,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3373,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3342,
											"end": 3373,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3373,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3373,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3373,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3373,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3373,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3389,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3384,
											"end": 3395,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3395,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3395,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 3384,
											"end": 3395,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 3384,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 3384,
											"end": 3395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3395,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 3384,
											"end": 3395,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3395,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3384,
											"end": 3395,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3395,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3395,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3395,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3384,
											"end": 3395,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3395,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3395,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3395,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3384,
											"end": 3395,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3395,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3395,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3395,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3395,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3384,
											"end": 3395,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3395,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3395,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3395,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3395,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3395,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3172,
											"end": 3403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2517D3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5594,
											"end": 5626,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5594,
											"end": 5626,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5576,
											"end": 5627,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5636,
											"end": 5670,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5636,
											"end": 5670,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5636,
											"end": 5670,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5549,
											"end": 5567,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5549,
											"end": 5567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5402,
											"end": 5676,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3664,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 3411,
											"end": 3664,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3500,
											"end": 3507,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3500,
											"end": 3507,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 3622,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 3520,
											"end": 3622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3556,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3556,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3556,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3556,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 3622,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 3622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 3520,
											"end": 3622,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3600,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3589,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3590,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3590,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3590,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3590,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3582,
											"end": 3590,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3582,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 3582,
											"end": 3590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3590,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3582,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3590,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3582,
											"end": 3590,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3590,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3590,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3590,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3582,
											"end": 3590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3590,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3590,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3590,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3590,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3582,
											"end": 3590,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3578,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3578,
											"end": 3610,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3609,
											"end": 3610,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3602,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 3602,
											"end": 3610,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3578,
											"end": 3610,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3578,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3558,
											"end": 3561,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3558,
											"end": 3561,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 3622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 3520,
											"end": 3622,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 3622,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 3520,
											"end": 3622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3639,
											"end": 3656,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3411,
											"end": 3664,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3411,
											"end": 3664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 199,
											"end": 270,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 497,
											"end": 670,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 497,
											"end": 670,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 565,
											"end": 585,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 565,
											"end": 585,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 614,
											"end": 645,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 614,
											"end": 645,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 604,
											"end": 646,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 604,
											"end": 646,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 594,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 594,
											"end": 664,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 660,
											"end": 661,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 658,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 650,
											"end": 662,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 594,
											"end": 664,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 594,
											"end": 664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 497,
											"end": 670,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 497,
											"end": 670,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 497,
											"end": 670,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 497,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 675,
											"end": 1084,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 675,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 761,
											"end": 767,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 775,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 777,
											"end": 783,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 838,
											"end": 841,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 826,
											"end": 835,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 817,
											"end": 824,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 813,
											"end": 836,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 809,
											"end": 842,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 806,
											"end": 859,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 806,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 806,
											"end": 859,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 855,
											"end": 856,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 853,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 845,
											"end": 857,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 806,
											"end": 859,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 806,
											"end": 859,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 878,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 897,
											"end": 906,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 878,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 878,
											"end": 907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 878,
											"end": 907,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 878,
											"end": 907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 868,
											"end": 907,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 868,
											"end": 907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 926,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 960,
											"end": 962,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 958,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 945,
											"end": 963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 926,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 926,
											"end": 964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 926,
											"end": 964,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 926,
											"end": 964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 916,
											"end": 964,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 916,
											"end": 964,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 1017,
											"end": 1019,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1006,
											"end": 1015,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1002,
											"end": 1020,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 983,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1021,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 983,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 973,
											"end": 1021,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 973,
											"end": 1021,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1040,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1040,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 1040,
											"end": 1078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1040,
											"end": 1078,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1040,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1078,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1078,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 675,
											"end": 1084,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 675,
											"end": 1084,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 675,
											"end": 1084,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 675,
											"end": 1084,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 675,
											"end": 1084,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 675,
											"end": 1084,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 675,
											"end": 1084,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 675,
											"end": 1084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1089,
											"end": 1275,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1089,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1148,
											"end": 1154,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1203,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1189,
											"end": 1198,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1180,
											"end": 1187,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1199,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1172,
											"end": 1204,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1221,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 1169,
											"end": 1221,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1217,
											"end": 1218,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1214,
											"end": 1215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1219,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1221,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 1169,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1240,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 1259,
											"end": 1268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1240,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 1240,
											"end": 1269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1488,
											"end": 1668,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1488,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1547,
											"end": 1553,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1600,
											"end": 1602,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1588,
											"end": 1597,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1579,
											"end": 1586,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1575,
											"end": 1598,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1571,
											"end": 1603,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1568,
											"end": 1620,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1568,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 1568,
											"end": 1620,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1617,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1613,
											"end": 1614,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1618,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1568,
											"end": 1620,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 1568,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1639,
											"end": 1662,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1639,
											"end": 1662,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1488,
											"end": 1668,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1488,
											"end": 1668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1855,
											"end": 2513,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1855,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2078,
											"end": 2099,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2078,
											"end": 2099,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2078,
											"end": 2099,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2148,
											"end": 2161,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2148,
											"end": 2161,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2069,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2069,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2069,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1997,
											"end": 2001,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1997,
											"end": 2001,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2264,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2264,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2264,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2264,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2223,
											"end": 2225,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2226,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2226,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1997,
											"end": 2001,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2292,
											"end": 2487,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 2292,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2312,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2303,
											"end": 2304,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2313,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2292,
											"end": 2487,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2292,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 2292,
											"end": 2487,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2384,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2384,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2367,
											"end": 2406,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2355,
											"end": 2407,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2355,
											"end": 2407,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2462,
											"end": 2477,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2462,
											"end": 2477,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2462,
											"end": 2477,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2462,
											"end": 2477,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2403,
											"end": 2404,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2321,
											"end": 2330,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2292,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 2292,
											"end": 2487,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2292,
											"end": 2487,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 2292,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2504,
											"end": 2507,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2507,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 1855,
											"end": 2513,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1855,
											"end": 2513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2772,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 2518,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2592,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2647,
											"end": 2649,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2635,
											"end": 2644,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2633,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2622,
											"end": 2645,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2618,
											"end": 2650,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2615,
											"end": 2667,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2615,
											"end": 2667,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 2615,
											"end": 2667,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2663,
											"end": 2664,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2660,
											"end": 2661,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2665,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2615,
											"end": 2667,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 2615,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2699,
											"end": 2708,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2686,
											"end": 2709,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2709,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2709,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 2762,
											"end": 2764,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2751,
											"end": 2760,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2765,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 2728,
											"end": 2766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2766,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 2728,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2718,
											"end": 2766,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2718,
											"end": 2766,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2772,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2772,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2772,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4908,
											"end": 5133,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 4908,
											"end": 5133,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4975,
											"end": 4984,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4975,
											"end": 4984,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4975,
											"end": 4984,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4996,
											"end": 5007,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4996,
											"end": 5007,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4996,
											"end": 5007,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4993,
											"end": 5127,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4993,
											"end": 5127,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 4993,
											"end": 5127,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5049,
											"end": 5059,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 5044,
											"end": 5047,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5040,
											"end": 5060,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5038,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5030,
											"end": 5061,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5084,
											"end": 5088,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 5081,
											"end": 5082,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5074,
											"end": 5089,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5112,
											"end": 5116,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5109,
											"end": 5110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5102,
											"end": 5117,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5138,
											"end": 5265,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 5138,
											"end": 5265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5199,
											"end": 5209,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 5194,
											"end": 5197,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5190,
											"end": 5210,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5187,
											"end": 5188,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5180,
											"end": 5211,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5230,
											"end": 5234,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 5227,
											"end": 5228,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5220,
											"end": 5235,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5254,
											"end": 5258,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5251,
											"end": 5252,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5244,
											"end": 5259,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5270,
											"end": 5397,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 5270,
											"end": 5397,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5331,
											"end": 5341,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 5326,
											"end": 5329,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5322,
											"end": 5342,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5319,
											"end": 5320,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5312,
											"end": 5343,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5362,
											"end": 5366,
											"name": "PUSH",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 5359,
											"end": 5360,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5352,
											"end": 5367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5386,
											"end": 5390,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5383,
											"end": 5384,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5376,
											"end": 5391,
											"name": "REVERT",
											"source": 7
										}
									],
									".data": {
										"CEA5B988323ACC73CD81DB0E6F2932CDC75F39072539D65CBFA79C56B2A64E51": "6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98aff"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/interfaces/IPoolOrganizer.sol",
								"contracts/protocol/PoolOrganizer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"POOL_MANAGER_ROLE()": "56d73568",
							"deregisterPool(address)": "7e72c7d7",
							"getPoolDetails(address)": "d3e90fa0",
							"getPoolsByLender(address)": "24a44efb",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getTotalPools()": "d3ffe67a",
							"getVaultForPool(address)": "7570e389",
							"grantFactoryAccess(address)": "5d102df7",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"poolVaults(address)": "1e4966ab",
							"registerPool(address,address,address,address)": "0cf9c72e",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolNotRegistered\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"PoolRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POOL_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"deregisterPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"internalType\":\"struct IPoolOrganizer.PoolDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"}],\"name\":\"getPoolsByLender\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalPools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getVaultForPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factoryAddress\",\"type\":\"address\"}],\"name\":\"grantFactoryAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolVaults\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"registerPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/protocol/PoolOrganizer.sol\":\"PoolOrganizer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/interfaces/IPoolOrganizer.sol\":{\"keccak256\":\"0xd775392d30efe3c4178835c0432e13ef235984497bc044538f1ef66bd650ece3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c600c03761f00b8202ddf4254e62b79215f6e5e6b43c6a3ae06a50953b59898\",\"dweb:/ipfs/QmZnENAWkdZrx9zWY1m7bqjEstLuiDo65JwXGhJ1LHGhFC\"]},\"contracts/protocol/PoolOrganizer.sol\":{\"keccak256\":\"0xd638481aeeb1798ff340722e169004f2988908a1e60d787a426f3b388ab6bbe9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0446786083d17d332fa6b3ce98b836cb8c258378f323180a674b58159e3dd864\",\"dweb:/ipfs/QmYapuSNXsimS6iT7i6YEkYTCtUpKKEjH32aXT7HYaBeSe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 529,
								"contract": "contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
								"label": "pools",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 534,
								"contract": "contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
								"label": "poolDetails",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(PoolDetails)455_storage)"
							},
							{
								"astId": 539,
								"contract": "contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
								"label": "lenderPools",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
							},
							{
								"astId": 543,
								"contract": "contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
								"label": "poolVaults",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_array(t_address)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address[])",
								"numberOfBytes": "32",
								"value": "t_array(t_address)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(PoolDetails)455_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct IPoolOrganizer.PoolDetails)",
								"numberOfBytes": "32",
								"value": "t_struct(PoolDetails)455_storage"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(PoolDetails)455_storage": {
								"encoding": "inplace",
								"label": "struct IPoolOrganizer.PoolDetails",
								"members": [
									{
										"astId": 448,
										"contract": "contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "lender",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 450,
										"contract": "contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "borrower",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 452,
										"contract": "contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "creationTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 454,
										"contract": "contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "vault",
										"offset": 0,
										"slot": "3",
										"type": "t_address"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							408
						],
						"ERC165": [
							432
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 409,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 408,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 433,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 432,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 408,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 432,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								432,
								444,
								378,
								408
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										431
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 431,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 390,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 390,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "356:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "373:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:1"
									},
									"src": "317:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:1"
									},
									"src": "552:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "877:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "899:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "934:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:1"
									},
									"src": "854:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1193:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1205:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1227:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1252:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:1"
									},
									"src": "1187:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1580:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1602:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1627:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:1"
									},
									"src": "1562:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1755:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1769:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1809:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:1"
									},
									"scope": 378,
									"src": "1738:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:1"
									},
									"scope": 378,
									"src": "2010:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2347:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2361:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:1"
									},
									"scope": 378,
									"src": "2328:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2641:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2655:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:1"
									},
									"scope": 378,
									"src": "2621:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3205:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3219:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 378,
									"src": "3183:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "225:3033:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3150:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							408
						]
					},
					"id": 409,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 408,
							"linearizedBaseContracts": [
								408
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 386,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 385,
												"id": 388,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 408,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 395,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 394,
												"id": 397,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 392,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 408,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 403,
												"id": 405,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 408,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 409,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							432
						],
						"IERC165": [
							444
						]
					},
					"id": 433,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 410,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 412,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 433,
							"sourceUnit": 445,
							"src": "140:38:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 411,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 444,
										"src": "148:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 414,
										"name": "IERC165",
										"nameLocations": [
											"687:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 444,
										"src": "687:7:3"
									},
									"id": 415,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:3"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 413,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:3",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 432,
							"linearizedBaseContracts": [
								432,
								444
							],
							"name": "ERC165",
							"nameLocation": "677:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										443
									],
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "844:64:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 423,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "861:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 425,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "881:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$444_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$444_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 424,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$444",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:3",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 422,
												"id": 429,
												"nodeType": "Return",
												"src": "854:47:3"
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "789:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 417,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:3"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "838:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:3"
									},
									"scope": 432,
									"src": "762:146:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 433,
							"src": "659:251:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							444
						]
					},
					"id": 445,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 434,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 435,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:4",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 444,
							"linearizedBaseContracts": [
								444
							],
							"name": "IERC165",
							"nameLocation": "431:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:4",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "817:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 437,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:4"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "860:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:4"
									},
									"scope": 444,
									"src": "790:76:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 445,
							"src": "421:447:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:4"
				},
				"id": 4
			},
			"contracts/interfaces/IPoolOrganizer.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IPoolOrganizer.sol",
					"exportedSymbols": {
						"IPoolOrganizer": [
							505
						]
					},
					"id": 506,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 446,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPoolOrganizer",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 505,
							"linearizedBaseContracts": [
								505
							],
							"name": "IPoolOrganizer",
							"nameLocation": "70:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IPoolOrganizer.PoolDetails",
									"id": 455,
									"members": [
										{
											"constant": false,
											"id": 448,
											"mutability": "mutable",
											"name": "lender",
											"nameLocation": "130:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 455,
											"src": "122:14:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 447,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "122:7:5",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 450,
											"mutability": "mutable",
											"name": "borrower",
											"nameLocation": "155:8:5",
											"nodeType": "VariableDeclaration",
											"scope": 455,
											"src": "147:16:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 449,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "147:7:5",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 452,
											"mutability": "mutable",
											"name": "creationTime",
											"nameLocation": "182:12:5",
											"nodeType": "VariableDeclaration",
											"scope": 455,
											"src": "174:20:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 451,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "174:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 454,
											"mutability": "mutable",
											"name": "vault",
											"nameLocation": "213:5:5",
											"nodeType": "VariableDeclaration",
											"scope": 455,
											"src": "205:13:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 453,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "205:7:5",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolDetails",
									"nameLocation": "99:11:5",
									"nodeType": "StructDefinition",
									"scope": 505,
									"src": "92:134:5",
									"visibility": "public"
								},
								{
									"functionSelector": "0cf9c72e",
									"id": 466,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerPool",
									"nameLocation": "243:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "264:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "256:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "256:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "278:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "270:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "270:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "borrower",
												"nameLocation": "294:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "286:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "286:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "312:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "304:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "304:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "255:63:5"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "327:0:5"
									},
									"scope": 505,
									"src": "234:94:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7e72c7d7",
									"id": 471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deregisterPool",
									"nameLocation": "345:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "368:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "360:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "360:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "359:14:5"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "382:0:5"
									},
									"scope": 505,
									"src": "336:47:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d3ffe67a",
									"id": 476,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalPools",
									"nameLocation": "400:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "413:2:5"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "439:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "439:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "438:9:5"
									},
									"scope": 505,
									"src": "391:57:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "24a44efb",
									"id": 484,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolsByLender",
									"nameLocation": "465:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "490:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "482:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "482:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "481:16:5"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "521:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 480,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "521:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 481,
													"nodeType": "ArrayTypeName",
													"src": "521:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "520:18:5"
									},
									"scope": 505,
									"src": "456:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d3e90fa0",
									"id": 492,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolDetails",
									"nameLocation": "556:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "579:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "571:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "570:14:5"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "608:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolDetails_$455_memory_ptr",
													"typeString": "struct IPoolOrganizer.PoolDetails"
												},
												"typeName": {
													"id": 489,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 488,
														"name": "PoolDetails",
														"nameLocations": [
															"608:11:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 455,
														"src": "608:11:5"
													},
													"referencedDeclaration": 455,
													"src": "608:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolDetails_$455_storage_ptr",
														"typeString": "struct IPoolOrganizer.PoolDetails"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "607:20:5"
									},
									"scope": 505,
									"src": "547:81:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7570e389",
									"id": 499,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getVaultForPool",
									"nameLocation": "645:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "669:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "661:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "660:14:5"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "698:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "698:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:9:5"
									},
									"scope": 505,
									"src": "636:71:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5d102df7",
									"id": 504,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantFactoryAccess",
									"nameLocation": "724:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "factoryAddress",
												"nameLocation": "751:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "743:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:24:5"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:0:5"
									},
									"scope": 505,
									"src": "715:61:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 506,
							"src": "60:719:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:748:5"
				},
				"id": 5
			},
			"contracts/protocol/PoolOrganizer.sol": {
				"ast": {
					"absolutePath": "contracts/protocol/PoolOrganizer.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							408
						],
						"ERC165": [
							432
						],
						"IAccessControl": [
							378
						],
						"IPoolOrganizer": [
							505
						],
						"InvalidAddress": [
							513
						],
						"PoolAlreadyRegistered": [
							515
						],
						"PoolNotRegistered": [
							517
						],
						"PoolOrganizer": [
							914
						],
						"Unauthorized": [
							511
						]
					},
					"id": 915,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 507,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 508,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 915,
							"sourceUnit": 296,
							"src": "60:58:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IPoolOrganizer.sol",
							"file": "../interfaces/IPoolOrganizer.sol",
							"id": 509,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 915,
							"sourceUnit": 506,
							"src": "120:42:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"errorSelector": "82b42900",
							"id": 511,
							"name": "Unauthorized",
							"nameLocation": "172:12:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 510,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "184:2:6"
							},
							"src": "166:21:6"
						},
						{
							"errorSelector": "e6c4247b",
							"id": 513,
							"name": "InvalidAddress",
							"nameLocation": "195:14:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 512,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "209:2:6"
							},
							"src": "189:23:6"
						},
						{
							"errorSelector": "b3e8301e",
							"id": 515,
							"name": "PoolAlreadyRegistered",
							"nameLocation": "220:21:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 514,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "241:2:6"
							},
							"src": "214:30:6"
						},
						{
							"errorSelector": "739f4185",
							"id": 517,
							"name": "PoolNotRegistered",
							"nameLocation": "252:17:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 516,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "269:2:6"
							},
							"src": "246:26:6"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 518,
										"name": "AccessControl",
										"nameLocations": [
											"302:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "302:13:6"
									},
									"id": 519,
									"nodeType": "InheritanceSpecifier",
									"src": "302:13:6"
								},
								{
									"baseName": {
										"id": 520,
										"name": "IPoolOrganizer",
										"nameLocations": [
											"317:14:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 505,
										"src": "317:14:6"
									},
									"id": 521,
									"nodeType": "InheritanceSpecifier",
									"src": "317:14:6"
								}
							],
							"canonicalName": "PoolOrganizer",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 914,
							"linearizedBaseContracts": [
								914,
								505,
								295,
								432,
								444,
								378,
								408
							],
							"name": "PoolOrganizer",
							"nameLocation": "285:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "56d73568",
									"id": 526,
									"mutability": "constant",
									"name": "POOL_MANAGER_ROLE",
									"nameLocation": "363:17:6",
									"nodeType": "VariableDeclaration",
									"scope": 914,
									"src": "339:74:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 522,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "339:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "504f4f4c5f4d414e414745525f524f4c45",
												"id": 524,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "393:19:6",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98aff",
													"typeString": "literal_string \"POOL_MANAGER_ROLE\""
												},
												"value": "POOL_MANAGER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98aff",
													"typeString": "literal_string \"POOL_MANAGER_ROLE\""
												}
											],
											"id": 523,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "383:9:6",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 525,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "383:30:6",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 529,
									"mutability": "mutable",
									"name": "pools",
									"nameLocation": "440:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 914,
									"src": "422:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 527,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "422:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 528,
										"nodeType": "ArrayTypeName",
										"src": "422:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 534,
									"mutability": "mutable",
									"name": "poolDetails",
									"nameLocation": "492:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 914,
									"src": "452:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$455_storage_$",
										"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails)"
									},
									"typeName": {
										"id": 533,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 530,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "460:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "452:31:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$455_storage_$",
											"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 532,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 531,
												"name": "PoolDetails",
												"nameLocations": [
													"471:11:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 455,
												"src": "471:11:6"
											},
											"referencedDeclaration": 455,
											"src": "471:11:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolDetails_$455_storage_ptr",
												"typeString": "struct IPoolOrganizer.PoolDetails"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 539,
									"mutability": "mutable",
									"name": "lenderPools",
									"nameLocation": "548:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 914,
									"src": "510:49:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
										"typeString": "mapping(address => address[])"
									},
									"typeName": {
										"id": 538,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 535,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "518:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "510:29:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
											"typeString": "mapping(address => address[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 536,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "529:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"id": 537,
											"nodeType": "ArrayTypeName",
											"src": "529:9:6",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "1e4966ab",
									"id": 543,
									"mutability": "mutable",
									"name": "poolVaults",
									"nameLocation": "601:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 914,
									"src": "566:45:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 542,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 540,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "574:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "566:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 541,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "585:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "928b994ad535a478f217ab28f23fbbf04f79d765f407b8df7cc2df7174aef90b",
									"id": 553,
									"name": "PoolRegistered",
									"nameLocation": "628:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "659:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "643:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "643:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"indexed": true,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "681:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "665:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "665:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"indexed": true,
												"mutability": "mutable",
												"name": "borrower",
												"nameLocation": "705:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "689:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"indexed": false,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "723:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "715:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "642:87:6"
									},
									"src": "622:108:6"
								},
								{
									"anonymous": false,
									"eventSelector": "334d0b2111287dfddebe4b4c1c5af3ae644909d7fcd024377bf601e236ed5abb",
									"id": 557,
									"name": "PoolDeregistered",
									"nameLocation": "742:16:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "775:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "759:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "759:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:22:6"
									},
									"src": "736:45:6"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "803:113:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 561,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "825:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 562,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "845:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "849:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "845:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 560,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "814:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "814:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "814:42:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 567,
															"name": "POOL_MANAGER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "878:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 568,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "897:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "901:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "897:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 566,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "867:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "867:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "867:41:6"
											}
										]
									},
									"id": 573,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:2:6"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:0:6"
									},
									"scope": 914,
									"src": "789:127:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										466
									],
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "1045:516:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 588,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 575,
																		"src": "1060:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 591,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1076:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1068:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 589,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1068:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1068:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "1060:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 594,
																		"name": "lender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 577,
																		"src": "1082:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 597,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1100:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 596,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1092:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 595,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1092:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1092:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "1082:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1060:42:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 601,
																	"name": "vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "1106:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1123:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1115:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 602,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1115:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1115:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1106:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1060:65:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420696e707574",
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1127:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b",
																"typeString": "literal_string \"Invalid input\""
															},
															"value": "Invalid input"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b",
																"typeString": "literal_string \"Invalid input\""
															}
														],
														"id": 587,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1052:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1052:91:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "1052:91:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 612,
																		"name": "poolDetails",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 534,
																		"src": "1158:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$455_storage_$",
																			"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
																		}
																	},
																	"id": 614,
																	"indexExpression": {
																		"id": 613,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 575,
																		"src": "1170:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1158:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolDetails_$455_storage",
																		"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
																	}
																},
																"id": 615,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1176:6:6",
																"memberName": "lender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 448,
																"src": "1158:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1194:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1186:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 616,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1186:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 619,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1186:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1158:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c20616c72656164792072656769737465726564",
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1198:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc861dfb3d1e0446599e73c98b2e7d579c1ecdb9e65a09f726c97d864f2bf3dd",
																"typeString": "literal_string \"Pool already registered\""
															},
															"value": "Pool already registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc861dfb3d1e0446599e73c98b2e7d579c1ecdb9e65a09f726c97d864f2bf3dd",
																"typeString": "literal_string \"Pool already registered\""
															}
														],
														"id": 611,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1150:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1150:74:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "1150:74:6"
											},
											{
												"expression": {
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 624,
															"name": "poolDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "1304:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$455_storage_$",
																"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
															}
														},
														"id": 626,
														"indexExpression": {
															"id": 625,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "1316:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1304:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolDetails_$455_storage",
															"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 628,
																"name": "lender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 577,
																"src": "1336:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 629,
																"name": "borrower",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "1344:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 630,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1354:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1360:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1354:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 632,
																"name": "vault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "1371:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 627,
															"name": "PoolDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "1324:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_PoolDetails_$455_storage_ptr_$",
																"typeString": "type(struct IPoolOrganizer.PoolDetails storage pointer)"
															}
														},
														"id": 633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1324:53:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolDetails_$455_memory_ptr",
															"typeString": "struct IPoolOrganizer.PoolDetails memory"
														}
													},
													"src": "1304:73:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolDetails_$455_storage",
														"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "1304:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 640,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "1409:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 636,
																"name": "lenderPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "1384:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 638,
															"indexExpression": {
																"id": 637,
																"name": "lender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 577,
																"src": "1396:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1384:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1404:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1384:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1384:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "1384:30:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 646,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "1432:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 643,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "1421:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1427:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1421:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1421:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 648,
												"nodeType": "ExpressionStatement",
												"src": "1421:16:6"
											},
											{
												"expression": {
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 649,
															"name": "poolVaults",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "1444:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 651,
														"indexExpression": {
															"id": 650,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "1455:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1444:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 652,
														"name": "vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "1463:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1444:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "1444:24:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 656,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "1527:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "lender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "1533:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 658,
															"name": "borrower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "1541:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 659,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "1551:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 655,
														"name": "PoolRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "1512:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address,address)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1512:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "EmitStatement",
												"src": "1507:50:6"
											}
										]
									},
									"functionSelector": "0cf9c72e",
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 584,
													"name": "POOL_MANAGER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 526,
													"src": "1026:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 585,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 583,
												"name": "onlyRole",
												"nameLocations": [
													"1017:8:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1017:8:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1017:27:6"
										}
									],
									"name": "registerPool",
									"nameLocation": "932:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "953:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "945:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "945:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "967:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "959:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "borrower",
												"nameLocation": "983:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "975:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "1001:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "993:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "944:63:6"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1045:0:6"
									},
									"scope": 914,
									"src": "923:638:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										471
									],
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "1646:276:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 671,
																"name": "poolDetails",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 534,
																"src": "1661:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$455_storage_$",
																	"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
																}
															},
															"id": 673,
															"indexExpression": {
																"id": 672,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "1673:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1661:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolDetails_$455_storage",
																"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
															}
														},
														"id": 674,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1679:6:6",
														"memberName": "lender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 448,
														"src": "1661:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1697:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1689:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 675,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1689:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1689:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1661:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 683,
												"nodeType": "IfStatement",
												"src": "1657:70:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 680,
															"name": "PoolNotRegistered",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "1708:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1708:19:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 682,
													"nodeType": "RevertStatement",
													"src": "1701:26:6"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 685,
																	"name": "poolDetails",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "1767:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$455_storage_$",
																		"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
																	}
																},
																"id": 687,
																"indexExpression": {
																	"id": 686,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "1779:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1767:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolDetails_$455_storage",
																	"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
																}
															},
															"id": 688,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1785:6:6",
															"memberName": "lender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 448,
															"src": "1767:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 689,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "1793:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 684,
														"name": "_removePoolFromLenderArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 842,
														"src": "1740:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1740:58:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 691,
												"nodeType": "ExpressionStatement",
												"src": "1740:58:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 693,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "1834:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 692,
														"name": "_removePoolFromMainArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "1809:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1809:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 695,
												"nodeType": "ExpressionStatement",
												"src": "1809:30:6"
											},
											{
												"expression": {
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1852:24:6",
													"subExpression": {
														"baseExpression": {
															"id": 696,
															"name": "poolDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "1859:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$455_storage_$",
																"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
															}
														},
														"id": 698,
														"indexExpression": {
															"id": 697,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "1871:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1859:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolDetails_$455_storage",
															"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "1852:24:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 702,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "1909:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 701,
														"name": "PoolDeregistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "1892:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1892:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 704,
												"nodeType": "EmitStatement",
												"src": "1887:27:6"
											}
										]
									},
									"functionSelector": "7e72c7d7",
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 668,
													"name": "POOL_MANAGER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 526,
													"src": "1627:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 669,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 667,
												"name": "onlyRole",
												"nameLocations": [
													"1618:8:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1618:8:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1618:27:6"
										}
									],
									"name": "deregisterPool",
									"nameLocation": "1580:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1603:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1595:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1595:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1594:14:6"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1646:0:6"
									},
									"scope": 914,
									"src": "1571:351:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										476
									],
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "1989:38:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 711,
														"name": "pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "2007:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2013:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2007:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 710,
												"id": 713,
												"nodeType": "Return",
												"src": "2000:19:6"
											}
										]
									},
									"functionSelector": "d3ffe67a",
									"id": 715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalPools",
									"nameLocation": "1941:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1954:2:6"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "1980:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1980:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1979:9:6"
									},
									"scope": 914,
									"src": "1932:95:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										484
									],
									"body": {
										"id": 727,
										"nodeType": "Block",
										"src": "2118:45:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 723,
														"name": "lenderPools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 539,
														"src": "2136:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
															"typeString": "mapping(address => address[] storage ref)"
														}
													},
													"id": 725,
													"indexExpression": {
														"id": 724,
														"name": "lender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "2148:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2136:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 722,
												"id": 726,
												"nodeType": "Return",
												"src": "2129:26:6"
											}
										]
									},
									"functionSelector": "24a44efb",
									"id": 728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolsByLender",
									"nameLocation": "2044:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "2069:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2061:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2061:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2060:16:6"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2100:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 719,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2100:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 720,
													"nodeType": "ArrayTypeName",
													"src": "2100:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2099:18:6"
									},
									"scope": 914,
									"src": "2035:128:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										492
									],
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "2252:124:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 736,
																"name": "poolDetails",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 534,
																"src": "2267:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$455_storage_$",
																	"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
																}
															},
															"id": 738,
															"indexExpression": {
																"id": 737,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 730,
																"src": "2279:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2267:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolDetails_$455_storage",
																"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
															}
														},
														"id": 739,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2285:6:6",
														"memberName": "lender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 448,
														"src": "2267:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2303:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2295:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 740,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2295:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2295:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2267:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "2263:70:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 745,
															"name": "PoolNotRegistered",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "2314:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2314:19:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 747,
													"nodeType": "RevertStatement",
													"src": "2307:26:6"
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 749,
														"name": "poolDetails",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "2351:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$455_storage_$",
															"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
														}
													},
													"id": 751,
													"indexExpression": {
														"id": 750,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "2363:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2351:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolDetails_$455_storage",
														"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
													}
												},
												"functionReturnParameters": 735,
												"id": 752,
												"nodeType": "Return",
												"src": "2344:24:6"
											}
										]
									},
									"functionSelector": "d3e90fa0",
									"id": 754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolDetails",
									"nameLocation": "2180:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "2203:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "2195:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2195:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:14:6"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "2232:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolDetails_$455_memory_ptr",
													"typeString": "struct IPoolOrganizer.PoolDetails"
												},
												"typeName": {
													"id": 733,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 732,
														"name": "PoolDetails",
														"nameLocations": [
															"2232:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 455,
														"src": "2232:11:6"
													},
													"referencedDeclaration": 455,
													"src": "2232:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolDetails_$455_storage_ptr",
														"typeString": "struct IPoolOrganizer.PoolDetails"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2231:20:6"
									},
									"scope": 914,
									"src": "2171:205:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										499
									],
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "2455:131:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 762,
																	"name": "poolVaults",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 543,
																	"src": "2474:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 764,
																"indexExpression": {
																	"id": 763,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 756,
																	"src": "2485:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2474:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2502:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2494:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 765,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2494:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 768,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2494:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2474:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c206e6f742072656769737465726564206f7220686173206e6f207661756c74",
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2506:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_39a3b1530e3b6596e085e382bff955d043a269a2081635a9d861923ef05dbbcd",
																"typeString": "literal_string \"Pool not registered or has no vault\""
															},
															"value": "Pool not registered or has no vault"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_39a3b1530e3b6596e085e382bff955d043a269a2081635a9d861923ef05dbbcd",
																"typeString": "literal_string \"Pool not registered or has no vault\""
															}
														],
														"id": 761,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2466:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2466:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "2466:78:6"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 773,
														"name": "poolVaults",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "2562:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 775,
													"indexExpression": {
														"id": 774,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "2573:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2562:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 760,
												"id": 776,
												"nodeType": "Return",
												"src": "2555:23:6"
											}
										]
									},
									"functionSelector": "7570e389",
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVaultForPool",
									"nameLocation": "2393:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "2417:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "2409:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2409:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2408:14:6"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "2446:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2446:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2445:9:6"
									},
									"scope": 914,
									"src": "2384:202:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										504
									],
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "2655:148:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 785,
																	"name": "DEFAULT_ADMIN_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "2682:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 786,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2702:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2706:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2702:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 784,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "2674:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2674:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f7420616e2061646d696e",
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2715:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
																"typeString": "literal_string \"Caller is not an admin\""
															},
															"value": "Caller is not an admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
																"typeString": "literal_string \"Caller is not an admin\""
															}
														],
														"id": 783,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2666:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2666:74:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "2666:74:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 793,
															"name": "POOL_MANAGER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "2761:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 794,
															"name": "factoryAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "2780:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 792,
														"name": "grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "2751:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2751:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "2751:44:6"
											}
										]
									},
									"functionSelector": "5d102df7",
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "grantFactoryAccess",
									"nameLocation": "2603:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "factoryAddress",
												"nameLocation": "2630:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "2622:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2622:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2621:24:6"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2655:0:6"
									},
									"scope": 914,
									"src": "2594:209:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 841,
										"nodeType": "Block",
										"src": "2919:245:6",
										"statements": [
											{
												"assignments": [
													806
												],
												"declarations": [
													{
														"constant": false,
														"id": 806,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "2938:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 841,
														"src": "2930:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 805,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2930:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 813,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 808,
																"name": "lenderPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "2963:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 810,
															"indexExpression": {
																"id": 809,
																"name": "lender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "2975:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2963:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														{
															"id": 811,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "2984:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 807,
														"name": "findIndexInArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "2946:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address[] storage pointer,address) view returns (uint256)"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2946:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2930:59:6"
											},
											{
												"assignments": [
													815
												],
												"declarations": [
													{
														"constant": false,
														"id": 815,
														"mutability": "mutable",
														"name": "lastIndex",
														"nameLocation": "3008:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 841,
														"src": "3000:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 814,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3000:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 822,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 816,
																"name": "lenderPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "3020:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 818,
															"indexExpression": {
																"id": 817,
																"name": "lender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "3032:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3020:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3040:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3020:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 820,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3049:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3020:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3000:50:6"
											},
											{
												"expression": {
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 823,
																"name": "lenderPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "3061:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 826,
															"indexExpression": {
																"id": 824,
																"name": "lender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "3073:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3061:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 827,
														"indexExpression": {
															"id": 825,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "3081:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3061:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 828,
																"name": "lenderPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "3090:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 830,
															"indexExpression": {
																"id": 829,
																"name": "lender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "3102:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3090:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 832,
														"indexExpression": {
															"id": 831,
															"name": "lastIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "3110:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3090:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3061:59:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "3061:59:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 835,
																"name": "lenderPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "3131:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 837,
															"indexExpression": {
																"id": 836,
																"name": "lender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "3143:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3131:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3151:3:6",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "3131:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer)"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3131:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "3131:25:6"
											}
										]
									},
									"id": 842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removePoolFromLenderArray",
									"nameLocation": "2854:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "2889:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "2881:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2881:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "2905:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "2897:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2897:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2880:30:6"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2919:0:6"
									},
									"scope": 914,
									"src": "2845:319:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "3228:175:6",
										"statements": [
											{
												"assignments": [
													848
												],
												"declarations": [
													{
														"constant": false,
														"id": 848,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "3247:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 874,
														"src": "3239:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 847,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3239:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 853,
												"initialValue": {
													"arguments": [
														{
															"id": 850,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "3272:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														{
															"id": 851,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "3279:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 849,
														"name": "findIndexInArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "3255:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address[] storage pointer,address) view returns (uint256)"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3255:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3239:45:6"
											},
											{
												"assignments": [
													855
												],
												"declarations": [
													{
														"constant": false,
														"id": 855,
														"mutability": "mutable",
														"name": "lastIndex",
														"nameLocation": "3303:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 874,
														"src": "3295:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 854,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3295:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 860,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 856,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "3315:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3315:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 858,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3330:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3315:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3295:36:6"
											},
											{
												"expression": {
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 861,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "3342:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 863,
														"indexExpression": {
															"id": 862,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "3348:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3342:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 864,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "3357:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 866,
														"indexExpression": {
															"id": 865,
															"name": "lastIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "3363:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3357:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3342:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "3342:31:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 869,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "3384:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 871,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3390:3:6",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "3384:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer)"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3384:11:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "3384:11:6"
											}
										]
									},
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removePoolFromMainArray",
									"nameLocation": "3181:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "3214:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "3206:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3206:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3205:14:6"
									},
									"returnParameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3228:0:6"
									},
									"scope": 914,
									"src": "3172:231:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "3509:155:6",
										"statements": [
											{
												"body": {
													"id": 904,
													"nodeType": "Block",
													"src": "3563:59:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 896,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 878,
																		"src": "3582:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																			"typeString": "address[] storage pointer"
																		}
																	},
																	"id": 898,
																	"indexExpression": {
																		"id": 897,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 886,
																		"src": "3588:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3582:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 899,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 880,
																	"src": "3594:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3582:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 903,
															"nodeType": "IfStatement",
															"src": "3578:32:6",
															"trueBody": {
																"expression": {
																	"id": 901,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 886,
																	"src": "3609:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 884,
																"id": 902,
																"nodeType": "Return",
																"src": "3602:8:6"
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 889,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "3540:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 890,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "3544:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[] storage pointer"
															}
														},
														"id": 891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3550:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3544:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3540:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 905,
												"initializationExpression": {
													"assignments": [
														886
													],
													"declarations": [
														{
															"constant": false,
															"id": 886,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3533:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 905,
															"src": "3525:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 885,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3525:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 888,
													"initialValue": {
														"hexValue": "30",
														"id": 887,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3537:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3525:13:6"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3558:3:6",
														"subExpression": {
															"id": 893,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "3558:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 895,
													"nodeType": "ExpressionStatement",
													"src": "3558:3:6"
												},
												"nodeType": "ForStatement",
												"src": "3520:102:6"
											},
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 908,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3644:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 907,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3644:7:6",
																	"typeDescriptions": {}
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																}
															],
															"id": 906,
															"name": "type",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967269,
															"src": "3639:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 909,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3639:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_magic_meta_type_t_uint256",
															"typeString": "type(uint256)"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3653:3:6",
													"memberName": "max",
													"nodeType": "MemberAccess",
													"src": "3639:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 884,
												"id": 911,
												"nodeType": "Return",
												"src": "3632:24:6"
											}
										]
									},
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findIndexInArray",
									"nameLocation": "3420:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "3455:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "3437:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 876,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3437:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 877,
													"nodeType": "ArrayTypeName",
													"src": "3437:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3470:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "3462:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3462:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3436:41:6"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "3500:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3500:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3499:9:6"
									},
									"scope": 914,
									"src": "3411:253:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 915,
							"src": "276:3391:6",
							"usedErrors": [
								305,
								308,
								517
							],
							"usedEvents": [
								317,
								326,
								335,
								553,
								557
							]
						}
					],
					"src": "33:3636:6"
				},
				"id": 6
			}
		}
	}
}