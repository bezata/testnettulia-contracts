{
	"id": "5ef31fa260884753e32e8f9199f1f322",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/contracts/contracts/lib/AdvancedAPYManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\n/// @title AdvancedAPYManager\r\n/// @dev Manages APY adjustments based on loan characteristics such as amount and duration.\r\ncontract AdvancedAPYManager {\r\n\r\n\r\n    uint256 public baseAPY = 100; // Default 1% APY in basis points\r\n    uint256[] public riskPremiumThresholds; // Thresholds for loan amounts\r\n    uint256[] public riskPremiumRates; // Corresponding risk premiums\r\n\r\n    uint256 public durationBonusFactor = 25; // Duration bonus in basis points per year\r\n\r\n    /// @notice Initializes the contract with the lending token.\r\n    constructor() {\r\n\r\n    }\r\n\r\n    /// @notice Calculates the current APY based on loan amount and duration.\r\n    /// @param loanAmount The amount of the loan.\r\n    /// @param durationSeconds The duration of the loan in seconds.\r\n    /// @return uint256 Calculated APY in basis points.\r\n    function calculateAPY(uint256 loanAmount, uint256 durationSeconds) view external returns (uint256) {\r\n        uint256 riskPremium = calculateRiskPremium(loanAmount);\r\n        uint256 durationBonus = calculateDurationBonus(durationSeconds);\r\n\r\n        return baseAPY + riskPremium + durationBonus;\r\n    }\r\n\r\n    /// @notice Calculates additional risk premium based on the loan amount using thresholds.\r\n    /// @param loanAmount The amount of the loan.\r\n    /// @return uint256 Additional risk premium in basis points.\r\n    function calculateRiskPremium(uint256 loanAmount) internal view returns (uint256) {\r\n        for (uint256 i = 0; i < riskPremiumThresholds.length; i++) {\r\n            if (loanAmount <= riskPremiumThresholds[i]) {\r\n                return riskPremiumRates[i];\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /// @notice Calculates a bonus based on the loan duration in seconds.\r\n    /// @param durationSeconds The duration of the loan in seconds.\r\n    /// @return uint256 Duration bonus in basis points.\r\n    function calculateDurationBonus(uint256 durationSeconds) internal view returns (uint256) {\r\n        uint256 yearss = durationSeconds / (365 days);\r\n        return yearss * durationBonusFactor;\r\n    }\r\n\r\n    /// @notice Sets the risk premium thresholds and rates.\r\n    /// @param _thresholds Array of loan amount thresholds.\r\n    /// @param _rates Array of risk premiums corresponding to the thresholds.\r\n    function setRiskPremiums(uint256[] calldata _thresholds, uint256[] calldata _rates) public  {\r\n        require(_thresholds.length == _rates.length, \"Mismatched input lengths\");\r\n        riskPremiumThresholds = _thresholds;\r\n        riskPremiumRates = _rates;\r\n    }\r\n\r\n    /// @notice Allows the owner to adjust the base APY rate.\r\n    /// @param _baseAPY The new base APY in basis points.\r\n    function setBaseAPY(uint256 _baseAPY) public  {\r\n        baseAPY = _baseAPY;\r\n    }\r\n\r\n    /// @notice Allows the owner to adjust the duration bonus factor.\r\n    /// @param _factor The new duration bonus factor in basis points per year.\r\n    function setDurationBonusFactor(uint256 _factor) public  {\r\n        durationBonusFactor = _factor;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/contracts/lib/AdvancedAPYManager.sol": {
				"AdvancedAPYManager": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "baseAPY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "loanAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "durationSeconds",
									"type": "uint256"
								}
							],
							"name": "calculateAPY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "durationBonusFactor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "riskPremiumRates",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "riskPremiumThresholds",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_baseAPY",
									"type": "uint256"
								}
							],
							"name": "setBaseAPY",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_factor",
									"type": "uint256"
								}
							],
							"name": "setDurationBonusFactor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "_thresholds",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_rates",
									"type": "uint256[]"
								}
							],
							"name": "setRiskPremiums",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Manages APY adjustments based on loan characteristics such as amount and duration.",
						"kind": "dev",
						"methods": {
							"calculateAPY(uint256,uint256)": {
								"params": {
									"durationSeconds": "The duration of the loan in seconds.",
									"loanAmount": "The amount of the loan."
								},
								"returns": {
									"_0": "uint256 Calculated APY in basis points."
								}
							},
							"setBaseAPY(uint256)": {
								"params": {
									"_baseAPY": "The new base APY in basis points."
								}
							},
							"setDurationBonusFactor(uint256)": {
								"params": {
									"_factor": "The new duration bonus factor in basis points per year."
								}
							},
							"setRiskPremiums(uint256[],uint256[])": {
								"params": {
									"_rates": "Array of risk premiums corresponding to the thresholds.",
									"_thresholds": "Array of loan amount thresholds."
								}
							}
						},
						"title": "AdvancedAPYManager",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":299:3195  contract AdvancedAPYManager {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":363:366  100 */\n  0x64\n    /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":338:366  uint256 public baseAPY = 100 */\n  0x00\n  sstore\n    /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":593:595  25 */\n  0x19\n    /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":556:595  uint256 public durationBonusFactor = 25 */\n  0x03\n  sstore\n    /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":713:737  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":299:3195  contract AdvancedAPYManager {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":299:3195  contract AdvancedAPYManager {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb873995a\n      gt\n      tag_11\n      jumpi\n      dup1\n      0xb873995a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xc134f4a1\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xc90b7192\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe2c9313f\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x057c0412\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x214405a9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4a7dfc8e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5ee6efd0\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":407:445  uint256[] public riskPremiumThresholds */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":338:366  uint256 public baseAPY = 100 */\n    tag_4:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2450:2715  function setRiskPremiums(uint256[] calldata _thresholds, uint256[] calldata _rates) public  {... */\n    tag_5:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      stop\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2845:2928  function setBaseAPY(uint256 _baseAPY) public  {... */\n    tag_6:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_26:\n      tag_27\n      jump\t// in\n    tag_25:\n      stop\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1001:1304  function calculateAPY(uint256 loanAmount, uint256 durationSeconds) view external returns (uint256) {... */\n    tag_7:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":556:595  uint256 public durationBonusFactor = 25 */\n    tag_8:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":3087:3192  function setDurationBonusFactor(uint256 _factor) public  {... */\n    tag_9:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n    tag_36:\n      stop\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":483:516  uint256[] public riskPremiumRates */\n    tag_10:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":407:445  uint256[] public riskPremiumThresholds */\n    tag_15:\n      0x01\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":338:366  uint256 public baseAPY = 100 */\n    tag_19:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2450:2715  function setRiskPremiums(uint256[] calldata _thresholds, uint256[] calldata _rates) public  {... */\n    tag_24:\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2583:2589  _rates */\n      dup2\n      dup2\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2583:2596  _rates.length */\n      swap1\n      pop\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2561:2572  _thresholds */\n      dup5\n      dup5\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2561:2579  _thresholds.length */\n      swap1\n      pop\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2561:2596  _thresholds.length == _rates.length */\n      eq\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2553:2625  require(_thresholds.length == _rates.length, \"Mismatched input lengths\") */\n      tag_46\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_46:\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2660:2671  _thresholds */\n      dup4\n      dup4\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2636:2657  riskPremiumThresholds */\n      0x01\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2636:2671  riskPremiumThresholds = _thresholds */\n      swap2\n      swap1\n      tag_49\n      swap3\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      pop\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2701:2707  _rates */\n      dup2\n      dup2\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2682:2698  riskPremiumRates */\n      0x02\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2682:2707  riskPremiumRates = _rates */\n      swap2\n      swap1\n      tag_51\n      swap3\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_51:\n      pop\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2450:2715  function setRiskPremiums(uint256[] calldata _thresholds, uint256[] calldata _rates) public  {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2845:2928  function setBaseAPY(uint256 _baseAPY) public  {... */\n    tag_27:\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2912:2920  _baseAPY */\n      dup1\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2902:2909  baseAPY */\n      0x00\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2902:2920  baseAPY = _baseAPY */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2845:2928  function setBaseAPY(uint256 _baseAPY) public  {... */\n      pop\n      jump\t// out\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1001:1304  function calculateAPY(uint256 loanAmount, uint256 durationSeconds) view external returns (uint256) {... */\n    tag_31:\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1091:1098  uint256 */\n      0x00\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1111:1130  uint256 riskPremium */\n      dup1\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1133:1165  calculateRiskPremium(loanAmount) */\n      tag_54\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1154:1164  loanAmount */\n      dup5\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1133:1153  calculateRiskPremium */\n      tag_55\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1133:1165  calculateRiskPremium(loanAmount) */\n      jump\t// in\n    tag_54:\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1111:1165  uint256 riskPremium = calculateRiskPremium(loanAmount) */\n      swap1\n      pop\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1176:1197  uint256 durationBonus */\n      0x00\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1200:1239  calculateDurationBonus(durationSeconds) */\n      tag_56\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1223:1238  durationSeconds */\n      dup5\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1200:1222  calculateDurationBonus */\n      tag_57\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1200:1239  calculateDurationBonus(durationSeconds) */\n      jump\t// in\n    tag_56:\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1176:1239  uint256 durationBonus = calculateDurationBonus(durationSeconds) */\n      swap1\n      pop\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1283:1296  durationBonus */\n      dup1\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1269:1280  riskPremium */\n      dup3\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1259:1266  baseAPY */\n      sload(0x00)\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1259:1280  baseAPY + riskPremium */\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1259:1296  baseAPY + riskPremium + durationBonus */\n      tag_60\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_60:\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1252:1296  return baseAPY + riskPremium + durationBonus */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1001:1304  function calculateAPY(uint256 loanAmount, uint256 durationSeconds) view external returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":556:595  uint256 public durationBonusFactor = 25 */\n    tag_34:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":3087:3192  function setDurationBonusFactor(uint256 _factor) public  {... */\n    tag_38:\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":3177:3184  _factor */\n      dup1\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":3155:3174  durationBonusFactor */\n      0x03\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":3155:3184  durationBonusFactor = _factor */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":3087:3192  function setDurationBonusFactor(uint256 _factor) public  {... */\n      pop\n      jump\t// out\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":483:516  uint256[] public riskPremiumRates */\n    tag_41:\n      0x02\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1524:1833  function calculateRiskPremium(uint256 loanAmount) internal view returns (uint256) {... */\n    tag_55:\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1597:1604  uint256 */\n      0x00\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1622:1631  uint256 i */\n      dup1\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1634:1635  0 */\n      0x00\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1622:1635  uint256 i = 0 */\n      swap1\n      pop\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1617:1807  for (uint256 i = 0; i < riskPremiumThresholds.length; i++) {... */\n    tag_65:\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1641:1662  riskPremiumThresholds */\n      0x01\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1641:1669  riskPremiumThresholds.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1637:1638  i */\n      dup2\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1637:1669  i < riskPremiumThresholds.length */\n      lt\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1617:1807  for (uint256 i = 0; i < riskPremiumThresholds.length; i++) {... */\n      iszero\n      tag_66\n      jumpi\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1709:1730  riskPremiumThresholds */\n      0x01\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1731:1732  i */\n      dup2\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1709:1733  riskPremiumThresholds[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_68\n      jumpi\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n    tag_68:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1695:1705  loanAmount */\n      dup4\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1695:1733  loanAmount <= riskPremiumThresholds[i] */\n      gt\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1691:1796  if (loanAmount <= riskPremiumThresholds[i]) {... */\n      tag_72\n      jumpi\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1761:1777  riskPremiumRates */\n      0x02\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1778:1779  i */\n      dup2\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1761:1780  riskPremiumRates[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_73\n      jumpi\n      tag_74\n      tag_70\n      jump\t// in\n    tag_74:\n    tag_73:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1754:1780  return riskPremiumRates[i] */\n      swap2\n      pop\n      pop\n      jump(tag_64)\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1691:1796  if (loanAmount <= riskPremiumThresholds[i]) {... */\n    tag_72:\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1671:1674  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1617:1807  for (uint256 i = 0; i < riskPremiumThresholds.length; i++) {... */\n      jump(tag_65)\n    tag_66:\n      pop\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1824:1825  0 */\n      0x00\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1817:1825  return 0 */\n      swap1\n      pop\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":1524:1833  function calculateRiskPremium(uint256 loanAmount) internal view returns (uint256) {... */\n    tag_64:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2042:2241  function calculateDurationBonus(uint256 durationSeconds) internal view returns (uint256) {... */\n    tag_57:\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2122:2129  uint256 */\n      0x00\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2142:2156  uint256 yearss */\n      dup1\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2178:2186  365 days */\n      0x01e13380\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2159:2174  durationSeconds */\n      dup4\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2159:2187  durationSeconds / (365 days) */\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2142:2187  uint256 yearss = durationSeconds / (365 days) */\n      swap1\n      pop\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2214:2233  durationBonusFactor */\n      sload(0x03)\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2205:2211  yearss */\n      dup2\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2205:2233  yearss * durationBonusFactor */\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2198:2233  return yearss * durationBonusFactor */\n      swap2\n      pop\n      pop\n        /* \"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":2042:2241  function calculateDurationBonus(uint256 durationSeconds) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_50:\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_81\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_82:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_83\n      jumpi\n      dup3\n      calldataload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_82)\n    tag_83:\n    tag_81:\n      pop\n      swap1\n      pop\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      pop\n      swap1\n      jump\t// out\n    tag_85:\n    tag_86:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_86)\n    tag_87:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_89:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_90:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_91:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_92:\n        /* \"#utility.yul\":490:514   */\n      tag_110\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_91\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_111\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_111:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_93:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_113\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_92\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_14:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_115\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_116\n      tag_89\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":766:885   */\n    tag_115:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_117\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_93\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_94:\n        /* \"#utility.yul\":1112:1136   */\n      tag_119\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_91\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_17:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_121\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_94\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1494   */\n    tag_95:\n        /* \"#utility.yul\":1486:1487   */\n      0x00\n        /* \"#utility.yul\":1483:1484   */\n      dup1\n        /* \"#utility.yul\":1476:1488   */\n      revert\n        /* \"#utility.yul\":1500:1617   */\n    tag_96:\n        /* \"#utility.yul\":1609:1610   */\n      0x00\n        /* \"#utility.yul\":1606:1607   */\n      dup1\n        /* \"#utility.yul\":1599:1611   */\n      revert\n        /* \"#utility.yul\":1623:1740   */\n    tag_97:\n        /* \"#utility.yul\":1732:1733   */\n      0x00\n        /* \"#utility.yul\":1729:1730   */\n      dup1\n        /* \"#utility.yul\":1722:1734   */\n      revert\n        /* \"#utility.yul\":1763:2331   */\n    tag_98:\n        /* \"#utility.yul\":1836:1844   */\n      0x00\n        /* \"#utility.yul\":1846:1852   */\n      dup1\n        /* \"#utility.yul\":1896:1899   */\n      dup4\n        /* \"#utility.yul\":1889:1893   */\n      0x1f\n        /* \"#utility.yul\":1881:1887   */\n      dup5\n        /* \"#utility.yul\":1877:1894   */\n      add\n        /* \"#utility.yul\":1873:1900   */\n      slt\n        /* \"#utility.yul\":1863:1985   */\n      tag_126\n      jumpi\n        /* \"#utility.yul\":1904:1983   */\n      tag_127\n      tag_95\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":1863:1985   */\n    tag_126:\n        /* \"#utility.yul\":2017:2023   */\n      dup3\n        /* \"#utility.yul\":2004:2024   */\n      calldataload\n        /* \"#utility.yul\":1994:2024   */\n      swap1\n      pop\n        /* \"#utility.yul\":2047:2065   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2039:2045   */\n      dup2\n        /* \"#utility.yul\":2036:2066   */\n      gt\n        /* \"#utility.yul\":2033:2150   */\n      iszero\n      tag_128\n      jumpi\n        /* \"#utility.yul\":2069:2148   */\n      tag_129\n      tag_96\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":2033:2150   */\n    tag_128:\n        /* \"#utility.yul\":2183:2187   */\n      0x20\n        /* \"#utility.yul\":2175:2181   */\n      dup4\n        /* \"#utility.yul\":2171:2188   */\n      add\n        /* \"#utility.yul\":2159:2188   */\n      swap2\n      pop\n        /* \"#utility.yul\":2237:2240   */\n      dup4\n        /* \"#utility.yul\":2229:2233   */\n      0x20\n        /* \"#utility.yul\":2221:2227   */\n      dup3\n        /* \"#utility.yul\":2217:2234   */\n      mul\n        /* \"#utility.yul\":2207:2215   */\n      dup4\n        /* \"#utility.yul\":2203:2235   */\n      add\n        /* \"#utility.yul\":2200:2241   */\n      gt\n        /* \"#utility.yul\":2197:2325   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":2244:2323   */\n      tag_131\n      tag_97\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":2197:2325   */\n    tag_130:\n        /* \"#utility.yul\":1763:2331   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2337:3271   */\n    tag_23:\n        /* \"#utility.yul\":2459:2465   */\n      0x00\n        /* \"#utility.yul\":2467:2473   */\n      dup1\n        /* \"#utility.yul\":2475:2481   */\n      0x00\n        /* \"#utility.yul\":2483:2489   */\n      dup1\n        /* \"#utility.yul\":2532:2534   */\n      0x40\n        /* \"#utility.yul\":2520:2529   */\n      dup6\n        /* \"#utility.yul\":2511:2518   */\n      dup8\n        /* \"#utility.yul\":2507:2530   */\n      sub\n        /* \"#utility.yul\":2503:2535   */\n      slt\n        /* \"#utility.yul\":2500:2619   */\n      iszero\n      tag_133\n      jumpi\n        /* \"#utility.yul\":2538:2617   */\n      tag_134\n      tag_89\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":2500:2619   */\n    tag_133:\n        /* \"#utility.yul\":2686:2687   */\n      0x00\n        /* \"#utility.yul\":2675:2684   */\n      dup6\n        /* \"#utility.yul\":2671:2688   */\n      add\n        /* \"#utility.yul\":2658:2689   */\n      calldataload\n        /* \"#utility.yul\":2716:2734   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2708:2714   */\n      dup2\n        /* \"#utility.yul\":2705:2735   */\n      gt\n        /* \"#utility.yul\":2702:2819   */\n      iszero\n      tag_135\n      jumpi\n        /* \"#utility.yul\":2738:2817   */\n      tag_136\n      tag_90\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":2702:2819   */\n    tag_135:\n        /* \"#utility.yul\":2851:2931   */\n      tag_137\n        /* \"#utility.yul\":2923:2930   */\n      dup8\n        /* \"#utility.yul\":2914:2920   */\n      dup3\n        /* \"#utility.yul\":2903:2912   */\n      dup9\n        /* \"#utility.yul\":2899:2921   */\n      add\n        /* \"#utility.yul\":2851:2931   */\n      tag_98\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":2833:2931   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":2629:2941   */\n      pop\n        /* \"#utility.yul\":3008:3010   */\n      0x20\n        /* \"#utility.yul\":2997:3006   */\n      dup6\n        /* \"#utility.yul\":2993:3011   */\n      add\n        /* \"#utility.yul\":2980:3012   */\n      calldataload\n        /* \"#utility.yul\":3039:3057   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3031:3037   */\n      dup2\n        /* \"#utility.yul\":3028:3058   */\n      gt\n        /* \"#utility.yul\":3025:3142   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":3061:3140   */\n      tag_139\n      tag_90\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":3025:3142   */\n    tag_138:\n        /* \"#utility.yul\":3174:3254   */\n      tag_140\n        /* \"#utility.yul\":3246:3253   */\n      dup8\n        /* \"#utility.yul\":3237:3243   */\n      dup3\n        /* \"#utility.yul\":3226:3235   */\n      dup9\n        /* \"#utility.yul\":3222:3244   */\n      add\n        /* \"#utility.yul\":3174:3254   */\n      tag_98\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":3156:3254   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":2951:3264   */\n      pop\n        /* \"#utility.yul\":2337:3271   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3277:3751   */\n    tag_30:\n        /* \"#utility.yul\":3345:3351   */\n      0x00\n        /* \"#utility.yul\":3353:3359   */\n      dup1\n        /* \"#utility.yul\":3402:3404   */\n      0x40\n        /* \"#utility.yul\":3390:3399   */\n      dup4\n        /* \"#utility.yul\":3381:3388   */\n      dup6\n        /* \"#utility.yul\":3377:3400   */\n      sub\n        /* \"#utility.yul\":3373:3405   */\n      slt\n        /* \"#utility.yul\":3370:3489   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":3408:3487   */\n      tag_143\n      tag_89\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":3370:3489   */\n    tag_142:\n        /* \"#utility.yul\":3528:3529   */\n      0x00\n        /* \"#utility.yul\":3553:3606   */\n      tag_144\n        /* \"#utility.yul\":3598:3605   */\n      dup6\n        /* \"#utility.yul\":3589:3595   */\n      dup3\n        /* \"#utility.yul\":3578:3587   */\n      dup7\n        /* \"#utility.yul\":3574:3596   */\n      add\n        /* \"#utility.yul\":3553:3606   */\n      tag_93\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":3543:3606   */\n      swap3\n      pop\n        /* \"#utility.yul\":3499:3616   */\n      pop\n        /* \"#utility.yul\":3655:3657   */\n      0x20\n        /* \"#utility.yul\":3681:3734   */\n      tag_145\n        /* \"#utility.yul\":3726:3733   */\n      dup6\n        /* \"#utility.yul\":3717:3723   */\n      dup3\n        /* \"#utility.yul\":3706:3715   */\n      dup7\n        /* \"#utility.yul\":3702:3724   */\n      add\n        /* \"#utility.yul\":3681:3734   */\n      tag_93\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":3671:3734   */\n      swap2\n      pop\n        /* \"#utility.yul\":3626:3744   */\n      pop\n        /* \"#utility.yul\":3277:3751   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3757:3926   */\n    tag_99:\n        /* \"#utility.yul\":3841:3852   */\n      0x00\n        /* \"#utility.yul\":3875:3881   */\n      dup3\n        /* \"#utility.yul\":3870:3873   */\n      dup3\n        /* \"#utility.yul\":3863:3882   */\n      mstore\n        /* \"#utility.yul\":3915:3919   */\n      0x20\n        /* \"#utility.yul\":3910:3913   */\n      dup3\n        /* \"#utility.yul\":3906:3920   */\n      add\n        /* \"#utility.yul\":3891:3920   */\n      swap1\n      pop\n        /* \"#utility.yul\":3757:3926   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3932:4106   */\n    tag_100:\n        /* \"#utility.yul\":4072:4098   */\n      0x4d69736d61746368656420696e707574206c656e677468730000000000000000\n        /* \"#utility.yul\":4068:4069   */\n      0x00\n        /* \"#utility.yul\":4060:4066   */\n      dup3\n        /* \"#utility.yul\":4056:4070   */\n      add\n        /* \"#utility.yul\":4049:4099   */\n      mstore\n        /* \"#utility.yul\":3932:4106   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4112:4478   */\n    tag_101:\n        /* \"#utility.yul\":4254:4257   */\n      0x00\n        /* \"#utility.yul\":4275:4342   */\n      tag_149\n        /* \"#utility.yul\":4339:4341   */\n      0x18\n        /* \"#utility.yul\":4334:4337   */\n      dup4\n        /* \"#utility.yul\":4275:4342   */\n      tag_99\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":4268:4342   */\n      swap2\n      pop\n        /* \"#utility.yul\":4351:4444   */\n      tag_150\n        /* \"#utility.yul\":4440:4443   */\n      dup3\n        /* \"#utility.yul\":4351:4444   */\n      tag_100\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":4469:4471   */\n      0x20\n        /* \"#utility.yul\":4464:4467   */\n      dup3\n        /* \"#utility.yul\":4460:4472   */\n      add\n        /* \"#utility.yul\":4453:4472   */\n      swap1\n      pop\n        /* \"#utility.yul\":4112:4478   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4484:4903   */\n    tag_48:\n        /* \"#utility.yul\":4650:4654   */\n      0x00\n        /* \"#utility.yul\":4688:4690   */\n      0x20\n        /* \"#utility.yul\":4677:4686   */\n      dup3\n        /* \"#utility.yul\":4673:4691   */\n      add\n        /* \"#utility.yul\":4665:4691   */\n      swap1\n      pop\n        /* \"#utility.yul\":4737:4746   */\n      dup2\n        /* \"#utility.yul\":4731:4735   */\n      dup2\n        /* \"#utility.yul\":4727:4747   */\n      sub\n        /* \"#utility.yul\":4723:4724   */\n      0x00\n        /* \"#utility.yul\":4712:4721   */\n      dup4\n        /* \"#utility.yul\":4708:4725   */\n      add\n        /* \"#utility.yul\":4701:4748   */\n      mstore\n        /* \"#utility.yul\":4765:4896   */\n      tag_152\n        /* \"#utility.yul\":4891:4895   */\n      dup2\n        /* \"#utility.yul\":4765:4896   */\n      tag_101\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":4757:4896   */\n      swap1\n      pop\n        /* \"#utility.yul\":4484:4903   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4909:5089   */\n    tag_102:\n        /* \"#utility.yul\":4957:5034   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4954:4955   */\n      0x00\n        /* \"#utility.yul\":4947:5035   */\n      mstore\n        /* \"#utility.yul\":5054:5058   */\n      0x11\n        /* \"#utility.yul\":5051:5052   */\n      0x04\n        /* \"#utility.yul\":5044:5059   */\n      mstore\n        /* \"#utility.yul\":5078:5082   */\n      0x24\n        /* \"#utility.yul\":5075:5076   */\n      0x00\n        /* \"#utility.yul\":5068:5083   */\n      revert\n        /* \"#utility.yul\":5095:5286   */\n    tag_59:\n        /* \"#utility.yul\":5135:5138   */\n      0x00\n        /* \"#utility.yul\":5154:5174   */\n      tag_155\n        /* \"#utility.yul\":5172:5173   */\n      dup3\n        /* \"#utility.yul\":5154:5174   */\n      tag_91\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":5149:5174   */\n      swap2\n      pop\n        /* \"#utility.yul\":5188:5208   */\n      tag_156\n        /* \"#utility.yul\":5206:5207   */\n      dup4\n        /* \"#utility.yul\":5188:5208   */\n      tag_91\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":5183:5208   */\n      swap3\n      pop\n        /* \"#utility.yul\":5231:5232   */\n      dup3\n        /* \"#utility.yul\":5228:5229   */\n      dup3\n        /* \"#utility.yul\":5224:5233   */\n      add\n        /* \"#utility.yul\":5217:5233   */\n      swap1\n      pop\n        /* \"#utility.yul\":5252:5255   */\n      dup1\n        /* \"#utility.yul\":5249:5250   */\n      dup3\n        /* \"#utility.yul\":5246:5256   */\n      gt\n        /* \"#utility.yul\":5243:5279   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":5259:5277   */\n      tag_158\n      tag_102\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":5243:5279   */\n    tag_157:\n        /* \"#utility.yul\":5095:5286   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5292:5472   */\n    tag_70:\n        /* \"#utility.yul\":5340:5417   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5337:5338   */\n      0x00\n        /* \"#utility.yul\":5330:5418   */\n      mstore\n        /* \"#utility.yul\":5437:5441   */\n      0x32\n        /* \"#utility.yul\":5434:5435   */\n      0x04\n        /* \"#utility.yul\":5427:5442   */\n      mstore\n        /* \"#utility.yul\":5461:5465   */\n      0x24\n        /* \"#utility.yul\":5458:5459   */\n      0x00\n        /* \"#utility.yul\":5451:5466   */\n      revert\n        /* \"#utility.yul\":5478:5658   */\n    tag_103:\n        /* \"#utility.yul\":5526:5603   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5523:5524   */\n      0x00\n        /* \"#utility.yul\":5516:5604   */\n      mstore\n        /* \"#utility.yul\":5623:5627   */\n      0x12\n        /* \"#utility.yul\":5620:5621   */\n      0x04\n        /* \"#utility.yul\":5613:5628   */\n      mstore\n        /* \"#utility.yul\":5647:5651   */\n      0x24\n        /* \"#utility.yul\":5644:5645   */\n      0x00\n        /* \"#utility.yul\":5637:5652   */\n      revert\n        /* \"#utility.yul\":5664:5849   */\n    tag_78:\n        /* \"#utility.yul\":5704:5705   */\n      0x00\n        /* \"#utility.yul\":5721:5741   */\n      tag_162\n        /* \"#utility.yul\":5739:5740   */\n      dup3\n        /* \"#utility.yul\":5721:5741   */\n      tag_91\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":5716:5741   */\n      swap2\n      pop\n        /* \"#utility.yul\":5755:5775   */\n      tag_163\n        /* \"#utility.yul\":5773:5774   */\n      dup4\n        /* \"#utility.yul\":5755:5775   */\n      tag_91\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":5750:5775   */\n      swap3\n      pop\n        /* \"#utility.yul\":5794:5795   */\n      dup3\n        /* \"#utility.yul\":5784:5819   */\n      tag_164\n      jumpi\n        /* \"#utility.yul\":5799:5817   */\n      tag_165\n      tag_103\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":5784:5819   */\n    tag_164:\n        /* \"#utility.yul\":5841:5842   */\n      dup3\n        /* \"#utility.yul\":5838:5839   */\n      dup3\n        /* \"#utility.yul\":5834:5843   */\n      div\n        /* \"#utility.yul\":5829:5843   */\n      swap1\n      pop\n        /* \"#utility.yul\":5664:5849   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5855:6265   */\n    tag_80:\n        /* \"#utility.yul\":5895:5902   */\n      0x00\n        /* \"#utility.yul\":5918:5938   */\n      tag_167\n        /* \"#utility.yul\":5936:5937   */\n      dup3\n        /* \"#utility.yul\":5918:5938   */\n      tag_91\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":5913:5938   */\n      swap2\n      pop\n        /* \"#utility.yul\":5952:5972   */\n      tag_168\n        /* \"#utility.yul\":5970:5971   */\n      dup4\n        /* \"#utility.yul\":5952:5972   */\n      tag_91\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":5947:5972   */\n      swap3\n      pop\n        /* \"#utility.yul\":6007:6008   */\n      dup3\n        /* \"#utility.yul\":6004:6005   */\n      dup3\n        /* \"#utility.yul\":6000:6009   */\n      mul\n        /* \"#utility.yul\":6029:6059   */\n      tag_169\n        /* \"#utility.yul\":6047:6058   */\n      dup2\n        /* \"#utility.yul\":6029:6059   */\n      tag_91\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":6018:6059   */\n      swap2\n      pop\n        /* \"#utility.yul\":6208:6209   */\n      dup3\n        /* \"#utility.yul\":6199:6206   */\n      dup3\n        /* \"#utility.yul\":6195:6210   */\n      div\n        /* \"#utility.yul\":6192:6193   */\n      dup5\n        /* \"#utility.yul\":6189:6211   */\n      eq\n        /* \"#utility.yul\":6169:6170   */\n      dup4\n        /* \"#utility.yul\":6162:6171   */\n      iszero\n        /* \"#utility.yul\":6142:6225   */\n      or\n        /* \"#utility.yul\":6119:6258   */\n      tag_170\n      jumpi\n        /* \"#utility.yul\":6238:6256   */\n      tag_171\n      tag_102\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":6119:6258   */\n    tag_170:\n        /* \"#utility.yul\":5903:6265   */\n      pop\n        /* \"#utility.yul\":5855:6265   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207ce6308cb12efa82e846261e9e1f33fe3a0d2d7b6a483df3da407bf431f65c4d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_277": {
									"entryPoint": null,
									"id": 277,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260645f5560196003553480156017575f80fd5b5061073b806100255f395ff3fe608060405234801561000f575f80fd5b5060043610610086575f3560e01c8063b873995a11610059578063b873995a14610110578063c134f4a114610140578063c90b71921461015e578063e2c9313f1461017a57610086565b8063057c04121461008a578063214405a9146100ba5780634a7dfc8e146100d85780635ee6efd0146100f4575b5f80fd5b6100a4600480360381019061009f91906103f2565b6101aa565b6040516100b1919061042c565b60405180910390f35b6100c26101ca565b6040516100cf919061042c565b60405180910390f35b6100f260048036038101906100ed91906104a6565b6101cf565b005b61010e600480360381019061010991906103f2565b610241565b005b61012a60048036038101906101259190610524565b61024a565b604051610137919061042c565b60405180910390f35b610148610285565b604051610155919061042c565b60405180910390f35b610178600480360381019061017391906103f2565b61028b565b005b610194600480360381019061018f91906103f2565b610295565b6040516101a1919061042c565b60405180910390f35b600181815481106101b9575f80fd5b905f5260205f20015f915090505481565b5f5481565b818190508484905014610217576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020e906105bc565b60405180910390fd5b838360019190610228929190610351565b5081816002919061023a929190610351565b5050505050565b805f8190555050565b5f80610255846102b5565b90505f61026184610327565b905080825f546102719190610607565b61027b9190610607565b9250505092915050565b60035481565b8060038190555050565b600281815481106102a4575f80fd5b905f5260205f20015f915090505481565b5f805f90505b60018054905081101561031d57600181815481106102dc576102db61063a565b5b905f5260205f200154831161031057600281815481106102ff576102fe61063a565b5b905f5260205f200154915050610322565b80806001019150506102bb565b505f90505b919050565b5f806301e13380836103399190610694565b90506003548161034991906106c4565b915050919050565b828054828255905f5260205f2090810192821561038b579160200282015b8281111561038a57823582559160200191906001019061036f565b5b509050610398919061039c565b5090565b5b808211156103b3575f815f90555060010161039d565b5090565b5f80fd5b5f80fd5b5f819050919050565b6103d1816103bf565b81146103db575f80fd5b50565b5f813590506103ec816103c8565b92915050565b5f60208284031215610407576104066103b7565b5b5f610414848285016103de565b91505092915050565b610426816103bf565b82525050565b5f60208201905061043f5f83018461041d565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261046657610465610445565b5b8235905067ffffffffffffffff81111561048357610482610449565b5b60208301915083602082028301111561049f5761049e61044d565b5b9250929050565b5f805f80604085870312156104be576104bd6103b7565b5b5f85013567ffffffffffffffff8111156104db576104da6103bb565b5b6104e787828801610451565b9450945050602085013567ffffffffffffffff81111561050a576105096103bb565b5b61051687828801610451565b925092505092959194509250565b5f806040838503121561053a576105396103b7565b5b5f610547858286016103de565b9250506020610558858286016103de565b9150509250929050565b5f82825260208201905092915050565b7f4d69736d61746368656420696e707574206c656e6774687300000000000000005f82015250565b5f6105a6601883610562565b91506105b182610572565b602082019050919050565b5f6020820190508181035f8301526105d38161059a565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610611826103bf565b915061061c836103bf565b9250828201905080821115610634576106336105da565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61069e826103bf565b91506106a9836103bf565b9250826106b9576106b8610667565b5b828204905092915050565b5f6106ce826103bf565b91506106d9836103bf565b92508282026106e7816103bf565b915082820484148315176106fe576106fd6105da565b5b509291505056fea26469706673582212207ce6308cb12efa82e846261e9e1f33fe3a0d2d7b6a483df3da407bf431f65c4d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH0 SSTORE PUSH1 0x19 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH1 0x17 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x73B DUP1 PUSH2 0x25 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB873995A GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xB873995A EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0xC134F4A1 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xC90B7192 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xE2C9313F EQ PUSH2 0x17A JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x57C0412 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x214405A9 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0x4A7DFC8E EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x5EE6EFD0 EQ PUSH2 0xF4 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9F SWAP2 SWAP1 PUSH2 0x3F2 JUMP JUMPDEST PUSH2 0x1AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB1 SWAP2 SWAP1 PUSH2 0x42C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC2 PUSH2 0x1CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCF SWAP2 SWAP1 PUSH2 0x42C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xED SWAP2 SWAP1 PUSH2 0x4A6 JUMP JUMPDEST PUSH2 0x1CF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x3F2 JUMP JUMPDEST PUSH2 0x241 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x524 JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x42C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH2 0x285 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x42C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x3F2 JUMP JUMPDEST PUSH2 0x28B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x3F2 JUMP JUMPDEST PUSH2 0x295 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x42C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0x217 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E SWAP1 PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x1 SWAP2 SWAP1 PUSH2 0x228 SWAP3 SWAP2 SWAP1 PUSH2 0x351 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x2 SWAP2 SWAP1 PUSH2 0x23A SWAP3 SWAP2 SWAP1 PUSH2 0x351 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x255 DUP5 PUSH2 0x2B5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x261 DUP5 PUSH2 0x327 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH0 SLOAD PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x607 JUMP JUMPDEST PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x607 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x31D JUMPI PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2DC JUMPI PUSH2 0x2DB PUSH2 0x63A JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD DUP4 GT PUSH2 0x310 JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2FF JUMPI PUSH2 0x2FE PUSH2 0x63A JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP2 POP POP PUSH2 0x322 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x2BB JUMP JUMPDEST POP PUSH0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH4 0x1E13380 DUP4 PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x694 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 SLOAD DUP2 PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x38B JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x38A JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x36F JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x39C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3B3 JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x39D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D1 DUP2 PUSH2 0x3BF JUMP JUMPDEST DUP2 EQ PUSH2 0x3DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3EC DUP2 PUSH2 0x3C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x407 JUMPI PUSH2 0x406 PUSH2 0x3B7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x414 DUP5 DUP3 DUP6 ADD PUSH2 0x3DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x426 DUP2 PUSH2 0x3BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x43F PUSH0 DUP4 ADD DUP5 PUSH2 0x41D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x466 JUMPI PUSH2 0x465 PUSH2 0x445 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x483 JUMPI PUSH2 0x482 PUSH2 0x449 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x49F JUMPI PUSH2 0x49E PUSH2 0x44D JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4BE JUMPI PUSH2 0x4BD PUSH2 0x3B7 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4DB JUMPI PUSH2 0x4DA PUSH2 0x3BB JUMP JUMPDEST JUMPDEST PUSH2 0x4E7 DUP8 DUP3 DUP9 ADD PUSH2 0x451 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x50A JUMPI PUSH2 0x509 PUSH2 0x3BB JUMP JUMPDEST JUMPDEST PUSH2 0x516 DUP8 DUP3 DUP9 ADD PUSH2 0x451 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x53A JUMPI PUSH2 0x539 PUSH2 0x3B7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x547 DUP6 DUP3 DUP7 ADD PUSH2 0x3DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x558 DUP6 DUP3 DUP7 ADD PUSH2 0x3DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D69736D61746368656420696E707574206C656E677468730000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5A6 PUSH1 0x18 DUP4 PUSH2 0x562 JUMP JUMPDEST SWAP2 POP PUSH2 0x5B1 DUP3 PUSH2 0x572 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5D3 DUP2 PUSH2 0x59A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x611 DUP3 PUSH2 0x3BF JUMP JUMPDEST SWAP2 POP PUSH2 0x61C DUP4 PUSH2 0x3BF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x634 JUMPI PUSH2 0x633 PUSH2 0x5DA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x69E DUP3 PUSH2 0x3BF JUMP JUMPDEST SWAP2 POP PUSH2 0x6A9 DUP4 PUSH2 0x3BF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x6B9 JUMPI PUSH2 0x6B8 PUSH2 0x667 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6CE DUP3 PUSH2 0x3BF JUMP JUMPDEST SWAP2 POP PUSH2 0x6D9 DUP4 PUSH2 0x3BF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x6E7 DUP2 PUSH2 0x3BF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x6FE JUMPI PUSH2 0x6FD PUSH2 0x5DA JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0xE6308CB12EFA82E846261E9E1F33FE3A0D2D7B6A483DF3DA407BF431F6 TLOAD 0x4D PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "299:2896:3:-:0;;;363:3;338:28;;593:2;556:39;;713:24;;;;;;;;;;299:2896;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@baseAPY_263": {
									"entryPoint": 458,
									"id": 263,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calculateAPY_306": {
									"entryPoint": 586,
									"id": 306,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@calculateDurationBonus_361": {
									"entryPoint": 807,
									"id": 361,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateRiskPremium_341": {
									"entryPoint": 693,
									"id": 341,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@durationBonusFactor_272": {
									"entryPoint": 645,
									"id": 272,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@riskPremiumRates_269": {
									"entryPoint": 661,
									"id": 269,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@riskPremiumThresholds_266": {
									"entryPoint": 426,
									"id": 266,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBaseAPY_400": {
									"entryPoint": 577,
									"id": 400,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setDurationBonusFactor_411": {
									"entryPoint": 651,
									"id": 411,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRiskPremiums_389": {
									"entryPoint": 463,
									"id": 389,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 1105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 1190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 1316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_stringliteral_757ac971b3c89ff6729d1b818f9eb2011ff93a983cd352fb4a93d3214c1015fe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_757ac971b3c89ff6729d1b818f9eb2011ff93a983cd352fb4a93d3214c1015fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1498,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1639,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1594,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 1097,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1093,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1101,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 955,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 951,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_757ac971b3c89ff6729d1b818f9eb2011ff93a983cd352fb4a93d3214c1015fe": {
									"entryPoint": 1394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6268:4",
										"nodeType": "YulBlock",
										"src": "0:6268:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:32:4",
													"nodeType": "YulBlock",
													"src": "379:32:4",
													"statements": [
														{
															"nativeSrc": "389:16:4",
															"nodeType": "YulAssignment",
															"src": "389:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:4",
																"nodeType": "YulIdentifier",
																"src": "400:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:77:4"
											},
											{
												"body": {
													"nativeSrc": "460:79:4",
													"nodeType": "YulBlock",
													"src": "460:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:4",
																"nodeType": "YulBlock",
																"src": "517:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:4",
																					"nodeType": "YulLiteral",
																					"src": "526:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:4",
																					"nodeType": "YulLiteral",
																					"src": "529:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:4"
																			},
																			"nativeSrc": "519:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:4"
																		},
																		"nativeSrc": "519:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:4"
																				},
																				"nativeSrc": "490:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:4"
																		},
																		"nativeSrc": "480:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:4"
																},
																"nativeSrc": "473:43:4",
																"nodeType": "YulFunctionCall",
																"src": "473:43:4"
															},
															"nativeSrc": "470:63:4",
															"nodeType": "YulIf",
															"src": "470:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:4",
														"nodeType": "YulTypedName",
														"src": "453:5:4",
														"type": ""
													}
												],
												"src": "417:122:4"
											},
											{
												"body": {
													"nativeSrc": "597:87:4",
													"nodeType": "YulBlock",
													"src": "597:87:4",
													"statements": [
														{
															"nativeSrc": "607:29:4",
															"nodeType": "YulAssignment",
															"src": "607:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:4"
																},
																"nativeSrc": "616:20:4",
																"nodeType": "YulFunctionCall",
																"src": "616:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:4"
																},
																"nativeSrc": "645:33:4",
																"nodeType": "YulFunctionCall",
																"src": "645:33:4"
															},
															"nativeSrc": "645:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:4",
														"nodeType": "YulTypedName",
														"src": "575:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:4",
														"nodeType": "YulTypedName",
														"src": "583:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:4",
														"nodeType": "YulTypedName",
														"src": "591:5:4",
														"type": ""
													}
												],
												"src": "545:139:4"
											},
											{
												"body": {
													"nativeSrc": "756:263:4",
													"nodeType": "YulBlock",
													"src": "756:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:4",
																"nodeType": "YulBlock",
																"src": "802:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:4"
																			},
																			"nativeSrc": "804:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:4"
																		},
																		"nativeSrc": "804:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:4"
																		},
																		"nativeSrc": "773:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:4",
																		"nodeType": "YulLiteral",
																		"src": "798:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:4"
																},
																"nativeSrc": "769:32:4",
																"nodeType": "YulFunctionCall",
																"src": "769:32:4"
															},
															"nativeSrc": "766:119:4",
															"nodeType": "YulIf",
															"src": "766:119:4"
														},
														{
															"nativeSrc": "895:117:4",
															"nodeType": "YulBlock",
															"src": "895:117:4",
															"statements": [
																{
																	"nativeSrc": "910:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:4",
																		"nodeType": "YulLiteral",
																		"src": "924:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:4",
																			"nodeType": "YulTypedName",
																			"src": "914:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:4",
																	"nodeType": "YulAssignment",
																	"src": "939:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:4"
																				},
																				"nativeSrc": "970:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:4"
																		},
																		"nativeSrc": "949:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:4",
														"nodeType": "YulTypedName",
														"src": "726:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:4",
														"nodeType": "YulTypedName",
														"src": "737:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:4",
														"nodeType": "YulTypedName",
														"src": "749:6:4",
														"type": ""
													}
												],
												"src": "690:329:4"
											},
											{
												"body": {
													"nativeSrc": "1090:53:4",
													"nodeType": "YulBlock",
													"src": "1090:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1107:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1130:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1112:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:4"
																		},
																		"nativeSrc": "1112:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1100:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:4"
																},
																"nativeSrc": "1100:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1100:37:4"
															},
															"nativeSrc": "1100:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1025:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1078:5:4",
														"nodeType": "YulTypedName",
														"src": "1078:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1085:3:4",
														"nodeType": "YulTypedName",
														"src": "1085:3:4",
														"type": ""
													}
												],
												"src": "1025:118:4"
											},
											{
												"body": {
													"nativeSrc": "1247:124:4",
													"nodeType": "YulBlock",
													"src": "1247:124:4",
													"statements": [
														{
															"nativeSrc": "1257:26:4",
															"nodeType": "YulAssignment",
															"src": "1257:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1269:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1280:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1265:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:4"
																},
																"nativeSrc": "1265:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1265:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1257:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1337:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1350:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1361:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1346:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:4"
																		},
																		"nativeSrc": "1346:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1293:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:4"
																},
																"nativeSrc": "1293:71:4",
																"nodeType": "YulFunctionCall",
																"src": "1293:71:4"
															},
															"nativeSrc": "1293:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1149:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1219:9:4",
														"nodeType": "YulTypedName",
														"src": "1219:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1231:6:4",
														"nodeType": "YulTypedName",
														"src": "1231:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1242:4:4",
														"nodeType": "YulTypedName",
														"src": "1242:4:4",
														"type": ""
													}
												],
												"src": "1149:222:4"
											},
											{
												"body": {
													"nativeSrc": "1466:28:4",
													"nodeType": "YulBlock",
													"src": "1466:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1483:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1483:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1486:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1486:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1476:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1476:6:4"
																},
																"nativeSrc": "1476:12:4",
																"nodeType": "YulFunctionCall",
																"src": "1476:12:4"
															},
															"nativeSrc": "1476:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "1476:12:4"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "1377:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "1377:117:4"
											},
											{
												"body": {
													"nativeSrc": "1589:28:4",
													"nodeType": "YulBlock",
													"src": "1589:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1606:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1606:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1609:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1609:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1599:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1599:6:4"
																},
																"nativeSrc": "1599:12:4",
																"nodeType": "YulFunctionCall",
																"src": "1599:12:4"
															},
															"nativeSrc": "1599:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "1599:12:4"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "1500:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "1500:117:4"
											},
											{
												"body": {
													"nativeSrc": "1712:28:4",
													"nodeType": "YulBlock",
													"src": "1712:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1729:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1729:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1732:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1732:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1722:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1722:6:4"
																},
																"nativeSrc": "1722:12:4",
																"nodeType": "YulFunctionCall",
																"src": "1722:12:4"
															},
															"nativeSrc": "1722:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "1722:12:4"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "1623:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "1623:117:4"
											},
											{
												"body": {
													"nativeSrc": "1853:478:4",
													"nodeType": "YulBlock",
													"src": "1853:478:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1902:83:4",
																"nodeType": "YulBlock",
																"src": "1902:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "1904:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "1904:77:4"
																			},
																			"nativeSrc": "1904:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1904:79:4"
																		},
																		"nativeSrc": "1904:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1904:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "1881:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1881:6:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1889:4:4",
																						"nodeType": "YulLiteral",
																						"src": "1889:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1877:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1877:3:4"
																				},
																				"nativeSrc": "1877:17:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1877:17:4"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "1896:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "1896:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1873:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1873:3:4"
																		},
																		"nativeSrc": "1873:27:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1873:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1866:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1866:6:4"
																},
																"nativeSrc": "1866:35:4",
																"nodeType": "YulFunctionCall",
																"src": "1866:35:4"
															},
															"nativeSrc": "1863:122:4",
															"nodeType": "YulIf",
															"src": "1863:122:4"
														},
														{
															"nativeSrc": "1994:30:4",
															"nodeType": "YulAssignment",
															"src": "1994:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2017:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2017:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2004:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "2004:12:4"
																},
																"nativeSrc": "2004:20:4",
																"nodeType": "YulFunctionCall",
																"src": "2004:20:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1994:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1994:6:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2067:83:4",
																"nodeType": "YulBlock",
																"src": "2067:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "2069:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "2069:77:4"
																			},
																			"nativeSrc": "2069:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2069:79:4"
																		},
																		"nativeSrc": "2069:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2069:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2039:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2039:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2047:18:4",
																		"nodeType": "YulLiteral",
																		"src": "2047:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2036:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "2036:2:4"
																},
																"nativeSrc": "2036:30:4",
																"nodeType": "YulFunctionCall",
																"src": "2036:30:4"
															},
															"nativeSrc": "2033:117:4",
															"nodeType": "YulIf",
															"src": "2033:117:4"
														},
														{
															"nativeSrc": "2159:29:4",
															"nodeType": "YulAssignment",
															"src": "2159:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2175:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2175:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2183:4:4",
																		"nodeType": "YulLiteral",
																		"src": "2183:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2171:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2171:3:4"
																},
																"nativeSrc": "2171:17:4",
																"nodeType": "YulFunctionCall",
																"src": "2171:17:4"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "2159:8:4",
																	"nodeType": "YulIdentifier",
																	"src": "2159:8:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2242:83:4",
																"nodeType": "YulBlock",
																"src": "2242:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "2244:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "2244:77:4"
																			},
																			"nativeSrc": "2244:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2244:79:4"
																		},
																		"nativeSrc": "2244:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2244:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "2207:8:4",
																				"nodeType": "YulIdentifier",
																				"src": "2207:8:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "2221:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2221:6:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2229:4:4",
																						"nodeType": "YulLiteral",
																						"src": "2229:4:4",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "2217:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2217:3:4"
																				},
																				"nativeSrc": "2217:17:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2217:17:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2203:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2203:3:4"
																		},
																		"nativeSrc": "2203:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2203:32:4"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2237:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2237:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2200:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "2200:2:4"
																},
																"nativeSrc": "2200:41:4",
																"nodeType": "YulFunctionCall",
																"src": "2200:41:4"
															},
															"nativeSrc": "2197:128:4",
															"nodeType": "YulIf",
															"src": "2197:128:4"
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "1763:568:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1820:6:4",
														"nodeType": "YulTypedName",
														"src": "1820:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1828:3:4",
														"nodeType": "YulTypedName",
														"src": "1828:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "1836:8:4",
														"nodeType": "YulTypedName",
														"src": "1836:8:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1846:6:4",
														"nodeType": "YulTypedName",
														"src": "1846:6:4",
														"type": ""
													}
												],
												"src": "1763:568:4"
											},
											{
												"body": {
													"nativeSrc": "2490:781:4",
													"nodeType": "YulBlock",
													"src": "2490:781:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2536:83:4",
																"nodeType": "YulBlock",
																"src": "2536:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2538:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "2538:77:4"
																			},
																			"nativeSrc": "2538:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2538:79:4"
																		},
																		"nativeSrc": "2538:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2538:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2511:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2511:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2520:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2520:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2507:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2507:3:4"
																		},
																		"nativeSrc": "2507:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2507:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2532:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2532:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2503:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2503:3:4"
																},
																"nativeSrc": "2503:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2503:32:4"
															},
															"nativeSrc": "2500:119:4",
															"nodeType": "YulIf",
															"src": "2500:119:4"
														},
														{
															"nativeSrc": "2629:312:4",
															"nodeType": "YulBlock",
															"src": "2629:312:4",
															"statements": [
																{
																	"nativeSrc": "2644:45:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2644:45:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2675:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2675:9:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2686:1:4",
																						"nodeType": "YulLiteral",
																						"src": "2686:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2671:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2671:3:4"
																				},
																				"nativeSrc": "2671:17:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2671:17:4"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "2658:12:4",
																			"nodeType": "YulIdentifier",
																			"src": "2658:12:4"
																		},
																		"nativeSrc": "2658:31:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2658:31:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2648:6:4",
																			"nodeType": "YulTypedName",
																			"src": "2648:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2736:83:4",
																		"nodeType": "YulBlock",
																		"src": "2736:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2738:77:4",
																						"nodeType": "YulIdentifier",
																						"src": "2738:77:4"
																					},
																					"nativeSrc": "2738:79:4",
																					"nodeType": "YulFunctionCall",
																					"src": "2738:79:4"
																				},
																				"nativeSrc": "2738:79:4",
																				"nodeType": "YulExpressionStatement",
																				"src": "2738:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2708:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2708:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2716:18:4",
																				"nodeType": "YulLiteral",
																				"src": "2716:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2705:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "2705:2:4"
																		},
																		"nativeSrc": "2705:30:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2705:30:4"
																	},
																	"nativeSrc": "2702:117:4",
																	"nodeType": "YulIf",
																	"src": "2702:117:4"
																},
																{
																	"nativeSrc": "2833:98:4",
																	"nodeType": "YulAssignment",
																	"src": "2833:98:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2903:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2903:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2914:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2914:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2899:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2899:3:4"
																				},
																				"nativeSrc": "2899:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2899:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2923:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2923:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
																			"nativeSrc": "2851:47:4",
																			"nodeType": "YulIdentifier",
																			"src": "2851:47:4"
																		},
																		"nativeSrc": "2851:80:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2851:80:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2833:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2833:6:4"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "2841:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2841:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2951:313:4",
															"nodeType": "YulBlock",
															"src": "2951:313:4",
															"statements": [
																{
																	"nativeSrc": "2966:46:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2966:46:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2997:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2997:9:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3008:2:4",
																						"nodeType": "YulLiteral",
																						"src": "3008:2:4",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2993:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2993:3:4"
																				},
																				"nativeSrc": "2993:18:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2993:18:4"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "2980:12:4",
																			"nodeType": "YulIdentifier",
																			"src": "2980:12:4"
																		},
																		"nativeSrc": "2980:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2980:32:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2970:6:4",
																			"nodeType": "YulTypedName",
																			"src": "2970:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3059:83:4",
																		"nodeType": "YulBlock",
																		"src": "3059:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3061:77:4",
																						"nodeType": "YulIdentifier",
																						"src": "3061:77:4"
																					},
																					"nativeSrc": "3061:79:4",
																					"nodeType": "YulFunctionCall",
																					"src": "3061:79:4"
																				},
																				"nativeSrc": "3061:79:4",
																				"nodeType": "YulExpressionStatement",
																				"src": "3061:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3031:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3031:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3039:18:4",
																				"nodeType": "YulLiteral",
																				"src": "3039:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3028:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "3028:2:4"
																		},
																		"nativeSrc": "3028:30:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3028:30:4"
																	},
																	"nativeSrc": "3025:117:4",
																	"nodeType": "YulIf",
																	"src": "3025:117:4"
																},
																{
																	"nativeSrc": "3156:98:4",
																	"nodeType": "YulAssignment",
																	"src": "3156:98:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3226:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3226:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3237:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3237:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3222:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3222:3:4"
																				},
																				"nativeSrc": "3222:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3222:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3246:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3246:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
																			"nativeSrc": "3174:47:4",
																			"nodeType": "YulIdentifier",
																			"src": "3174:47:4"
																		},
																		"nativeSrc": "3174:80:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3174:80:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3156:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "3156:6:4"
																		},
																		{
																			"name": "value3",
																			"nativeSrc": "3164:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "3164:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "2337:934:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2436:9:4",
														"nodeType": "YulTypedName",
														"src": "2436:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2447:7:4",
														"nodeType": "YulTypedName",
														"src": "2447:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2459:6:4",
														"nodeType": "YulTypedName",
														"src": "2459:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2467:6:4",
														"nodeType": "YulTypedName",
														"src": "2467:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2475:6:4",
														"nodeType": "YulTypedName",
														"src": "2475:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2483:6:4",
														"nodeType": "YulTypedName",
														"src": "2483:6:4",
														"type": ""
													}
												],
												"src": "2337:934:4"
											},
											{
												"body": {
													"nativeSrc": "3360:391:4",
													"nodeType": "YulBlock",
													"src": "3360:391:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "3406:83:4",
																"nodeType": "YulBlock",
																"src": "3406:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3408:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "3408:77:4"
																			},
																			"nativeSrc": "3408:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3408:79:4"
																		},
																		"nativeSrc": "3408:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3408:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3381:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3381:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3390:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3390:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3377:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3377:3:4"
																		},
																		"nativeSrc": "3377:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3377:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3402:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3402:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3373:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3373:3:4"
																},
																"nativeSrc": "3373:32:4",
																"nodeType": "YulFunctionCall",
																"src": "3373:32:4"
															},
															"nativeSrc": "3370:119:4",
															"nodeType": "YulIf",
															"src": "3370:119:4"
														},
														{
															"nativeSrc": "3499:117:4",
															"nodeType": "YulBlock",
															"src": "3499:117:4",
															"statements": [
																{
																	"nativeSrc": "3514:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3514:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3528:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3528:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3518:6:4",
																			"nodeType": "YulTypedName",
																			"src": "3518:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3543:63:4",
																	"nodeType": "YulAssignment",
																	"src": "3543:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3578:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3578:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3589:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3589:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3574:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3574:3:4"
																				},
																				"nativeSrc": "3574:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3574:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3598:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3598:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3553:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "3553:20:4"
																		},
																		"nativeSrc": "3553:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3553:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3543:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "3543:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3626:118:4",
															"nodeType": "YulBlock",
															"src": "3626:118:4",
															"statements": [
																{
																	"nativeSrc": "3641:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3641:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3655:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3655:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3645:6:4",
																			"nodeType": "YulTypedName",
																			"src": "3645:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3671:63:4",
																	"nodeType": "YulAssignment",
																	"src": "3671:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3706:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3706:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3717:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3717:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3702:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3702:3:4"
																				},
																				"nativeSrc": "3702:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3702:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3726:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3726:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3681:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "3681:20:4"
																		},
																		"nativeSrc": "3681:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3681:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3671:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "3671:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "3277:474:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3322:9:4",
														"nodeType": "YulTypedName",
														"src": "3322:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3333:7:4",
														"nodeType": "YulTypedName",
														"src": "3333:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3345:6:4",
														"nodeType": "YulTypedName",
														"src": "3345:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3353:6:4",
														"nodeType": "YulTypedName",
														"src": "3353:6:4",
														"type": ""
													}
												],
												"src": "3277:474:4"
											},
											{
												"body": {
													"nativeSrc": "3853:73:4",
													"nodeType": "YulBlock",
													"src": "3853:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3870:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3870:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3875:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3875:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3863:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3863:6:4"
																},
																"nativeSrc": "3863:19:4",
																"nodeType": "YulFunctionCall",
																"src": "3863:19:4"
															},
															"nativeSrc": "3863:19:4",
															"nodeType": "YulExpressionStatement",
															"src": "3863:19:4"
														},
														{
															"nativeSrc": "3891:29:4",
															"nodeType": "YulAssignment",
															"src": "3891:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3910:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3910:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3915:4:4",
																		"nodeType": "YulLiteral",
																		"src": "3915:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3906:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3906:3:4"
																},
																"nativeSrc": "3906:14:4",
																"nodeType": "YulFunctionCall",
																"src": "3906:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3891:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "3891:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3757:169:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3825:3:4",
														"nodeType": "YulTypedName",
														"src": "3825:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3830:6:4",
														"nodeType": "YulTypedName",
														"src": "3830:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3841:11:4",
														"nodeType": "YulTypedName",
														"src": "3841:11:4",
														"type": ""
													}
												],
												"src": "3757:169:4"
											},
											{
												"body": {
													"nativeSrc": "4038:68:4",
													"nodeType": "YulBlock",
													"src": "4038:68:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4060:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4060:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4068:1:4",
																				"nodeType": "YulLiteral",
																				"src": "4068:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4056:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4056:3:4"
																		},
																		"nativeSrc": "4056:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4056:14:4"
																	},
																	{
																		"hexValue": "4d69736d61746368656420696e707574206c656e67746873",
																		"kind": "string",
																		"nativeSrc": "4072:26:4",
																		"nodeType": "YulLiteral",
																		"src": "4072:26:4",
																		"type": "",
																		"value": "Mismatched input lengths"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4049:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4049:6:4"
																},
																"nativeSrc": "4049:50:4",
																"nodeType": "YulFunctionCall",
																"src": "4049:50:4"
															},
															"nativeSrc": "4049:50:4",
															"nodeType": "YulExpressionStatement",
															"src": "4049:50:4"
														}
													]
												},
												"name": "store_literal_in_memory_757ac971b3c89ff6729d1b818f9eb2011ff93a983cd352fb4a93d3214c1015fe",
												"nativeSrc": "3932:174:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4030:6:4",
														"nodeType": "YulTypedName",
														"src": "4030:6:4",
														"type": ""
													}
												],
												"src": "3932:174:4"
											},
											{
												"body": {
													"nativeSrc": "4258:220:4",
													"nodeType": "YulBlock",
													"src": "4258:220:4",
													"statements": [
														{
															"nativeSrc": "4268:74:4",
															"nodeType": "YulAssignment",
															"src": "4268:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4334:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4334:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4339:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4339:2:4",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4275:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "4275:58:4"
																},
																"nativeSrc": "4275:67:4",
																"nodeType": "YulFunctionCall",
																"src": "4275:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4268:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4268:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4440:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4440:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_757ac971b3c89ff6729d1b818f9eb2011ff93a983cd352fb4a93d3214c1015fe",
																	"nativeSrc": "4351:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "4351:88:4"
																},
																"nativeSrc": "4351:93:4",
																"nodeType": "YulFunctionCall",
																"src": "4351:93:4"
															},
															"nativeSrc": "4351:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "4351:93:4"
														},
														{
															"nativeSrc": "4453:19:4",
															"nodeType": "YulAssignment",
															"src": "4453:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4464:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4464:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4469:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4469:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4460:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4460:3:4"
																},
																"nativeSrc": "4460:12:4",
																"nodeType": "YulFunctionCall",
																"src": "4460:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4453:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4453:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_757ac971b3c89ff6729d1b818f9eb2011ff93a983cd352fb4a93d3214c1015fe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4112:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4246:3:4",
														"nodeType": "YulTypedName",
														"src": "4246:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4254:3:4",
														"nodeType": "YulTypedName",
														"src": "4254:3:4",
														"type": ""
													}
												],
												"src": "4112:366:4"
											},
											{
												"body": {
													"nativeSrc": "4655:248:4",
													"nodeType": "YulBlock",
													"src": "4655:248:4",
													"statements": [
														{
															"nativeSrc": "4665:26:4",
															"nodeType": "YulAssignment",
															"src": "4665:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4677:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4677:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4688:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4688:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4673:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4673:3:4"
																},
																"nativeSrc": "4673:18:4",
																"nodeType": "YulFunctionCall",
																"src": "4673:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4665:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4665:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4712:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4712:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4723:1:4",
																				"nodeType": "YulLiteral",
																				"src": "4723:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4708:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4708:3:4"
																		},
																		"nativeSrc": "4708:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4708:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4731:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "4731:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4737:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4737:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4727:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4727:3:4"
																		},
																		"nativeSrc": "4727:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4727:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4701:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4701:6:4"
																},
																"nativeSrc": "4701:47:4",
																"nodeType": "YulFunctionCall",
																"src": "4701:47:4"
															},
															"nativeSrc": "4701:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "4701:47:4"
														},
														{
															"nativeSrc": "4757:139:4",
															"nodeType": "YulAssignment",
															"src": "4757:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4891:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "4891:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_757ac971b3c89ff6729d1b818f9eb2011ff93a983cd352fb4a93d3214c1015fe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4765:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "4765:124:4"
																},
																"nativeSrc": "4765:131:4",
																"nodeType": "YulFunctionCall",
																"src": "4765:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4757:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4757:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_757ac971b3c89ff6729d1b818f9eb2011ff93a983cd352fb4a93d3214c1015fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4484:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4635:9:4",
														"nodeType": "YulTypedName",
														"src": "4635:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4650:4:4",
														"nodeType": "YulTypedName",
														"src": "4650:4:4",
														"type": ""
													}
												],
												"src": "4484:419:4"
											},
											{
												"body": {
													"nativeSrc": "4937:152:4",
													"nodeType": "YulBlock",
													"src": "4937:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4954:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4954:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4957:77:4",
																		"nodeType": "YulLiteral",
																		"src": "4957:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4947:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4947:6:4"
																},
																"nativeSrc": "4947:88:4",
																"nodeType": "YulFunctionCall",
																"src": "4947:88:4"
															},
															"nativeSrc": "4947:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "4947:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5051:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5051:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5054:4:4",
																		"nodeType": "YulLiteral",
																		"src": "5054:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5044:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5044:6:4"
																},
																"nativeSrc": "5044:15:4",
																"nodeType": "YulFunctionCall",
																"src": "5044:15:4"
															},
															"nativeSrc": "5044:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "5044:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5075:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5075:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5078:4:4",
																		"nodeType": "YulLiteral",
																		"src": "5078:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5068:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5068:6:4"
																},
																"nativeSrc": "5068:15:4",
																"nodeType": "YulFunctionCall",
																"src": "5068:15:4"
															},
															"nativeSrc": "5068:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "5068:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4909:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "4909:180:4"
											},
											{
												"body": {
													"nativeSrc": "5139:147:4",
													"nodeType": "YulBlock",
													"src": "5139:147:4",
													"statements": [
														{
															"nativeSrc": "5149:25:4",
															"nodeType": "YulAssignment",
															"src": "5149:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5172:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5172:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5154:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "5154:17:4"
																},
																"nativeSrc": "5154:20:4",
																"nodeType": "YulFunctionCall",
																"src": "5154:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5149:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "5149:1:4"
																}
															]
														},
														{
															"nativeSrc": "5183:25:4",
															"nodeType": "YulAssignment",
															"src": "5183:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5206:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5206:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5188:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "5188:17:4"
																},
																"nativeSrc": "5188:20:4",
																"nodeType": "YulFunctionCall",
																"src": "5188:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5183:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "5183:1:4"
																}
															]
														},
														{
															"nativeSrc": "5217:16:4",
															"nodeType": "YulAssignment",
															"src": "5217:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5228:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5228:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5231:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5231:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5224:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5224:3:4"
																},
																"nativeSrc": "5224:9:4",
																"nodeType": "YulFunctionCall",
																"src": "5224:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5217:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5217:3:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5257:22:4",
																"nodeType": "YulBlock",
																"src": "5257:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5259:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "5259:16:4"
																			},
																			"nativeSrc": "5259:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5259:18:4"
																		},
																		"nativeSrc": "5259:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5259:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5249:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5249:1:4"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5252:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5252:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5246:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "5246:2:4"
																},
																"nativeSrc": "5246:10:4",
																"nodeType": "YulFunctionCall",
																"src": "5246:10:4"
															},
															"nativeSrc": "5243:36:4",
															"nodeType": "YulIf",
															"src": "5243:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5095:191:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5126:1:4",
														"nodeType": "YulTypedName",
														"src": "5126:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5129:1:4",
														"nodeType": "YulTypedName",
														"src": "5129:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5135:3:4",
														"nodeType": "YulTypedName",
														"src": "5135:3:4",
														"type": ""
													}
												],
												"src": "5095:191:4"
											},
											{
												"body": {
													"nativeSrc": "5320:152:4",
													"nodeType": "YulBlock",
													"src": "5320:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5337:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5337:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5340:77:4",
																		"nodeType": "YulLiteral",
																		"src": "5340:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5330:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5330:6:4"
																},
																"nativeSrc": "5330:88:4",
																"nodeType": "YulFunctionCall",
																"src": "5330:88:4"
															},
															"nativeSrc": "5330:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "5330:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5434:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5434:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5437:4:4",
																		"nodeType": "YulLiteral",
																		"src": "5437:4:4",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5427:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5427:6:4"
																},
																"nativeSrc": "5427:15:4",
																"nodeType": "YulFunctionCall",
																"src": "5427:15:4"
															},
															"nativeSrc": "5427:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "5427:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5458:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5458:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5461:4:4",
																		"nodeType": "YulLiteral",
																		"src": "5461:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5451:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5451:6:4"
																},
																"nativeSrc": "5451:15:4",
																"nodeType": "YulFunctionCall",
																"src": "5451:15:4"
															},
															"nativeSrc": "5451:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "5451:15:4"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "5292:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "5292:180:4"
											},
											{
												"body": {
													"nativeSrc": "5506:152:4",
													"nodeType": "YulBlock",
													"src": "5506:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5523:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5523:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5526:77:4",
																		"nodeType": "YulLiteral",
																		"src": "5526:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5516:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5516:6:4"
																},
																"nativeSrc": "5516:88:4",
																"nodeType": "YulFunctionCall",
																"src": "5516:88:4"
															},
															"nativeSrc": "5516:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "5516:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5620:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5620:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5623:4:4",
																		"nodeType": "YulLiteral",
																		"src": "5623:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5613:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5613:6:4"
																},
																"nativeSrc": "5613:15:4",
																"nodeType": "YulFunctionCall",
																"src": "5613:15:4"
															},
															"nativeSrc": "5613:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "5613:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5644:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5644:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5647:4:4",
																		"nodeType": "YulLiteral",
																		"src": "5647:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5637:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5637:6:4"
																},
																"nativeSrc": "5637:15:4",
																"nodeType": "YulFunctionCall",
																"src": "5637:15:4"
															},
															"nativeSrc": "5637:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "5637:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "5478:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "5478:180:4"
											},
											{
												"body": {
													"nativeSrc": "5706:143:4",
													"nodeType": "YulBlock",
													"src": "5706:143:4",
													"statements": [
														{
															"nativeSrc": "5716:25:4",
															"nodeType": "YulAssignment",
															"src": "5716:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5739:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5739:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5721:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "5721:17:4"
																},
																"nativeSrc": "5721:20:4",
																"nodeType": "YulFunctionCall",
																"src": "5721:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5716:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "5716:1:4"
																}
															]
														},
														{
															"nativeSrc": "5750:25:4",
															"nodeType": "YulAssignment",
															"src": "5750:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5773:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5773:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5755:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "5755:17:4"
																},
																"nativeSrc": "5755:20:4",
																"nodeType": "YulFunctionCall",
																"src": "5755:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5750:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "5750:1:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5797:22:4",
																"nodeType": "YulBlock",
																"src": "5797:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "5799:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "5799:16:4"
																			},
																			"nativeSrc": "5799:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5799:18:4"
																		},
																		"nativeSrc": "5799:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5799:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5794:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5794:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5787:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5787:6:4"
																},
																"nativeSrc": "5787:9:4",
																"nodeType": "YulFunctionCall",
																"src": "5787:9:4"
															},
															"nativeSrc": "5784:35:4",
															"nodeType": "YulIf",
															"src": "5784:35:4"
														},
														{
															"nativeSrc": "5829:14:4",
															"nodeType": "YulAssignment",
															"src": "5829:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5838:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5838:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5841:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5841:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5834:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5834:3:4"
																},
																"nativeSrc": "5834:9:4",
																"nodeType": "YulFunctionCall",
																"src": "5834:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5829:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "5829:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5664:185:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5695:1:4",
														"nodeType": "YulTypedName",
														"src": "5695:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5698:1:4",
														"nodeType": "YulTypedName",
														"src": "5698:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5704:1:4",
														"nodeType": "YulTypedName",
														"src": "5704:1:4",
														"type": ""
													}
												],
												"src": "5664:185:4"
											},
											{
												"body": {
													"nativeSrc": "5903:362:4",
													"nodeType": "YulBlock",
													"src": "5903:362:4",
													"statements": [
														{
															"nativeSrc": "5913:25:4",
															"nodeType": "YulAssignment",
															"src": "5913:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5936:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5936:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5918:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "5918:17:4"
																},
																"nativeSrc": "5918:20:4",
																"nodeType": "YulFunctionCall",
																"src": "5918:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5913:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "5913:1:4"
																}
															]
														},
														{
															"nativeSrc": "5947:25:4",
															"nodeType": "YulAssignment",
															"src": "5947:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5970:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5970:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5952:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "5952:17:4"
																},
																"nativeSrc": "5952:20:4",
																"nodeType": "YulFunctionCall",
																"src": "5952:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5947:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "5947:1:4"
																}
															]
														},
														{
															"nativeSrc": "5981:28:4",
															"nodeType": "YulVariableDeclaration",
															"src": "5981:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6004:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "6004:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6007:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "6007:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6000:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6000:3:4"
																},
																"nativeSrc": "6000:9:4",
																"nodeType": "YulFunctionCall",
																"src": "6000:9:4"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "5985:11:4",
																	"nodeType": "YulTypedName",
																	"src": "5985:11:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6018:41:4",
															"nodeType": "YulAssignment",
															"src": "6018:41:4",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "6047:11:4",
																		"nodeType": "YulIdentifier",
																		"src": "6047:11:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6029:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "6029:17:4"
																},
																"nativeSrc": "6029:30:4",
																"nodeType": "YulFunctionCall",
																"src": "6029:30:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "6018:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "6018:7:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6236:22:4",
																"nodeType": "YulBlock",
																"src": "6236:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6238:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "6238:16:4"
																			},
																			"nativeSrc": "6238:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6238:18:4"
																		},
																		"nativeSrc": "6238:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6238:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "6169:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "6169:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6162:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "6162:6:4"
																				},
																				"nativeSrc": "6162:9:4",
																				"nodeType": "YulFunctionCall",
																				"src": "6162:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "6192:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "6192:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "6199:7:4",
																								"nodeType": "YulIdentifier",
																								"src": "6199:7:4"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "6208:1:4",
																								"nodeType": "YulIdentifier",
																								"src": "6208:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "6195:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "6195:3:4"
																						},
																						"nativeSrc": "6195:15:4",
																						"nodeType": "YulFunctionCall",
																						"src": "6195:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "6189:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "6189:2:4"
																				},
																				"nativeSrc": "6189:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "6189:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "6142:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "6142:2:4"
																		},
																		"nativeSrc": "6142:83:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6142:83:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6122:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6122:6:4"
																},
																"nativeSrc": "6122:113:4",
																"nodeType": "YulFunctionCall",
																"src": "6122:113:4"
															},
															"nativeSrc": "6119:139:4",
															"nodeType": "YulIf",
															"src": "6119:139:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "5855:410:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5886:1:4",
														"nodeType": "YulTypedName",
														"src": "5886:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5889:1:4",
														"nodeType": "YulTypedName",
														"src": "5889:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5895:7:4",
														"nodeType": "YulTypedName",
														"src": "5895:7:4",
														"type": ""
													}
												],
												"src": "5855:410:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_757ac971b3c89ff6729d1b818f9eb2011ff93a983cd352fb4a93d3214c1015fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Mismatched input lengths\")\n\n    }\n\n    function abi_encode_t_stringliteral_757ac971b3c89ff6729d1b818f9eb2011ff93a983cd352fb4a93d3214c1015fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_757ac971b3c89ff6729d1b818f9eb2011ff93a983cd352fb4a93d3214c1015fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_757ac971b3c89ff6729d1b818f9eb2011ff93a983cd352fb4a93d3214c1015fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_757ac971b3c89ff6729d1b818f9eb2011ff93a983cd352fb4a93d3214c1015fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610086575f3560e01c8063b873995a11610059578063b873995a14610110578063c134f4a114610140578063c90b71921461015e578063e2c9313f1461017a57610086565b8063057c04121461008a578063214405a9146100ba5780634a7dfc8e146100d85780635ee6efd0146100f4575b5f80fd5b6100a4600480360381019061009f91906103f2565b6101aa565b6040516100b1919061042c565b60405180910390f35b6100c26101ca565b6040516100cf919061042c565b60405180910390f35b6100f260048036038101906100ed91906104a6565b6101cf565b005b61010e600480360381019061010991906103f2565b610241565b005b61012a60048036038101906101259190610524565b61024a565b604051610137919061042c565b60405180910390f35b610148610285565b604051610155919061042c565b60405180910390f35b610178600480360381019061017391906103f2565b61028b565b005b610194600480360381019061018f91906103f2565b610295565b6040516101a1919061042c565b60405180910390f35b600181815481106101b9575f80fd5b905f5260205f20015f915090505481565b5f5481565b818190508484905014610217576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020e906105bc565b60405180910390fd5b838360019190610228929190610351565b5081816002919061023a929190610351565b5050505050565b805f8190555050565b5f80610255846102b5565b90505f61026184610327565b905080825f546102719190610607565b61027b9190610607565b9250505092915050565b60035481565b8060038190555050565b600281815481106102a4575f80fd5b905f5260205f20015f915090505481565b5f805f90505b60018054905081101561031d57600181815481106102dc576102db61063a565b5b905f5260205f200154831161031057600281815481106102ff576102fe61063a565b5b905f5260205f200154915050610322565b80806001019150506102bb565b505f90505b919050565b5f806301e13380836103399190610694565b90506003548161034991906106c4565b915050919050565b828054828255905f5260205f2090810192821561038b579160200282015b8281111561038a57823582559160200191906001019061036f565b5b509050610398919061039c565b5090565b5b808211156103b3575f815f90555060010161039d565b5090565b5f80fd5b5f80fd5b5f819050919050565b6103d1816103bf565b81146103db575f80fd5b50565b5f813590506103ec816103c8565b92915050565b5f60208284031215610407576104066103b7565b5b5f610414848285016103de565b91505092915050565b610426816103bf565b82525050565b5f60208201905061043f5f83018461041d565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261046657610465610445565b5b8235905067ffffffffffffffff81111561048357610482610449565b5b60208301915083602082028301111561049f5761049e61044d565b5b9250929050565b5f805f80604085870312156104be576104bd6103b7565b5b5f85013567ffffffffffffffff8111156104db576104da6103bb565b5b6104e787828801610451565b9450945050602085013567ffffffffffffffff81111561050a576105096103bb565b5b61051687828801610451565b925092505092959194509250565b5f806040838503121561053a576105396103b7565b5b5f610547858286016103de565b9250506020610558858286016103de565b9150509250929050565b5f82825260208201905092915050565b7f4d69736d61746368656420696e707574206c656e6774687300000000000000005f82015250565b5f6105a6601883610562565b91506105b182610572565b602082019050919050565b5f6020820190508181035f8301526105d38161059a565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610611826103bf565b915061061c836103bf565b9250828201905080821115610634576106336105da565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61069e826103bf565b91506106a9836103bf565b9250826106b9576106b8610667565b5b828204905092915050565b5f6106ce826103bf565b91506106d9836103bf565b92508282026106e7816103bf565b915082820484148315176106fe576106fd6105da565b5b509291505056fea26469706673582212207ce6308cb12efa82e846261e9e1f33fe3a0d2d7b6a483df3da407bf431f65c4d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB873995A GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xB873995A EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0xC134F4A1 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xC90B7192 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xE2C9313F EQ PUSH2 0x17A JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x57C0412 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x214405A9 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0x4A7DFC8E EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x5EE6EFD0 EQ PUSH2 0xF4 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9F SWAP2 SWAP1 PUSH2 0x3F2 JUMP JUMPDEST PUSH2 0x1AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB1 SWAP2 SWAP1 PUSH2 0x42C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC2 PUSH2 0x1CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCF SWAP2 SWAP1 PUSH2 0x42C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xED SWAP2 SWAP1 PUSH2 0x4A6 JUMP JUMPDEST PUSH2 0x1CF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x3F2 JUMP JUMPDEST PUSH2 0x241 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x524 JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x42C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH2 0x285 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x42C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x3F2 JUMP JUMPDEST PUSH2 0x28B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x3F2 JUMP JUMPDEST PUSH2 0x295 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x42C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0x217 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E SWAP1 PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x1 SWAP2 SWAP1 PUSH2 0x228 SWAP3 SWAP2 SWAP1 PUSH2 0x351 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x2 SWAP2 SWAP1 PUSH2 0x23A SWAP3 SWAP2 SWAP1 PUSH2 0x351 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x255 DUP5 PUSH2 0x2B5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x261 DUP5 PUSH2 0x327 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH0 SLOAD PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x607 JUMP JUMPDEST PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x607 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x31D JUMPI PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2DC JUMPI PUSH2 0x2DB PUSH2 0x63A JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD DUP4 GT PUSH2 0x310 JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2FF JUMPI PUSH2 0x2FE PUSH2 0x63A JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP2 POP POP PUSH2 0x322 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x2BB JUMP JUMPDEST POP PUSH0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH4 0x1E13380 DUP4 PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x694 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 SLOAD DUP2 PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x38B JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x38A JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x36F JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x39C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3B3 JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x39D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D1 DUP2 PUSH2 0x3BF JUMP JUMPDEST DUP2 EQ PUSH2 0x3DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3EC DUP2 PUSH2 0x3C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x407 JUMPI PUSH2 0x406 PUSH2 0x3B7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x414 DUP5 DUP3 DUP6 ADD PUSH2 0x3DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x426 DUP2 PUSH2 0x3BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x43F PUSH0 DUP4 ADD DUP5 PUSH2 0x41D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x466 JUMPI PUSH2 0x465 PUSH2 0x445 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x483 JUMPI PUSH2 0x482 PUSH2 0x449 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x49F JUMPI PUSH2 0x49E PUSH2 0x44D JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4BE JUMPI PUSH2 0x4BD PUSH2 0x3B7 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4DB JUMPI PUSH2 0x4DA PUSH2 0x3BB JUMP JUMPDEST JUMPDEST PUSH2 0x4E7 DUP8 DUP3 DUP9 ADD PUSH2 0x451 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x50A JUMPI PUSH2 0x509 PUSH2 0x3BB JUMP JUMPDEST JUMPDEST PUSH2 0x516 DUP8 DUP3 DUP9 ADD PUSH2 0x451 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x53A JUMPI PUSH2 0x539 PUSH2 0x3B7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x547 DUP6 DUP3 DUP7 ADD PUSH2 0x3DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x558 DUP6 DUP3 DUP7 ADD PUSH2 0x3DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D69736D61746368656420696E707574206C656E677468730000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5A6 PUSH1 0x18 DUP4 PUSH2 0x562 JUMP JUMPDEST SWAP2 POP PUSH2 0x5B1 DUP3 PUSH2 0x572 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5D3 DUP2 PUSH2 0x59A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x611 DUP3 PUSH2 0x3BF JUMP JUMPDEST SWAP2 POP PUSH2 0x61C DUP4 PUSH2 0x3BF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x634 JUMPI PUSH2 0x633 PUSH2 0x5DA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x69E DUP3 PUSH2 0x3BF JUMP JUMPDEST SWAP2 POP PUSH2 0x6A9 DUP4 PUSH2 0x3BF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x6B9 JUMPI PUSH2 0x6B8 PUSH2 0x667 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6CE DUP3 PUSH2 0x3BF JUMP JUMPDEST SWAP2 POP PUSH2 0x6D9 DUP4 PUSH2 0x3BF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x6E7 DUP2 PUSH2 0x3BF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x6FE JUMPI PUSH2 0x6FD PUSH2 0x5DA JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0xE6308CB12EFA82E846261E9E1F33FE3A0D2D7B6A483DF3DA407BF431F6 TLOAD 0x4D PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "299:2896:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;407:38;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;338:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2450:265;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2845:83;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1001:303;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;556:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3087:105;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;483:33;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;407:38;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;338:28::-;;;;:::o;2450:265::-;2583:6;;:13;;2561:11;;:18;;:35;2553:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;2660:11;;2636:21;:35;;;;;;;:::i;:::-;;2701:6;;2682:16;:25;;;;;;;:::i;:::-;;2450:265;;;;:::o;2845:83::-;2912:8;2902:7;:18;;;;2845:83;:::o;1001:303::-;1091:7;1111:19;1133:32;1154:10;1133:20;:32::i;:::-;1111:54;;1176:21;1200:39;1223:15;1200:22;:39::i;:::-;1176:63;;1283:13;1269:11;1259:7;;:21;;;;:::i;:::-;:37;;;;:::i;:::-;1252:44;;;;1001:303;;;;:::o;556:39::-;;;;:::o;3087:105::-;3177:7;3155:19;:29;;;;3087:105;:::o;483:33::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1524:309::-;1597:7;1622:9;1634:1;1622:13;;1617:190;1641:21;:28;;;;1637:1;:32;1617:190;;;1709:21;1731:1;1709:24;;;;;;;;:::i;:::-;;;;;;;;;;1695:10;:38;1691:105;;1761:16;1778:1;1761:19;;;;;;;;:::i;:::-;;;;;;;;;;1754:26;;;;;1691:105;1671:3;;;;;;;1617:190;;;;1824:1;1817:8;;1524:309;;;;:::o;2042:199::-;2122:7;2142:14;2178:8;2159:15;:28;;;;:::i;:::-;2142:45;;2214:19;;2205:6;:28;;;;:::i;:::-;2198:35;;;2042:199;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;88:117:4:-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:117::-;1486:1;1483;1476:12;1500:117;1609:1;1606;1599:12;1623:117;1732:1;1729;1722:12;1763:568;1836:8;1846:6;1896:3;1889:4;1881:6;1877:17;1873:27;1863:122;;1904:79;;:::i;:::-;1863:122;2017:6;2004:20;1994:30;;2047:18;2039:6;2036:30;2033:117;;;2069:79;;:::i;:::-;2033:117;2183:4;2175:6;2171:17;2159:29;;2237:3;2229:4;2221:6;2217:17;2207:8;2203:32;2200:41;2197:128;;;2244:79;;:::i;:::-;2197:128;1763:568;;;;;:::o;2337:934::-;2459:6;2467;2475;2483;2532:2;2520:9;2511:7;2507:23;2503:32;2500:119;;;2538:79;;:::i;:::-;2500:119;2686:1;2675:9;2671:17;2658:31;2716:18;2708:6;2705:30;2702:117;;;2738:79;;:::i;:::-;2702:117;2851:80;2923:7;2914:6;2903:9;2899:22;2851:80;:::i;:::-;2833:98;;;;2629:312;3008:2;2997:9;2993:18;2980:32;3039:18;3031:6;3028:30;3025:117;;;3061:79;;:::i;:::-;3025:117;3174:80;3246:7;3237:6;3226:9;3222:22;3174:80;:::i;:::-;3156:98;;;;2951:313;2337:934;;;;;;;:::o;3277:474::-;3345:6;3353;3402:2;3390:9;3381:7;3377:23;3373:32;3370:119;;;3408:79;;:::i;:::-;3370:119;3528:1;3553:53;3598:7;3589:6;3578:9;3574:22;3553:53;:::i;:::-;3543:63;;3499:117;3655:2;3681:53;3726:7;3717:6;3706:9;3702:22;3681:53;:::i;:::-;3671:63;;3626:118;3277:474;;;;;:::o;3757:169::-;3841:11;3875:6;3870:3;3863:19;3915:4;3910:3;3906:14;3891:29;;3757:169;;;;:::o;3932:174::-;4072:26;4068:1;4060:6;4056:14;4049:50;3932:174;:::o;4112:366::-;4254:3;4275:67;4339:2;4334:3;4275:67;:::i;:::-;4268:74;;4351:93;4440:3;4351:93;:::i;:::-;4469:2;4464:3;4460:12;4453:19;;4112:366;;;:::o;4484:419::-;4650:4;4688:2;4677:9;4673:18;4665:26;;4737:9;4731:4;4727:20;4723:1;4712:9;4708:17;4701:47;4765:131;4891:4;4765:131;:::i;:::-;4757:139;;4484:419;;;:::o;4909:180::-;4957:77;4954:1;4947:88;5054:4;5051:1;5044:15;5078:4;5075:1;5068:15;5095:191;5135:3;5154:20;5172:1;5154:20;:::i;:::-;5149:25;;5188:20;5206:1;5188:20;:::i;:::-;5183:25;;5231:1;5228;5224:9;5217:16;;5252:3;5249:1;5246:10;5243:36;;;5259:18;;:::i;:::-;5243:36;5095:191;;;;:::o;5292:180::-;5340:77;5337:1;5330:88;5437:4;5434:1;5427:15;5461:4;5458:1;5451:15;5478:180;5526:77;5523:1;5516:88;5623:4;5620:1;5613:15;5647:4;5644:1;5637:15;5664:185;5704:1;5721:20;5739:1;5721:20;:::i;:::-;5716:25;;5755:20;5773:1;5755:20;:::i;:::-;5750:25;;5794:1;5784:35;;5799:18;;:::i;:::-;5784:35;5841:1;5838;5834:9;5829:14;;5664:185;;;;:::o;5855:410::-;5895:7;5918:20;5936:1;5918:20;:::i;:::-;5913:25;;5952:20;5970:1;5952:20;:::i;:::-;5947:25;;6007:1;6004;6000:9;6029:30;6047:11;6029:30;:::i;:::-;6018:41;;6208:1;6199:7;6195:15;6192:1;6189:22;6169:1;6162:9;6142:83;6119:139;;6238:18;;:::i;:::-;6119:139;5903:362;5855:410;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "370200",
								"executionCost": "44614",
								"totalCost": "414814"
							},
							"external": {
								"baseAPY()": "2447",
								"calculateAPY(uint256,uint256)": "infinite",
								"durationBonusFactor()": "2447",
								"riskPremiumRates(uint256)": "infinite",
								"riskPremiumThresholds(uint256)": "infinite",
								"setBaseAPY(uint256)": "22581",
								"setDurationBonusFactor(uint256)": "22559",
								"setRiskPremiums(uint256[],uint256[])": "infinite"
							},
							"internal": {
								"calculateDurationBonus(uint256)": "infinite",
								"calculateRiskPremium(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 299,
									"end": 3195,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 299,
									"end": 3195,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 299,
									"end": 3195,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 363,
									"end": 366,
									"name": "PUSH",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 338,
									"end": 366,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 338,
									"end": 366,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 593,
									"end": 595,
									"name": "PUSH",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 556,
									"end": 595,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 556,
									"end": 595,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 713,
									"end": 737,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 713,
									"end": 737,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 713,
									"end": 737,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 713,
									"end": 737,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 713,
									"end": 737,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 713,
									"end": 737,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 713,
									"end": 737,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 713,
									"end": 737,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 713,
									"end": 737,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 713,
									"end": 737,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 713,
									"end": 737,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 299,
									"end": 3195,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 299,
									"end": 3195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 299,
									"end": 3195,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 299,
									"end": 3195,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 299,
									"end": 3195,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 299,
									"end": 3195,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 299,
									"end": 3195,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207ce6308cb12efa82e846261e9e1f33fe3a0d2d7b6a483df3da407bf431f65c4d64736f6c634300081a0033",
									".code": [
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "B873995A"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "B873995A"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "C134F4A1"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "C90B7192"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "E2C9313F"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "57C0412"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "214405A9"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "4A7DFC8E"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "5EE6EFD0"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 407,
											"end": 445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 407,
											"end": 445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 407,
											"end": 445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 338,
											"end": 366,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 338,
											"end": 366,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 338,
											"end": 366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 338,
											"end": 366,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 338,
											"end": 366,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 338,
											"end": 366,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 338,
											"end": 366,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 338,
											"end": 366,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 338,
											"end": 366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 338,
											"end": 366,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 338,
											"end": 366,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 338,
											"end": 366,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 338,
											"end": 366,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 338,
											"end": 366,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 338,
											"end": 366,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 338,
											"end": 366,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2450,
											"end": 2715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2450,
											"end": 2715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2845,
											"end": 2928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2845,
											"end": 2928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1001,
											"end": 1304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1001,
											"end": 1304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1001,
											"end": 1304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 556,
											"end": 595,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 556,
											"end": 595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 556,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 556,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 556,
											"end": 595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 556,
											"end": 595,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 556,
											"end": 595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 556,
											"end": 595,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 556,
											"end": 595,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 556,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 556,
											"end": 595,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 556,
											"end": 595,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 556,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 556,
											"end": 595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 556,
											"end": 595,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 556,
											"end": 595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 556,
											"end": 595,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 556,
											"end": 595,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 556,
											"end": 595,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 556,
											"end": 595,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 556,
											"end": 595,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 556,
											"end": 595,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 556,
											"end": 595,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3087,
											"end": 3192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3087,
											"end": 3192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 483,
											"end": 516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 483,
											"end": 516,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 516,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 516,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 483,
											"end": 516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 483,
											"end": 516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 483,
											"end": 516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 516,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 483,
											"end": 516,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 483,
											"end": 516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 483,
											"end": 516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 516,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 338,
											"end": 366,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 338,
											"end": 366,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 338,
											"end": 366,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 338,
											"end": 366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2583,
											"end": 2589,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2583,
											"end": 2589,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2583,
											"end": 2596,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2583,
											"end": 2596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2572,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2572,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2579,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2596,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2553,
											"end": 2625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2660,
											"end": 2671,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2660,
											"end": 2671,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2636,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2636,
											"end": 2671,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2636,
											"end": 2671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2636,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2636,
											"end": 2671,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2636,
											"end": 2671,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2636,
											"end": 2671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2636,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2636,
											"end": 2671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2636,
											"end": 2671,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2636,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2636,
											"end": 2671,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2701,
											"end": 2707,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2701,
											"end": 2707,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2698,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2682,
											"end": 2707,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2707,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2682,
											"end": 2707,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2707,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2707,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2682,
											"end": 2707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2707,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2682,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2707,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 2920,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2902,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2902,
											"end": 2920,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2902,
											"end": 2920,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2902,
											"end": 2920,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2902,
											"end": 2920,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1098,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1130,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1154,
											"end": 1164,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1133,
											"end": 1165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1165,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1133,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1111,
											"end": 1165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1111,
											"end": 1165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1197,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1223,
											"end": 1238,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1200,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1200,
											"end": 1239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1200,
											"end": 1239,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1200,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1239,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1239,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1283,
											"end": 1296,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1280,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1266,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1266,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1259,
											"end": 1280,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1280,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1259,
											"end": 1280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1280,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1259,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1259,
											"end": 1296,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1296,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1259,
											"end": 1296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1296,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1259,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1252,
											"end": 1296,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1252,
											"end": 1296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1252,
											"end": 1296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1252,
											"end": 1296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 556,
											"end": 595,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 556,
											"end": 595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 556,
											"end": 595,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 556,
											"end": 595,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 556,
											"end": 595,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 556,
											"end": 595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3177,
											"end": 3184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3155,
											"end": 3174,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3155,
											"end": 3184,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3155,
											"end": 3184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3155,
											"end": 3184,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3155,
											"end": 3184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3087,
											"end": 3192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 483,
											"end": 516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 483,
											"end": 516,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 483,
											"end": 516,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 516,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 483,
											"end": 516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 516,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 516,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 516,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 516,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1833,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1524,
											"end": 1833,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1597,
											"end": 1604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1622,
											"end": 1631,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1634,
											"end": 1635,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1622,
											"end": 1635,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1635,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1807,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1617,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1641,
											"end": 1662,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1641,
											"end": 1669,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1641,
											"end": 1669,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1641,
											"end": 1669,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1641,
											"end": 1669,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1638,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1669,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1807,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1617,
											"end": 1807,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1730,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1731,
											"end": 1732,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1709,
											"end": 1733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1705,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1733,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1691,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1691,
											"end": 1796,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1777,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1761,
											"end": 1780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1780,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1780,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1780,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1754,
											"end": 1780,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1691,
											"end": 1796,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1691,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1674,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1674,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1674,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1671,
											"end": 1674,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1674,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1617,
											"end": 1807,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1807,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1617,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1807,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1825,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1817,
											"end": 1825,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1825,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1833,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1524,
											"end": 1833,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1833,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1833,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1833,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2241,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2042,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2122,
											"end": 2129,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2178,
											"end": 2186,
											"name": "PUSH",
											"source": 3,
											"value": "1E13380"
										},
										{
											"begin": 2159,
											"end": 2174,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2159,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2159,
											"end": 2187,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2159,
											"end": 2187,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2159,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2159,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2159,
											"end": 2187,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2159,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2187,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2187,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2214,
											"end": 2233,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2214,
											"end": 2233,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2211,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2205,
											"end": 2233,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2233,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2205,
											"end": 2233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2233,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2205,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2233,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2233,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2233,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2241,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2241,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "83"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "83"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "84"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "85"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "84"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "85"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "86"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "87"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "86"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "87"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1377,
											"end": 1494,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1377,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1486,
											"end": 1487,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1483,
											"end": 1484,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1476,
											"end": 1488,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1617,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1500,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1609,
											"end": 1610,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1606,
											"end": 1607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1599,
											"end": 1611,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1740,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1623,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 1733,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1730,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1722,
											"end": 1734,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1763,
											"end": 2331,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1763,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1836,
											"end": 1844,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1896,
											"end": 1899,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1893,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1881,
											"end": 1887,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1894,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1900,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1863,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1863,
											"end": 1985,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1904,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1904,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1904,
											"end": 1983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1904,
											"end": 1983,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1904,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1863,
											"end": 1985,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1863,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2023,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2004,
											"end": 2024,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1994,
											"end": 2024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1994,
											"end": 2024,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2047,
											"end": 2065,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2039,
											"end": 2045,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2036,
											"end": 2066,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2033,
											"end": 2150,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2033,
											"end": 2150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2033,
											"end": 2150,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2069,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2069,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2069,
											"end": 2148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2069,
											"end": 2148,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2069,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2033,
											"end": 2150,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2033,
											"end": 2150,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2183,
											"end": 2187,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2175,
											"end": 2181,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2171,
											"end": 2188,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2159,
											"end": 2188,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2159,
											"end": 2188,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2240,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2229,
											"end": 2233,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2221,
											"end": 2227,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2217,
											"end": 2234,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2207,
											"end": 2215,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2203,
											"end": 2235,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2241,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2325,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2197,
											"end": 2325,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2244,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2244,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2244,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2244,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2244,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2325,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2197,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1763,
											"end": 2331,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1763,
											"end": 2331,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1763,
											"end": 2331,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1763,
											"end": 2331,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1763,
											"end": 2331,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1763,
											"end": 2331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 3271,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2337,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2459,
											"end": 2465,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2475,
											"end": 2481,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2483,
											"end": 2489,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2532,
											"end": 2534,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2520,
											"end": 2529,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2518,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2507,
											"end": 2530,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2503,
											"end": 2535,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2619,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2500,
											"end": 2619,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2538,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2538,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2538,
											"end": 2617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2538,
											"end": 2617,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2538,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2619,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2500,
											"end": 2619,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2675,
											"end": 2684,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2658,
											"end": 2689,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2734,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2708,
											"end": 2714,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2735,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2819,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2702,
											"end": 2819,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2738,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2738,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2738,
											"end": 2817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2738,
											"end": 2817,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2738,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2819,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2702,
											"end": 2819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2923,
											"end": 2930,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2914,
											"end": 2920,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2903,
											"end": 2912,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2899,
											"end": 2921,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2851,
											"end": 2931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2931,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2851,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2833,
											"end": 2931,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2833,
											"end": 2931,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2833,
											"end": 2931,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2833,
											"end": 2931,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3010,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2997,
											"end": 3006,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2993,
											"end": 3011,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2980,
											"end": 3012,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3039,
											"end": 3057,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3031,
											"end": 3037,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3028,
											"end": 3058,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3142,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 3025,
											"end": 3142,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3061,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 3061,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3061,
											"end": 3140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3061,
											"end": 3140,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 3061,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3142,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 3025,
											"end": 3142,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3174,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3246,
											"end": 3253,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3237,
											"end": 3243,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3226,
											"end": 3235,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3222,
											"end": 3244,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3174,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3174,
											"end": 3254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3174,
											"end": 3254,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3174,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3156,
											"end": 3254,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3156,
											"end": 3254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3156,
											"end": 3254,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3156,
											"end": 3254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2951,
											"end": 3264,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 3271,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 3271,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 3271,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 3271,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 3271,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 3271,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 3271,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 3271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3277,
											"end": 3751,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3277,
											"end": 3751,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3345,
											"end": 3351,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3353,
											"end": 3359,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3404,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3388,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3377,
											"end": 3400,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3373,
											"end": 3405,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3489,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 3370,
											"end": 3489,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3408,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 3408,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3408,
											"end": 3487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3408,
											"end": 3487,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 3408,
											"end": 3487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3489,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 3370,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3528,
											"end": 3529,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3589,
											"end": 3595,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3578,
											"end": 3587,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3574,
											"end": 3596,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3553,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3553,
											"end": 3606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3553,
											"end": 3606,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 3553,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3543,
											"end": 3606,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3543,
											"end": 3606,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3655,
											"end": 3657,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3681,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 3726,
											"end": 3733,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3717,
											"end": 3723,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3706,
											"end": 3715,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3702,
											"end": 3724,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3681,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3681,
											"end": 3734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3681,
											"end": 3734,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 3681,
											"end": 3734,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3671,
											"end": 3734,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3671,
											"end": 3734,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3626,
											"end": 3744,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3277,
											"end": 3751,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3277,
											"end": 3751,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3277,
											"end": 3751,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3277,
											"end": 3751,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3277,
											"end": 3751,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3277,
											"end": 3751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3757,
											"end": 3926,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3757,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3873,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3863,
											"end": 3882,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3919,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3910,
											"end": 3913,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3906,
											"end": 3920,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3891,
											"end": 3920,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3891,
											"end": 3920,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3757,
											"end": 3926,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3757,
											"end": 3926,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3757,
											"end": 3926,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3757,
											"end": 3926,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3757,
											"end": 3926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4106,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3932,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4098,
											"name": "PUSH",
											"source": 4,
											"value": "4D69736D61746368656420696E707574206C656E677468730000000000000000"
										},
										{
											"begin": 4068,
											"end": 4069,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4060,
											"end": 4066,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4056,
											"end": 4070,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4099,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4112,
											"end": 4478,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 4112,
											"end": 4478,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4254,
											"end": 4257,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4339,
											"end": 4341,
											"name": "PUSH",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 4334,
											"end": 4337,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4275,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 4275,
											"end": 4342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4275,
											"end": 4342,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4275,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4268,
											"end": 4342,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4268,
											"end": 4342,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4440,
											"end": 4443,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4351,
											"end": 4444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4444,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4351,
											"end": 4444,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4469,
											"end": 4471,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4464,
											"end": 4467,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4472,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4453,
											"end": 4472,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4453,
											"end": 4472,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4112,
											"end": 4478,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4112,
											"end": 4478,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4112,
											"end": 4478,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4112,
											"end": 4478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4484,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 4484,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4654,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4688,
											"end": 4690,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4677,
											"end": 4686,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4673,
											"end": 4691,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4665,
											"end": 4691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4665,
											"end": 4691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4737,
											"end": 4746,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4731,
											"end": 4735,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4727,
											"end": 4747,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4723,
											"end": 4724,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4712,
											"end": 4721,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4725,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4701,
											"end": 4748,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4765,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4891,
											"end": 4895,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4765,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 4765,
											"end": 4896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4765,
											"end": 4896,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4765,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 4896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 4896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4484,
											"end": 4903,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4484,
											"end": 4903,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4484,
											"end": 4903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4484,
											"end": 4903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4909,
											"end": 5089,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 4909,
											"end": 5089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4957,
											"end": 5034,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4954,
											"end": 4955,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4947,
											"end": 5035,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5054,
											"end": 5058,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5044,
											"end": 5059,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5078,
											"end": 5082,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5075,
											"end": 5076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5068,
											"end": 5083,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5095,
											"end": 5286,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5095,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5135,
											"end": 5138,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5154,
											"end": 5174,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 5172,
											"end": 5173,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5154,
											"end": 5174,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 5154,
											"end": 5174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5154,
											"end": 5174,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 5154,
											"end": 5174,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5174,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5174,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5188,
											"end": 5208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 5206,
											"end": 5207,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5188,
											"end": 5208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 5188,
											"end": 5208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5188,
											"end": 5208,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 5188,
											"end": 5208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5183,
											"end": 5208,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5183,
											"end": 5208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5231,
											"end": 5232,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5229,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5224,
											"end": 5233,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5233,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5233,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5255,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5249,
											"end": 5250,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5246,
											"end": 5256,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5243,
											"end": 5279,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5243,
											"end": 5279,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 5243,
											"end": 5279,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5259,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 5259,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 5259,
											"end": 5277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5259,
											"end": 5277,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 5259,
											"end": 5277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5243,
											"end": 5279,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 5243,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5095,
											"end": 5286,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5095,
											"end": 5286,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5095,
											"end": 5286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5095,
											"end": 5286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5095,
											"end": 5286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5292,
											"end": 5472,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 5292,
											"end": 5472,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5340,
											"end": 5417,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5337,
											"end": 5338,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5330,
											"end": 5418,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5437,
											"end": 5441,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5434,
											"end": 5435,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5427,
											"end": 5442,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5461,
											"end": 5465,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5458,
											"end": 5459,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5451,
											"end": 5466,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5478,
											"end": 5658,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 5478,
											"end": 5658,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5526,
											"end": 5603,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5523,
											"end": 5524,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5516,
											"end": 5604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5623,
											"end": 5627,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5613,
											"end": 5628,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5647,
											"end": 5651,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5644,
											"end": 5645,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5637,
											"end": 5652,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5664,
											"end": 5849,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 5664,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5704,
											"end": 5705,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5721,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 5739,
											"end": 5740,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5721,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 5721,
											"end": 5741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5721,
											"end": 5741,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 5721,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5716,
											"end": 5741,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5716,
											"end": 5741,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5755,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 5773,
											"end": 5774,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5755,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 5755,
											"end": 5775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5755,
											"end": 5775,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 5755,
											"end": 5775,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5750,
											"end": 5775,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5750,
											"end": 5775,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5794,
											"end": 5795,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 5799,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 5799,
											"end": 5817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5817,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 5799,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 5784,
											"end": 5819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5841,
											"end": 5842,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5838,
											"end": 5839,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5843,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5829,
											"end": 5843,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5829,
											"end": 5843,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5664,
											"end": 5849,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5664,
											"end": 5849,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5664,
											"end": 5849,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5664,
											"end": 5849,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5664,
											"end": 5849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5855,
											"end": 6265,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5855,
											"end": 6265,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5895,
											"end": 5902,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5918,
											"end": 5938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 5936,
											"end": 5937,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5918,
											"end": 5938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 5918,
											"end": 5938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5918,
											"end": 5938,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 5918,
											"end": 5938,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5913,
											"end": 5938,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5913,
											"end": 5938,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 5972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 5970,
											"end": 5971,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 5972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 5952,
											"end": 5972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 5972,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 5952,
											"end": 5972,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5947,
											"end": 5972,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5947,
											"end": 5972,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6007,
											"end": 6008,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6004,
											"end": 6005,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6000,
											"end": 6009,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 6029,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 6047,
											"end": 6058,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6029,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 6029,
											"end": 6059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6029,
											"end": 6059,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 6029,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6018,
											"end": 6059,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6018,
											"end": 6059,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6208,
											"end": 6209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6199,
											"end": 6206,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6195,
											"end": 6210,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 6192,
											"end": 6193,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6189,
											"end": 6211,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6169,
											"end": 6170,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6162,
											"end": 6171,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6142,
											"end": 6225,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 6119,
											"end": 6258,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 6119,
											"end": 6258,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6238,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 6238,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 6238,
											"end": 6256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6238,
											"end": 6256,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 6238,
											"end": 6256,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6119,
											"end": 6258,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 6119,
											"end": 6258,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5903,
											"end": 6265,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5855,
											"end": 6265,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5855,
											"end": 6265,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5855,
											"end": 6265,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5855,
											"end": 6265,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5855,
											"end": 6265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/contracts/contracts/lib/AdvancedAPYManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"baseAPY()": "214405a9",
							"calculateAPY(uint256,uint256)": "b873995a",
							"durationBonusFactor()": "c134f4a1",
							"riskPremiumRates(uint256)": "e2c9313f",
							"riskPremiumThresholds(uint256)": "057c0412",
							"setBaseAPY(uint256)": "5ee6efd0",
							"setDurationBonusFactor(uint256)": "c90b7192",
							"setRiskPremiums(uint256[],uint256[])": "4a7dfc8e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"baseAPY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"durationSeconds\",\"type\":\"uint256\"}],\"name\":\"calculateAPY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"durationBonusFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"riskPremiumRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"riskPremiumThresholds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_baseAPY\",\"type\":\"uint256\"}],\"name\":\"setBaseAPY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_factor\",\"type\":\"uint256\"}],\"name\":\"setDurationBonusFactor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_thresholds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_rates\",\"type\":\"uint256[]\"}],\"name\":\"setRiskPremiums\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Manages APY adjustments based on loan characteristics such as amount and duration.\",\"kind\":\"dev\",\"methods\":{\"calculateAPY(uint256,uint256)\":{\"params\":{\"durationSeconds\":\"The duration of the loan in seconds.\",\"loanAmount\":\"The amount of the loan.\"},\"returns\":{\"_0\":\"uint256 Calculated APY in basis points.\"}},\"setBaseAPY(uint256)\":{\"params\":{\"_baseAPY\":\"The new base APY in basis points.\"}},\"setDurationBonusFactor(uint256)\":{\"params\":{\"_factor\":\"The new duration bonus factor in basis points per year.\"}},\"setRiskPremiums(uint256[],uint256[])\":{\"params\":{\"_rates\":\"Array of risk premiums corresponding to the thresholds.\",\"_thresholds\":\"Array of loan amount thresholds.\"}}},\"title\":\"AdvancedAPYManager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"calculateAPY(uint256,uint256)\":{\"notice\":\"Calculates the current APY based on loan amount and duration.\"},\"constructor\":{\"notice\":\"Initializes the contract with the lending token.\"},\"setBaseAPY(uint256)\":{\"notice\":\"Allows the owner to adjust the base APY rate.\"},\"setDurationBonusFactor(uint256)\":{\"notice\":\"Allows the owner to adjust the duration bonus factor.\"},\"setRiskPremiums(uint256[],uint256[])\":{\"notice\":\"Sets the risk premium thresholds and rates.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":\"AdvancedAPYManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/contracts/contracts/lib/AdvancedAPYManager.sol\":{\"keccak256\":\"0x9b5a88ed41b2cd2b2337ec81a9f03acae0f80dfb33ab52d562fdd39728c3a4ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aef139621b3faf60ae930062f18b093278c8c29b2cdb069f5d09f5b711da0e4\",\"dweb:/ipfs/QmV6gxpfU8goAaY3QMX7X5BJkTfc2o8qzxevxvJUrpXzgx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 263,
								"contract": "contracts/contracts/contracts/lib/AdvancedAPYManager.sol:AdvancedAPYManager",
								"label": "baseAPY",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 266,
								"contract": "contracts/contracts/contracts/lib/AdvancedAPYManager.sol:AdvancedAPYManager",
								"label": "riskPremiumThresholds",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 269,
								"contract": "contracts/contracts/contracts/lib/AdvancedAPYManager.sol:AdvancedAPYManager",
								"label": "riskPremiumRates",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 272,
								"contract": "contracts/contracts/contracts/lib/AdvancedAPYManager.sol:AdvancedAPYManager",
								"label": "durationBonusFactor",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"calculateAPY(uint256,uint256)": {
								"notice": "Calculates the current APY based on loan amount and duration."
							},
							"constructor": {
								"notice": "Initializes the contract with the lending token."
							},
							"setBaseAPY(uint256)": {
								"notice": "Allows the owner to adjust the base APY rate."
							},
							"setDurationBonusFactor(uint256)": {
								"notice": "Allows the owner to adjust the duration bonus factor."
							},
							"setRiskPremiums(uint256[],uint256[])": {
								"notice": "Sets the risk premium thresholds and rates."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 256,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 255,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 255,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								255
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 237,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "213:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "395:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "404:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "426:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "446:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:1"
									},
									"src": "389:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "626:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "635:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "658:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:1"
									},
									"src": "620:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 225,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "930:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "970:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:1"
									},
									"scope": 225,
									"src": "911:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1233:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1266:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:1"
									},
									"scope": 225,
									"src": "1203:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1566:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1581:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1621:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:1"
									},
									"scope": 225,
									"src": "1547:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2325:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2375:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:1"
									},
									"scope": 225,
									"src": "2308:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2711:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2725:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2737:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2770:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:1"
									},
									"scope": 225,
									"src": "2689:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "203:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2673:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							255
						]
					},
					"id": 256,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 255,
							"linearizedBaseContracts": [
								255
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 233,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 232,
												"id": 235,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 255,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 242,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 241,
												"id": 244,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 255,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 250,
												"id": 252,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 255,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 256,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"contracts/contracts/contracts/lib/AdvancedAPYManager.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/contracts/lib/AdvancedAPYManager.sol",
					"exportedSymbols": {
						"AdvancedAPYManager": [
							412
						],
						"Context": [
							255
						],
						"IERC20": [
							225
						],
						"Ownable": [
							147
						]
					},
					"id": 413,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 257,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 258,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 413,
							"sourceUnit": 148,
							"src": "61:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 259,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 413,
							"sourceUnit": 226,
							"src": "115:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AdvancedAPYManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 260,
								"nodeType": "StructuredDocumentation",
								"src": "175:124:3",
								"text": "@title AdvancedAPYManager\n @dev Manages APY adjustments based on loan characteristics such as amount and duration."
							},
							"fullyImplemented": true,
							"id": 412,
							"linearizedBaseContracts": [
								412
							],
							"name": "AdvancedAPYManager",
							"nameLocation": "308:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "214405a9",
									"id": 263,
									"mutability": "mutable",
									"name": "baseAPY",
									"nameLocation": "353:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 412,
									"src": "338:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 261,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "338:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 262,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "363:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "057c0412",
									"id": 266,
									"mutability": "mutable",
									"name": "riskPremiumThresholds",
									"nameLocation": "424:21:3",
									"nodeType": "VariableDeclaration",
									"scope": 412,
									"src": "407:38:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 264,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "407:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 265,
										"nodeType": "ArrayTypeName",
										"src": "407:9:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e2c9313f",
									"id": 269,
									"mutability": "mutable",
									"name": "riskPremiumRates",
									"nameLocation": "500:16:3",
									"nodeType": "VariableDeclaration",
									"scope": 412,
									"src": "483:33:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 267,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "483:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 268,
										"nodeType": "ArrayTypeName",
										"src": "483:9:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c134f4a1",
									"id": 272,
									"mutability": "mutable",
									"name": "durationBonusFactor",
									"nameLocation": "571:19:3",
									"nodeType": "VariableDeclaration",
									"scope": 412,
									"src": "556:39:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 270,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "556:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3235",
										"id": 271,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "593:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_25_by_1",
											"typeString": "int_const 25"
										},
										"value": "25"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "727:10:3",
										"statements": []
									},
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "647:60:3",
										"text": "@notice Initializes the contract with the lending token."
									},
									"id": 277,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "724:2:3"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "727:0:3"
									},
									"scope": 412,
									"src": "713:24:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "1100:204:3",
										"statements": [
											{
												"assignments": [
													288
												],
												"declarations": [
													{
														"constant": false,
														"id": 288,
														"mutability": "mutable",
														"name": "riskPremium",
														"nameLocation": "1119:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 305,
														"src": "1111:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 287,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1111:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [
														{
															"id": 290,
															"name": "loanAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "1154:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 289,
														"name": "calculateRiskPremium",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "1133:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1133:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1111:54:3"
											},
											{
												"assignments": [
													294
												],
												"declarations": [
													{
														"constant": false,
														"id": 294,
														"mutability": "mutable",
														"name": "durationBonus",
														"nameLocation": "1184:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 305,
														"src": "1176:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 293,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1176:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 298,
												"initialValue": {
													"arguments": [
														{
															"id": 296,
															"name": "durationSeconds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "1223:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 295,
														"name": "calculateDurationBonus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "1200:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1200:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1176:63:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 299,
															"name": "baseAPY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "1259:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 300,
															"name": "riskPremium",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "1269:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1259:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 302,
														"name": "durationBonus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "1283:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1259:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 286,
												"id": 304,
												"nodeType": "Return",
												"src": "1252:44:3"
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "745:250:3",
										"text": "@notice Calculates the current APY based on loan amount and duration.\n @param loanAmount The amount of the loan.\n @param durationSeconds The duration of the loan in seconds.\n @return uint256 Calculated APY in basis points."
									},
									"functionSelector": "b873995a",
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateAPY",
									"nameLocation": "1010:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "loanAmount",
												"nameLocation": "1031:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "1023:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1023:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "durationSeconds",
												"nameLocation": "1051:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "1043:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1022:45:3"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "1091:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1091:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1090:9:3"
									},
									"scope": 412,
									"src": "1001:303:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "1606:227:3",
										"statements": [
											{
												"body": {
													"id": 336,
													"nodeType": "Block",
													"src": "1676:131:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 325,
																	"name": "loanAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "1695:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"baseExpression": {
																		"id": 326,
																		"name": "riskPremiumThresholds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 266,
																		"src": "1709:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 328,
																	"indexExpression": {
																		"id": 327,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "1731:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1709:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1695:38:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 335,
															"nodeType": "IfStatement",
															"src": "1691:105:3",
															"trueBody": {
																"id": 334,
																"nodeType": "Block",
																"src": "1735:61:3",
																"statements": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 330,
																				"name": "riskPremiumRates",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 269,
																				"src": "1761:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																					"typeString": "uint256[] storage ref"
																				}
																			},
																			"id": 332,
																			"indexExpression": {
																				"id": 331,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 315,
																				"src": "1778:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1761:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 313,
																		"id": 333,
																		"nodeType": "Return",
																		"src": "1754:26:3"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 318,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "1637:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 319,
															"name": "riskPremiumThresholds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "1641:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 320,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1663:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1641:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1637:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 337,
												"initializationExpression": {
													"assignments": [
														315
													],
													"declarations": [
														{
															"constant": false,
															"id": 315,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1630:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 337,
															"src": "1622:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 314,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1622:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 317,
													"initialValue": {
														"hexValue": "30",
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1634:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1622:13:3"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1671:3:3",
														"subExpression": {
															"id": 322,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "1671:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 324,
													"nodeType": "ExpressionStatement",
													"src": "1671:3:3"
												},
												"nodeType": "ForStatement",
												"src": "1617:190:3"
											},
											{
												"expression": {
													"hexValue": "30",
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1824:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 313,
												"id": 339,
												"nodeType": "Return",
												"src": "1817:8:3"
											}
										]
									},
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "1312:206:3",
										"text": "@notice Calculates additional risk premium based on the loan amount using thresholds.\n @param loanAmount The amount of the loan.\n @return uint256 Additional risk premium in basis points."
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRiskPremium",
									"nameLocation": "1533:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "loanAmount",
												"nameLocation": "1562:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "1554:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1554:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1553:20:3"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "1597:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1597:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:9:3"
									},
									"scope": 412,
									"src": "1524:309:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "2131:110:3",
										"statements": [
											{
												"assignments": [
													350
												],
												"declarations": [
													{
														"constant": false,
														"id": 350,
														"mutability": "mutable",
														"name": "yearss",
														"nameLocation": "2150:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 360,
														"src": "2142:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 349,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2142:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 355,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 351,
														"name": "durationSeconds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "2159:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"hexValue": "333635",
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2178:8:3",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_31536000_by_1",
																	"typeString": "int_const 31536000"
																},
																"value": "365"
															}
														],
														"id": 353,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2177:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31536000_by_1",
															"typeString": "int_const 31536000"
														}
													},
													"src": "2159:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2142:45:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 356,
														"name": "yearss",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "2205:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 357,
														"name": "durationBonusFactor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "2214:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2205:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 348,
												"id": 359,
												"nodeType": "Return",
												"src": "2198:35:3"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "1841:195:3",
										"text": "@notice Calculates a bonus based on the loan duration in seconds.\n @param durationSeconds The duration of the loan in seconds.\n @return uint256 Duration bonus in basis points."
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateDurationBonus",
									"nameLocation": "2051:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "durationSeconds",
												"nameLocation": "2082:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2074:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2074:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2073:25:3"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2122:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2122:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2121:9:3"
									},
									"scope": 412,
									"src": "2042:199:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "2542:173:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 372,
																	"name": "_thresholds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "2561:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2573:6:3",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2561:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 374,
																	"name": "_rates",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 368,
																	"src": "2583:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2590:6:3",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2583:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2561:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d69736d61746368656420696e707574206c656e67746873",
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2598:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_757ac971b3c89ff6729d1b818f9eb2011ff93a983cd352fb4a93d3214c1015fe",
																"typeString": "literal_string \"Mismatched input lengths\""
															},
															"value": "Mismatched input lengths"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_757ac971b3c89ff6729d1b818f9eb2011ff93a983cd352fb4a93d3214c1015fe",
																"typeString": "literal_string \"Mismatched input lengths\""
															}
														],
														"id": 371,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2553:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2553:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "2553:72:3"
											},
											{
												"expression": {
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 380,
														"name": "riskPremiumThresholds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "2636:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 381,
														"name": "_thresholds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "2660:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
															"typeString": "uint256[] calldata"
														}
													},
													"src": "2636:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "2636:35:3"
											},
											{
												"expression": {
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 384,
														"name": "riskPremiumRates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "2682:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 385,
														"name": "_rates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 368,
														"src": "2701:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
															"typeString": "uint256[] calldata"
														}
													},
													"src": "2682:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "2682:25:3"
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2249:195:3",
										"text": "@notice Sets the risk premium thresholds and rates.\n @param _thresholds Array of loan amount thresholds.\n @param _rates Array of risk premiums corresponding to the thresholds."
									},
									"functionSelector": "4a7dfc8e",
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setRiskPremiums",
									"nameLocation": "2459:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "_thresholds",
												"nameLocation": "2494:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "2475:30:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 363,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2475:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 364,
													"nodeType": "ArrayTypeName",
													"src": "2475:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "_rates",
												"nameLocation": "2526:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "2507:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 366,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2507:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 367,
													"nodeType": "ArrayTypeName",
													"src": "2507:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2474:59:3"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2542:0:3"
									},
									"scope": 412,
									"src": "2450:265:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 399,
										"nodeType": "Block",
										"src": "2891:37:3",
										"statements": [
											{
												"expression": {
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 395,
														"name": "baseAPY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "2902:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 396,
														"name": "_baseAPY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "2912:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2902:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "2902:18:3"
											}
										]
									},
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "2723:116:3",
										"text": "@notice Allows the owner to adjust the base APY rate.\n @param _baseAPY The new base APY in basis points."
									},
									"functionSelector": "5ee6efd0",
									"id": 400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setBaseAPY",
									"nameLocation": "2854:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "_baseAPY",
												"nameLocation": "2873:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "2865:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2865:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2864:18:3"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2891:0:3"
									},
									"scope": 412,
									"src": "2845:83:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "3144:48:3",
										"statements": [
											{
												"expression": {
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 406,
														"name": "durationBonusFactor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "3155:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 407,
														"name": "_factor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "3177:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3155:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "3155:29:3"
											}
										]
									},
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "2936:145:3",
										"text": "@notice Allows the owner to adjust the duration bonus factor.\n @param _factor The new duration bonus factor in basis points per year."
									},
									"functionSelector": "c90b7192",
									"id": 411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setDurationBonusFactor",
									"nameLocation": "3096:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "_factor",
												"nameLocation": "3127:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "3119:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3119:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3118:17:3"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3144:0:3"
									},
									"scope": 412,
									"src": "3087:105:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 413,
							"src": "299:2896:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:3164:3"
				},
				"id": 3
			}
		}
	}
}