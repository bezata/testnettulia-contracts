{
	"id": "2294cb8b39165c59e148e35ac7dabe66",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"settings": {
			"viaIR": true,
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/contracts/lib/PermitHash.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport {IAllowanceTransfer} from \"../interfaces/IAllowanceTransfer.sol\";\nimport {ISignatureTransfer} from \"../interfaces/ISignatureTransfer.sol\";\n\nlibrary PermitHash {\n    bytes32 public constant _PERMIT_DETAILS_TYPEHASH =\n        keccak256(\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\");\n\n    bytes32 public constant _PERMIT_SINGLE_TYPEHASH = keccak256(\n        \"PermitSingle(PermitDetails details,address spender,uint256 sigDeadline)PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\"\n    );\n\n    bytes32 public constant _PERMIT_BATCH_TYPEHASH = keccak256(\n        \"PermitBatch(PermitDetails[] details,address spender,uint256 sigDeadline)PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\"\n    );\n\n    bytes32 public constant _TOKEN_PERMISSIONS_TYPEHASH = keccak256(\"TokenPermissions(address token,uint256 amount)\");\n\n    bytes32 public constant _PERMIT_TRANSFER_FROM_TYPEHASH = keccak256(\n        \"PermitTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline)TokenPermissions(address token,uint256 amount)\"\n    );\n\n    bytes32 public constant _PERMIT_BATCH_TRANSFER_FROM_TYPEHASH = keccak256(\n        \"PermitBatchTransferFrom(TokenPermissions[] permitted,address spender,uint256 nonce,uint256 deadline)TokenPermissions(address token,uint256 amount)\"\n    );\n\n    string public constant _TOKEN_PERMISSIONS_TYPESTRING = \"TokenPermissions(address token,uint256 amount)\";\n\n    string public constant _PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB =\n        \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\";\n\n    string public constant _PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB =\n        \"PermitBatchWitnessTransferFrom(TokenPermissions[] permitted,address spender,uint256 nonce,uint256 deadline,\";\n\n    function hash(IAllowanceTransfer.PermitSingle memory permitSingle) internal pure returns (bytes32) {\n        bytes32 permitHash = _hashPermitDetails(permitSingle.details);\n        return\n            keccak256(abi.encode(_PERMIT_SINGLE_TYPEHASH, permitHash, permitSingle.spender, permitSingle.sigDeadline));\n    }\n\n    function hash(IAllowanceTransfer.PermitBatch memory permitBatch) internal pure returns (bytes32) {\n        uint256 numPermits = permitBatch.details.length;\n        bytes32[] memory permitHashes = new bytes32[](numPermits);\n        for (uint256 i = 0; i < numPermits; ++i) {\n            permitHashes[i] = _hashPermitDetails(permitBatch.details[i]);\n        }\n        return keccak256(\n            abi.encode(\n                _PERMIT_BATCH_TYPEHASH,\n                keccak256(abi.encodePacked(permitHashes)),\n                permitBatch.spender,\n                permitBatch.sigDeadline\n            )\n        );\n    }\n\n    function hash(ISignatureTransfer.PermitTransferFrom memory permit) internal view returns (bytes32) {\n        bytes32 tokenPermissionsHash = _hashTokenPermissions(permit.permitted);\n        return keccak256(\n            abi.encode(_PERMIT_TRANSFER_FROM_TYPEHASH, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline)\n        );\n    }\n\n    function hash(ISignatureTransfer.PermitBatchTransferFrom memory permit) internal view returns (bytes32) {\n        uint256 numPermitted = permit.permitted.length;\n        bytes32[] memory tokenPermissionHashes = new bytes32[](numPermitted);\n\n        for (uint256 i = 0; i < numPermitted; ++i) {\n            tokenPermissionHashes[i] = _hashTokenPermissions(permit.permitted[i]);\n        }\n\n        return keccak256(\n            abi.encode(\n                _PERMIT_BATCH_TRANSFER_FROM_TYPEHASH,\n                keccak256(abi.encodePacked(tokenPermissionHashes)),\n                msg.sender,\n                permit.nonce,\n                permit.deadline\n            )\n        );\n    }\n\n    function hashWithWitness(\n        ISignatureTransfer.PermitTransferFrom memory permit,\n        bytes32 witness,\n        string calldata witnessTypeString\n    ) internal view returns (bytes32) {\n        bytes32 typeHash = keccak256(abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString));\n\n        bytes32 tokenPermissionsHash = _hashTokenPermissions(permit.permitted);\n        return keccak256(abi.encode(typeHash, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline, witness));\n    }\n\n    function hashWithWitness(\n        ISignatureTransfer.PermitBatchTransferFrom memory permit,\n        bytes32 witness,\n        string calldata witnessTypeString\n    ) internal view returns (bytes32) {\n        bytes32 typeHash =\n            keccak256(abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString));\n\n        uint256 numPermitted = permit.permitted.length;\n        bytes32[] memory tokenPermissionHashes = new bytes32[](numPermitted);\n\n        for (uint256 i = 0; i < numPermitted; ++i) {\n            tokenPermissionHashes[i] = _hashTokenPermissions(permit.permitted[i]);\n        }\n\n        return keccak256(\n            abi.encode(\n                typeHash,\n                keccak256(abi.encodePacked(tokenPermissionHashes)),\n                msg.sender,\n                permit.nonce,\n                permit.deadline,\n                witness\n            )\n        );\n    }\n\n    function _hashPermitDetails(IAllowanceTransfer.PermitDetails memory details) private pure returns (bytes32) {\n        return keccak256(abi.encode(_PERMIT_DETAILS_TYPEHASH, details));\n    }\n\n    function _hashTokenPermissions(ISignatureTransfer.TokenPermissions memory permitted)\n        private\n        pure\n        returns (bytes32)\n    {\n        return keccak256(abi.encode(_TOKEN_PERMISSIONS_TYPEHASH, permitted));\n    }\n}\n"
			},
			"contracts/contracts/interfaces/ISignatureTransfer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport {IEIP712} from \"./IEIP712.sol\";\n\n/// @title SignatureTransfer\n/// @notice Handles ERC20 token transfers through signature based actions\n/// @dev Requires user's token approval on the Permit2 contract\ninterface ISignatureTransfer is IEIP712 {\n    /// @notice Thrown when the requested amount for a transfer is larger than the permissioned amount\n    /// @param maxAmount The maximum amount a spender can request to transfer\n    error InvalidAmount(uint256 maxAmount);\n\n    /// @notice Thrown when the number of tokens permissioned to a spender does not match the number of tokens being transferred\n    /// @dev If the spender does not need to transfer the number of tokens permitted, the spender can request amount 0 to be transferred\n    error LengthMismatch();\n\n    /// @notice Emits an event when the owner successfully invalidates an unordered nonce.\n    event UnorderedNonceInvalidation(address indexed owner, uint256 word, uint256 mask);\n\n    /// @notice The token and amount details for a transfer signed in the permit transfer signature\n    struct TokenPermissions {\n        // ERC20 token address\n        address token;\n        // the maximum amount that can be spent\n        uint256 amount;\n    }\n\n    /// @notice The signed permit message for a single token transfer\n    struct PermitTransferFrom {\n        TokenPermissions permitted;\n        // a unique value for every token owner's signature to prevent signature replays\n        uint256 nonce;\n        // deadline on the permit signature\n        uint256 deadline;\n    }\n\n    /// @notice Specifies the recipient address and amount for batched transfers.\n    /// @dev Recipients and amounts correspond to the index of the signed token permissions array.\n    /// @dev Reverts if the requested amount is greater than the permitted signed amount.\n    struct SignatureTransferDetails {\n        // recipient address\n        address to;\n        // spender requested amount\n        uint256 requestedAmount;\n    }\n\n    /// @notice Used to reconstruct the signed permit message for multiple token transfers\n    /// @dev Do not need to pass in spender address as it is required that it is msg.sender\n    /// @dev Note that a user still signs over a spender address\n    struct PermitBatchTransferFrom {\n        // the tokens and corresponding amounts permitted for a transfer\n        TokenPermissions[] permitted;\n        // a unique value for every token owner's signature to prevent signature replays\n        uint256 nonce;\n        // deadline on the permit signature\n        uint256 deadline;\n    }\n\n    /// @notice A map from token owner address and a caller specified word index to a bitmap. Used to set bits in the bitmap to prevent against signature replay protection\n    /// @dev Uses unordered nonces so that permit messages do not need to be spent in a certain order\n    /// @dev The mapping is indexed first by the token owner, then by an index specified in the nonce\n    /// @dev It returns a uint256 bitmap\n    /// @dev The index, or wordPosition is capped at type(uint248).max\n    function nonceBitmap(address, uint256) external view returns (uint256);\n\n    /// @notice Transfers a token using a signed permit message\n    /// @dev Reverts if the requested amount is greater than the permitted signed amount\n    /// @param permit The permit data signed over by the owner\n    /// @param owner The owner of the tokens to transfer\n    /// @param transferDetails The spender's requested transfer details for the permitted token\n    /// @param signature The signature to verify\n    function permitTransferFrom(\n        PermitTransferFrom memory permit,\n        SignatureTransferDetails calldata transferDetails,\n        address owner,\n        bytes calldata signature\n    ) external;\n\n    /// @notice Transfers a token using a signed permit message\n    /// @notice Includes extra data provided by the caller to verify signature over\n    /// @dev The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition\n    /// @dev Reverts if the requested amount is greater than the permitted signed amount\n    /// @param permit The permit data signed over by the owner\n    /// @param owner The owner of the tokens to transfer\n    /// @param transferDetails The spender's requested transfer details for the permitted token\n    /// @param witness Extra data to include when checking the user signature\n    /// @param witnessTypeString The EIP-712 type definition for remaining string stub of the typehash\n    /// @param signature The signature to verify\n    function permitWitnessTransferFrom(\n        PermitTransferFrom memory permit,\n        SignatureTransferDetails calldata transferDetails,\n        address owner,\n        bytes32 witness,\n        string calldata witnessTypeString,\n        bytes calldata signature\n    ) external;\n\n    /// @notice Transfers multiple tokens using a signed permit message\n    /// @param permit The permit data signed over by the owner\n    /// @param owner The owner of the tokens to transfer\n    /// @param transferDetails Specifies the recipient and requested amount for the token transfer\n    /// @param signature The signature to verify\n    function permitTransferFrom(\n        PermitBatchTransferFrom memory permit,\n        SignatureTransferDetails[] calldata transferDetails,\n        address owner,\n        bytes calldata signature\n    ) external;\n\n    /// @notice Transfers multiple tokens using a signed permit message\n    /// @dev The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition\n    /// @notice Includes extra data provided by the caller to verify signature over\n    /// @param permit The permit data signed over by the owner\n    /// @param owner The owner of the tokens to transfer\n    /// @param transferDetails Specifies the recipient and requested amount for the token transfer\n    /// @param witness Extra data to include when checking the user signature\n    /// @param witnessTypeString The EIP-712 type definition for remaining string stub of the typehash\n    /// @param signature The signature to verify\n    function permitWitnessTransferFrom(\n        PermitBatchTransferFrom memory permit,\n        SignatureTransferDetails[] calldata transferDetails,\n        address owner,\n        bytes32 witness,\n        string calldata witnessTypeString,\n        bytes calldata signature\n    ) external;\n\n    /// @notice Invalidates the bits specified in mask for the bitmap at the word position\n    /// @dev The wordPos is maxed at type(uint248).max\n    /// @param wordPos A number to index the nonceBitmap at\n    /// @param mask A bitmap masked against msg.sender's current bitmap at the word position\n    function invalidateUnorderedNonces(uint256 wordPos, uint256 mask) external;\n}\n"
			},
			"contracts/contracts/interfaces/IAllowanceTransfer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IEIP712} from \"./IEIP712.sol\";\n\n/// @title AllowanceTransfer\n/// @notice Handles ERC20 token permissions through signature based allowance setting and ERC20 token transfers by checking allowed amounts\n/// @dev Requires user's token approval on the Permit2 contract\ninterface IAllowanceTransfer is IEIP712 {\n    /// @notice Thrown when an allowance on a token has expired.\n    /// @param deadline The timestamp at which the allowed amount is no longer valid\n    error AllowanceExpired(uint256 deadline);\n\n    /// @notice Thrown when an allowance on a token has been depleted.\n    /// @param amount The maximum amount allowed\n    error InsufficientAllowance(uint256 amount);\n\n    /// @notice Thrown when too many nonces are invalidated.\n    error ExcessiveInvalidation();\n\n    /// @notice Emits an event when the owner successfully invalidates an ordered nonce.\n    event NonceInvalidation(\n        address indexed owner, address indexed token, address indexed spender, uint48 newNonce, uint48 oldNonce\n    );\n\n    /// @notice Emits an event when the owner successfully sets permissions on a token for the spender.\n    event Approval(\n        address indexed owner, address indexed token, address indexed spender, uint160 amount, uint48 expiration\n    );\n\n    /// @notice Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender.\n    event Permit(\n        address indexed owner,\n        address indexed token,\n        address indexed spender,\n        uint160 amount,\n        uint48 expiration,\n        uint48 nonce\n    );\n\n    /// @notice Emits an event when the owner sets the allowance back to 0 with the lockdown function.\n    event Lockdown(address indexed owner, address token, address spender);\n\n    /// @notice The permit data for a token\n    struct PermitDetails {\n        // ERC20 token address\n        address token;\n        // the maximum amount allowed to spend\n        uint160 amount;\n        // timestamp at which a spender's token allowances become invalid\n        uint48 expiration;\n        // an incrementing value indexed per owner,token,and spender for each signature\n        uint48 nonce;\n    }\n\n    /// @notice The permit message signed for a single token allowance\n    struct PermitSingle {\n        // the permit data for a single token alownce\n        PermitDetails details;\n        // address permissioned on the allowed tokens\n        address spender;\n        // deadline on the permit signature\n        uint256 sigDeadline;\n    }\n\n    /// @notice The permit message signed for multiple token allowances\n    struct PermitBatch {\n        // the permit data for multiple token allowances\n        PermitDetails[] details;\n        // address permissioned on the allowed tokens\n        address spender;\n        // deadline on the permit signature\n        uint256 sigDeadline;\n    }\n\n    /// @notice The saved permissions\n    /// @dev This info is saved per owner, per token, per spender and all signed over in the permit message\n    /// @dev Setting amount to type(uint160).max sets an unlimited approval\n    struct PackedAllowance {\n        // amount allowed\n        uint160 amount;\n        // permission expiry\n        uint48 expiration;\n        // an incrementing value indexed per owner,token,and spender for each signature\n        uint48 nonce;\n    }\n\n    /// @notice A token spender pair.\n    struct TokenSpenderPair {\n        // the token the spender is approved\n        address token;\n        // the spender address\n        address spender;\n    }\n\n    /// @notice Details for a token transfer.\n    struct AllowanceTransferDetails {\n        // the owner of the token\n        address from;\n        // the recipient of the token\n        address to;\n        // the amount of the token\n        uint160 amount;\n        // the token to be transferred\n        address token;\n    }\n\n    /// @notice A mapping from owner address to token address to spender address to PackedAllowance struct, which contains details and conditions of the approval.\n    /// @notice The mapping is indexed in the above order see: allowance[ownerAddress][tokenAddress][spenderAddress]\n    /// @dev The packed slot holds the allowed amount, expiration at which the allowed amount is no longer valid, and current nonce thats updated on any signature based approvals.\n    function allowance(address user, address token, address spender)\n        external\n        view\n        returns (uint160 amount, uint48 expiration, uint48 nonce);\n\n    /// @notice Approves the spender to use up to amount of the specified token up until the expiration\n    /// @param token The token to approve\n    /// @param spender The spender address to approve\n    /// @param amount The approved amount of the token\n    /// @param expiration The timestamp at which the approval is no longer valid\n    /// @dev The packed allowance also holds a nonce, which will stay unchanged in approve\n    /// @dev Setting amount to type(uint160).max sets an unlimited approval\n    function approve(address token, address spender, uint160 amount, uint48 expiration) external;\n\n    /// @notice Permit a spender to a given amount of the owners token via the owner's EIP-712 signature\n    /// @dev May fail if the owner's nonce was invalidated in-flight by invalidateNonce\n    /// @param owner The owner of the tokens being approved\n    /// @param permitSingle Data signed over by the owner specifying the terms of approval\n    /// @param signature The owner's signature over the permit data\n    function permit(address owner, PermitSingle memory permitSingle, bytes calldata signature) external;\n\n    /// @notice Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature\n    /// @dev May fail if the owner's nonce was invalidated in-flight by invalidateNonce\n    /// @param owner The owner of the tokens being approved\n    /// @param permitBatch Data signed over by the owner specifying the terms of approval\n    /// @param signature The owner's signature over the permit data\n    function permit(address owner, PermitBatch memory permitBatch, bytes calldata signature) external;\n\n    /// @notice Transfer approved tokens from one address to another\n    /// @param from The address to transfer from\n    /// @param to The address of the recipient\n    /// @param amount The amount of the token to transfer\n    /// @param token The token address to transfer\n    /// @dev Requires the from address to have approved at least the desired amount\n    /// of tokens to msg.sender.\n    function transferFrom(address from, address to, uint160 amount, address token) external;\n\n    /// @notice Transfer approved tokens in a batch\n    /// @param transferDetails Array of owners, recipients, amounts, and tokens for the transfers\n    /// @dev Requires the from addresses to have approved at least the desired amount\n    /// of tokens to msg.sender.\n    function transferFrom(AllowanceTransferDetails[] calldata transferDetails) external;\n\n    /// @notice Enables performing a \"lockdown\" of the sender's Permit2 identity\n    /// by batch revoking approvals\n    /// @param approvals Array of approvals to revoke.\n    function lockdown(TokenSpenderPair[] calldata approvals) external;\n\n    /// @notice Invalidate nonces for a given (token, spender) pair\n    /// @param token The token to invalidate nonces for\n    /// @param spender The spender to invalidate nonces for\n    /// @param newNonce The new nonce to set. Invalidates all nonces less than it.\n    /// @dev Can't invalidate more than 2**16 nonces per transaction.\n    function invalidateNonces(address token, address spender, uint48 newNonce) external;\n}\n"
			},
			"contracts/contracts/interfaces/IEIP712.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IEIP712 {\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/contracts/interfaces/IAllowanceTransfer.sol": {
				"IAllowanceTransfer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "AllowanceExpired",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExcessiveInvalidation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "InsufficientAllowance",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "expiration",
									"type": "uint48"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "Lockdown",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "newNonce",
									"type": "uint48"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "oldNonce",
									"type": "uint48"
								}
							],
							"name": "NonceInvalidation",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "expiration",
									"type": "uint48"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "nonce",
									"type": "uint48"
								}
							],
							"name": "Permit",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"internalType": "uint48",
									"name": "expiration",
									"type": "uint48"
								},
								{
									"internalType": "uint48",
									"name": "nonce",
									"type": "uint48"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"internalType": "uint48",
									"name": "expiration",
									"type": "uint48"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint48",
									"name": "newNonce",
									"type": "uint48"
								}
							],
							"name": "invalidateNonces",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "spender",
											"type": "address"
										}
									],
									"internalType": "struct IAllowanceTransfer.TokenSpenderPair[]",
									"name": "approvals",
									"type": "tuple[]"
								}
							],
							"name": "lockdown",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint160",
													"name": "amount",
													"type": "uint160"
												},
												{
													"internalType": "uint48",
													"name": "expiration",
													"type": "uint48"
												},
												{
													"internalType": "uint48",
													"name": "nonce",
													"type": "uint48"
												}
											],
											"internalType": "struct IAllowanceTransfer.PermitDetails[]",
											"name": "details",
											"type": "tuple[]"
										},
										{
											"internalType": "address",
											"name": "spender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "sigDeadline",
											"type": "uint256"
										}
									],
									"internalType": "struct IAllowanceTransfer.PermitBatch",
									"name": "permitBatch",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint160",
													"name": "amount",
													"type": "uint160"
												},
												{
													"internalType": "uint48",
													"name": "expiration",
													"type": "uint48"
												},
												{
													"internalType": "uint48",
													"name": "nonce",
													"type": "uint48"
												}
											],
											"internalType": "struct IAllowanceTransfer.PermitDetails",
											"name": "details",
											"type": "tuple"
										},
										{
											"internalType": "address",
											"name": "spender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "sigDeadline",
											"type": "uint256"
										}
									],
									"internalType": "struct IAllowanceTransfer.PermitSingle",
									"name": "permitSingle",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "from",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint160",
											"name": "amount",
											"type": "uint160"
										},
										{
											"internalType": "address",
											"name": "token",
											"type": "address"
										}
									],
									"internalType": "struct IAllowanceTransfer.AllowanceTransferDetails[]",
									"name": "transferDetails",
									"type": "tuple[]"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Requires user's token approval on the Permit2 contract",
						"errors": {
							"AllowanceExpired(uint256)": [
								{
									"params": {
										"deadline": "The timestamp at which the allowed amount is no longer valid"
									}
								}
							],
							"InsufficientAllowance(uint256)": [
								{
									"params": {
										"amount": "The maximum amount allowed"
									}
								}
							]
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address,address)": {
								"details": "The packed slot holds the allowed amount, expiration at which the allowed amount is no longer valid, and current nonce thats updated on any signature based approvals."
							},
							"approve(address,address,uint160,uint48)": {
								"details": "The packed allowance also holds a nonce, which will stay unchanged in approveSetting amount to type(uint160).max sets an unlimited approval",
								"params": {
									"amount": "The approved amount of the token",
									"expiration": "The timestamp at which the approval is no longer valid",
									"spender": "The spender address to approve",
									"token": "The token to approve"
								}
							},
							"invalidateNonces(address,address,uint48)": {
								"details": "Can't invalidate more than 2**16 nonces per transaction.",
								"params": {
									"newNonce": "The new nonce to set. Invalidates all nonces less than it.",
									"spender": "The spender to invalidate nonces for",
									"token": "The token to invalidate nonces for"
								}
							},
							"lockdown((address,address)[])": {
								"params": {
									"approvals": "Array of approvals to revoke."
								}
							},
							"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)": {
								"details": "May fail if the owner's nonce was invalidated in-flight by invalidateNonce",
								"params": {
									"owner": "The owner of the tokens being approved",
									"permitSingle": "Data signed over by the owner specifying the terms of approval",
									"signature": "The owner's signature over the permit data"
								}
							},
							"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)": {
								"details": "May fail if the owner's nonce was invalidated in-flight by invalidateNonce",
								"params": {
									"owner": "The owner of the tokens being approved",
									"permitBatch": "Data signed over by the owner specifying the terms of approval",
									"signature": "The owner's signature over the permit data"
								}
							},
							"transferFrom((address,address,uint160,address)[])": {
								"details": "Requires the from addresses to have approved at least the desired amount of tokens to msg.sender.",
								"params": {
									"transferDetails": "Array of owners, recipients, amounts, and tokens for the transfers"
								}
							},
							"transferFrom(address,address,uint160,address)": {
								"details": "Requires the from address to have approved at least the desired amount of tokens to msg.sender.",
								"params": {
									"amount": "The amount of the token to transfer",
									"from": "The address to transfer from",
									"to": "The address of the recipient",
									"token": "The token address to transfer"
								}
							}
						},
						"title": "AllowanceTransfer",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address,address)": "927da105",
							"approve(address,address,uint160,uint48)": "87517c45",
							"invalidateNonces(address,address,uint48)": "65d9723c",
							"lockdown((address,address)[])": "cc53287f",
							"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)": "2b67b570",
							"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)": "2a2d80d1",
							"transferFrom((address,address,uint160,address)[])": "0d58b1db",
							"transferFrom(address,address,uint160,address)": "36c78516"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"AllowanceExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExcessiveInvalidation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"Lockdown\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"newNonce\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"oldNonce\",\"type\":\"uint48\"}],\"name\":\"NonceInvalidation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"name\":\"Permit\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"newNonce\",\"type\":\"uint48\"}],\"name\":\"invalidateNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"internalType\":\"struct IAllowanceTransfer.TokenSpenderPair[]\",\"name\":\"approvals\",\"type\":\"tuple[]\"}],\"name\":\"lockdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IAllowanceTransfer.PermitDetails[]\",\"name\":\"details\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sigDeadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowanceTransfer.PermitBatch\",\"name\":\"permitBatch\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IAllowanceTransfer.PermitDetails\",\"name\":\"details\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sigDeadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowanceTransfer.PermitSingle\",\"name\":\"permitSingle\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"internalType\":\"struct IAllowanceTransfer.AllowanceTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Requires user's token approval on the Permit2 contract\",\"errors\":{\"AllowanceExpired(uint256)\":[{\"params\":{\"deadline\":\"The timestamp at which the allowed amount is no longer valid\"}}],\"InsufficientAllowance(uint256)\":[{\"params\":{\"amount\":\"The maximum amount allowed\"}}]},\"kind\":\"dev\",\"methods\":{\"allowance(address,address,address)\":{\"details\":\"The packed slot holds the allowed amount, expiration at which the allowed amount is no longer valid, and current nonce thats updated on any signature based approvals.\"},\"approve(address,address,uint160,uint48)\":{\"details\":\"The packed allowance also holds a nonce, which will stay unchanged in approveSetting amount to type(uint160).max sets an unlimited approval\",\"params\":{\"amount\":\"The approved amount of the token\",\"expiration\":\"The timestamp at which the approval is no longer valid\",\"spender\":\"The spender address to approve\",\"token\":\"The token to approve\"}},\"invalidateNonces(address,address,uint48)\":{\"details\":\"Can't invalidate more than 2**16 nonces per transaction.\",\"params\":{\"newNonce\":\"The new nonce to set. Invalidates all nonces less than it.\",\"spender\":\"The spender to invalidate nonces for\",\"token\":\"The token to invalidate nonces for\"}},\"lockdown((address,address)[])\":{\"params\":{\"approvals\":\"Array of approvals to revoke.\"}},\"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)\":{\"details\":\"May fail if the owner's nonce was invalidated in-flight by invalidateNonce\",\"params\":{\"owner\":\"The owner of the tokens being approved\",\"permitSingle\":\"Data signed over by the owner specifying the terms of approval\",\"signature\":\"The owner's signature over the permit data\"}},\"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)\":{\"details\":\"May fail if the owner's nonce was invalidated in-flight by invalidateNonce\",\"params\":{\"owner\":\"The owner of the tokens being approved\",\"permitBatch\":\"Data signed over by the owner specifying the terms of approval\",\"signature\":\"The owner's signature over the permit data\"}},\"transferFrom((address,address,uint160,address)[])\":{\"details\":\"Requires the from addresses to have approved at least the desired amount of tokens to msg.sender.\",\"params\":{\"transferDetails\":\"Array of owners, recipients, amounts, and tokens for the transfers\"}},\"transferFrom(address,address,uint160,address)\":{\"details\":\"Requires the from address to have approved at least the desired amount of tokens to msg.sender.\",\"params\":{\"amount\":\"The amount of the token to transfer\",\"from\":\"The address to transfer from\",\"to\":\"The address of the recipient\",\"token\":\"The token address to transfer\"}}},\"title\":\"AllowanceTransfer\",\"version\":1},\"userdoc\":{\"errors\":{\"AllowanceExpired(uint256)\":[{\"notice\":\"Thrown when an allowance on a token has expired.\"}],\"ExcessiveInvalidation()\":[{\"notice\":\"Thrown when too many nonces are invalidated.\"}],\"InsufficientAllowance(uint256)\":[{\"notice\":\"Thrown when an allowance on a token has been depleted.\"}]},\"events\":{\"Approval(address,address,address,uint160,uint48)\":{\"notice\":\"Emits an event when the owner successfully sets permissions on a token for the spender.\"},\"Lockdown(address,address,address)\":{\"notice\":\"Emits an event when the owner sets the allowance back to 0 with the lockdown function.\"},\"NonceInvalidation(address,address,address,uint48,uint48)\":{\"notice\":\"Emits an event when the owner successfully invalidates an ordered nonce.\"},\"Permit(address,address,address,uint160,uint48,uint48)\":{\"notice\":\"Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender.\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address,address)\":{\"notice\":\"A mapping from owner address to token address to spender address to PackedAllowance struct, which contains details and conditions of the approval.The mapping is indexed in the above order see: allowance[ownerAddress][tokenAddress][spenderAddress]\"},\"approve(address,address,uint160,uint48)\":{\"notice\":\"Approves the spender to use up to amount of the specified token up until the expiration\"},\"invalidateNonces(address,address,uint48)\":{\"notice\":\"Invalidate nonces for a given (token, spender) pair\"},\"lockdown((address,address)[])\":{\"notice\":\"Enables performing a \\\"lockdown\\\" of the sender's Permit2 identity by batch revoking approvals\"},\"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)\":{\"notice\":\"Permit a spender to a given amount of the owners token via the owner's EIP-712 signature\"},\"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)\":{\"notice\":\"Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature\"},\"transferFrom((address,address,uint160,address)[])\":{\"notice\":\"Transfer approved tokens in a batch\"},\"transferFrom(address,address,uint160,address)\":{\"notice\":\"Transfer approved tokens from one address to another\"}},\"notice\":\"Handles ERC20 token permissions through signature based allowance setting and ERC20 token transfers by checking allowed amounts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/interfaces/IAllowanceTransfer.sol\":\"IAllowanceTransfer\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x37f0ac203b6ef605c9533e1a739477e8e9dcea90710b40e645a367f8a21ace29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0104d72aeaec1cd66cc232e7de7b7ead08608efcc179491b8a66387614670b0\",\"dweb:/ipfs/QmfAZDyuNC9FXXbnJUwqHNwmAK6uRrXxtWEytLsxjskPsN\"]},\"contracts/contracts/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"AllowanceExpired(uint256)": [
								{
									"notice": "Thrown when an allowance on a token has expired."
								}
							],
							"ExcessiveInvalidation()": [
								{
									"notice": "Thrown when too many nonces are invalidated."
								}
							],
							"InsufficientAllowance(uint256)": [
								{
									"notice": "Thrown when an allowance on a token has been depleted."
								}
							]
						},
						"events": {
							"Approval(address,address,address,uint160,uint48)": {
								"notice": "Emits an event when the owner successfully sets permissions on a token for the spender."
							},
							"Lockdown(address,address,address)": {
								"notice": "Emits an event when the owner sets the allowance back to 0 with the lockdown function."
							},
							"NonceInvalidation(address,address,address,uint48,uint48)": {
								"notice": "Emits an event when the owner successfully invalidates an ordered nonce."
							},
							"Permit(address,address,address,uint160,uint48,uint48)": {
								"notice": "Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender."
							}
						},
						"kind": "user",
						"methods": {
							"allowance(address,address,address)": {
								"notice": "A mapping from owner address to token address to spender address to PackedAllowance struct, which contains details and conditions of the approval.The mapping is indexed in the above order see: allowance[ownerAddress][tokenAddress][spenderAddress]"
							},
							"approve(address,address,uint160,uint48)": {
								"notice": "Approves the spender to use up to amount of the specified token up until the expiration"
							},
							"invalidateNonces(address,address,uint48)": {
								"notice": "Invalidate nonces for a given (token, spender) pair"
							},
							"lockdown((address,address)[])": {
								"notice": "Enables performing a \"lockdown\" of the sender's Permit2 identity by batch revoking approvals"
							},
							"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)": {
								"notice": "Permit a spender to a given amount of the owners token via the owner's EIP-712 signature"
							},
							"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)": {
								"notice": "Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature"
							},
							"transferFrom((address,address,uint160,address)[])": {
								"notice": "Transfer approved tokens in a batch"
							},
							"transferFrom(address,address,uint160,address)": {
								"notice": "Transfer approved tokens from one address to another"
							}
						},
						"notice": "Handles ERC20 token permissions through signature based allowance setting and ERC20 token transfers by checking allowed amounts",
						"version": 1
					}
				}
			},
			"contracts/contracts/interfaces/IEIP712.sol": {
				"IEIP712": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/interfaces/IEIP712.sol\":\"IEIP712\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/interfaces/ISignatureTransfer.sol": {
				"ISignatureTransfer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "maxAmount",
									"type": "uint256"
								}
							],
							"name": "InvalidAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "LengthMismatch",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "word",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "mask",
									"type": "uint256"
								}
							],
							"name": "UnorderedNonceInvalidation",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "wordPos",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "mask",
									"type": "uint256"
								}
							],
							"name": "invalidateUnorderedNonces",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "nonceBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct ISignatureTransfer.TokenPermissions",
											"name": "permitted",
											"type": "tuple"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.PermitTransferFrom",
									"name": "permit",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "requestedAmount",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.SignatureTransferDetails",
									"name": "transferDetails",
									"type": "tuple"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permitTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct ISignatureTransfer.TokenPermissions[]",
											"name": "permitted",
											"type": "tuple[]"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.PermitBatchTransferFrom",
									"name": "permit",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "requestedAmount",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.SignatureTransferDetails[]",
									"name": "transferDetails",
									"type": "tuple[]"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permitTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct ISignatureTransfer.TokenPermissions",
											"name": "permitted",
											"type": "tuple"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.PermitTransferFrom",
									"name": "permit",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "requestedAmount",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.SignatureTransferDetails",
									"name": "transferDetails",
									"type": "tuple"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "witness",
									"type": "bytes32"
								},
								{
									"internalType": "string",
									"name": "witnessTypeString",
									"type": "string"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permitWitnessTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct ISignatureTransfer.TokenPermissions[]",
											"name": "permitted",
											"type": "tuple[]"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.PermitBatchTransferFrom",
									"name": "permit",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "requestedAmount",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.SignatureTransferDetails[]",
									"name": "transferDetails",
									"type": "tuple[]"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "witness",
									"type": "bytes32"
								},
								{
									"internalType": "string",
									"name": "witnessTypeString",
									"type": "string"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permitWitnessTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Requires user's token approval on the Permit2 contract",
						"errors": {
							"InvalidAmount(uint256)": [
								{
									"params": {
										"maxAmount": "The maximum amount a spender can request to transfer"
									}
								}
							],
							"LengthMismatch()": [
								{
									"details": "If the spender does not need to transfer the number of tokens permitted, the spender can request amount 0 to be transferred"
								}
							]
						},
						"kind": "dev",
						"methods": {
							"invalidateUnorderedNonces(uint256,uint256)": {
								"details": "The wordPos is maxed at type(uint248).max",
								"params": {
									"mask": "A bitmap masked against msg.sender's current bitmap at the word position",
									"wordPos": "A number to index the nonceBitmap at"
								}
							},
							"nonceBitmap(address,uint256)": {
								"details": "Uses unordered nonces so that permit messages do not need to be spent in a certain orderThe mapping is indexed first by the token owner, then by an index specified in the nonceIt returns a uint256 bitmapThe index, or wordPosition is capped at type(uint248).max"
							},
							"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)": {
								"details": "Reverts if the requested amount is greater than the permitted signed amount",
								"params": {
									"owner": "The owner of the tokens to transfer",
									"permit": "The permit data signed over by the owner",
									"signature": "The signature to verify",
									"transferDetails": "The spender's requested transfer details for the permitted token"
								}
							},
							"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)": {
								"params": {
									"owner": "The owner of the tokens to transfer",
									"permit": "The permit data signed over by the owner",
									"signature": "The signature to verify",
									"transferDetails": "Specifies the recipient and requested amount for the token transfer"
								}
							},
							"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)": {
								"details": "The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definitionReverts if the requested amount is greater than the permitted signed amount",
								"params": {
									"owner": "The owner of the tokens to transfer",
									"permit": "The permit data signed over by the owner",
									"signature": "The signature to verify",
									"transferDetails": "The spender's requested transfer details for the permitted token",
									"witness": "Extra data to include when checking the user signature",
									"witnessTypeString": "The EIP-712 type definition for remaining string stub of the typehash"
								}
							},
							"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)": {
								"details": "The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition",
								"params": {
									"owner": "The owner of the tokens to transfer",
									"permit": "The permit data signed over by the owner",
									"signature": "The signature to verify",
									"transferDetails": "Specifies the recipient and requested amount for the token transfer",
									"witness": "Extra data to include when checking the user signature",
									"witnessTypeString": "The EIP-712 type definition for remaining string stub of the typehash"
								}
							}
						},
						"title": "SignatureTransfer",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"invalidateUnorderedNonces(uint256,uint256)": "3ff9dcb1",
							"nonceBitmap(address,uint256)": "4fe02b44",
							"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)": "30f28b7a",
							"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)": "edd9444b",
							"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)": "137c29fe",
							"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)": "fe8ec1a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LengthMismatch\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"word\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mask\",\"type\":\"uint256\"}],\"name\":\"UnorderedNonceInvalidation\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wordPos\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mask\",\"type\":\"uint256\"}],\"name\":\"invalidateUnorderedNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nonceBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions\",\"name\":\"permitted\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails\",\"name\":\"transferDetails\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions[]\",\"name\":\"permitted\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitBatchTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions\",\"name\":\"permitted\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails\",\"name\":\"transferDetails\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypeString\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitWitnessTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions[]\",\"name\":\"permitted\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitBatchTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypeString\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitWitnessTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Requires user's token approval on the Permit2 contract\",\"errors\":{\"InvalidAmount(uint256)\":[{\"params\":{\"maxAmount\":\"The maximum amount a spender can request to transfer\"}}],\"LengthMismatch()\":[{\"details\":\"If the spender does not need to transfer the number of tokens permitted, the spender can request amount 0 to be transferred\"}]},\"kind\":\"dev\",\"methods\":{\"invalidateUnorderedNonces(uint256,uint256)\":{\"details\":\"The wordPos is maxed at type(uint248).max\",\"params\":{\"mask\":\"A bitmap masked against msg.sender's current bitmap at the word position\",\"wordPos\":\"A number to index the nonceBitmap at\"}},\"nonceBitmap(address,uint256)\":{\"details\":\"Uses unordered nonces so that permit messages do not need to be spent in a certain orderThe mapping is indexed first by the token owner, then by an index specified in the nonceIt returns a uint256 bitmapThe index, or wordPosition is capped at type(uint248).max\"},\"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)\":{\"details\":\"Reverts if the requested amount is greater than the permitted signed amount\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"The spender's requested transfer details for the permitted token\"}},\"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)\":{\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"Specifies the recipient and requested amount for the token transfer\"}},\"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)\":{\"details\":\"The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definitionReverts if the requested amount is greater than the permitted signed amount\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"The spender's requested transfer details for the permitted token\",\"witness\":\"Extra data to include when checking the user signature\",\"witnessTypeString\":\"The EIP-712 type definition for remaining string stub of the typehash\"}},\"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)\":{\"details\":\"The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"Specifies the recipient and requested amount for the token transfer\",\"witness\":\"Extra data to include when checking the user signature\",\"witnessTypeString\":\"The EIP-712 type definition for remaining string stub of the typehash\"}}},\"title\":\"SignatureTransfer\",\"version\":1},\"userdoc\":{\"errors\":{\"InvalidAmount(uint256)\":[{\"notice\":\"Thrown when the requested amount for a transfer is larger than the permissioned amount\"}],\"LengthMismatch()\":[{\"notice\":\"Thrown when the number of tokens permissioned to a spender does not match the number of tokens being transferred\"}]},\"events\":{\"UnorderedNonceInvalidation(address,uint256,uint256)\":{\"notice\":\"Emits an event when the owner successfully invalidates an unordered nonce.\"}},\"kind\":\"user\",\"methods\":{\"invalidateUnorderedNonces(uint256,uint256)\":{\"notice\":\"Invalidates the bits specified in mask for the bitmap at the word position\"},\"nonceBitmap(address,uint256)\":{\"notice\":\"A map from token owner address and a caller specified word index to a bitmap. Used to set bits in the bitmap to prevent against signature replay protection\"},\"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)\":{\"notice\":\"Transfers a token using a signed permit message\"},\"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)\":{\"notice\":\"Transfers multiple tokens using a signed permit message\"},\"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)\":{\"notice\":\"Transfers a token using a signed permit messageIncludes extra data provided by the caller to verify signature over\"},\"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)\":{\"notice\":\"Transfers multiple tokens using a signed permit messageIncludes extra data provided by the caller to verify signature over\"}},\"notice\":\"Handles ERC20 token transfers through signature based actions\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/interfaces/ISignatureTransfer.sol\":\"ISignatureTransfer\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]},\"contracts/contracts/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0x16a051e45a3f1ab341a8560aa106c483c3d0a3be4abc52225651c78939b18f93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7cda3c6ed2db1454b4a6ec1e418956d199019085d92163a038d0064615a5acb\",\"dweb:/ipfs/QmWDfZwi8jcGFBuiwHKq6iBWCZq2mA8HmkM9NNTzotMpXH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"InvalidAmount(uint256)": [
								{
									"notice": "Thrown when the requested amount for a transfer is larger than the permissioned amount"
								}
							],
							"LengthMismatch()": [
								{
									"notice": "Thrown when the number of tokens permissioned to a spender does not match the number of tokens being transferred"
								}
							]
						},
						"events": {
							"UnorderedNonceInvalidation(address,uint256,uint256)": {
								"notice": "Emits an event when the owner successfully invalidates an unordered nonce."
							}
						},
						"kind": "user",
						"methods": {
							"invalidateUnorderedNonces(uint256,uint256)": {
								"notice": "Invalidates the bits specified in mask for the bitmap at the word position"
							},
							"nonceBitmap(address,uint256)": {
								"notice": "A map from token owner address and a caller specified word index to a bitmap. Used to set bits in the bitmap to prevent against signature replay protection"
							},
							"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)": {
								"notice": "Transfers a token using a signed permit message"
							},
							"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)": {
								"notice": "Transfers multiple tokens using a signed permit message"
							},
							"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)": {
								"notice": "Transfers a token using a signed permit messageIncludes extra data provided by the caller to verify signature over"
							},
							"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)": {
								"notice": "Transfers multiple tokens using a signed permit messageIncludes extra data provided by the caller to verify signature over"
							}
						},
						"notice": "Handles ERC20 token transfers through signature based actions",
						"version": 1
					}
				}
			},
			"contracts/contracts/lib/PermitHash.sol": {
				"PermitHash": {
					"abi": [
						{
							"inputs": [],
							"name": "_PERMIT_BATCH_TRANSFER_FROM_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_PERMIT_BATCH_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_PERMIT_DETAILS_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_PERMIT_SINGLE_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_PERMIT_TRANSFER_FROM_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_TOKEN_PERMISSIONS_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_TOKEN_PERMISSIONS_TYPESTRING",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/lib/PermitHash.sol\":205:5770  library PermitHash {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"contracts/contracts/lib/PermitHash.sol\":205:5770  library PermitHash {... */\n      0x80\n      0x40\n      dup2\n      dup2\n      mstore\n      jumpi(tag_2, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_2:\n      0x00\n      swap2\n      dup3\n      calldataload\n      0xe0\n      shr\n      swap1\n      dup2\n      0x3eb8b8fd\n      eq\n      tag_4\n      jumpi\n      pop\n      dup1\n      0x415e982d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6302c3cf\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6e4f2775\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x78f16830\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x84b8efbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x90bbf2f3\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc0c7fa7e\n      eq\n      tag_18\n      jumpi\n      0xc5df4f03\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_22\n      jumpi\n      0x20\n      swap1\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":433:605  keccak256(... */\n      0xf3841cd1ff0085026a6327b620b67997ce40f282c88a8e905a7a5626e310f3d0\n        /* \"contracts/contracts/lib/PermitHash.sol\":205:5770  library PermitHash {... */\n      dup2\n      mstore\n      return\n    tag_22:\n      pop\n      dup1\n      revert\n    tag_18:\n      pop\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_22\n      jumpi\n      dup1\n      mload\n      swap1\n      0x60\n      dup3\n      add\n      dup3\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_26\n      jumpi\n      tag_28\n      swap4\n      pop\n      dup2\n      mstore\n      0x2e\n      dup3\n      mstore\n      0x546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75\n      0x20\n      dup4\n      add\n      mstore\n      shl(0x90, 0x696e7432353620616d6f756e7429)\n      dup2\n      dup4\n      add\n      mstore\n      mload\n      swap2\n      dup3\n      swap2\n      dup3\n      tag_1\n      jump\t// in\n    tag_28:\n      sub\n      swap1\n      return\n    tag_26:\n      shl(0xe0, 0x4e487b71)\n      dup5\n      mstore\n      mstore(0x04, 0x41)\n      0x24\n      dup5\n      revert\n    tag_16:\n      pop\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_22\n      jumpi\n      dup1\n      mload\n      swap1\n      0xa0\n      dup3\n      add\n      dup3\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_26\n      jumpi\n      tag_28\n      swap4\n      pop\n      dup2\n      mstore\n      0x6b\n      dup3\n      mstore\n      0x5065726d697442617463685769746e6573735472616e7366657246726f6d2854\n      0x20\n      dup4\n      add\n      mstore\n      0x6f6b656e5065726d697373696f6e735b5d207065726d69747465642c61646472\n      dup2\n      dup4\n      add\n      mstore\n      0x657373207370656e6465722c75696e74323536206e6f6e63652c75696e743235\n      0x60\n      dup4\n      add\n      mstore\n      shl(0xaa, 0x0d88191958591b1a5b994b)\n      0x80\n      dup4\n      add\n      mstore\n      mload\n      swap2\n      dup3\n      swap2\n      dup3\n      tag_1\n      jump\t// in\n    tag_14:\n      pop\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_22\n      jumpi\n      dup1\n      mload\n      swap1\n      0xa0\n      dup3\n      add\n      dup3\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_26\n      jumpi\n      tag_28\n      swap4\n      pop\n      dup2\n      mstore\n      0x64\n      dup3\n      mstore\n      0x5065726d69745769746e6573735472616e7366657246726f6d28546f6b656e50\n      0x20\n      dup4\n      add\n      mstore\n      0x65726d697373696f6e73207065726d69747465642c6164647265737320737065\n      dup2\n      dup4\n      add\n      mstore\n      0x6e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c\n      0x60\n      dup4\n      add\n      mstore\n      shl(0xe2, 0x1a5b994b)\n      0x80\n      dup4\n      add\n      mstore\n      mload\n      swap2\n      dup3\n      swap2\n      dup3\n      tag_1\n      jump\t// in\n    tag_12:\n      pop\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_22\n      jumpi\n      0x20\n      swap1\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":1018:1184  keccak256(... */\n      0x939c21a48a8dbe3a9a2404a1d46691e4d39f6583d6ec6b35714604c986d80106\n        /* \"contracts/contracts/lib/PermitHash.sol\":205:5770  library PermitHash {... */\n      dup2\n      mstore\n      return\n    tag_10:\n      pop\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_22\n      jumpi\n      0x20\n      swap1\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":289:376  keccak256(\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\") */\n      0x65626cad6cb96493bf6f5ebea28756c966f023ab9e8a83a7101849d5573b3678\n        /* \"contracts/contracts/lib/PermitHash.sol\":205:5770  library PermitHash {... */\n      dup2\n      mstore\n      return\n    tag_8:\n      pop\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_22\n      jumpi\n      0x20\n      swap1\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":661:834  keccak256(... */\n      0xaf1b0d30d2cab0380e68f0689007e3254993c596f2fdd0aaa7f4d04f79440863\n        /* \"contracts/contracts/lib/PermitHash.sol\":205:5770  library PermitHash {... */\n      dup2\n      mstore\n      return\n    tag_6:\n      pop\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_22\n      jumpi\n      0x20\n      swap1\n      mload\n        /* \"contracts/contracts/lib/PermitHash.sol\":895:954  keccak256(\"TokenPermissions(address token,uint256 amount)\") */\n      0x618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a1\n        /* \"contracts/contracts/lib/PermitHash.sol\":205:5770  library PermitHash {... */\n      dup2\n      mstore\n      return\n    tag_4:\n      dup4\n      swap1\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_22\n      jumpi\n      dup1\n        /* \"contracts/contracts/lib/PermitHash.sol\":1254:1427  keccak256(... */\n      0xfcf35f5ac6a2c28868dc44c302166470266239195f02b0ee408334829333b766\n        /* \"contracts/contracts/lib/PermitHash.sol\":205:5770  library PermitHash {... */\n      0x20\n      swap3\n      mstore\n      return\n    tag_1:\n      0x20\n      dup1\n      dup3\n      mstore\n      dup3\n      mload\n      dup2\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n      swap1\n      swap4\n      swap3\n      0x00\n    tag_49:\n      dup3\n      dup2\n      lt\n      tag_50\n      jumpi\n      pop\n      pop\n      0x40\n      swap3\n      swap4\n      pop\n      0x00\n      dup4\n      dup3\n      dup5\n      add\n      add\n      mstore\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      add\n      add\n      swap1\n      jump\t// out\n    tag_50:\n      dup2\n      dup2\n      add\n      dup7\n      add\n      mload\n      dup5\n      dup3\n      add\n      0x40\n      add\n      mstore\n      dup6\n      add\n      jump(tag_49)\n\n    auxdata: 0xa26469706673582212207458af539b487c583a1438aca8451ffb24eaaa05098a415fbc63b4e1e9b9f1b864736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523461001a57610448908161001f823930815050f35b5f80fdfe608060408181526004361015610013575f80fd5b5f91823560e01c9081633eb8b8fd1461039657508063415e982d146103615780636302c3cf1461032c5780636e4f2775146102f757806378f16830146102c257806384b8efbb1461020957806390bbf2f314610149578063c0c7fa7e146100ba5763c5df4f0314610082575f80fd5b816003193601126100b657602090517ff3841cd1ff0085026a6327b620b67997ce40f282c88a8e905a7a5626e310f3d08152f35b5080fd5b50816003193601126100b6578051906060820182811067ffffffffffffffff8211176101355761013193508152602e82527f546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c7560208301526d696e7432353620616d6f756e742960901b8183015251918291826103cb565b0390f35b634e487b7160e01b84526041600452602484fd5b50816003193601126100b65780519060a0820182811067ffffffffffffffff8211176101355761013193508152606b82527f5065726d697442617463685769746e6573735472616e7366657246726f6d285460208301527f6f6b656e5065726d697373696f6e735b5d207065726d69747465642c61646472818301527f657373207370656e6465722c75696e74323536206e6f6e63652c75696e74323560608301526a0d88191958591b1a5b994b60aa1b608083015251918291826103cb565b50816003193601126100b65780519060a0820182811067ffffffffffffffff8211176101355761013193508152606482527f5065726d69745769746e6573735472616e7366657246726f6d28546f6b656e5060208301527f65726d697373696f6e73207065726d69747465642c6164647265737320737065818301527f6e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c6060830152631a5b994b60e21b608083015251918291826103cb565b50816003193601126100b657602090517f939c21a48a8dbe3a9a2404a1d46691e4d39f6583d6ec6b35714604c986d801068152f35b50816003193601126100b657602090517f65626cad6cb96493bf6f5ebea28756c966f023ab9e8a83a7101849d5573b36788152f35b50816003193601126100b657602090517faf1b0d30d2cab0380e68f0689007e3254993c596f2fdd0aaa7f4d04f794408638152f35b50816003193601126100b657602090517f618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a18152f35b8390816003193601126100b657807ffcf35f5ac6a2c28868dc44c302166470266239195f02b0ee408334829333b76660209252f35b602080825282518183018190529093925f5b8281106103fe57505060409293505f838284010152601f8019910116010190565b8181018601518482016040015285016103dd56fea26469706673582212207458af539b487c583a1438aca8451ffb24eaaa05098a415fbc63b4e1e9b9f1b864736f6c63430008140033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x1A JUMPI PUSH2 0x448 SWAP1 DUP2 PUSH2 0x1F DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x3EB8B8FD EQ PUSH2 0x396 JUMPI POP DUP1 PUSH4 0x415E982D EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x6302C3CF EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x6E4F2775 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x78F16830 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x84B8EFBB EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x90BBF2F3 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0xC0C7FA7E EQ PUSH2 0xBA JUMPI PUSH4 0xC5DF4F03 EQ PUSH2 0x82 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0xF3841CD1FF0085026A6327B620B67997CE40F282C88A8E905A7A5626E310F3D0 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x135 JUMPI PUSH2 0x131 SWAP4 POP DUP2 MSTORE PUSH1 0x2E DUP3 MSTORE PUSH32 0x546F6B656E5065726D697373696F6E73286164647265737320746F6B656E2C75 PUSH1 0x20 DUP4 ADD MSTORE PUSH14 0x696E7432353620616D6F756E7429 PUSH1 0x90 SHL DUP2 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3CB JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI DUP1 MLOAD SWAP1 PUSH1 0xA0 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x135 JUMPI PUSH2 0x131 SWAP4 POP DUP2 MSTORE PUSH1 0x6B DUP3 MSTORE PUSH32 0x5065726D697442617463685769746E6573735472616E7366657246726F6D2854 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x6F6B656E5065726D697373696F6E735B5D207065726D69747465642C61646472 DUP2 DUP4 ADD MSTORE PUSH32 0x657373207370656E6465722C75696E74323536206E6F6E63652C75696E743235 PUSH1 0x60 DUP4 ADD MSTORE PUSH11 0xD88191958591B1A5B994B PUSH1 0xAA SHL PUSH1 0x80 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3CB JUMP JUMPDEST POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI DUP1 MLOAD SWAP1 PUSH1 0xA0 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x135 JUMPI PUSH2 0x131 SWAP4 POP DUP2 MSTORE PUSH1 0x64 DUP3 MSTORE PUSH32 0x5065726D69745769746E6573735472616E7366657246726F6D28546F6B656E50 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x65726D697373696F6E73207065726D69747465642C6164647265737320737065 DUP2 DUP4 ADD MSTORE PUSH32 0x6E6465722C75696E74323536206E6F6E63652C75696E7432353620646561646C PUSH1 0x60 DUP4 ADD MSTORE PUSH4 0x1A5B994B PUSH1 0xE2 SHL PUSH1 0x80 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3CB JUMP JUMPDEST POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x939C21A48A8DBE3A9A2404A1D46691E4D39F6583D6EC6B35714604C986D80106 DUP2 MSTORE RETURN JUMPDEST POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x65626CAD6CB96493BF6F5EBEA28756C966F023AB9E8A83A7101849D5573B3678 DUP2 MSTORE RETURN JUMPDEST POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0xAF1B0D30D2CAB0380E68F0689007E3254993C596F2FDD0AAA7F4D04F79440863 DUP2 MSTORE RETURN JUMPDEST POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x618358AC3DB8DC274F0CD8829DA7E234BD48CD73C4A740AEDE1ADEC9846D06A1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI DUP1 PUSH32 0xFCF35F5AC6A2C28868DC44C302166470266239195F02B0EE408334829333B766 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x3FE JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x3DD JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x58AF539B487C583A1438ACA8451FFB24EAAA05098A COINBASE PUSH0 0xBC PUSH4 0xB4E1E9B9 CALL 0xB8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "205:5565:3:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_encode_string": {
									"entryPoint": 971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060408181526004361015610013575f80fd5b5f91823560e01c9081633eb8b8fd1461039657508063415e982d146103615780636302c3cf1461032c5780636e4f2775146102f757806378f16830146102c257806384b8efbb1461020957806390bbf2f314610149578063c0c7fa7e146100ba5763c5df4f0314610082575f80fd5b816003193601126100b657602090517ff3841cd1ff0085026a6327b620b67997ce40f282c88a8e905a7a5626e310f3d08152f35b5080fd5b50816003193601126100b6578051906060820182811067ffffffffffffffff8211176101355761013193508152602e82527f546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c7560208301526d696e7432353620616d6f756e742960901b8183015251918291826103cb565b0390f35b634e487b7160e01b84526041600452602484fd5b50816003193601126100b65780519060a0820182811067ffffffffffffffff8211176101355761013193508152606b82527f5065726d697442617463685769746e6573735472616e7366657246726f6d285460208301527f6f6b656e5065726d697373696f6e735b5d207065726d69747465642c61646472818301527f657373207370656e6465722c75696e74323536206e6f6e63652c75696e74323560608301526a0d88191958591b1a5b994b60aa1b608083015251918291826103cb565b50816003193601126100b65780519060a0820182811067ffffffffffffffff8211176101355761013193508152606482527f5065726d69745769746e6573735472616e7366657246726f6d28546f6b656e5060208301527f65726d697373696f6e73207065726d69747465642c6164647265737320737065818301527f6e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c6060830152631a5b994b60e21b608083015251918291826103cb565b50816003193601126100b657602090517f939c21a48a8dbe3a9a2404a1d46691e4d39f6583d6ec6b35714604c986d801068152f35b50816003193601126100b657602090517f65626cad6cb96493bf6f5ebea28756c966f023ab9e8a83a7101849d5573b36788152f35b50816003193601126100b657602090517faf1b0d30d2cab0380e68f0689007e3254993c596f2fdd0aaa7f4d04f794408638152f35b50816003193601126100b657602090517f618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a18152f35b8390816003193601126100b657807ffcf35f5ac6a2c28868dc44c302166470266239195f02b0ee408334829333b76660209252f35b602080825282518183018190529093925f5b8281106103fe57505060409293505f838284010152601f8019910116010190565b8181018601518482016040015285016103dd56fea26469706673582212207458af539b487c583a1438aca8451ffb24eaaa05098a415fbc63b4e1e9b9f1b864736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x3EB8B8FD EQ PUSH2 0x396 JUMPI POP DUP1 PUSH4 0x415E982D EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x6302C3CF EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x6E4F2775 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x78F16830 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x84B8EFBB EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x90BBF2F3 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0xC0C7FA7E EQ PUSH2 0xBA JUMPI PUSH4 0xC5DF4F03 EQ PUSH2 0x82 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0xF3841CD1FF0085026A6327B620B67997CE40F282C88A8E905A7A5626E310F3D0 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x135 JUMPI PUSH2 0x131 SWAP4 POP DUP2 MSTORE PUSH1 0x2E DUP3 MSTORE PUSH32 0x546F6B656E5065726D697373696F6E73286164647265737320746F6B656E2C75 PUSH1 0x20 DUP4 ADD MSTORE PUSH14 0x696E7432353620616D6F756E7429 PUSH1 0x90 SHL DUP2 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3CB JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI DUP1 MLOAD SWAP1 PUSH1 0xA0 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x135 JUMPI PUSH2 0x131 SWAP4 POP DUP2 MSTORE PUSH1 0x6B DUP3 MSTORE PUSH32 0x5065726D697442617463685769746E6573735472616E7366657246726F6D2854 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x6F6B656E5065726D697373696F6E735B5D207065726D69747465642C61646472 DUP2 DUP4 ADD MSTORE PUSH32 0x657373207370656E6465722C75696E74323536206E6F6E63652C75696E743235 PUSH1 0x60 DUP4 ADD MSTORE PUSH11 0xD88191958591B1A5B994B PUSH1 0xAA SHL PUSH1 0x80 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3CB JUMP JUMPDEST POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI DUP1 MLOAD SWAP1 PUSH1 0xA0 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x135 JUMPI PUSH2 0x131 SWAP4 POP DUP2 MSTORE PUSH1 0x64 DUP3 MSTORE PUSH32 0x5065726D69745769746E6573735472616E7366657246726F6D28546F6B656E50 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x65726D697373696F6E73207065726D69747465642C6164647265737320737065 DUP2 DUP4 ADD MSTORE PUSH32 0x6E6465722C75696E74323536206E6F6E63652C75696E7432353620646561646C PUSH1 0x60 DUP4 ADD MSTORE PUSH4 0x1A5B994B PUSH1 0xE2 SHL PUSH1 0x80 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3CB JUMP JUMPDEST POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x939C21A48A8DBE3A9A2404A1D46691E4D39F6583D6EC6B35714604C986D80106 DUP2 MSTORE RETURN JUMPDEST POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x65626CAD6CB96493BF6F5EBEA28756C966F023AB9E8A83A7101849D5573B3678 DUP2 MSTORE RETURN JUMPDEST POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0xAF1B0D30D2CAB0380E68F0689007E3254993C596F2FDD0AAA7F4D04F79440863 DUP2 MSTORE RETURN JUMPDEST POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x618358AC3DB8DC274F0CD8829DA7E234BD48CD73C4A740AEDE1ADEC9846D06A1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB6 JUMPI DUP1 PUSH32 0xFCF35F5AC6A2C28868DC44C302166470266239195F02B0EE408334829333B766 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x3FE JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x3DD JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x58AF539B487C583A1438ACA8451FFB24EAAA05098A COINBASE PUSH0 0xBC PUSH4 0xB4E1E9B9 CALL 0xB8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "205:5565:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;433:172;205:5565;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;205:5565:3;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;205:5565:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;205:5565:3;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;205:5565:3;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1018:166;205:5565;;;;;;;;;;;;;;;;289:87;205:5565;;;;;;;;;;;;;;;;661:173;205:5565;;;;;;;;;;;;;;;;895:59;205:5565;;;;;;;;;;;;;;;1254:173;205:5565;;;;;;;;;;;;;;;;;;;;-1:-1:-1;205:5565:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "219200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_PERMIT_BATCH_TRANSFER_FROM_TYPEHASH()": "149",
								"_PERMIT_BATCH_TYPEHASH()": "194",
								"_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB()": "infinite",
								"_PERMIT_DETAILS_TYPEHASH()": "216",
								"_PERMIT_SINGLE_TYPEHASH()": "321",
								"_PERMIT_TRANSFER_FROM_TYPEHASH()": "238",
								"_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB()": "infinite",
								"_TOKEN_PERMISSIONS_TYPEHASH()": "172",
								"_TOKEN_PERMISSIONS_TYPESTRING()": "infinite"
							},
							"internal": {
								"_hashPermitDetails(struct IAllowanceTransfer.PermitDetails memory)": "infinite",
								"_hashTokenPermissions(struct ISignatureTransfer.TokenPermissions memory)": "infinite",
								"hash(struct IAllowanceTransfer.PermitBatch memory)": "infinite",
								"hash(struct IAllowanceTransfer.PermitSingle memory)": "infinite",
								"hash(struct ISignatureTransfer.PermitBatchTransferFrom memory)": "infinite",
								"hash(struct ISignatureTransfer.PermitTransferFrom memory)": "infinite",
								"hashWithWitness(struct ISignatureTransfer.PermitBatchTransferFrom memory,bytes32,string calldata)": "infinite",
								"hashWithWitness(struct ISignatureTransfer.PermitTransferFrom memory,bytes32,string calldata)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 205,
									"end": 5770,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "library_deploy_address"
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "RETURN",
									"source": 3
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 205,
									"end": 5770,
									"name": "REVERT",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207458af539b487c583a1438aca8451ffb24eaaa05098a415fbc63b4e1e9b9f1b864736f6c63430008140033",
									".code": [
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "3EB8B8FD"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "415E982D"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "6302C3CF"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "6E4F2775"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "78F16830"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "84B8EFBB"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "90BBF2F3"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "C0C7FA7E"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "C5DF4F03"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 433,
											"end": 605,
											"name": "PUSH",
											"source": 3,
											"value": "F3841CD1FF0085026A6327B620B67997CE40F282C88A8E905A7A5626E310F3D0"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "2E"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "546F6B656E5065726D697373696F6E73286164647265737320746F6B656E2C75"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "696E7432353620616D6F756E7429"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 205,
											"end": 5770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "6B"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "5065726D697442617463685769746E6573735472616E7366657246726F6D2854"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "6F6B656E5065726D697373696F6E735B5D207065726D69747465642C61646472"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "657373207370656E6465722C75696E74323536206E6F6E63652C75696E743235"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D88191958591B1A5B994B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 205,
											"end": 5770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "5065726D69745769746E6573735472616E7366657246726F6D28546F6B656E50"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "65726D697373696F6E73207065726D69747465642C6164647265737320737065"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "6E6465722C75696E74323536206E6F6E63652C75696E7432353620646561646C"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5B994B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 205,
											"end": 5770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1018,
											"end": 1184,
											"name": "PUSH",
											"source": 3,
											"value": "939C21A48A8DBE3A9A2404A1D46691E4D39F6583D6EC6B35714604C986D80106"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 289,
											"end": 376,
											"name": "PUSH",
											"source": 3,
											"value": "65626CAD6CB96493BF6F5EBEA28756C966F023AB9E8A83A7101849D5573B3678"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 661,
											"end": 834,
											"name": "PUSH",
											"source": 3,
											"value": "AF1B0D30D2CAB0380E68F0689007E3254993C596F2FDD0AAA7F4D04F79440863"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 895,
											"end": 954,
											"name": "PUSH",
											"source": 3,
											"value": "618358AC3DB8DC274F0CD8829DA7E234BD48CD73C4A740AEDE1ADEC9846D06A1"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1427,
											"name": "PUSH",
											"source": 3,
											"value": "FCF35F5AC6A2C28868DC44C302166470266239195F02B0EE408334829333B766"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 205,
											"end": 5770,
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"contracts/contracts/interfaces/IAllowanceTransfer.sol",
								"contracts/contracts/interfaces/IEIP712.sol",
								"contracts/contracts/interfaces/ISignatureTransfer.sol",
								"contracts/contracts/lib/PermitHash.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_PERMIT_BATCH_TRANSFER_FROM_TYPEHASH()": "3eb8b8fd",
							"_PERMIT_BATCH_TYPEHASH()": "6302c3cf",
							"_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB()": "90bbf2f3",
							"_PERMIT_DETAILS_TYPEHASH()": "6e4f2775",
							"_PERMIT_SINGLE_TYPEHASH()": "c5df4f03",
							"_PERMIT_TRANSFER_FROM_TYPEHASH()": "78f16830",
							"_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB()": "84b8efbb",
							"_TOKEN_PERMISSIONS_TYPEHASH()": "415e982d",
							"_TOKEN_PERMISSIONS_TYPESTRING()": "c0c7fa7e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"_PERMIT_BATCH_TRANSFER_FROM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_PERMIT_BATCH_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_PERMIT_DETAILS_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_PERMIT_SINGLE_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_PERMIT_TRANSFER_FROM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_TOKEN_PERMISSIONS_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_TOKEN_PERMISSIONS_TYPESTRING\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/lib/PermitHash.sol\":\"PermitHash\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x37f0ac203b6ef605c9533e1a739477e8e9dcea90710b40e645a367f8a21ace29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0104d72aeaec1cd66cc232e7de7b7ead08608efcc179491b8a66387614670b0\",\"dweb:/ipfs/QmfAZDyuNC9FXXbnJUwqHNwmAK6uRrXxtWEytLsxjskPsN\"]},\"contracts/contracts/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]},\"contracts/contracts/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0x16a051e45a3f1ab341a8560aa106c483c3d0a3be4abc52225651c78939b18f93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7cda3c6ed2db1454b4a6ec1e418956d199019085d92163a038d0064615a5acb\",\"dweb:/ipfs/QmWDfZwi8jcGFBuiwHKq6iBWCZq2mA8HmkM9NNTzotMpXH\"]},\"contracts/contracts/lib/PermitHash.sol\":{\"keccak256\":\"0xbd0fcb52a5a753f77b10f30d653e638bf40705a0aa10cf96978ef82ea926e637\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de007b53ff2757733e919d17d53dc0c0b1e1f856132e0004dd9f79272472a093\",\"dweb:/ipfs/QmST5dKQYMZWD6magJPUXsJSWf57Rr5nWi1AgethhAvoCj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/contracts/interfaces/IAllowanceTransfer.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/interfaces/IAllowanceTransfer.sol",
					"exportedSymbols": {
						"IAllowanceTransfer": [
							211
						],
						"IEIP712": [
							219
						]
					},
					"id": 212,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "contracts/contracts/interfaces/IEIP712.sol",
							"file": "./IEIP712.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 212,
							"sourceUnit": 220,
							"src": "57:38:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IEIP712",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 219,
										"src": "65:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "IEIP712",
										"nameLocations": [
											"362:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 219,
										"src": "362:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "362:7:0"
								}
							],
							"canonicalName": "IAllowanceTransfer",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "97:233:0",
								"text": "@title AllowanceTransfer\n @notice Handles ERC20 token permissions through signature based allowance setting and ERC20 token transfers by checking allowed amounts\n @dev Requires user's token approval on the Permit2 contract"
							},
							"fullyImplemented": false,
							"id": 211,
							"linearizedBaseContracts": [
								211,
								219
							],
							"name": "IAllowanceTransfer",
							"nameLocation": "340:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "376:145:0",
										"text": "@notice Thrown when an allowance on a token has expired.\n @param deadline The timestamp at which the allowed amount is no longer valid"
									},
									"errorSelector": "d81b2f2e",
									"id": 11,
									"name": "AllowanceExpired",
									"nameLocation": "532:16:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "557:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "549:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "548:18:0"
									},
									"src": "526:41:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "573:115:0",
										"text": "@notice Thrown when an allowance on a token has been depleted.\n @param amount The maximum amount allowed"
									},
									"errorSelector": "f96fb071",
									"id": 16,
									"name": "InsufficientAllowance",
									"nameLocation": "699:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "729:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "721:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "720:16:0"
									},
									"src": "693:44:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "743:56:0",
										"text": "@notice Thrown when too many nonces are invalidated."
									},
									"errorSelector": "24d35a26",
									"id": 19,
									"name": "ExcessiveInvalidation",
									"nameLocation": "810:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "831:2:0"
									},
									"src": "804:30:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "840:84:0",
										"text": "@notice Emits an event when the owner successfully invalidates an ordered nonce."
									},
									"eventSelector": "55eb90d810e1700b35a8e7e25395ff7f2b2259abd7415ca2284dfb1c246418f3",
									"id": 32,
									"name": "NonceInvalidation",
									"nameLocation": "935:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "978:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "962:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1001:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "985:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "985:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1008:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": false,
												"mutability": "mutable",
												"name": "newNonce",
												"nameLocation": "1040:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1033:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 27,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1033:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldNonce",
												"nameLocation": "1057:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1050:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 29,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1050:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "952:119:0"
									},
									"src": "929:143:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1078:99:0",
										"text": "@notice Emits an event when the owner successfully sets permissions on a token for the spender."
									},
									"eventSelector": "da9fa7c1b00402c17d0161b249b1ab8bbec047c5a52207b9c112deffd817036b",
									"id": 45,
									"name": "Approval",
									"nameLocation": "1188:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1222:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1206:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1245:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1229:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1229:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1268:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1252:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1285:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1277:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 40,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1277:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"indexed": false,
												"mutability": "mutable",
												"name": "expiration",
												"nameLocation": "1300:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1293:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 42,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1293:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1196:120:0"
									},
									"src": "1182:135:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1323:124:0",
										"text": "@notice Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender."
									},
									"eventSelector": "c6a377bfc4eb120024a8ac08eef205be16b817020812c73223e81d1bdb9708ec",
									"id": 60,
									"name": "Permit",
									"nameLocation": "1458:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1490:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1474:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1474:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1521:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1505:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1505:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1552:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1536:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1577:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1569:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 53,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1569:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"indexed": false,
												"mutability": "mutable",
												"name": "expiration",
												"nameLocation": "1600:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1593:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 55,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1593:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"indexed": false,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1627:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1620:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 57,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1620:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1464:174:0"
									},
									"src": "1452:187:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1645:98:0",
										"text": "@notice Emits an event when the owner sets the allowance back to 0 with the lockdown function."
									},
									"eventSelector": "89b1add15eff56b3dfe299ad94e01f2b52fbcb80ae1a3baea6ae8c04cb2b98a4",
									"id": 69,
									"name": "Lockdown",
									"nameLocation": "1754:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1779:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "1763:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1794:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "1786:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1786:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"indexed": false,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1809:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "1801:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1801:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1762:55:0"
									},
									"src": "1748:70:0"
								},
								{
									"canonicalName": "IAllowanceTransfer.PermitDetails",
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "1824:39:0",
										"text": "@notice The permit data for a token"
									},
									"id": 79,
									"members": [
										{
											"constant": false,
											"id": 72,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "1938:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 79,
											"src": "1930:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 71,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1930:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 74,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "2008:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 79,
											"src": "2000:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 73,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "2000:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 76,
											"mutability": "mutable",
											"name": "expiration",
											"nameLocation": "2105:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 79,
											"src": "2098:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 75,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "2098:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 78,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "2220:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 79,
											"src": "2213:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 77,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "2213:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PermitDetails",
									"nameLocation": "1875:13:0",
									"nodeType": "StructDefinition",
									"scope": 211,
									"src": "1868:364:0",
									"visibility": "public"
								},
								{
									"canonicalName": "IAllowanceTransfer.PermitSingle",
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "2238:66:0",
										"text": "@notice The permit message signed for a single token allowance"
									},
									"id": 88,
									"members": [
										{
											"constant": false,
											"id": 83,
											"mutability": "mutable",
											"name": "details",
											"nameLocation": "2407:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 88,
											"src": "2393:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PermitDetails_$79_storage_ptr",
												"typeString": "struct IAllowanceTransfer.PermitDetails"
											},
											"typeName": {
												"id": 82,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 81,
													"name": "PermitDetails",
													"nameLocations": [
														"2393:13:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 79,
													"src": "2393:13:0"
												},
												"referencedDeclaration": 79,
												"src": "2393:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitDetails_$79_storage_ptr",
													"typeString": "struct IAllowanceTransfer.PermitDetails"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 85,
											"mutability": "mutable",
											"name": "spender",
											"nameLocation": "2486:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 88,
											"src": "2478:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 84,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2478:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 87,
											"mutability": "mutable",
											"name": "sigDeadline",
											"nameLocation": "2555:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 88,
											"src": "2547:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 86,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2547:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PermitSingle",
									"nameLocation": "2316:12:0",
									"nodeType": "StructDefinition",
									"scope": 211,
									"src": "2309:264:0",
									"visibility": "public"
								},
								{
									"canonicalName": "IAllowanceTransfer.PermitBatch",
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "2579:67:0",
										"text": "@notice The permit message signed for multiple token allowances"
									},
									"id": 98,
									"members": [
										{
											"constant": false,
											"id": 93,
											"mutability": "mutable",
											"name": "details",
											"nameLocation": "2753:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 98,
											"src": "2737:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_PermitDetails_$79_storage_$dyn_storage_ptr",
												"typeString": "struct IAllowanceTransfer.PermitDetails[]"
											},
											"typeName": {
												"baseType": {
													"id": 91,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 90,
														"name": "PermitDetails",
														"nameLocations": [
															"2737:13:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 79,
														"src": "2737:13:0"
													},
													"referencedDeclaration": 79,
													"src": "2737:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitDetails_$79_storage_ptr",
														"typeString": "struct IAllowanceTransfer.PermitDetails"
													}
												},
												"id": 92,
												"nodeType": "ArrayTypeName",
												"src": "2737:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PermitDetails_$79_storage_$dyn_storage_ptr",
													"typeString": "struct IAllowanceTransfer.PermitDetails[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 95,
											"mutability": "mutable",
											"name": "spender",
											"nameLocation": "2832:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 98,
											"src": "2824:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 94,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2824:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 97,
											"mutability": "mutable",
											"name": "sigDeadline",
											"nameLocation": "2901:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 98,
											"src": "2893:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 96,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2893:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PermitBatch",
									"nameLocation": "2658:11:0",
									"nodeType": "StructDefinition",
									"scope": 211,
									"src": "2651:268:0",
									"visibility": "public"
								},
								{
									"canonicalName": "IAllowanceTransfer.PackedAllowance",
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2925:217:0",
										"text": "@notice The saved permissions\n @dev This info is saved per owner, per token, per spender and all signed over in the permit message\n @dev Setting amount to type(uint160).max sets an unlimited approval"
									},
									"id": 106,
									"members": [
										{
											"constant": false,
											"id": 101,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "3214:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 106,
											"src": "3206:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 100,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "3206:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 103,
											"mutability": "mutable",
											"name": "expiration",
											"nameLocation": "3266:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 106,
											"src": "3259:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 102,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "3259:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 105,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "3381:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 106,
											"src": "3374:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 104,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "3374:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PackedAllowance",
									"nameLocation": "3154:15:0",
									"nodeType": "StructDefinition",
									"scope": 211,
									"src": "3147:246:0",
									"visibility": "public"
								},
								{
									"canonicalName": "IAllowanceTransfer.TokenSpenderPair",
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "3399:33:0",
										"text": "@notice A token spender pair."
									},
									"id": 112,
									"members": [
										{
											"constant": false,
											"id": 109,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "3524:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 112,
											"src": "3516:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 108,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3516:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 111,
											"mutability": "mutable",
											"name": "spender",
											"nameLocation": "3578:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 112,
											"src": "3570:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 110,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3570:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenSpenderPair",
									"nameLocation": "3444:16:0",
									"nodeType": "StructDefinition",
									"scope": 211,
									"src": "3437:155:0",
									"visibility": "public"
								},
								{
									"canonicalName": "IAllowanceTransfer.AllowanceTransferDetails",
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "3598:41:0",
										"text": "@notice Details for a token transfer."
									},
									"id": 122,
									"members": [
										{
											"constant": false,
											"id": 115,
											"mutability": "mutable",
											"name": "from",
											"nameLocation": "3728:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 122,
											"src": "3720:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 114,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3720:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 117,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "3788:2:0",
											"nodeType": "VariableDeclaration",
											"scope": 122,
											"src": "3780:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 116,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3780:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 119,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "3843:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 122,
											"src": "3835:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 118,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "3835:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 121,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "3906:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 122,
											"src": "3898:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 120,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3898:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AllowanceTransferDetails",
									"nameLocation": "3651:24:0",
									"nodeType": "StructDefinition",
									"scope": 211,
									"src": "3644:274:0",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "3924:455:0",
										"text": "@notice A mapping from owner address to token address to spender address to PackedAllowance struct, which contains details and conditions of the approval.\n @notice The mapping is indexed in the above order see: allowance[ownerAddress][tokenAddress][spenderAddress]\n @dev The packed slot holds the allowed amount, expiration at which the allowed amount is no longer valid, and current nonce thats updated on any signature based approvals."
									},
									"functionSelector": "927da105",
									"id": 138,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4393:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4411:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4403:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4425:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4417:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4417:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4440:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4432:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4402:46:0"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4504:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4496:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 131,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4496:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "expiration",
												"nameLocation": "4519:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4512:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 133,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "4512:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "4538:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4531:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 135,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "4531:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4495:49:0"
									},
									"scope": 211,
									"src": "4384:161:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "4551:498:0",
										"text": "@notice Approves the spender to use up to amount of the specified token up until the expiration\n @param token The token to approve\n @param spender The spender address to approve\n @param amount The approved amount of the token\n @param expiration The timestamp at which the approval is no longer valid\n @dev The packed allowance also holds a nonce, which will stay unchanged in approve\n @dev Setting amount to type(uint160).max sets an unlimited approval"
									},
									"functionSelector": "87517c45",
									"id": 150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5063:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5079:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5071:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5071:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5094:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5086:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5086:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5111:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5103:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 144,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "5103:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "expiration",
												"nameLocation": "5126:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5119:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 146,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "5119:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5070:67:0"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5146:0:0"
									},
									"scope": 211,
									"src": "5054:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5153:407:0",
										"text": "@notice Permit a spender to a given amount of the owners token via the owner's EIP-712 signature\n @dev May fail if the owner's nonce was invalidated in-flight by invalidateNonce\n @param owner The owner of the tokens being approved\n @param permitSingle Data signed over by the owner specifying the terms of approval\n @param signature The owner's signature over the permit data"
									},
									"functionSelector": "2b67b570",
									"id": 161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "5574:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5589:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "5581:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "permitSingle",
												"nameLocation": "5616:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "5596:32:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitSingle_$88_memory_ptr",
													"typeString": "struct IAllowanceTransfer.PermitSingle"
												},
												"typeName": {
													"id": 155,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 154,
														"name": "PermitSingle",
														"nameLocations": [
															"5596:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 88,
														"src": "5596:12:0"
													},
													"referencedDeclaration": 88,
													"src": "5596:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitSingle_$88_storage_ptr",
														"typeString": "struct IAllowanceTransfer.PermitSingle"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "5645:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "5630:24:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 157,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5630:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5580:75:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5664:0:0"
									},
									"scope": 211,
									"src": "5565:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "5671:411:0",
										"text": "@notice Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature\n @dev May fail if the owner's nonce was invalidated in-flight by invalidateNonce\n @param owner The owner of the tokens being approved\n @param permitBatch Data signed over by the owner specifying the terms of approval\n @param signature The owner's signature over the permit data"
									},
									"functionSelector": "2a2d80d1",
									"id": 172,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "6096:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6111:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "6103:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6103:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "permitBatch",
												"nameLocation": "6137:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "6118:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitBatch_$98_memory_ptr",
													"typeString": "struct IAllowanceTransfer.PermitBatch"
												},
												"typeName": {
													"id": 166,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 165,
														"name": "PermitBatch",
														"nameLocations": [
															"6118:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 98,
														"src": "6118:11:0"
													},
													"referencedDeclaration": 98,
													"src": "6118:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitBatch_$98_storage_ptr",
														"typeString": "struct IAllowanceTransfer.PermitBatch"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "6165:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "6150:24:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 168,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6150:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6102:73:0"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6184:0:0"
									},
									"scope": 211,
									"src": "6087:98:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "6191:386:0",
										"text": "@notice Transfer approved tokens from one address to another\n @param from The address to transfer from\n @param to The address of the recipient\n @param amount The amount of the token to transfer\n @param token The token address to transfer\n @dev Requires the from address to have approved at least the desired amount\n of tokens to msg.sender."
									},
									"functionSelector": "36c78516",
									"id": 184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6591:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6612:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "6604:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6604:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6626:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "6618:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6618:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6638:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "6630:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 178,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6630:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6654:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "6646:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6646:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6603:57:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6669:0:0"
									},
									"scope": 211,
									"src": "6582:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "6676:264:0",
										"text": "@notice Transfer approved tokens in a batch\n @param transferDetails Array of owners, recipients, amounts, and tokens for the transfers\n @dev Requires the from addresses to have approved at least the desired amount\n of tokens to msg.sender."
									},
									"functionSelector": "0d58b1db",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6954:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "transferDetails",
												"nameLocation": "7003:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "6967:51:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_AllowanceTransferDetails_$122_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IAllowanceTransfer.AllowanceTransferDetails[]"
												},
												"typeName": {
													"baseType": {
														"id": 187,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 186,
															"name": "AllowanceTransferDetails",
															"nameLocations": [
																"6967:24:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 122,
															"src": "6967:24:0"
														},
														"referencedDeclaration": 122,
														"src": "6967:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AllowanceTransferDetails_$122_storage_ptr",
															"typeString": "struct IAllowanceTransfer.AllowanceTransferDetails"
														}
													},
													"id": 188,
													"nodeType": "ArrayTypeName",
													"src": "6967:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_AllowanceTransferDetails_$122_storage_$dyn_storage_ptr",
														"typeString": "struct IAllowanceTransfer.AllowanceTransferDetails[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6966:53:0"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7028:0:0"
									},
									"scope": 211,
									"src": "6945:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "7035:167:0",
										"text": "@notice Enables performing a \"lockdown\" of the sender's Permit2 identity\n by batch revoking approvals\n @param approvals Array of approvals to revoke."
									},
									"functionSelector": "cc53287f",
									"id": 200,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lockdown",
									"nameLocation": "7216:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "approvals",
												"nameLocation": "7253:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "7225:37:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenSpenderPair_$112_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IAllowanceTransfer.TokenSpenderPair[]"
												},
												"typeName": {
													"baseType": {
														"id": 195,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 194,
															"name": "TokenSpenderPair",
															"nameLocations": [
																"7225:16:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 112,
															"src": "7225:16:0"
														},
														"referencedDeclaration": 112,
														"src": "7225:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenSpenderPair_$112_storage_ptr",
															"typeString": "struct IAllowanceTransfer.TokenSpenderPair"
														}
													},
													"id": 196,
													"nodeType": "ArrayTypeName",
													"src": "7225:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenSpenderPair_$112_storage_$dyn_storage_ptr",
														"typeString": "struct IAllowanceTransfer.TokenSpenderPair[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7224:39:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7272:0:0"
									},
									"scope": 211,
									"src": "7207:66:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "7279:332:0",
										"text": "@notice Invalidate nonces for a given (token, spender) pair\n @param token The token to invalidate nonces for\n @param spender The spender to invalidate nonces for\n @param newNonce The new nonce to set. Invalidates all nonces less than it.\n @dev Can't invalidate more than 2**16 nonces per transaction."
									},
									"functionSelector": "65d9723c",
									"id": 210,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "invalidateNonces",
									"nameLocation": "7625:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "7642:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7642:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7665:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "7657:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "newNonce",
												"nameLocation": "7681:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "7674:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 206,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "7674:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7641:49:0"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7699:0:0"
									},
									"scope": 211,
									"src": "7616:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 212,
							"src": "330:7372:0",
							"usedErrors": [
								11,
								16,
								19
							],
							"usedEvents": [
								32,
								45,
								60,
								69
							]
						}
					],
					"src": "32:7671:0"
				},
				"id": 0
			},
			"contracts/contracts/interfaces/IEIP712.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/interfaces/IEIP712.sol",
					"exportedSymbols": {
						"IEIP712": [
							219
						]
					},
					"id": 220,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 213,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IEIP712",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 219,
							"linearizedBaseContracts": [
								219
							],
							"name": "IEIP712",
							"nameLocation": "67:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "3644e515",
									"id": 218,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "90:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "106:2:1"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "132:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 215,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "132:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "131:9:1"
									},
									"scope": 219,
									"src": "81:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 220,
							"src": "57:86:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:112:1"
				},
				"id": 1
			},
			"contracts/contracts/interfaces/ISignatureTransfer.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/interfaces/ISignatureTransfer.sol",
					"exportedSymbols": {
						"IEIP712": [
							219
						],
						"ISignatureTransfer": [
							359
						]
					},
					"id": 360,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 221,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:2"
						},
						{
							"absolutePath": "contracts/contracts/interfaces/IEIP712.sol",
							"file": "./IEIP712.sol",
							"id": 223,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 360,
							"sourceUnit": 220,
							"src": "58:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 222,
										"name": "IEIP712",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 219,
										"src": "66:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 225,
										"name": "IEIP712",
										"nameLocations": [
											"297:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 219,
										"src": "297:7:2"
									},
									"id": 226,
									"nodeType": "InheritanceSpecifier",
									"src": "297:7:2"
								}
							],
							"canonicalName": "ISignatureTransfer",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 224,
								"nodeType": "StructuredDocumentation",
								"src": "98:167:2",
								"text": "@title SignatureTransfer\n @notice Handles ERC20 token transfers through signature based actions\n @dev Requires user's token approval on the Permit2 contract"
							},
							"fullyImplemented": false,
							"id": 359,
							"linearizedBaseContracts": [
								359,
								219
							],
							"name": "ISignatureTransfer",
							"nameLocation": "275:18:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "311:176:2",
										"text": "@notice Thrown when the requested amount for a transfer is larger than the permissioned amount\n @param maxAmount The maximum amount a spender can request to transfer"
									},
									"errorSelector": "3728b83d",
									"id": 231,
									"name": "InvalidAmount",
									"nameLocation": "498:13:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "maxAmount",
												"nameLocation": "520:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "512:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "512:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "511:19:2"
									},
									"src": "492:39:2"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "537:261:2",
										"text": "@notice Thrown when the number of tokens permissioned to a spender does not match the number of tokens being transferred\n @dev If the spender does not need to transfer the number of tokens permitted, the spender can request amount 0 to be transferred"
									},
									"errorSelector": "ff633a38",
									"id": 234,
									"name": "LengthMismatch",
									"nameLocation": "809:14:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "823:2:2"
									},
									"src": "803:23:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "832:86:2",
										"text": "@notice Emits an event when the owner successfully invalidates an unordered nonce."
									},
									"eventSelector": "3704902f963766a4e561bbaab6e6cdc1b1dd12f6e9e99648da8843b3f46b918d",
									"id": 243,
									"name": "UnorderedNonceInvalidation",
									"nameLocation": "929:26:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "972:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "956:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "956:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"indexed": false,
												"mutability": "mutable",
												"name": "word",
												"nameLocation": "987:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "979:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "979:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"indexed": false,
												"mutability": "mutable",
												"name": "mask",
												"nameLocation": "1001:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "993:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "955:51:2"
									},
									"src": "923:84:2"
								},
								{
									"canonicalName": "ISignatureTransfer.TokenPermissions",
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "1013:95:2",
										"text": "@notice The token and amount details for a transfer signed in the permit transfer signature"
									},
									"id": 249,
									"members": [
										{
											"constant": false,
											"id": 246,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "1186:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 249,
											"src": "1178:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 245,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1178:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 248,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1257:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 249,
											"src": "1249:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 247,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1249:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenPermissions",
									"nameLocation": "1120:16:2",
									"nodeType": "StructDefinition",
									"scope": 359,
									"src": "1113:157:2",
									"visibility": "public"
								},
								{
									"canonicalName": "ISignatureTransfer.PermitTransferFrom",
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "1276:65:2",
										"text": "@notice The signed permit message for a single token transfer"
									},
									"id": 258,
									"members": [
										{
											"constant": false,
											"id": 253,
											"mutability": "mutable",
											"name": "permitted",
											"nameLocation": "1399:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 258,
											"src": "1382:26:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenPermissions_$249_storage_ptr",
												"typeString": "struct ISignatureTransfer.TokenPermissions"
											},
											"typeName": {
												"id": 252,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 251,
													"name": "TokenPermissions",
													"nameLocations": [
														"1382:16:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 249,
													"src": "1382:16:2"
												},
												"referencedDeclaration": 249,
												"src": "1382:16:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenPermissions_$249_storage_ptr",
													"typeString": "struct ISignatureTransfer.TokenPermissions"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 255,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "1515:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 258,
											"src": "1507:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 254,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1507:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 257,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1582:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 258,
											"src": "1574:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 256,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1574:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PermitTransferFrom",
									"nameLocation": "1353:18:2",
									"nodeType": "StructDefinition",
									"scope": 359,
									"src": "1346:251:2",
									"visibility": "public"
								},
								{
									"canonicalName": "ISignatureTransfer.SignatureTransferDetails",
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "1603:266:2",
										"text": "@notice Specifies the recipient address and amount for batched transfers.\n @dev Recipients and amounts correspond to the index of the signed token permissions array.\n @dev Reverts if the requested amount is greater than the permitted signed amount."
									},
									"id": 264,
									"members": [
										{
											"constant": false,
											"id": 261,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "1953:2:2",
											"nodeType": "VariableDeclaration",
											"scope": 264,
											"src": "1945:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 260,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1945:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 263,
											"mutability": "mutable",
											"name": "requestedAmount",
											"nameLocation": "2009:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 264,
											"src": "2001:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 262,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2001:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SignatureTransferDetails",
									"nameLocation": "1881:24:2",
									"nodeType": "StructDefinition",
									"scope": 359,
									"src": "1874:157:2",
									"visibility": "public"
								},
								{
									"canonicalName": "ISignatureTransfer.PermitBatchTransferFrom",
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "2037:243:2",
										"text": "@notice Used to reconstruct the signed permit message for multiple token transfers\n @dev Do not need to pass in spender address as it is required that it is msg.sender\n @dev Note that a user still signs over a spender address"
									},
									"id": 274,
									"members": [
										{
											"constant": false,
											"id": 269,
											"mutability": "mutable",
											"name": "permitted",
											"nameLocation": "2418:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 274,
											"src": "2399:28:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_TokenPermissions_$249_storage_$dyn_storage_ptr",
												"typeString": "struct ISignatureTransfer.TokenPermissions[]"
											},
											"typeName": {
												"baseType": {
													"id": 267,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 266,
														"name": "TokenPermissions",
														"nameLocations": [
															"2399:16:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 249,
														"src": "2399:16:2"
													},
													"referencedDeclaration": 249,
													"src": "2399:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenPermissions_$249_storage_ptr",
														"typeString": "struct ISignatureTransfer.TokenPermissions"
													}
												},
												"id": 268,
												"nodeType": "ArrayTypeName",
												"src": "2399:18:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenPermissions_$249_storage_$dyn_storage_ptr",
													"typeString": "struct ISignatureTransfer.TokenPermissions[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 271,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "2534:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 274,
											"src": "2526:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 270,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2526:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 273,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2601:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 274,
											"src": "2593:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 272,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2593:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PermitBatchTransferFrom",
									"nameLocation": "2292:23:2",
									"nodeType": "StructDefinition",
									"scope": 359,
									"src": "2285:331:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "2622:483:2",
										"text": "@notice A map from token owner address and a caller specified word index to a bitmap. Used to set bits in the bitmap to prevent against signature replay protection\n @dev Uses unordered nonces so that permit messages do not need to be spent in a certain order\n @dev The mapping is indexed first by the token owner, then by an index specified in the nonce\n @dev It returns a uint256 bitmap\n @dev The index, or wordPosition is capped at type(uint248).max"
									},
									"functionSelector": "4fe02b44",
									"id": 284,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonceBitmap",
									"nameLocation": "3119:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "3131:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3131:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "3140:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3140:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3130:18:2"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "3172:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3172:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3171:9:2"
									},
									"scope": 359,
									"src": "3110:71:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "3187:413:2",
										"text": "@notice Transfers a token using a signed permit message\n @dev Reverts if the requested amount is greater than the permitted signed amount\n @param permit The permit data signed over by the owner\n @param owner The owner of the tokens to transfer\n @param transferDetails The spender's requested transfer details for the permitted token\n @param signature The signature to verify"
									},
									"functionSelector": "30f28b7a",
									"id": 298,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permitTransferFrom",
									"nameLocation": "3614:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "permit",
												"nameLocation": "3668:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3642:32:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitTransferFrom_$258_memory_ptr",
													"typeString": "struct ISignatureTransfer.PermitTransferFrom"
												},
												"typeName": {
													"id": 287,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 286,
														"name": "PermitTransferFrom",
														"nameLocations": [
															"3642:18:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 258,
														"src": "3642:18:2"
													},
													"referencedDeclaration": 258,
													"src": "3642:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitTransferFrom_$258_storage_ptr",
														"typeString": "struct ISignatureTransfer.PermitTransferFrom"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "transferDetails",
												"nameLocation": "3718:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3684:49:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SignatureTransferDetails_$264_calldata_ptr",
													"typeString": "struct ISignatureTransfer.SignatureTransferDetails"
												},
												"typeName": {
													"id": 290,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 289,
														"name": "SignatureTransferDetails",
														"nameLocations": [
															"3684:24:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 264,
														"src": "3684:24:2"
													},
													"referencedDeclaration": 264,
													"src": "3684:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SignatureTransferDetails_$264_storage_ptr",
														"typeString": "struct ISignatureTransfer.SignatureTransferDetails"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3751:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3743:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3743:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3781:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3766:24:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 294,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3766:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3632:164:2"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3805:0:2"
									},
									"scope": 359,
									"src": "3605:201:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "3812:815:2",
										"text": "@notice Transfers a token using a signed permit message\n @notice Includes extra data provided by the caller to verify signature over\n @dev The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition\n @dev Reverts if the requested amount is greater than the permitted signed amount\n @param permit The permit data signed over by the owner\n @param owner The owner of the tokens to transfer\n @param transferDetails The spender's requested transfer details for the permitted token\n @param witness Extra data to include when checking the user signature\n @param witnessTypeString The EIP-712 type definition for remaining string stub of the typehash\n @param signature The signature to verify"
									},
									"functionSelector": "137c29fe",
									"id": 316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permitWitnessTransferFrom",
									"nameLocation": "4641:25:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "permit",
												"nameLocation": "4702:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "4676:32:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitTransferFrom_$258_memory_ptr",
													"typeString": "struct ISignatureTransfer.PermitTransferFrom"
												},
												"typeName": {
													"id": 301,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 300,
														"name": "PermitTransferFrom",
														"nameLocations": [
															"4676:18:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 258,
														"src": "4676:18:2"
													},
													"referencedDeclaration": 258,
													"src": "4676:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitTransferFrom_$258_storage_ptr",
														"typeString": "struct ISignatureTransfer.PermitTransferFrom"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "transferDetails",
												"nameLocation": "4752:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "4718:49:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SignatureTransferDetails_$264_calldata_ptr",
													"typeString": "struct ISignatureTransfer.SignatureTransferDetails"
												},
												"typeName": {
													"id": 304,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 303,
														"name": "SignatureTransferDetails",
														"nameLocations": [
															"4718:24:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 264,
														"src": "4718:24:2"
													},
													"referencedDeclaration": 264,
													"src": "4718:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SignatureTransferDetails_$264_storage_ptr",
														"typeString": "struct ISignatureTransfer.SignatureTransferDetails"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4785:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "4777:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4777:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "witness",
												"nameLocation": "4808:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "4800:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 308,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4800:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "witnessTypeString",
												"nameLocation": "4841:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "4825:33:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 310,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4825:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "4883:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "4868:24:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 312,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4868:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4666:232:2"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4907:0:2"
									},
									"scope": 359,
									"src": "4632:276:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "4914:335:2",
										"text": "@notice Transfers multiple tokens using a signed permit message\n @param permit The permit data signed over by the owner\n @param owner The owner of the tokens to transfer\n @param transferDetails Specifies the recipient and requested amount for the token transfer\n @param signature The signature to verify"
									},
									"functionSelector": "edd9444b",
									"id": 331,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permitTransferFrom",
									"nameLocation": "5263:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "permit",
												"nameLocation": "5322:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "5291:37:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$274_memory_ptr",
													"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom"
												},
												"typeName": {
													"id": 319,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 318,
														"name": "PermitBatchTransferFrom",
														"nameLocations": [
															"5291:23:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 274,
														"src": "5291:23:2"
													},
													"referencedDeclaration": 274,
													"src": "5291:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$274_storage_ptr",
														"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "transferDetails",
												"nameLocation": "5374:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "5338:51:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_SignatureTransferDetails_$264_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct ISignatureTransfer.SignatureTransferDetails[]"
												},
												"typeName": {
													"baseType": {
														"id": 322,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 321,
															"name": "SignatureTransferDetails",
															"nameLocations": [
																"5338:24:2"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 264,
															"src": "5338:24:2"
														},
														"referencedDeclaration": 264,
														"src": "5338:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SignatureTransferDetails_$264_storage_ptr",
															"typeString": "struct ISignatureTransfer.SignatureTransferDetails"
														}
													},
													"id": 323,
													"nodeType": "ArrayTypeName",
													"src": "5338:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SignatureTransferDetails_$264_storage_$dyn_storage_ptr",
														"typeString": "struct ISignatureTransfer.SignatureTransferDetails[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5407:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "5399:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5399:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "5437:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "5422:24:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 327,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5422:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5281:171:2"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5461:0:2"
									},
									"scope": 359,
									"src": "5254:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "5468:737:2",
										"text": "@notice Transfers multiple tokens using a signed permit message\n @dev The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition\n @notice Includes extra data provided by the caller to verify signature over\n @param permit The permit data signed over by the owner\n @param owner The owner of the tokens to transfer\n @param transferDetails Specifies the recipient and requested amount for the token transfer\n @param witness Extra data to include when checking the user signature\n @param witnessTypeString The EIP-712 type definition for remaining string stub of the typehash\n @param signature The signature to verify"
									},
									"functionSelector": "fe8ec1a7",
									"id": 350,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permitWitnessTransferFrom",
									"nameLocation": "6219:25:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "permit",
												"nameLocation": "6285:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "6254:37:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$274_memory_ptr",
													"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom"
												},
												"typeName": {
													"id": 334,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 333,
														"name": "PermitBatchTransferFrom",
														"nameLocations": [
															"6254:23:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 274,
														"src": "6254:23:2"
													},
													"referencedDeclaration": 274,
													"src": "6254:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$274_storage_ptr",
														"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "transferDetails",
												"nameLocation": "6337:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "6301:51:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_SignatureTransferDetails_$264_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct ISignatureTransfer.SignatureTransferDetails[]"
												},
												"typeName": {
													"baseType": {
														"id": 337,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 336,
															"name": "SignatureTransferDetails",
															"nameLocations": [
																"6301:24:2"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 264,
															"src": "6301:24:2"
														},
														"referencedDeclaration": 264,
														"src": "6301:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SignatureTransferDetails_$264_storage_ptr",
															"typeString": "struct ISignatureTransfer.SignatureTransferDetails"
														}
													},
													"id": 338,
													"nodeType": "ArrayTypeName",
													"src": "6301:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SignatureTransferDetails_$264_storage_$dyn_storage_ptr",
														"typeString": "struct ISignatureTransfer.SignatureTransferDetails[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6370:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "6362:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6362:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "witness",
												"nameLocation": "6393:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "6385:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 342,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6385:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "witnessTypeString",
												"nameLocation": "6426:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "6410:33:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 344,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6410:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "6468:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "6453:24:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 346,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6453:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6244:239:2"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6492:0:2"
									},
									"scope": 359,
									"src": "6210:283:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "6499:294:2",
										"text": "@notice Invalidates the bits specified in mask for the bitmap at the word position\n @dev The wordPos is maxed at type(uint248).max\n @param wordPos A number to index the nonceBitmap at\n @param mask A bitmap masked against msg.sender's current bitmap at the word position"
									},
									"functionSelector": "3ff9dcb1",
									"id": 358,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "invalidateUnorderedNonces",
									"nameLocation": "6807:25:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "wordPos",
												"nameLocation": "6841:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "6833:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6833:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "mask",
												"nameLocation": "6858:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "6850:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6850:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6832:31:2"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6872:0:2"
									},
									"scope": 359,
									"src": "6798:75:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 360,
							"src": "265:6610:2",
							"usedErrors": [
								231,
								234
							],
							"usedEvents": [
								243
							]
						}
					],
					"src": "32:6844:2"
				},
				"id": 2
			},
			"contracts/contracts/lib/PermitHash.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/lib/PermitHash.sol",
					"exportedSymbols": {
						"IAllowanceTransfer": [
							211
						],
						"ISignatureTransfer": [
							359
						],
						"PermitHash": [
							759
						]
					},
					"id": 760,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 361,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"absolutePath": "contracts/contracts/interfaces/IAllowanceTransfer.sol",
							"file": "../interfaces/IAllowanceTransfer.sol",
							"id": 363,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 760,
							"sourceUnit": 212,
							"src": "58:72:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 362,
										"name": "IAllowanceTransfer",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 211,
										"src": "66:18:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/interfaces/ISignatureTransfer.sol",
							"file": "../interfaces/ISignatureTransfer.sol",
							"id": 365,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 760,
							"sourceUnit": 360,
							"src": "131:72:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 364,
										"name": "ISignatureTransfer",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 359,
										"src": "139:18:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PermitHash",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 759,
							"linearizedBaseContracts": [
								759
							],
							"name": "PermitHash",
							"nameLocation": "213:10:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "6e4f2775",
									"id": 370,
									"mutability": "constant",
									"name": "_PERMIT_DETAILS_TYPEHASH",
									"nameLocation": "254:24:3",
									"nodeType": "VariableDeclaration",
									"scope": 759,
									"src": "230:146:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 366,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "230:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d697444657461696c73286164647265737320746f6b656e2c75696e7431363020616d6f756e742c75696e7434382065787069726174696f6e2c75696e743438206e6f6e636529",
												"id": 368,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "299:76:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_65626cad6cb96493bf6f5ebea28756c966f023ab9e8a83a7101849d5573b3678",
													"typeString": "literal_string \"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\""
												},
												"value": "PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_65626cad6cb96493bf6f5ebea28756c966f023ab9e8a83a7101849d5573b3678",
													"typeString": "literal_string \"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\""
												}
											],
											"id": 367,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "289:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 369,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "289:87:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c5df4f03",
									"id": 375,
									"mutability": "constant",
									"name": "_PERMIT_SINGLE_TYPEHASH",
									"nameLocation": "407:23:3",
									"nodeType": "VariableDeclaration",
									"scope": 759,
									"src": "383:222:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 371,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "383:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d697453696e676c65285065726d697444657461696c732064657461696c732c61646472657373207370656e6465722c75696e7432353620736967446561646c696e65295065726d697444657461696c73286164647265737320746f6b656e2c75696e7431363020616d6f756e742c75696e7434382065787069726174696f6e2c75696e743438206e6f6e636529",
												"id": 373,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "452:147:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_f3841cd1ff0085026a6327b620b67997ce40f282c88a8e905a7a5626e310f3d0",
													"typeString": "literal_string \"PermitSingle(PermitDetails details,address spender,uint256 sigDeadline)PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\""
												},
												"value": "PermitSingle(PermitDetails details,address spender,uint256 sigDeadline)PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_f3841cd1ff0085026a6327b620b67997ce40f282c88a8e905a7a5626e310f3d0",
													"typeString": "literal_string \"PermitSingle(PermitDetails details,address spender,uint256 sigDeadline)PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\""
												}
											],
											"id": 372,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "433:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 374,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "433:172:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "6302c3cf",
									"id": 380,
									"mutability": "constant",
									"name": "_PERMIT_BATCH_TYPEHASH",
									"nameLocation": "636:22:3",
									"nodeType": "VariableDeclaration",
									"scope": 759,
									"src": "612:222:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 376,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "612:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d69744261746368285065726d697444657461696c735b5d2064657461696c732c61646472657373207370656e6465722c75696e7432353620736967446561646c696e65295065726d697444657461696c73286164647265737320746f6b656e2c75696e7431363020616d6f756e742c75696e7434382065787069726174696f6e2c75696e743438206e6f6e636529",
												"id": 378,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "680:148:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_af1b0d30d2cab0380e68f0689007e3254993c596f2fdd0aaa7f4d04f79440863",
													"typeString": "literal_string \"PermitBatch(PermitDetails[] details,address spender,uint256 sigDeadline)PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\""
												},
												"value": "PermitBatch(PermitDetails[] details,address spender,uint256 sigDeadline)PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_af1b0d30d2cab0380e68f0689007e3254993c596f2fdd0aaa7f4d04f79440863",
													"typeString": "literal_string \"PermitBatch(PermitDetails[] details,address spender,uint256 sigDeadline)PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\""
												}
											],
											"id": 377,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "661:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 379,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "661:173:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "415e982d",
									"id": 385,
									"mutability": "constant",
									"name": "_TOKEN_PERMISSIONS_TYPEHASH",
									"nameLocation": "865:27:3",
									"nodeType": "VariableDeclaration",
									"scope": 759,
									"src": "841:113:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 381,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "841:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e7429",
												"id": 383,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "905:48:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a1",
													"typeString": "literal_string \"TokenPermissions(address token,uint256 amount)\""
												},
												"value": "TokenPermissions(address token,uint256 amount)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a1",
													"typeString": "literal_string \"TokenPermissions(address token,uint256 amount)\""
												}
											],
											"id": 382,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "895:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 384,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "895:59:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "78f16830",
									"id": 390,
									"mutability": "constant",
									"name": "_PERMIT_TRANSFER_FROM_TYPEHASH",
									"nameLocation": "985:30:3",
									"nodeType": "VariableDeclaration",
									"scope": 759,
									"src": "961:223:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 386,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "961:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d69745472616e7366657246726f6d28546f6b656e5065726d697373696f6e73207065726d69747465642c61646472657373207370656e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e7429",
												"id": 388,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1037:141:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_939c21a48a8dbe3a9a2404a1d46691e4d39f6583d6ec6b35714604c986d80106",
													"typeString": "literal_string \"PermitTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline)TokenPermissions(address token,uint256 amount)\""
												},
												"value": "PermitTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline)TokenPermissions(address token,uint256 amount)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_939c21a48a8dbe3a9a2404a1d46691e4d39f6583d6ec6b35714604c986d80106",
													"typeString": "literal_string \"PermitTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline)TokenPermissions(address token,uint256 amount)\""
												}
											],
											"id": 387,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1018:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 389,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1018:166:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "3eb8b8fd",
									"id": 395,
									"mutability": "constant",
									"name": "_PERMIT_BATCH_TRANSFER_FROM_TYPEHASH",
									"nameLocation": "1215:36:3",
									"nodeType": "VariableDeclaration",
									"scope": 759,
									"src": "1191:236:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 391,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1191:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d697442617463685472616e7366657246726f6d28546f6b656e5065726d697373696f6e735b5d207065726d69747465642c61646472657373207370656e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e7429",
												"id": 393,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1273:148:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_fcf35f5ac6a2c28868dc44c302166470266239195f02b0ee408334829333b766",
													"typeString": "literal_string \"PermitBatchTransferFrom(TokenPermissions[] permitted,address spender,uint256 nonce,uint256 deadline)TokenPermissions(address token,uint256 amount)\""
												},
												"value": "PermitBatchTransferFrom(TokenPermissions[] permitted,address spender,uint256 nonce,uint256 deadline)TokenPermissions(address token,uint256 amount)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_fcf35f5ac6a2c28868dc44c302166470266239195f02b0ee408334829333b766",
													"typeString": "literal_string \"PermitBatchTransferFrom(TokenPermissions[] permitted,address spender,uint256 nonce,uint256 deadline)TokenPermissions(address token,uint256 amount)\""
												}
											],
											"id": 392,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1254:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 394,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1254:173:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c0c7fa7e",
									"id": 398,
									"mutability": "constant",
									"name": "_TOKEN_PERMISSIONS_TYPESTRING",
									"nameLocation": "1457:29:3",
									"nodeType": "VariableDeclaration",
									"scope": 759,
									"src": "1434:103:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 396,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1434:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e7429",
										"id": 397,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1489:48:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a1",
											"typeString": "literal_string \"TokenPermissions(address token,uint256 amount)\""
										},
										"value": "TokenPermissions(address token,uint256 amount)"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "84b8efbb",
									"id": 401,
									"mutability": "constant",
									"name": "_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB",
									"nameLocation": "1567:43:3",
									"nodeType": "VariableDeclaration",
									"scope": 759,
									"src": "1544:179:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 399,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1544:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "5065726d69745769746e6573735472616e7366657246726f6d28546f6b656e5065726d697373696f6e73207065726d69747465642c61646472657373207370656e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e652c",
										"id": 400,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1621:102:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_7c29ab44842e91090848780f4cd9a6c05ba5b883d9f1f1ad134563b61518940b",
											"typeString": "literal_string \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\""
										},
										"value": "PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "90bbf2f3",
									"id": 404,
									"mutability": "constant",
									"name": "_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB",
									"nameLocation": "1753:49:3",
									"nodeType": "VariableDeclaration",
									"scope": 759,
									"src": "1730:192:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 402,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1730:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "5065726d697442617463685769746e6573735472616e7366657246726f6d28546f6b656e5065726d697373696f6e735b5d207065726d69747465642c61646472657373207370656e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e652c",
										"id": 403,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1813:109:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_0bf214d267f8e8fa0f37d38e2103aff5c639b54388783bd59a418a8bee49520c",
											"typeString": "literal_string \"PermitBatchWitnessTransferFrom(TokenPermissions[] permitted,address spender,uint256 nonce,uint256 deadline,\""
										},
										"value": "PermitBatchWitnessTransferFrom(TokenPermissions[] permitted,address spender,uint256 nonce,uint256 deadline,"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "2028:213:3",
										"statements": [
											{
												"assignments": [
													413
												],
												"declarations": [
													{
														"constant": false,
														"id": 413,
														"mutability": "mutable",
														"name": "permitHash",
														"nameLocation": "2046:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 431,
														"src": "2038:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 412,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2038:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 418,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 415,
																"name": "permitSingle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "2078:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PermitSingle_$88_memory_ptr",
																	"typeString": "struct IAllowanceTransfer.PermitSingle memory"
																}
															},
															"id": 416,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2091:7:3",
															"memberName": "details",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 83,
															"src": "2078:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PermitDetails_$79_memory_ptr",
																"typeString": "struct IAllowanceTransfer.PermitDetails memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PermitDetails_$79_memory_ptr",
																"typeString": "struct IAllowanceTransfer.PermitDetails memory"
															}
														],
														"id": 414,
														"name": "_hashPermitDetails",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "2059:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_PermitDetails_$79_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (struct IAllowanceTransfer.PermitDetails memory) pure returns (bytes32)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2059:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2038:61:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 422,
																	"name": "_PERMIT_SINGLE_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "2149:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 423,
																	"name": "permitHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "2174:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 424,
																		"name": "permitSingle",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 407,
																		"src": "2186:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PermitSingle_$88_memory_ptr",
																			"typeString": "struct IAllowanceTransfer.PermitSingle memory"
																		}
																	},
																	"id": 425,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2199:7:3",
																	"memberName": "spender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 85,
																	"src": "2186:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 426,
																		"name": "permitSingle",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 407,
																		"src": "2208:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PermitSingle_$88_memory_ptr",
																			"typeString": "struct IAllowanceTransfer.PermitSingle memory"
																		}
																	},
																	"id": 427,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2221:11:3",
																	"memberName": "sigDeadline",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 87,
																	"src": "2208:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 420,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2138:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2142:6:3",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "2138:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2138:95:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 419,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2128:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2128:106:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 411,
												"id": 430,
												"nodeType": "Return",
												"src": "2109:125:3"
											}
										]
									},
									"id": 432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hash",
									"nameLocation": "1938:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "permitSingle",
												"nameLocation": "1982:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "1943:51:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitSingle_$88_memory_ptr",
													"typeString": "struct IAllowanceTransfer.PermitSingle"
												},
												"typeName": {
													"id": 406,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 405,
														"name": "IAllowanceTransfer.PermitSingle",
														"nameLocations": [
															"1943:18:3",
															"1962:12:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 88,
														"src": "1943:31:3"
													},
													"referencedDeclaration": 88,
													"src": "1943:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitSingle_$88_storage_ptr",
														"typeString": "struct IAllowanceTransfer.PermitSingle"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1942:53:3"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "2019:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 409,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2018:9:3"
									},
									"scope": 759,
									"src": "1929:312:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "2344:517:3",
										"statements": [
											{
												"assignments": [
													441
												],
												"declarations": [
													{
														"constant": false,
														"id": 441,
														"mutability": "mutable",
														"name": "numPermits",
														"nameLocation": "2362:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 497,
														"src": "2354:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 440,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2354:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 445,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 442,
															"name": "permitBatch",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "2375:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PermitBatch_$98_memory_ptr",
																"typeString": "struct IAllowanceTransfer.PermitBatch memory"
															}
														},
														"id": 443,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2387:7:3",
														"memberName": "details",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 93,
														"src": "2375:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PermitDetails_$79_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IAllowanceTransfer.PermitDetails memory[] memory"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2395:6:3",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2375:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2354:47:3"
											},
											{
												"assignments": [
													450
												],
												"declarations": [
													{
														"constant": false,
														"id": 450,
														"mutability": "mutable",
														"name": "permitHashes",
														"nameLocation": "2428:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 497,
														"src": "2411:29:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 448,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "2411:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 449,
															"nodeType": "ArrayTypeName",
															"src": "2411:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 456,
												"initialValue": {
													"arguments": [
														{
															"id": 454,
															"name": "numPermits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "2457:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2443:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes32[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 451,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "2447:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 452,
															"nodeType": "ArrayTypeName",
															"src": "2447:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2443:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2411:57:3"
											},
											{
												"body": {
													"id": 478,
													"nodeType": "Block",
													"src": "2519:85:3",
													"statements": [
														{
															"expression": {
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 467,
																		"name": "permitHashes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 450,
																		"src": "2533:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																			"typeString": "bytes32[] memory"
																		}
																	},
																	"id": 469,
																	"indexExpression": {
																		"id": 468,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 458,
																		"src": "2546:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2533:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"expression": {
																					"id": 471,
																					"name": "permitBatch",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 435,
																					"src": "2570:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PermitBatch_$98_memory_ptr",
																						"typeString": "struct IAllowanceTransfer.PermitBatch memory"
																					}
																				},
																				"id": 472,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2582:7:3",
																				"memberName": "details",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 93,
																				"src": "2570:19:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_PermitDetails_$79_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct IAllowanceTransfer.PermitDetails memory[] memory"
																				}
																			},
																			"id": 474,
																			"indexExpression": {
																				"id": 473,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 458,
																				"src": "2590:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2570:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PermitDetails_$79_memory_ptr",
																				"typeString": "struct IAllowanceTransfer.PermitDetails memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_struct$_PermitDetails_$79_memory_ptr",
																				"typeString": "struct IAllowanceTransfer.PermitDetails memory"
																			}
																		],
																		"id": 470,
																		"name": "_hashPermitDetails",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 741,
																		"src": "2551:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_struct$_PermitDetails_$79_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (struct IAllowanceTransfer.PermitDetails memory) pure returns (bytes32)"
																		}
																	},
																	"id": 475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2551:42:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "2533:60:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 477,
															"nodeType": "ExpressionStatement",
															"src": "2533:60:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 461,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "2498:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 462,
														"name": "numPermits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "2502:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2498:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 479,
												"initializationExpression": {
													"assignments": [
														458
													],
													"declarations": [
														{
															"constant": false,
															"id": 458,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2491:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 479,
															"src": "2483:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 457,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2483:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 460,
													"initialValue": {
														"hexValue": "30",
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2495:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2483:13:3"
												},
												"loopExpression": {
													"expression": {
														"id": 465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2514:3:3",
														"subExpression": {
															"id": 464,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "2516:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 466,
													"nodeType": "ExpressionStatement",
													"src": "2514:3:3"
												},
												"nodeType": "ForStatement",
												"src": "2478:126:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 483,
																	"name": "_PERMIT_BATCH_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "2671:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 487,
																					"name": "permitHashes",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 450,
																					"src": "2738:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				],
																				"expression": {
																					"id": 485,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "2721:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 486,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2725:12:3",
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "2721:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2721:30:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 484,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "2711:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2711:41:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 490,
																		"name": "permitBatch",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 435,
																		"src": "2770:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PermitBatch_$98_memory_ptr",
																			"typeString": "struct IAllowanceTransfer.PermitBatch memory"
																		}
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2782:7:3",
																	"memberName": "spender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 95,
																	"src": "2770:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 492,
																		"name": "permitBatch",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 435,
																		"src": "2807:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PermitBatch_$98_memory_ptr",
																			"typeString": "struct IAllowanceTransfer.PermitBatch memory"
																		}
																	},
																	"id": 493,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2819:11:3",
																	"memberName": "sigDeadline",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 97,
																	"src": "2807:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 481,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2643:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2647:6:3",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "2643:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2643:201:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 480,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2620:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2620:234:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 439,
												"id": 496,
												"nodeType": "Return",
												"src": "2613:241:3"
											}
										]
									},
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hash",
									"nameLocation": "2256:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "permitBatch",
												"nameLocation": "2299:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "2261:49:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitBatch_$98_memory_ptr",
													"typeString": "struct IAllowanceTransfer.PermitBatch"
												},
												"typeName": {
													"id": 434,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 433,
														"name": "IAllowanceTransfer.PermitBatch",
														"nameLocations": [
															"2261:18:3",
															"2280:11:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 98,
														"src": "2261:30:3"
													},
													"referencedDeclaration": 98,
													"src": "2261:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitBatch_$98_storage_ptr",
														"typeString": "struct IAllowanceTransfer.PermitBatch"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2260:51:3"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "2335:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 437,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2335:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2334:9:3"
									},
									"scope": 759,
									"src": "2247:614:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 527,
										"nodeType": "Block",
										"src": "2966:244:3",
										"statements": [
											{
												"assignments": [
													507
												],
												"declarations": [
													{
														"constant": false,
														"id": 507,
														"mutability": "mutable",
														"name": "tokenPermissionsHash",
														"nameLocation": "2984:20:3",
														"nodeType": "VariableDeclaration",
														"scope": 527,
														"src": "2976:28:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 506,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2976:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 512,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 509,
																"name": "permit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 501,
																"src": "3029:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PermitTransferFrom_$258_memory_ptr",
																	"typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3036:9:3",
															"memberName": "permitted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 253,
															"src": "3029:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenPermissions_$249_memory_ptr",
																"typeString": "struct ISignatureTransfer.TokenPermissions memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_TokenPermissions_$249_memory_ptr",
																"typeString": "struct ISignatureTransfer.TokenPermissions memory"
															}
														],
														"id": 508,
														"name": "_hashTokenPermissions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "3007:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_TokenPermissions_$249_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (struct ISignatureTransfer.TokenPermissions memory) pure returns (bytes32)"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3007:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2976:70:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 516,
																	"name": "_PERMIT_TRANSFER_FROM_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "3097:30:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 517,
																	"name": "tokenPermissionsHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 507,
																	"src": "3129:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 518,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3151:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3155:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3151:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 520,
																		"name": "permit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 501,
																		"src": "3163:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PermitTransferFrom_$258_memory_ptr",
																			"typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
																		}
																	},
																	"id": 521,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3170:5:3",
																	"memberName": "nonce",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 255,
																	"src": "3163:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 522,
																		"name": "permit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 501,
																		"src": "3177:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PermitTransferFrom_$258_memory_ptr",
																			"typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
																		}
																	},
																	"id": 523,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3184:8:3",
																	"memberName": "deadline",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 257,
																	"src": "3177:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 514,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "3086:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3090:6:3",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "3086:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:107:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 513,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "3063:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3063:140:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 505,
												"id": 526,
												"nodeType": "Return",
												"src": "3056:147:3"
											}
										]
									},
									"id": 528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hash",
									"nameLocation": "2876:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "permit",
												"nameLocation": "2926:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "2881:51:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitTransferFrom_$258_memory_ptr",
													"typeString": "struct ISignatureTransfer.PermitTransferFrom"
												},
												"typeName": {
													"id": 500,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 499,
														"name": "ISignatureTransfer.PermitTransferFrom",
														"nameLocations": [
															"2881:18:3",
															"2900:18:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 258,
														"src": "2881:37:3"
													},
													"referencedDeclaration": 258,
													"src": "2881:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitTransferFrom_$258_storage_ptr",
														"typeString": "struct ISignatureTransfer.PermitTransferFrom"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2880:53:3"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "2957:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 503,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2957:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2956:9:3"
									},
									"scope": 759,
									"src": "2867:343:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "3320:576:3",
										"statements": [
											{
												"assignments": [
													537
												],
												"declarations": [
													{
														"constant": false,
														"id": 537,
														"mutability": "mutable",
														"name": "numPermitted",
														"nameLocation": "3338:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 595,
														"src": "3330:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 536,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3330:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 541,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 538,
															"name": "permit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "3353:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$274_memory_ptr",
																"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom memory"
															}
														},
														"id": 539,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3360:9:3",
														"memberName": "permitted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 269,
														"src": "3353:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_TokenPermissions_$249_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct ISignatureTransfer.TokenPermissions memory[] memory"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3370:6:3",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3353:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3330:46:3"
											},
											{
												"assignments": [
													546
												],
												"declarations": [
													{
														"constant": false,
														"id": 546,
														"mutability": "mutable",
														"name": "tokenPermissionHashes",
														"nameLocation": "3403:21:3",
														"nodeType": "VariableDeclaration",
														"scope": 595,
														"src": "3386:38:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 544,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "3386:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 545,
															"nodeType": "ArrayTypeName",
															"src": "3386:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 552,
												"initialValue": {
													"arguments": [
														{
															"id": 550,
															"name": "numPermitted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "3441:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3427:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes32[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 547,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "3431:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 548,
															"nodeType": "ArrayTypeName",
															"src": "3431:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3427:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3386:68:3"
											},
											{
												"body": {
													"id": 574,
													"nodeType": "Block",
													"src": "3508:94:3",
													"statements": [
														{
															"expression": {
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 563,
																		"name": "tokenPermissionHashes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "3522:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																			"typeString": "bytes32[] memory"
																		}
																	},
																	"id": 565,
																	"indexExpression": {
																		"id": 564,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 554,
																		"src": "3544:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3522:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"expression": {
																					"id": 567,
																					"name": "permit",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 531,
																					"src": "3571:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$274_memory_ptr",
																						"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom memory"
																					}
																				},
																				"id": 568,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3578:9:3",
																				"memberName": "permitted",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 269,
																				"src": "3571:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_TokenPermissions_$249_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct ISignatureTransfer.TokenPermissions memory[] memory"
																				}
																			},
																			"id": 570,
																			"indexExpression": {
																				"id": 569,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 554,
																				"src": "3588:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3571:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenPermissions_$249_memory_ptr",
																				"typeString": "struct ISignatureTransfer.TokenPermissions memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_struct$_TokenPermissions_$249_memory_ptr",
																				"typeString": "struct ISignatureTransfer.TokenPermissions memory"
																			}
																		],
																		"id": 566,
																		"name": "_hashTokenPermissions",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 758,
																		"src": "3549:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_struct$_TokenPermissions_$249_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (struct ISignatureTransfer.TokenPermissions memory) pure returns (bytes32)"
																		}
																	},
																	"id": 571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3549:42:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "3522:69:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 573,
															"nodeType": "ExpressionStatement",
															"src": "3522:69:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 557,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "3485:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 558,
														"name": "numPermitted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "3489:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3485:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 575,
												"initializationExpression": {
													"assignments": [
														554
													],
													"declarations": [
														{
															"constant": false,
															"id": 554,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3478:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 575,
															"src": "3470:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 553,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3470:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 556,
													"initialValue": {
														"hexValue": "30",
														"id": 555,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3482:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3470:13:3"
												},
												"loopExpression": {
													"expression": {
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3503:3:3",
														"subExpression": {
															"id": 560,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "3505:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 562,
													"nodeType": "ExpressionStatement",
													"src": "3503:3:3"
												},
												"nodeType": "ForStatement",
												"src": "3465:137:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 579,
																	"name": "_PERMIT_BATCH_TRANSFER_FROM_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "3670:36:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 583,
																					"name": "tokenPermissionHashes",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 546,
																					"src": "3751:21:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				],
																				"expression": {
																					"id": 581,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "3734:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 582,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "3738:12:3",
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "3734:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3734:39:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 580,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "3724:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3724:50:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 586,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3792:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3796:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3792:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 588,
																		"name": "permit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "3820:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$274_memory_ptr",
																			"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom memory"
																		}
																	},
																	"id": 589,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3827:5:3",
																	"memberName": "nonce",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 271,
																	"src": "3820:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 590,
																		"name": "permit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "3850:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$274_memory_ptr",
																			"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom memory"
																		}
																	},
																	"id": 591,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3857:8:3",
																	"memberName": "deadline",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 273,
																	"src": "3850:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 577,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "3642:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3646:6:3",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "3642:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3642:237:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 576,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "3619:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3619:270:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 535,
												"id": 594,
												"nodeType": "Return",
												"src": "3612:277:3"
											}
										]
									},
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hash",
									"nameLocation": "3225:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "permit",
												"nameLocation": "3280:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "3230:56:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$274_memory_ptr",
													"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom"
												},
												"typeName": {
													"id": 530,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 529,
														"name": "ISignatureTransfer.PermitBatchTransferFrom",
														"nameLocations": [
															"3230:18:3",
															"3249:23:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 274,
														"src": "3230:42:3"
													},
													"referencedDeclaration": 274,
													"src": "3230:42:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$274_storage_ptr",
														"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3229:58:3"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "3311:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 533,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3311:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3310:9:3"
									},
									"scope": 759,
									"src": "3216:680:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 640,
										"nodeType": "Block",
										"src": "4094:330:3",
										"statements": [
											{
												"assignments": [
													609
												],
												"declarations": [
													{
														"constant": false,
														"id": 609,
														"mutability": "mutable",
														"name": "typeHash",
														"nameLocation": "4112:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 640,
														"src": "4104:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 608,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4104:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 617,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 613,
																	"name": "_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "4150:43:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 614,
																	"name": "witnessTypeString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 603,
																	"src": "4195:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_calldata_ptr",
																		"typeString": "string calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_calldata_ptr",
																		"typeString": "string calldata"
																	}
																],
																"expression": {
																	"id": 611,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4133:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4137:12:3",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "4133:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4133:80:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 610,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "4123:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4123:91:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4104:110:3"
											},
											{
												"assignments": [
													619
												],
												"declarations": [
													{
														"constant": false,
														"id": 619,
														"mutability": "mutable",
														"name": "tokenPermissionsHash",
														"nameLocation": "4233:20:3",
														"nodeType": "VariableDeclaration",
														"scope": 640,
														"src": "4225:28:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 618,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4225:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 624,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 621,
																"name": "permit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 599,
																"src": "4278:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PermitTransferFrom_$258_memory_ptr",
																	"typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
																}
															},
															"id": 622,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4285:9:3",
															"memberName": "permitted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 253,
															"src": "4278:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenPermissions_$249_memory_ptr",
																"typeString": "struct ISignatureTransfer.TokenPermissions memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_TokenPermissions_$249_memory_ptr",
																"typeString": "struct ISignatureTransfer.TokenPermissions memory"
															}
														],
														"id": 620,
														"name": "_hashTokenPermissions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "4256:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_TokenPermissions_$249_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (struct ISignatureTransfer.TokenPermissions memory) pure returns (bytes32)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4256:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4225:70:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 628,
																	"name": "typeHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "4333:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 629,
																	"name": "tokenPermissionsHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 619,
																	"src": "4343:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 630,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4365:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4369:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4365:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 632,
																		"name": "permit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 599,
																		"src": "4377:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PermitTransferFrom_$258_memory_ptr",
																			"typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
																		}
																	},
																	"id": 633,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4384:5:3",
																	"memberName": "nonce",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 255,
																	"src": "4377:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 634,
																		"name": "permit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 599,
																		"src": "4391:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PermitTransferFrom_$258_memory_ptr",
																			"typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
																		}
																	},
																	"id": 635,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4398:8:3",
																	"memberName": "deadline",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 257,
																	"src": "4391:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 636,
																	"name": "witness",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "4408:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 626,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4322:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4326:6:3",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "4322:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4322:94:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 625,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "4312:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4312:105:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 607,
												"id": 639,
												"nodeType": "Return",
												"src": "4305:112:3"
											}
										]
									},
									"id": 641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hashWithWitness",
									"nameLocation": "3911:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "permit",
												"nameLocation": "3981:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "3936:51:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitTransferFrom_$258_memory_ptr",
													"typeString": "struct ISignatureTransfer.PermitTransferFrom"
												},
												"typeName": {
													"id": 598,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 597,
														"name": "ISignatureTransfer.PermitTransferFrom",
														"nameLocations": [
															"3936:18:3",
															"3955:18:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 258,
														"src": "3936:37:3"
													},
													"referencedDeclaration": 258,
													"src": "3936:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitTransferFrom_$258_storage_ptr",
														"typeString": "struct ISignatureTransfer.PermitTransferFrom"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "witness",
												"nameLocation": "4005:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "3997:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 600,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3997:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "witnessTypeString",
												"nameLocation": "4038:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "4022:33:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 602,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4022:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3926:135:3"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "4085:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 605,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4085:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4084:9:3"
									},
									"scope": 759,
									"src": "3902:522:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "4627:712:3",
										"statements": [
											{
												"assignments": [
													654
												],
												"declarations": [
													{
														"constant": false,
														"id": 654,
														"mutability": "mutable",
														"name": "typeHash",
														"nameLocation": "4645:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 723,
														"src": "4637:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 653,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4637:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 662,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 658,
																	"name": "_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "4695:49:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 659,
																	"name": "witnessTypeString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 648,
																	"src": "4746:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_calldata_ptr",
																		"typeString": "string calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_calldata_ptr",
																		"typeString": "string calldata"
																	}
																],
																"expression": {
																	"id": 656,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4678:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4682:12:3",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "4678:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4678:86:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 655,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "4668:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4668:97:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4637:128:3"
											},
											{
												"assignments": [
													664
												],
												"declarations": [
													{
														"constant": false,
														"id": 664,
														"mutability": "mutable",
														"name": "numPermitted",
														"nameLocation": "4784:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 723,
														"src": "4776:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 663,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4776:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 668,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 665,
															"name": "permit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "4799:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$274_memory_ptr",
																"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom memory"
															}
														},
														"id": 666,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4806:9:3",
														"memberName": "permitted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 269,
														"src": "4799:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_TokenPermissions_$249_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct ISignatureTransfer.TokenPermissions memory[] memory"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4816:6:3",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4799:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4776:46:3"
											},
											{
												"assignments": [
													673
												],
												"declarations": [
													{
														"constant": false,
														"id": 673,
														"mutability": "mutable",
														"name": "tokenPermissionHashes",
														"nameLocation": "4849:21:3",
														"nodeType": "VariableDeclaration",
														"scope": 723,
														"src": "4832:38:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 671,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "4832:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 672,
															"nodeType": "ArrayTypeName",
															"src": "4832:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 679,
												"initialValue": {
													"arguments": [
														{
															"id": 677,
															"name": "numPermitted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "4887:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "4873:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes32[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 674,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "4877:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 675,
															"nodeType": "ArrayTypeName",
															"src": "4877:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4832:68:3"
											},
											{
												"body": {
													"id": 701,
													"nodeType": "Block",
													"src": "4954:94:3",
													"statements": [
														{
															"expression": {
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 690,
																		"name": "tokenPermissionHashes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 673,
																		"src": "4968:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																			"typeString": "bytes32[] memory"
																		}
																	},
																	"id": 692,
																	"indexExpression": {
																		"id": 691,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 681,
																		"src": "4990:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4968:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"expression": {
																					"id": 694,
																					"name": "permit",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 644,
																					"src": "5017:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$274_memory_ptr",
																						"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom memory"
																					}
																				},
																				"id": 695,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5024:9:3",
																				"memberName": "permitted",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 269,
																				"src": "5017:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_TokenPermissions_$249_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct ISignatureTransfer.TokenPermissions memory[] memory"
																				}
																			},
																			"id": 697,
																			"indexExpression": {
																				"id": 696,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 681,
																				"src": "5034:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5017:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenPermissions_$249_memory_ptr",
																				"typeString": "struct ISignatureTransfer.TokenPermissions memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_struct$_TokenPermissions_$249_memory_ptr",
																				"typeString": "struct ISignatureTransfer.TokenPermissions memory"
																			}
																		],
																		"id": 693,
																		"name": "_hashTokenPermissions",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 758,
																		"src": "4995:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_struct$_TokenPermissions_$249_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (struct ISignatureTransfer.TokenPermissions memory) pure returns (bytes32)"
																		}
																	},
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4995:42:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "4968:69:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 700,
															"nodeType": "ExpressionStatement",
															"src": "4968:69:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 684,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "4931:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 685,
														"name": "numPermitted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "4935:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4931:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 702,
												"initializationExpression": {
													"assignments": [
														681
													],
													"declarations": [
														{
															"constant": false,
															"id": 681,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4924:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 702,
															"src": "4916:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 680,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4916:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 683,
													"initialValue": {
														"hexValue": "30",
														"id": 682,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4928:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4916:13:3"
												},
												"loopExpression": {
													"expression": {
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "4949:3:3",
														"subExpression": {
															"id": 687,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "4951:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 689,
													"nodeType": "ExpressionStatement",
													"src": "4949:3:3"
												},
												"nodeType": "ForStatement",
												"src": "4911:137:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 706,
																	"name": "typeHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "5116:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 710,
																					"name": "tokenPermissionHashes",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 673,
																					"src": "5169:21:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				],
																				"expression": {
																					"id": 708,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "5152:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 709,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "5156:12:3",
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "5152:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5152:39:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 707,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "5142:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5142:50:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 713,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5210:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5214:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5210:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 715,
																		"name": "permit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 644,
																		"src": "5238:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$274_memory_ptr",
																			"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom memory"
																		}
																	},
																	"id": 716,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5245:5:3",
																	"memberName": "nonce",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 271,
																	"src": "5238:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 717,
																		"name": "permit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 644,
																		"src": "5268:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$274_memory_ptr",
																			"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom memory"
																		}
																	},
																	"id": 718,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5275:8:3",
																	"memberName": "deadline",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 273,
																	"src": "5268:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 719,
																	"name": "witness",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 646,
																	"src": "5301:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 704,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "5088:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5092:6:3",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "5088:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:234:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 703,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "5065:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5065:267:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 652,
												"id": 722,
												"nodeType": "Return",
												"src": "5058:274:3"
											}
										]
									},
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hashWithWitness",
									"nameLocation": "4439:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "permit",
												"nameLocation": "4514:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "4464:56:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$274_memory_ptr",
													"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom"
												},
												"typeName": {
													"id": 643,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 642,
														"name": "ISignatureTransfer.PermitBatchTransferFrom",
														"nameLocations": [
															"4464:18:3",
															"4483:23:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 274,
														"src": "4464:42:3"
													},
													"referencedDeclaration": 274,
													"src": "4464:42:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$274_storage_ptr",
														"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "witness",
												"nameLocation": "4538:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "4530:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 645,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4530:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "witnessTypeString",
												"nameLocation": "4571:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "4555:33:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 647,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4555:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4454:140:3"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "4618:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 650,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4618:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4617:9:3"
									},
									"scope": 759,
									"src": "4430:909:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 740,
										"nodeType": "Block",
										"src": "5453:80:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 735,
																	"name": "_PERMIT_DETAILS_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "5491:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 736,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "5517:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PermitDetails_$79_memory_ptr",
																		"typeString": "struct IAllowanceTransfer.PermitDetails memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_struct$_PermitDetails_$79_memory_ptr",
																		"typeString": "struct IAllowanceTransfer.PermitDetails memory"
																	}
																],
																"expression": {
																	"id": 733,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "5480:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5484:6:3",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "5480:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5480:45:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 732,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "5470:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5470:56:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 731,
												"id": 739,
												"nodeType": "Return",
												"src": "5463:63:3"
											}
										]
									},
									"id": 741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashPermitDetails",
									"nameLocation": "5354:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "details",
												"nameLocation": "5413:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "5373:47:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitDetails_$79_memory_ptr",
													"typeString": "struct IAllowanceTransfer.PermitDetails"
												},
												"typeName": {
													"id": 726,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 725,
														"name": "IAllowanceTransfer.PermitDetails",
														"nameLocations": [
															"5373:18:3",
															"5392:13:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 79,
														"src": "5373:32:3"
													},
													"referencedDeclaration": 79,
													"src": "5373:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitDetails_$79_storage_ptr",
														"typeString": "struct IAllowanceTransfer.PermitDetails"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5372:49:3"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "5444:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 729,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5444:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5443:9:3"
									},
									"scope": 759,
									"src": "5345:188:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "5683:85:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 752,
																	"name": "_TOKEN_PERMISSIONS_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "5721:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 753,
																	"name": "permitted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 744,
																	"src": "5750:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenPermissions_$249_memory_ptr",
																		"typeString": "struct ISignatureTransfer.TokenPermissions memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_struct$_TokenPermissions_$249_memory_ptr",
																		"typeString": "struct ISignatureTransfer.TokenPermissions memory"
																	}
																],
																"expression": {
																	"id": 750,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "5710:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5714:6:3",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "5710:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5710:50:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 749,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "5700:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:61:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 748,
												"id": 756,
												"nodeType": "Return",
												"src": "5693:68:3"
											}
										]
									},
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashTokenPermissions",
									"nameLocation": "5548:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "permitted",
												"nameLocation": "5613:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "5570:52:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenPermissions_$249_memory_ptr",
													"typeString": "struct ISignatureTransfer.TokenPermissions"
												},
												"typeName": {
													"id": 743,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 742,
														"name": "ISignatureTransfer.TokenPermissions",
														"nameLocations": [
															"5570:18:3",
															"5589:16:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 249,
														"src": "5570:35:3"
													},
													"referencedDeclaration": 249,
													"src": "5570:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenPermissions_$249_storage_ptr",
														"typeString": "struct ISignatureTransfer.TokenPermissions"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5569:54:3"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "5670:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 746,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5670:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5669:9:3"
									},
									"scope": 759,
									"src": "5539:229:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 760,
							"src": "205:5565:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:5739:3"
				},
				"id": 3
			}
		}
	}
}