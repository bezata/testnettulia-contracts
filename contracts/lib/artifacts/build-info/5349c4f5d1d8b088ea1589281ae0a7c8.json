{
	"id": "5349c4f5d1d8b088ea1589281ae0a7c8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/contracts/lib/AdvancedAPYManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\n/// @title AdvancedAPYManager\r\n/// @dev Manages APY adjustments based on loan characteristics such as amount and duration.\r\ncontract AdvancedAPYManager {\r\n\r\n\r\n    uint256 public baseAPY = 100; // Default 1% APY in basis points\r\n    uint256[] public riskPremiumThresholds; // Thresholds for loan amounts\r\n    uint256[] public riskPremiumRates; // Corresponding risk premiums\r\n\r\n    uint256 public durationBonusFactor = 25; // Duration bonus in basis points per year\r\n\r\n    /// @notice Initializes the contract with the lending token.\r\n    constructor() {\r\n\r\n    }\r\n\r\n    /// @notice Calculates the current APY based on loan amount and duration.\r\n    /// @param loanAmount The amount of the loan.\r\n    /// @param durationSeconds The duration of the loan in seconds.\r\n    /// @return uint256 Calculated APY in basis points.\r\n    function calculateAPY(uint256 loanAmount, uint256 durationSeconds) view external returns (uint256) {\r\n        uint256 riskPremium = calculateRiskPremium(loanAmount);\r\n        uint256 durationBonus = calculateDurationBonus(durationSeconds);\r\n\r\n        return baseAPY + riskPremium + durationBonus;\r\n    }\r\n\r\n    /// @notice Calculates additional risk premium based on the loan amount using thresholds.\r\n    /// @param loanAmount The amount of the loan.\r\n    /// @return uint256 Additional risk premium in basis points.\r\n    function calculateRiskPremium(uint256 loanAmount) internal view returns (uint256) {\r\n        for (uint256 i = 0; i < riskPremiumThresholds.length; i++) {\r\n            if (loanAmount <= riskPremiumThresholds[i]) {\r\n                return riskPremiumRates[i];\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /// @notice Calculates a bonus based on the loan duration in seconds.\r\n    /// @param durationSeconds The duration of the loan in seconds.\r\n    /// @return uint256 Duration bonus in basis points.\r\n    function calculateDurationBonus(uint256 durationSeconds) internal view returns (uint256) {\r\n        uint256 yearss = durationSeconds / (365 days);\r\n        return yearss * durationBonusFactor;\r\n    }\r\n\r\n    /// @notice Sets the risk premium thresholds and rates.\r\n    /// @param _thresholds Array of loan amount thresholds.\r\n    /// @param _rates Array of risk premiums corresponding to the thresholds.\r\n    function setRiskPremiums(uint256[] calldata _thresholds, uint256[] calldata _rates) public  {\r\n        require(_thresholds.length == _rates.length, \"Mismatched input lengths\");\r\n        riskPremiumThresholds = _thresholds;\r\n        riskPremiumRates = _rates;\r\n    }\r\n\r\n    /// @notice Allows the owner to adjust the base APY rate.\r\n    /// @param _baseAPY The new base APY in basis points.\r\n    function setBaseAPY(uint256 _baseAPY) public  {\r\n        baseAPY = _baseAPY;\r\n    }\r\n\r\n    /// @notice Allows the owner to adjust the duration bonus factor.\r\n    /// @param _factor The new duration bonus factor in basis points per year.\r\n    function setDurationBonusFactor(uint256 _factor) public  {\r\n        durationBonusFactor = _factor;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/lib/AdvancedAPYManager.sol": {
				"AdvancedAPYManager": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "baseAPY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "loanAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "durationSeconds",
									"type": "uint256"
								}
							],
							"name": "calculateAPY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "durationBonusFactor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "riskPremiumRates",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "riskPremiumThresholds",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_baseAPY",
									"type": "uint256"
								}
							],
							"name": "setBaseAPY",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_factor",
									"type": "uint256"
								}
							],
							"name": "setDurationBonusFactor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "_thresholds",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_rates",
									"type": "uint256[]"
								}
							],
							"name": "setRiskPremiums",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Manages APY adjustments based on loan characteristics such as amount and duration.",
						"kind": "dev",
						"methods": {
							"calculateAPY(uint256,uint256)": {
								"params": {
									"durationSeconds": "The duration of the loan in seconds.",
									"loanAmount": "The amount of the loan."
								},
								"returns": {
									"_0": "uint256 Calculated APY in basis points."
								}
							},
							"setBaseAPY(uint256)": {
								"params": {
									"_baseAPY": "The new base APY in basis points."
								}
							},
							"setDurationBonusFactor(uint256)": {
								"params": {
									"_factor": "The new duration bonus factor in basis points per year."
								}
							},
							"setRiskPremiums(uint256[],uint256[])": {
								"params": {
									"_rates": "Array of risk premiums corresponding to the thresholds.",
									"_thresholds": "Array of loan amount thresholds."
								}
							}
						},
						"title": "AdvancedAPYManager",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":299:3195  contract AdvancedAPYManager {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":363:366  100 */\n  0x64\n    /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":338:366  uint256 public baseAPY = 100 */\n  0x00\n  sstore\n    /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":593:595  25 */\n  0x19\n    /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":556:595  uint256 public durationBonusFactor = 25 */\n  0x03\n  sstore\n    /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":713:737  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":299:3195  contract AdvancedAPYManager {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":299:3195  contract AdvancedAPYManager {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb873995a\n      gt\n      tag_11\n      jumpi\n      dup1\n      0xb873995a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xc134f4a1\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xc90b7192\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe2c9313f\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0x057c0412\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x214405a9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4a7dfc8e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5ee6efd0\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":407:445  uint256[] public riskPremiumThresholds */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":391:416   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":379:381   */\n      0x20\n        /* \"#utility.yul\":364:382   */\n      add\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":407:445  uint256[] public riskPremiumThresholds */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":338:366  uint256 public baseAPY = 100 */\n    tag_4:\n      tag_12\n      sload(0x00)\n      dup2\n      jump\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":2450:2715  function setRiskPremiums(uint256[] calldata _thresholds, uint256[] calldata _rates) public  {... */\n    tag_5:\n      tag_21\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      stop\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":2845:2928  function setBaseAPY(uint256 _baseAPY) public  {... */\n    tag_6:\n      tag_21\n      tag_26\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_26:\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":2902:2909  baseAPY */\n      0x00\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":2902:2920  baseAPY = _baseAPY */\n      sstore\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":2845:2928  function setBaseAPY(uint256 _baseAPY) public  {... */\n      jump\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1001:1304  function calculateAPY(uint256 loanAmount, uint256 durationSeconds) view external returns (uint256) {... */\n    tag_7:\n      tag_12\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":556:595  uint256 public durationBonusFactor = 25 */\n    tag_8:\n      tag_12\n      sload(0x03)\n      dup2\n      jump\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":3087:3192  function setDurationBonusFactor(uint256 _factor) public  {... */\n    tag_9:\n      tag_21\n      tag_37\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_37:\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":3155:3174  durationBonusFactor */\n      0x03\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":3155:3184  durationBonusFactor = _factor */\n      sstore\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":3087:3192  function setDurationBonusFactor(uint256 _factor) public  {... */\n      jump\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":483:516  uint256[] public riskPremiumRates */\n    tag_10:\n      tag_12\n      tag_40\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":407:445  uint256[] public riskPremiumThresholds */\n    tag_15:\n      0x01\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":2450:2715  function setRiskPremiums(uint256[] calldata _thresholds, uint256[] calldata _rates) public  {... */\n    tag_24:\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":2561:2596  _thresholds.length == _rates.length */\n      dup3\n      dup2\n      eq\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":2553:2625  require(_thresholds.length == _rates.length, \"Mismatched input lengths\") */\n      tag_46\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2125:2127   */\n      0x20\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":2553:2625  require(_thresholds.length == _rates.length, \"Mismatched input lengths\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2107:2128   */\n      mstore\n        /* \"#utility.yul\":2164:2166   */\n      0x18\n        /* \"#utility.yul\":2144:2162   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2137:2167   */\n      mstore\n        /* \"#utility.yul\":2203:2229   */\n      0x4d69736d61746368656420696e707574206c656e677468730000000000000000\n        /* \"#utility.yul\":2183:2201   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2176:2230   */\n      mstore\n        /* \"#utility.yul\":2247:2265   */\n      0x64\n      add\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":2553:2625  require(_thresholds.length == _rates.length, \"Mismatched input lengths\") */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_46:\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":2636:2671  riskPremiumThresholds = _thresholds */\n      tag_49\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":2636:2657  riskPremiumThresholds */\n      0x01\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":2660:2671  _thresholds */\n      dup6\n      dup6\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":2636:2671  riskPremiumThresholds = _thresholds */\n      tag_50\n      jump\t// in\n    tag_49:\n      pop\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":2682:2707  riskPremiumRates = _rates */\n      tag_51\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":2682:2698  riskPremiumRates */\n      0x02\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":2701:2707  _rates */\n      dup4\n      dup4\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":2682:2707  riskPremiumRates = _rates */\n      tag_50\n      jump\t// in\n    tag_51:\n      pop\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":2450:2715  function setRiskPremiums(uint256[] calldata _thresholds, uint256[] calldata _rates) public  {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1001:1304  function calculateAPY(uint256 loanAmount, uint256 durationSeconds) view external returns (uint256) {... */\n    tag_31:\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1091:1098  uint256 */\n      0x00\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1111:1130  uint256 riskPremium */\n      dup1\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1133:1165  calculateRiskPremium(loanAmount) */\n      tag_54\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1154:1164  loanAmount */\n      dup5\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1133:1153  calculateRiskPremium */\n      tag_55\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1133:1165  calculateRiskPremium(loanAmount) */\n      jump\t// in\n    tag_54:\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1111:1165  uint256 riskPremium = calculateRiskPremium(loanAmount) */\n      swap1\n      pop\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1176:1197  uint256 durationBonus */\n      0x00\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1200:1239  calculateDurationBonus(durationSeconds) */\n      tag_56\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1223:1238  durationSeconds */\n      dup5\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1200:1222  calculateDurationBonus */\n      tag_57\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1200:1239  calculateDurationBonus(durationSeconds) */\n      jump\t// in\n    tag_56:\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1176:1239  uint256 durationBonus = calculateDurationBonus(durationSeconds) */\n      swap1\n      pop\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1283:1296  durationBonus */\n      dup1\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1269:1280  riskPremium */\n      dup3\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1259:1266  baseAPY */\n      sload(0x00)\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1259:1280  baseAPY + riskPremium */\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1259:1296  baseAPY + riskPremium + durationBonus */\n      tag_60\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_60:\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1252:1296  return baseAPY + riskPremium + durationBonus */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1001:1304  function calculateAPY(uint256 loanAmount, uint256 durationSeconds) view external returns (uint256) {... */\n    tag_53:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":483:516  uint256[] public riskPremiumRates */\n    tag_41:\n      0x02\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1524:1833  function calculateRiskPremium(uint256 loanAmount) internal view returns (uint256) {... */\n    tag_55:\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1597:1604  uint256 */\n      0x00\n      dup1\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1617:1807  for (uint256 i = 0; i < riskPremiumThresholds.length; i++) {... */\n    tag_65:\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1641:1662  riskPremiumThresholds */\n      0x01\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1641:1669  riskPremiumThresholds.length */\n      sload\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1637:1669  i < riskPremiumThresholds.length */\n      dup2\n      lt\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1617:1807  for (uint256 i = 0; i < riskPremiumThresholds.length; i++) {... */\n      iszero\n      tag_66\n      jumpi\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1709:1730  riskPremiumThresholds */\n      0x01\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1731:1732  i */\n      dup2\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1709:1733  riskPremiumThresholds[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_69\n      jumpi\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1695:1705  loanAmount */\n      dup4\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1695:1733  loanAmount <= riskPremiumThresholds[i] */\n      gt\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1691:1796  if (loanAmount <= riskPremiumThresholds[i]) {... */\n      tag_72\n      jumpi\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1761:1777  riskPremiumRates */\n      0x02\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1778:1779  i */\n      dup2\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1761:1780  riskPremiumRates[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_74\n      jumpi\n      tag_74\n      tag_70\n      jump\t// in\n    tag_74:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1754:1780  return riskPremiumRates[i] */\n      swap2\n      pop\n      pop\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1524:1833  function calculateRiskPremium(uint256 loanAmount) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1691:1796  if (loanAmount <= riskPremiumThresholds[i]) {... */\n    tag_72:\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1671:1674  i++ */\n      0x01\n      add\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1617:1807  for (uint256 i = 0; i < riskPremiumThresholds.length; i++) {... */\n      jump(tag_65)\n    tag_66:\n      pop\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1824:1825  0 */\n      0x00\n      swap3\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":1524:1833  function calculateRiskPremium(uint256 loanAmount) internal view returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":2042:2241  function calculateDurationBonus(uint256 durationSeconds) internal view returns (uint256) {... */\n    tag_57:\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":2122:2129  uint256 */\n      0x00\n      dup1\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":2159:2187  durationSeconds / (365 days) */\n      tag_77\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":2178:2186  365 days */\n      0x01e13380\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":2159:2174  durationSeconds */\n      dup5\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":2159:2187  durationSeconds / (365 days) */\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":2142:2187  uint256 yearss = durationSeconds / (365 days) */\n      swap1\n      pop\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":2214:2233  durationBonusFactor */\n      sload(0x03)\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":2205:2211  yearss */\n      dup2\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":2205:2233  yearss * durationBonusFactor */\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":2198:2233  return yearss * durationBonusFactor */\n      swap4\n        /* \"contracts/contracts/lib/AdvancedAPYManager.sol\":2042:2241  function calculateDurationBonus(uint256 durationSeconds) internal view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_50:\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_83\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_82:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_83\n      jumpi\n      dup3\n      calldataload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_82)\n    tag_83:\n      pop\n      tag_84\n      swap3\n      swap2\n      pop\n      tag_85\n      jump\t// in\n    tag_84:\n      pop\n      swap1\n      jump\t// out\n    tag_85:\n    tag_86:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_86)\n        /* \"#utility.yul\":14:240   */\n    tag_14:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_92\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_92:\n      pop\n        /* \"#utility.yul\":187:210   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:240   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":427:794   */\n    tag_88:\n        /* \"#utility.yul\":490:498   */\n      0x00\n        /* \"#utility.yul\":500:506   */\n      dup1\n        /* \"#utility.yul\":554:557   */\n      dup4\n        /* \"#utility.yul\":547:551   */\n      0x1f\n        /* \"#utility.yul\":539:545   */\n      dup5\n        /* \"#utility.yul\":535:552   */\n      add\n        /* \"#utility.yul\":531:558   */\n      slt\n        /* \"#utility.yul\":521:576   */\n      tag_95\n      jumpi\n        /* \"#utility.yul\":572:573   */\n      0x00\n        /* \"#utility.yul\":569:570   */\n      dup1\n        /* \"#utility.yul\":562:574   */\n      revert\n        /* \"#utility.yul\":521:576   */\n    tag_95:\n      pop\n        /* \"#utility.yul\":595:615   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":638:656   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":627:657   */\n      dup2\n      gt\n        /* \"#utility.yul\":624:674   */\n      iszero\n      tag_96\n      jumpi\n        /* \"#utility.yul\":670:671   */\n      0x00\n        /* \"#utility.yul\":667:668   */\n      dup1\n        /* \"#utility.yul\":660:672   */\n      revert\n        /* \"#utility.yul\":624:674   */\n    tag_96:\n        /* \"#utility.yul\":707:711   */\n      0x20\n        /* \"#utility.yul\":699:705   */\n      dup4\n        /* \"#utility.yul\":695:712   */\n      add\n        /* \"#utility.yul\":683:712   */\n      swap2\n      pop\n        /* \"#utility.yul\":767:770   */\n      dup4\n        /* \"#utility.yul\":760:764   */\n      0x20\n        /* \"#utility.yul\":750:756   */\n      dup3\n        /* \"#utility.yul\":747:748   */\n      0x05\n        /* \"#utility.yul\":743:757   */\n      shl\n        /* \"#utility.yul\":735:741   */\n      dup6\n        /* \"#utility.yul\":731:758   */\n      add\n        /* \"#utility.yul\":727:765   */\n      add\n        /* \"#utility.yul\":724:771   */\n      gt\n        /* \"#utility.yul\":721:788   */\n      iszero\n      tag_97\n      jumpi\n        /* \"#utility.yul\":784:785   */\n      0x00\n        /* \"#utility.yul\":781:782   */\n      dup1\n        /* \"#utility.yul\":774:786   */\n      revert\n        /* \"#utility.yul\":721:788   */\n    tag_97:\n        /* \"#utility.yul\":427:794   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":799:1567   */\n    tag_23:\n        /* \"#utility.yul\":921:927   */\n      0x00\n        /* \"#utility.yul\":929:935   */\n      dup1\n        /* \"#utility.yul\":937:943   */\n      0x00\n        /* \"#utility.yul\":945:951   */\n      dup1\n        /* \"#utility.yul\":998:1000   */\n      0x40\n        /* \"#utility.yul\":986:995   */\n      dup6\n        /* \"#utility.yul\":977:984   */\n      dup8\n        /* \"#utility.yul\":973:996   */\n      sub\n        /* \"#utility.yul\":969:1001   */\n      slt\n        /* \"#utility.yul\":966:1018   */\n      iszero\n      tag_99\n      jumpi\n        /* \"#utility.yul\":1014:1015   */\n      0x00\n        /* \"#utility.yul\":1011:1012   */\n      dup1\n        /* \"#utility.yul\":1004:1016   */\n      revert\n        /* \"#utility.yul\":966:1018   */\n    tag_99:\n        /* \"#utility.yul\":1054:1063   */\n      dup5\n        /* \"#utility.yul\":1041:1064   */\n      calldataload\n        /* \"#utility.yul\":1087:1105   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1079:1085   */\n      dup2\n        /* \"#utility.yul\":1076:1106   */\n      gt\n        /* \"#utility.yul\":1073:1123   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":1119:1120   */\n      0x00\n        /* \"#utility.yul\":1116:1117   */\n      dup1\n        /* \"#utility.yul\":1109:1121   */\n      revert\n        /* \"#utility.yul\":1073:1123   */\n    tag_100:\n        /* \"#utility.yul\":1158:1228   */\n      tag_101\n        /* \"#utility.yul\":1220:1227   */\n      dup8\n        /* \"#utility.yul\":1211:1217   */\n      dup3\n        /* \"#utility.yul\":1200:1209   */\n      dup9\n        /* \"#utility.yul\":1196:1218   */\n      add\n        /* \"#utility.yul\":1158:1228   */\n      tag_88\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":1247:1255   */\n      swap1\n      swap6\n      pop\n        /* \"#utility.yul\":1132:1228   */\n      swap4\n      pop\n      pop\n        /* \"#utility.yul\":1335:1337   */\n      0x20\n        /* \"#utility.yul\":1320:1338   */\n      dup6\n      add\n        /* \"#utility.yul\":1307:1339   */\n      calldataload\n        /* \"#utility.yul\":1364:1382   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1351:1383   */\n      dup2\n      gt\n        /* \"#utility.yul\":1348:1400   */\n      iszero\n      tag_102\n      jumpi\n        /* \"#utility.yul\":1396:1397   */\n      0x00\n        /* \"#utility.yul\":1393:1394   */\n      dup1\n        /* \"#utility.yul\":1386:1398   */\n      revert\n        /* \"#utility.yul\":1348:1400   */\n    tag_102:\n        /* \"#utility.yul\":1435:1507   */\n      tag_103\n        /* \"#utility.yul\":1499:1506   */\n      dup8\n        /* \"#utility.yul\":1488:1496   */\n      dup3\n        /* \"#utility.yul\":1477:1486   */\n      dup9\n        /* \"#utility.yul\":1473:1497   */\n      add\n        /* \"#utility.yul\":1435:1507   */\n      tag_88\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":799:1567   */\n      swap6\n      swap9\n      swap5\n      swap8\n      pop\n        /* \"#utility.yul\":1526:1534   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":799:1567   */\n      jump\t// out\n        /* \"#utility.yul\":1572:1918   */\n    tag_30:\n        /* \"#utility.yul\":1640:1646   */\n      0x00\n        /* \"#utility.yul\":1648:1654   */\n      dup1\n        /* \"#utility.yul\":1701:1703   */\n      0x40\n        /* \"#utility.yul\":1689:1698   */\n      dup4\n        /* \"#utility.yul\":1680:1687   */\n      dup6\n        /* \"#utility.yul\":1676:1699   */\n      sub\n        /* \"#utility.yul\":1672:1704   */\n      slt\n        /* \"#utility.yul\":1669:1721   */\n      iszero\n      tag_105\n      jumpi\n        /* \"#utility.yul\":1717:1718   */\n      0x00\n        /* \"#utility.yul\":1714:1715   */\n      dup1\n        /* \"#utility.yul\":1707:1719   */\n      revert\n        /* \"#utility.yul\":1669:1721   */\n    tag_105:\n      pop\n      pop\n        /* \"#utility.yul\":1762:1785   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1882:1884   */\n      0x20\n        /* \"#utility.yul\":1867:1885   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1854:1886   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1572:1918   */\n      jump\t// out\n        /* \"#utility.yul\":2276:2403   */\n    tag_89:\n        /* \"#utility.yul\":2337:2347   */\n      0x4e487b71\n        /* \"#utility.yul\":2332:2335   */\n      0xe0\n        /* \"#utility.yul\":2328:2348   */\n      shl\n        /* \"#utility.yul\":2325:2326   */\n      0x00\n        /* \"#utility.yul\":2318:2349   */\n      mstore\n        /* \"#utility.yul\":2368:2372   */\n      0x11\n        /* \"#utility.yul\":2365:2366   */\n      0x04\n        /* \"#utility.yul\":2358:2373   */\n      mstore\n        /* \"#utility.yul\":2392:2396   */\n      0x24\n        /* \"#utility.yul\":2389:2390   */\n      0x00\n        /* \"#utility.yul\":2382:2397   */\n      revert\n        /* \"#utility.yul\":2408:2533   */\n    tag_59:\n        /* \"#utility.yul\":2473:2482   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2494:2504   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2491:2527   */\n      iszero\n      tag_53\n      jumpi\n        /* \"#utility.yul\":2507:2525   */\n      tag_53\n      tag_89\n      jump\t// in\n        /* \"#utility.yul\":2538:2665   */\n    tag_70:\n        /* \"#utility.yul\":2599:2609   */\n      0x4e487b71\n        /* \"#utility.yul\":2594:2597   */\n      0xe0\n        /* \"#utility.yul\":2590:2610   */\n      shl\n        /* \"#utility.yul\":2587:2588   */\n      0x00\n        /* \"#utility.yul\":2580:2611   */\n      mstore\n        /* \"#utility.yul\":2630:2634   */\n      0x32\n        /* \"#utility.yul\":2627:2628   */\n      0x04\n        /* \"#utility.yul\":2620:2635   */\n      mstore\n        /* \"#utility.yul\":2654:2658   */\n      0x24\n        /* \"#utility.yul\":2651:2652   */\n      0x00\n        /* \"#utility.yul\":2644:2659   */\n      revert\n        /* \"#utility.yul\":2670:2887   */\n    tag_78:\n        /* \"#utility.yul\":2710:2711   */\n      0x00\n        /* \"#utility.yul\":2736:2737   */\n      dup3\n        /* \"#utility.yul\":2726:2858   */\n      tag_113\n      jumpi\n        /* \"#utility.yul\":2780:2790   */\n      0x4e487b71\n        /* \"#utility.yul\":2775:2778   */\n      0xe0\n        /* \"#utility.yul\":2771:2791   */\n      shl\n        /* \"#utility.yul\":2768:2769   */\n      0x00\n        /* \"#utility.yul\":2761:2792   */\n      mstore\n        /* \"#utility.yul\":2815:2819   */\n      0x12\n        /* \"#utility.yul\":2812:2813   */\n      0x04\n        /* \"#utility.yul\":2805:2820   */\n      mstore\n        /* \"#utility.yul\":2843:2847   */\n      0x24\n        /* \"#utility.yul\":2840:2841   */\n      0x00\n        /* \"#utility.yul\":2833:2848   */\n      revert\n        /* \"#utility.yul\":2726:2858   */\n    tag_113:\n      pop\n        /* \"#utility.yul\":2872:2881   */\n      div\n      swap1\n        /* \"#utility.yul\":2670:2887   */\n      jump\t// out\n        /* \"#utility.yul\":2892:3060   */\n    tag_80:\n        /* \"#utility.yul\":2965:2974   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":2996:3005   */\n      dup2\n      iszero\n        /* \"#utility.yul\":3013:3028   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":3007:3029   */\n      dup5\n      eq\n        /* \"#utility.yul\":2993:3030   */\n      or\n        /* \"#utility.yul\":2983:3054   */\n      tag_53\n      jumpi\n        /* \"#utility.yul\":3034:3052   */\n      tag_53\n      tag_89\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220ad794a86c74f445924bd1a0a3334286d5f39c867ecaf924e1d16b15ebd16c15f64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_277": {
									"entryPoint": null,
									"id": 277,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260645f5560196003553480156017575f80fd5b50610475806100255f395ff3fe608060405234801561000f575f80fd5b5060043610610085575f3560e01c8063b873995a11610058578063b873995a146100dd578063c134f4a1146100f0578063c90b7192146100f9578063e2c9313f1461010c575f80fd5b8063057c041214610089578063214405a9146100ae5780634a7dfc8e146100b65780635ee6efd0146100cb575b5f80fd5b61009c6100973660046102e3565b61011f565b60405190815260200160405180910390f35b61009c5f5481565b6100c96100c4366004610342565b61013e565b005b6100c96100d93660046102e3565b5f55565b61009c6100eb3660046103ae565b6101b1565b61009c60035481565b6100c96101073660046102e3565b600355565b61009c61011a3660046102e3565b6101ed565b6001818154811061012e575f80fd5b5f91825260209091200154905081565b8281146101915760405162461bcd60e51b815260206004820152601860248201527f4d69736d61746368656420696e707574206c656e677468730000000000000000604482015260640160405180910390fd5b61019d60018585610286565b506101aa60028383610286565b5050505050565b5f806101bc846101fc565b90505f6101c88461025f565b905080825f546101d891906103e2565b6101e291906103e2565b925050505b92915050565b6002818154811061012e575f80fd5b5f805b600154811015610257576001818154811061021c5761021c6103f5565b905f5260205f200154831161024f576002818154811061023e5761023e6103f5565b905f5260205f200154915050919050565b6001016101ff565b505f92915050565b5f8061026f6301e1338084610409565b90506003548161027f9190610428565b9392505050565b828054828255905f5260205f209081019282156102bf579160200282015b828111156102bf5782358255916020019190600101906102a4565b506102cb9291506102cf565b5090565b5b808211156102cb575f81556001016102d0565b5f602082840312156102f3575f80fd5b5035919050565b5f8083601f84011261030a575f80fd5b50813567ffffffffffffffff811115610321575f80fd5b6020830191508360208260051b850101111561033b575f80fd5b9250929050565b5f805f8060408587031215610355575f80fd5b843567ffffffffffffffff81111561036b575f80fd5b610377878288016102fa565b909550935050602085013567ffffffffffffffff811115610396575f80fd5b6103a2878288016102fa565b95989497509550505050565b5f80604083850312156103bf575f80fd5b50508035926020909101359150565b634e487b7160e01b5f52601160045260245ffd5b808201808211156101e7576101e76103ce565b634e487b7160e01b5f52603260045260245ffd5b5f8261042357634e487b7160e01b5f52601260045260245ffd5b500490565b80820281158282048414176101e7576101e76103ce56fea2646970667358221220ad794a86c74f445924bd1a0a3334286d5f39c867ecaf924e1d16b15ebd16c15f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH0 SSTORE PUSH1 0x19 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH1 0x17 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x475 DUP1 PUSH2 0x25 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x85 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB873995A GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xB873995A EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0xC134F4A1 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0xC90B7192 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0xE2C9313F EQ PUSH2 0x10C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x57C0412 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x214405A9 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x4A7DFC8E EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x5EE6EFD0 EQ PUSH2 0xCB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH2 0x97 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x11F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC9 PUSH2 0xC4 CALLDATASIZE PUSH1 0x4 PUSH2 0x342 JUMP JUMPDEST PUSH2 0x13E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC9 PUSH2 0xD9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E3 JUMP JUMPDEST PUSH0 SSTORE JUMP JUMPDEST PUSH2 0x9C PUSH2 0xEB CALLDATASIZE PUSH1 0x4 PUSH2 0x3AE JUMP JUMPDEST PUSH2 0x1B1 JUMP JUMPDEST PUSH2 0x9C PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC9 PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH2 0x9C PUSH2 0x11A CALLDATASIZE PUSH1 0x4 PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x12E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x191 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D69736D61746368656420696E707574206C656E677468730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19D PUSH1 0x1 DUP6 DUP6 PUSH2 0x286 JUMP JUMPDEST POP PUSH2 0x1AA PUSH1 0x2 DUP4 DUP4 PUSH2 0x286 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1BC DUP5 PUSH2 0x1FC JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1C8 DUP5 PUSH2 0x25F JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH0 SLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x3E2 JUMP JUMPDEST PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x3E2 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x12E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x257 JUMPI PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x21C JUMPI PUSH2 0x21C PUSH2 0x3F5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD DUP4 GT PUSH2 0x24F JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x23E JUMPI PUSH2 0x23E PUSH2 0x3F5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1FF JUMP JUMPDEST POP PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x26F PUSH4 0x1E13380 DUP5 PUSH2 0x409 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 SLOAD DUP2 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x428 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2BF JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2BF JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2A4 JUMP JUMPDEST POP PUSH2 0x2CB SWAP3 SWAP2 POP PUSH2 0x2CF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2CB JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2D0 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x30A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x321 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x33B JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x355 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x36B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x377 DUP8 DUP3 DUP9 ADD PUSH2 0x2FA JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x396 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3A2 DUP8 DUP3 DUP9 ADD PUSH2 0x2FA JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1E7 JUMPI PUSH2 0x1E7 PUSH2 0x3CE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x423 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1E7 JUMPI PUSH2 0x1E7 PUSH2 0x3CE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD PUSH26 0x4A86C74F445924BD1A0A3334286D5F39C867ECAF924E1D16B15E 0xBD AND 0xC1 PUSH0 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "299:2896:3:-:0;;;363:3;338:28;;593:2;556:39;;713:24;;;;;;;;;;299:2896;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@baseAPY_263": {
									"entryPoint": null,
									"id": 263,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calculateAPY_306": {
									"entryPoint": 433,
									"id": 306,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@calculateDurationBonus_361": {
									"entryPoint": 607,
									"id": 361,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateRiskPremium_341": {
									"entryPoint": 508,
									"id": 341,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@durationBonusFactor_272": {
									"entryPoint": null,
									"id": 272,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@riskPremiumRates_269": {
									"entryPoint": 493,
									"id": 269,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@riskPremiumThresholds_266": {
									"entryPoint": 287,
									"id": 266,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBaseAPY_400": {
									"entryPoint": null,
									"id": 400,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setDurationBonusFactor_411": {
									"entryPoint": null,
									"id": 411,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRiskPremiums_389": {
									"entryPoint": 318,
									"id": 389,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_array_uint256_dyn_calldata": {
									"entryPoint": 762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_stringliteral_757ac971b3c89ff6729d1b818f9eb2011ff93a983cd352fb4a93d3214c1015fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 974,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1013,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3062:4",
										"nodeType": "YulBlock",
										"src": "0:3062:4",
										"statements": [
											{
												"nativeSrc": "6:3:4",
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:156:4",
													"nodeType": "YulBlock",
													"src": "84:156:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:4",
																"nodeType": "YulBlock",
																"src": "130:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:4",
																					"nodeType": "YulLiteral",
																					"src": "139:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:4",
																					"nodeType": "YulLiteral",
																					"src": "142:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:4"
																			},
																			"nativeSrc": "132:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:4"
																		},
																		"nativeSrc": "132:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:4"
																		},
																		"nativeSrc": "101:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:4",
																		"nodeType": "YulLiteral",
																		"src": "126:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:4"
																},
																"nativeSrc": "97:32:4",
																"nodeType": "YulFunctionCall",
																"src": "97:32:4"
															},
															"nativeSrc": "94:52:4",
															"nodeType": "YulIf",
															"src": "94:52:4"
														},
														{
															"nativeSrc": "155:14:4",
															"nodeType": "YulVariableDeclaration",
															"src": "155:14:4",
															"value": {
																"kind": "number",
																"nativeSrc": "168:1:4",
																"nodeType": "YulLiteral",
																"src": "168:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "159:5:4",
																	"nodeType": "YulTypedName",
																	"src": "159:5:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "178:32:4",
															"nodeType": "YulAssignment",
															"src": "178:32:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "200:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "200:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "187:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:12:4"
																},
																"nativeSrc": "187:23:4",
																"nodeType": "YulFunctionCall",
																"src": "187:23:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "178:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "178:5:4"
																}
															]
														},
														{
															"nativeSrc": "219:15:4",
															"nodeType": "YulAssignment",
															"src": "219:15:4",
															"value": {
																"name": "value",
																"nativeSrc": "229:5:4",
																"nodeType": "YulIdentifier",
																"src": "229:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "219:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "219:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "14:226:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:4",
														"nodeType": "YulTypedName",
														"src": "50:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:4",
														"nodeType": "YulTypedName",
														"src": "61:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:4",
														"nodeType": "YulTypedName",
														"src": "73:6:4",
														"type": ""
													}
												],
												"src": "14:226:4"
											},
											{
												"body": {
													"nativeSrc": "346:76:4",
													"nodeType": "YulBlock",
													"src": "346:76:4",
													"statements": [
														{
															"nativeSrc": "356:26:4",
															"nodeType": "YulAssignment",
															"src": "356:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "368:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "368:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "379:2:4",
																		"nodeType": "YulLiteral",
																		"src": "379:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "364:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "364:3:4"
																},
																"nativeSrc": "364:18:4",
																"nodeType": "YulFunctionCall",
																"src": "364:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "356:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "356:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "398:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "398:9:4"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "409:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "409:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "391:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "391:6:4"
																},
																"nativeSrc": "391:25:4",
																"nodeType": "YulFunctionCall",
																"src": "391:25:4"
															},
															"nativeSrc": "391:25:4",
															"nodeType": "YulExpressionStatement",
															"src": "391:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "245:177:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "315:9:4",
														"nodeType": "YulTypedName",
														"src": "315:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "326:6:4",
														"nodeType": "YulTypedName",
														"src": "326:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "337:4:4",
														"nodeType": "YulTypedName",
														"src": "337:4:4",
														"type": ""
													}
												],
												"src": "245:177:4"
											},
											{
												"body": {
													"nativeSrc": "511:283:4",
													"nodeType": "YulBlock",
													"src": "511:283:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "560:16:4",
																"nodeType": "YulBlock",
																"src": "560:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "569:1:4",
																					"nodeType": "YulLiteral",
																					"src": "569:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "572:1:4",
																					"nodeType": "YulLiteral",
																					"src": "572:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "562:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "562:6:4"
																			},
																			"nativeSrc": "562:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "562:12:4"
																		},
																		"nativeSrc": "562:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "562:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "539:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "539:6:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "547:4:4",
																						"nodeType": "YulLiteral",
																						"src": "547:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "535:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "535:3:4"
																				},
																				"nativeSrc": "535:17:4",
																				"nodeType": "YulFunctionCall",
																				"src": "535:17:4"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "554:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "554:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "531:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "531:3:4"
																		},
																		"nativeSrc": "531:27:4",
																		"nodeType": "YulFunctionCall",
																		"src": "531:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "524:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "524:6:4"
																},
																"nativeSrc": "524:35:4",
																"nodeType": "YulFunctionCall",
																"src": "524:35:4"
															},
															"nativeSrc": "521:55:4",
															"nodeType": "YulIf",
															"src": "521:55:4"
														},
														{
															"nativeSrc": "585:30:4",
															"nodeType": "YulAssignment",
															"src": "585:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "608:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "608:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "595:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "595:12:4"
																},
																"nativeSrc": "595:20:4",
																"nodeType": "YulFunctionCall",
																"src": "595:20:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "585:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "585:6:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "658:16:4",
																"nodeType": "YulBlock",
																"src": "658:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "667:1:4",
																					"nodeType": "YulLiteral",
																					"src": "667:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "670:1:4",
																					"nodeType": "YulLiteral",
																					"src": "670:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "660:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "660:6:4"
																			},
																			"nativeSrc": "660:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "660:12:4"
																		},
																		"nativeSrc": "660:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "660:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "630:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "630:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "638:18:4",
																		"nodeType": "YulLiteral",
																		"src": "638:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "627:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "627:2:4"
																},
																"nativeSrc": "627:30:4",
																"nodeType": "YulFunctionCall",
																"src": "627:30:4"
															},
															"nativeSrc": "624:50:4",
															"nodeType": "YulIf",
															"src": "624:50:4"
														},
														{
															"nativeSrc": "683:29:4",
															"nodeType": "YulAssignment",
															"src": "683:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "699:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "699:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "707:4:4",
																		"nodeType": "YulLiteral",
																		"src": "707:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "695:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "695:3:4"
																},
																"nativeSrc": "695:17:4",
																"nodeType": "YulFunctionCall",
																"src": "695:17:4"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "683:8:4",
																	"nodeType": "YulIdentifier",
																	"src": "683:8:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "772:16:4",
																"nodeType": "YulBlock",
																"src": "772:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "781:1:4",
																					"nodeType": "YulLiteral",
																					"src": "781:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "784:1:4",
																					"nodeType": "YulLiteral",
																					"src": "784:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "774:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "774:6:4"
																			},
																			"nativeSrc": "774:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "774:12:4"
																		},
																		"nativeSrc": "774:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "774:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "735:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "735:6:4"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "747:1:4",
																								"nodeType": "YulLiteral",
																								"src": "747:1:4",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nativeSrc": "750:6:4",
																								"nodeType": "YulIdentifier",
																								"src": "750:6:4"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "743:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "743:3:4"
																						},
																						"nativeSrc": "743:14:4",
																						"nodeType": "YulFunctionCall",
																						"src": "743:14:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "731:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "731:3:4"
																				},
																				"nativeSrc": "731:27:4",
																				"nodeType": "YulFunctionCall",
																				"src": "731:27:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "760:4:4",
																				"nodeType": "YulLiteral",
																				"src": "760:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "727:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "727:3:4"
																		},
																		"nativeSrc": "727:38:4",
																		"nodeType": "YulFunctionCall",
																		"src": "727:38:4"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "767:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "767:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "724:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "724:2:4"
																},
																"nativeSrc": "724:47:4",
																"nodeType": "YulFunctionCall",
																"src": "724:47:4"
															},
															"nativeSrc": "721:67:4",
															"nodeType": "YulIf",
															"src": "721:67:4"
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn_calldata",
												"nativeSrc": "427:367:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "474:6:4",
														"nodeType": "YulTypedName",
														"src": "474:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "482:3:4",
														"nodeType": "YulTypedName",
														"src": "482:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "490:8:4",
														"nodeType": "YulTypedName",
														"src": "490:8:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "500:6:4",
														"nodeType": "YulTypedName",
														"src": "500:6:4",
														"type": ""
													}
												],
												"src": "427:367:4"
											},
											{
												"body": {
													"nativeSrc": "956:611:4",
													"nodeType": "YulBlock",
													"src": "956:611:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1002:16:4",
																"nodeType": "YulBlock",
																"src": "1002:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1011:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1011:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1014:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1014:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1004:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1004:6:4"
																			},
																			"nativeSrc": "1004:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1004:12:4"
																		},
																		"nativeSrc": "1004:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1004:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "977:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "977:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "986:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "986:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "973:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "973:3:4"
																		},
																		"nativeSrc": "973:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "973:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "998:2:4",
																		"nodeType": "YulLiteral",
																		"src": "998:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "969:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:4"
																},
																"nativeSrc": "969:32:4",
																"nodeType": "YulFunctionCall",
																"src": "969:32:4"
															},
															"nativeSrc": "966:52:4",
															"nodeType": "YulIf",
															"src": "966:52:4"
														},
														{
															"nativeSrc": "1027:37:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1027:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1054:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1054:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1041:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1041:12:4"
																},
																"nativeSrc": "1041:23:4",
																"nodeType": "YulFunctionCall",
																"src": "1041:23:4"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1031:6:4",
																	"nodeType": "YulTypedName",
																	"src": "1031:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1107:16:4",
																"nodeType": "YulBlock",
																"src": "1107:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1116:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1116:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1119:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1119:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1109:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1109:6:4"
																			},
																			"nativeSrc": "1109:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1109:12:4"
																		},
																		"nativeSrc": "1109:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1109:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1079:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1079:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1087:18:4",
																		"nodeType": "YulLiteral",
																		"src": "1087:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1076:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "1076:2:4"
																},
																"nativeSrc": "1076:30:4",
																"nodeType": "YulFunctionCall",
																"src": "1076:30:4"
															},
															"nativeSrc": "1073:50:4",
															"nodeType": "YulIf",
															"src": "1073:50:4"
														},
														{
															"nativeSrc": "1132:96:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1132:96:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1200:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1200:9:4"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1211:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1211:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1196:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1196:3:4"
																		},
																		"nativeSrc": "1196:22:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1196:22:4"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1220:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "1220:7:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn_calldata",
																	"nativeSrc": "1158:37:4",
																	"nodeType": "YulIdentifier",
																	"src": "1158:37:4"
																},
																"nativeSrc": "1158:70:4",
																"nodeType": "YulFunctionCall",
																"src": "1158:70:4"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nativeSrc": "1136:8:4",
																	"nodeType": "YulTypedName",
																	"src": "1136:8:4",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nativeSrc": "1146:8:4",
																	"nodeType": "YulTypedName",
																	"src": "1146:8:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1237:18:4",
															"nodeType": "YulAssignment",
															"src": "1237:18:4",
															"value": {
																"name": "value0_1",
																"nativeSrc": "1247:8:4",
																"nodeType": "YulIdentifier",
																"src": "1247:8:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1237:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1237:6:4"
																}
															]
														},
														{
															"nativeSrc": "1264:18:4",
															"nodeType": "YulAssignment",
															"src": "1264:18:4",
															"value": {
																"name": "value1_1",
																"nativeSrc": "1274:8:4",
																"nodeType": "YulIdentifier",
																"src": "1274:8:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1264:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1264:6:4"
																}
															]
														},
														{
															"nativeSrc": "1291:48:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1291:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1324:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1324:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1335:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1335:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1320:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1320:3:4"
																		},
																		"nativeSrc": "1320:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1320:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1307:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1307:12:4"
																},
																"nativeSrc": "1307:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1307:32:4"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1295:8:4",
																	"nodeType": "YulTypedName",
																	"src": "1295:8:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1384:16:4",
																"nodeType": "YulBlock",
																"src": "1384:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1393:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1393:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1396:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1396:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1386:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1386:6:4"
																			},
																			"nativeSrc": "1386:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1386:12:4"
																		},
																		"nativeSrc": "1386:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1386:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1354:8:4",
																		"nodeType": "YulIdentifier",
																		"src": "1354:8:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1364:18:4",
																		"nodeType": "YulLiteral",
																		"src": "1364:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1351:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "1351:2:4"
																},
																"nativeSrc": "1351:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1351:32:4"
															},
															"nativeSrc": "1348:52:4",
															"nodeType": "YulIf",
															"src": "1348:52:4"
														},
														{
															"nativeSrc": "1409:98:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1409:98:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1477:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1477:9:4"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1488:8:4",
																				"nodeType": "YulIdentifier",
																				"src": "1488:8:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1473:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1473:3:4"
																		},
																		"nativeSrc": "1473:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:24:4"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1499:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "1499:7:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn_calldata",
																	"nativeSrc": "1435:37:4",
																	"nodeType": "YulIdentifier",
																	"src": "1435:37:4"
																},
																"nativeSrc": "1435:72:4",
																"nodeType": "YulFunctionCall",
																"src": "1435:72:4"
															},
															"variables": [
																{
																	"name": "value2_1",
																	"nativeSrc": "1413:8:4",
																	"nodeType": "YulTypedName",
																	"src": "1413:8:4",
																	"type": ""
																},
																{
																	"name": "value3_1",
																	"nativeSrc": "1423:8:4",
																	"nodeType": "YulTypedName",
																	"src": "1423:8:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1516:18:4",
															"nodeType": "YulAssignment",
															"src": "1516:18:4",
															"value": {
																"name": "value2_1",
																"nativeSrc": "1526:8:4",
																"nodeType": "YulIdentifier",
																"src": "1526:8:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1516:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:4"
																}
															]
														},
														{
															"nativeSrc": "1543:18:4",
															"nodeType": "YulAssignment",
															"src": "1543:18:4",
															"value": {
																"name": "value3_1",
																"nativeSrc": "1553:8:4",
																"nodeType": "YulIdentifier",
																"src": "1553:8:4"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "1543:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1543:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "799:768:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "898:9:4",
														"nodeType": "YulTypedName",
														"src": "898:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "909:7:4",
														"nodeType": "YulTypedName",
														"src": "909:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "921:6:4",
														"nodeType": "YulTypedName",
														"src": "921:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "929:6:4",
														"nodeType": "YulTypedName",
														"src": "929:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "937:6:4",
														"nodeType": "YulTypedName",
														"src": "937:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "945:6:4",
														"nodeType": "YulTypedName",
														"src": "945:6:4",
														"type": ""
													}
												],
												"src": "799:768:4"
											},
											{
												"body": {
													"nativeSrc": "1659:259:4",
													"nodeType": "YulBlock",
													"src": "1659:259:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1705:16:4",
																"nodeType": "YulBlock",
																"src": "1705:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1714:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1714:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1717:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1717:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1707:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1707:6:4"
																			},
																			"nativeSrc": "1707:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1707:12:4"
																		},
																		"nativeSrc": "1707:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1707:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1680:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1680:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1689:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1689:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1676:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1676:3:4"
																		},
																		"nativeSrc": "1676:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1676:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1701:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1701:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1672:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1672:3:4"
																},
																"nativeSrc": "1672:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1672:32:4"
															},
															"nativeSrc": "1669:52:4",
															"nodeType": "YulIf",
															"src": "1669:52:4"
														},
														{
															"nativeSrc": "1730:14:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1730:14:4",
															"value": {
																"kind": "number",
																"nativeSrc": "1743:1:4",
																"nodeType": "YulLiteral",
																"src": "1743:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1734:5:4",
																	"nodeType": "YulTypedName",
																	"src": "1734:5:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1753:32:4",
															"nodeType": "YulAssignment",
															"src": "1753:32:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1775:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1775:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1762:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1762:12:4"
																},
																"nativeSrc": "1762:23:4",
																"nodeType": "YulFunctionCall",
																"src": "1762:23:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1753:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1753:5:4"
																}
															]
														},
														{
															"nativeSrc": "1794:15:4",
															"nodeType": "YulAssignment",
															"src": "1794:15:4",
															"value": {
																"name": "value",
																"nativeSrc": "1804:5:4",
																"nodeType": "YulIdentifier",
																"src": "1804:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1794:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1794:6:4"
																}
															]
														},
														{
															"nativeSrc": "1818:16:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1818:16:4",
															"value": {
																"kind": "number",
																"nativeSrc": "1833:1:4",
																"nodeType": "YulLiteral",
																"src": "1833:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1822:7:4",
																	"nodeType": "YulTypedName",
																	"src": "1822:7:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1843:43:4",
															"nodeType": "YulAssignment",
															"src": "1843:43:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1871:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1871:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1882:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1882:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1867:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1867:3:4"
																		},
																		"nativeSrc": "1867:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1867:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1854:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1854:12:4"
																},
																"nativeSrc": "1854:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1854:32:4"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1843:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1843:7:4"
																}
															]
														},
														{
															"nativeSrc": "1895:17:4",
															"nodeType": "YulAssignment",
															"src": "1895:17:4",
															"value": {
																"name": "value_1",
																"nativeSrc": "1905:7:4",
																"nodeType": "YulIdentifier",
																"src": "1905:7:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1895:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1895:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "1572:346:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1617:9:4",
														"nodeType": "YulTypedName",
														"src": "1617:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1628:7:4",
														"nodeType": "YulTypedName",
														"src": "1628:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1640:6:4",
														"nodeType": "YulTypedName",
														"src": "1640:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1648:6:4",
														"nodeType": "YulTypedName",
														"src": "1648:6:4",
														"type": ""
													}
												],
												"src": "1572:346:4"
											},
											{
												"body": {
													"nativeSrc": "2097:174:4",
													"nodeType": "YulBlock",
													"src": "2097:174:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2114:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2114:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2125:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2125:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2107:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2107:6:4"
																},
																"nativeSrc": "2107:21:4",
																"nodeType": "YulFunctionCall",
																"src": "2107:21:4"
															},
															"nativeSrc": "2107:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "2107:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2148:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2148:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2159:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2159:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2144:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2144:3:4"
																		},
																		"nativeSrc": "2144:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2144:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2164:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2164:2:4",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2137:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2137:6:4"
																},
																"nativeSrc": "2137:30:4",
																"nodeType": "YulFunctionCall",
																"src": "2137:30:4"
															},
															"nativeSrc": "2137:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "2137:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2187:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2187:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2198:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2198:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2183:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2183:3:4"
																		},
																		"nativeSrc": "2183:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2183:18:4"
																	},
																	{
																		"hexValue": "4d69736d61746368656420696e707574206c656e67746873",
																		"kind": "string",
																		"nativeSrc": "2203:26:4",
																		"nodeType": "YulLiteral",
																		"src": "2203:26:4",
																		"type": "",
																		"value": "Mismatched input lengths"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2176:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2176:6:4"
																},
																"nativeSrc": "2176:54:4",
																"nodeType": "YulFunctionCall",
																"src": "2176:54:4"
															},
															"nativeSrc": "2176:54:4",
															"nodeType": "YulExpressionStatement",
															"src": "2176:54:4"
														},
														{
															"nativeSrc": "2239:26:4",
															"nodeType": "YulAssignment",
															"src": "2239:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2251:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2251:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2262:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2262:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2247:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2247:3:4"
																},
																"nativeSrc": "2247:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2247:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2239:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2239:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_757ac971b3c89ff6729d1b818f9eb2011ff93a983cd352fb4a93d3214c1015fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1923:348:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2074:9:4",
														"nodeType": "YulTypedName",
														"src": "2074:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2088:4:4",
														"nodeType": "YulTypedName",
														"src": "2088:4:4",
														"type": ""
													}
												],
												"src": "1923:348:4"
											},
											{
												"body": {
													"nativeSrc": "2308:95:4",
													"nodeType": "YulBlock",
													"src": "2308:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2325:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2325:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2332:3:4",
																				"nodeType": "YulLiteral",
																				"src": "2332:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2337:10:4",
																				"nodeType": "YulLiteral",
																				"src": "2337:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2328:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2328:3:4"
																		},
																		"nativeSrc": "2328:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2328:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2318:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2318:6:4"
																},
																"nativeSrc": "2318:31:4",
																"nodeType": "YulFunctionCall",
																"src": "2318:31:4"
															},
															"nativeSrc": "2318:31:4",
															"nodeType": "YulExpressionStatement",
															"src": "2318:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2365:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2365:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2368:4:4",
																		"nodeType": "YulLiteral",
																		"src": "2368:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2358:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2358:6:4"
																},
																"nativeSrc": "2358:15:4",
																"nodeType": "YulFunctionCall",
																"src": "2358:15:4"
															},
															"nativeSrc": "2358:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "2358:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2389:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2389:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2392:4:4",
																		"nodeType": "YulLiteral",
																		"src": "2392:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2382:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2382:6:4"
																},
																"nativeSrc": "2382:15:4",
																"nodeType": "YulFunctionCall",
																"src": "2382:15:4"
															},
															"nativeSrc": "2382:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "2382:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2276:127:4",
												"nodeType": "YulFunctionDefinition",
												"src": "2276:127:4"
											},
											{
												"body": {
													"nativeSrc": "2456:77:4",
													"nodeType": "YulBlock",
													"src": "2456:77:4",
													"statements": [
														{
															"nativeSrc": "2466:16:4",
															"nodeType": "YulAssignment",
															"src": "2466:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2477:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "2477:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2480:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "2480:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2473:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2473:3:4"
																},
																"nativeSrc": "2473:9:4",
																"nodeType": "YulFunctionCall",
																"src": "2473:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2466:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2466:3:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2505:22:4",
																"nodeType": "YulBlock",
																"src": "2505:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2507:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "2507:16:4"
																			},
																			"nativeSrc": "2507:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2507:18:4"
																		},
																		"nativeSrc": "2507:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2507:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2497:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "2497:1:4"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2500:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2500:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2494:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "2494:2:4"
																},
																"nativeSrc": "2494:10:4",
																"nodeType": "YulFunctionCall",
																"src": "2494:10:4"
															},
															"nativeSrc": "2491:36:4",
															"nodeType": "YulIf",
															"src": "2491:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2408:125:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2439:1:4",
														"nodeType": "YulTypedName",
														"src": "2439:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2442:1:4",
														"nodeType": "YulTypedName",
														"src": "2442:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2448:3:4",
														"nodeType": "YulTypedName",
														"src": "2448:3:4",
														"type": ""
													}
												],
												"src": "2408:125:4"
											},
											{
												"body": {
													"nativeSrc": "2570:95:4",
													"nodeType": "YulBlock",
													"src": "2570:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2587:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2587:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2594:3:4",
																				"nodeType": "YulLiteral",
																				"src": "2594:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2599:10:4",
																				"nodeType": "YulLiteral",
																				"src": "2599:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2590:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2590:3:4"
																		},
																		"nativeSrc": "2590:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2590:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2580:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2580:6:4"
																},
																"nativeSrc": "2580:31:4",
																"nodeType": "YulFunctionCall",
																"src": "2580:31:4"
															},
															"nativeSrc": "2580:31:4",
															"nodeType": "YulExpressionStatement",
															"src": "2580:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2627:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2627:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2630:4:4",
																		"nodeType": "YulLiteral",
																		"src": "2630:4:4",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2620:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2620:6:4"
																},
																"nativeSrc": "2620:15:4",
																"nodeType": "YulFunctionCall",
																"src": "2620:15:4"
															},
															"nativeSrc": "2620:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "2620:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2651:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2651:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2654:4:4",
																		"nodeType": "YulLiteral",
																		"src": "2654:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2644:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2644:6:4"
																},
																"nativeSrc": "2644:15:4",
																"nodeType": "YulFunctionCall",
																"src": "2644:15:4"
															},
															"nativeSrc": "2644:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "2644:15:4"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "2538:127:4",
												"nodeType": "YulFunctionDefinition",
												"src": "2538:127:4"
											},
											{
												"body": {
													"nativeSrc": "2716:171:4",
													"nodeType": "YulBlock",
													"src": "2716:171:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2747:111:4",
																"nodeType": "YulBlock",
																"src": "2747:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2768:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2768:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2775:3:4",
																							"nodeType": "YulLiteral",
																							"src": "2775:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2780:10:4",
																							"nodeType": "YulLiteral",
																							"src": "2780:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2771:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "2771:3:4"
																					},
																					"nativeSrc": "2771:20:4",
																					"nodeType": "YulFunctionCall",
																					"src": "2771:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2761:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2761:6:4"
																			},
																			"nativeSrc": "2761:31:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2761:31:4"
																		},
																		"nativeSrc": "2761:31:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2761:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2812:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2812:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2815:4:4",
																					"nodeType": "YulLiteral",
																					"src": "2815:4:4",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2805:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2805:6:4"
																			},
																			"nativeSrc": "2805:15:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2805:15:4"
																		},
																		"nativeSrc": "2805:15:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2805:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2840:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2840:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2843:4:4",
																					"nodeType": "YulLiteral",
																					"src": "2843:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2833:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2833:6:4"
																			},
																			"nativeSrc": "2833:15:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2833:15:4"
																		},
																		"nativeSrc": "2833:15:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2833:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2736:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "2736:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2729:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2729:6:4"
																},
																"nativeSrc": "2729:9:4",
																"nodeType": "YulFunctionCall",
																"src": "2729:9:4"
															},
															"nativeSrc": "2726:132:4",
															"nodeType": "YulIf",
															"src": "2726:132:4"
														},
														{
															"nativeSrc": "2867:14:4",
															"nodeType": "YulAssignment",
															"src": "2867:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2876:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "2876:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2879:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "2879:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2872:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2872:3:4"
																},
																"nativeSrc": "2872:9:4",
																"nodeType": "YulFunctionCall",
																"src": "2872:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "2867:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "2867:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "2670:217:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2701:1:4",
														"nodeType": "YulTypedName",
														"src": "2701:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2704:1:4",
														"nodeType": "YulTypedName",
														"src": "2704:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "2710:1:4",
														"nodeType": "YulTypedName",
														"src": "2710:1:4",
														"type": ""
													}
												],
												"src": "2670:217:4"
											},
											{
												"body": {
													"nativeSrc": "2944:116:4",
													"nodeType": "YulBlock",
													"src": "2944:116:4",
													"statements": [
														{
															"nativeSrc": "2954:20:4",
															"nodeType": "YulAssignment",
															"src": "2954:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2969:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "2969:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2972:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "2972:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2965:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2965:3:4"
																},
																"nativeSrc": "2965:9:4",
																"nodeType": "YulFunctionCall",
																"src": "2965:9:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "2954:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "2954:7:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3032:22:4",
																"nodeType": "YulBlock",
																"src": "3032:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3034:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "3034:16:4"
																			},
																			"nativeSrc": "3034:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3034:18:4"
																		},
																		"nativeSrc": "3034:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3034:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "3003:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "3003:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2996:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "2996:6:4"
																				},
																				"nativeSrc": "2996:9:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2996:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "3010:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "3010:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "3017:7:4",
																								"nodeType": "YulIdentifier",
																								"src": "3017:7:4"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "3026:1:4",
																								"nodeType": "YulIdentifier",
																								"src": "3026:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "3013:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "3013:3:4"
																						},
																						"nativeSrc": "3013:15:4",
																						"nodeType": "YulFunctionCall",
																						"src": "3013:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "3007:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "3007:2:4"
																				},
																				"nativeSrc": "3007:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3007:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2993:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "2993:2:4"
																		},
																		"nativeSrc": "2993:37:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2993:37:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2986:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2986:6:4"
																},
																"nativeSrc": "2986:45:4",
																"nodeType": "YulFunctionCall",
																"src": "2986:45:4"
															},
															"nativeSrc": "2983:71:4",
															"nodeType": "YulIf",
															"src": "2983:71:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "2892:168:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2923:1:4",
														"nodeType": "YulTypedName",
														"src": "2923:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2926:1:4",
														"nodeType": "YulTypedName",
														"src": "2926:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "2932:7:4",
														"nodeType": "YulTypedName",
														"src": "2932:7:4",
														"type": ""
													}
												],
												"src": "2892:168:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_array_uint256_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_uint256_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_uint256_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_stringliteral_757ac971b3c89ff6729d1b818f9eb2011ff93a983cd352fb4a93d3214c1015fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Mismatched input lengths\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610085575f3560e01c8063b873995a11610058578063b873995a146100dd578063c134f4a1146100f0578063c90b7192146100f9578063e2c9313f1461010c575f80fd5b8063057c041214610089578063214405a9146100ae5780634a7dfc8e146100b65780635ee6efd0146100cb575b5f80fd5b61009c6100973660046102e3565b61011f565b60405190815260200160405180910390f35b61009c5f5481565b6100c96100c4366004610342565b61013e565b005b6100c96100d93660046102e3565b5f55565b61009c6100eb3660046103ae565b6101b1565b61009c60035481565b6100c96101073660046102e3565b600355565b61009c61011a3660046102e3565b6101ed565b6001818154811061012e575f80fd5b5f91825260209091200154905081565b8281146101915760405162461bcd60e51b815260206004820152601860248201527f4d69736d61746368656420696e707574206c656e677468730000000000000000604482015260640160405180910390fd5b61019d60018585610286565b506101aa60028383610286565b5050505050565b5f806101bc846101fc565b90505f6101c88461025f565b905080825f546101d891906103e2565b6101e291906103e2565b925050505b92915050565b6002818154811061012e575f80fd5b5f805b600154811015610257576001818154811061021c5761021c6103f5565b905f5260205f200154831161024f576002818154811061023e5761023e6103f5565b905f5260205f200154915050919050565b6001016101ff565b505f92915050565b5f8061026f6301e1338084610409565b90506003548161027f9190610428565b9392505050565b828054828255905f5260205f209081019282156102bf579160200282015b828111156102bf5782358255916020019190600101906102a4565b506102cb9291506102cf565b5090565b5b808211156102cb575f81556001016102d0565b5f602082840312156102f3575f80fd5b5035919050565b5f8083601f84011261030a575f80fd5b50813567ffffffffffffffff811115610321575f80fd5b6020830191508360208260051b850101111561033b575f80fd5b9250929050565b5f805f8060408587031215610355575f80fd5b843567ffffffffffffffff81111561036b575f80fd5b610377878288016102fa565b909550935050602085013567ffffffffffffffff811115610396575f80fd5b6103a2878288016102fa565b95989497509550505050565b5f80604083850312156103bf575f80fd5b50508035926020909101359150565b634e487b7160e01b5f52601160045260245ffd5b808201808211156101e7576101e76103ce565b634e487b7160e01b5f52603260045260245ffd5b5f8261042357634e487b7160e01b5f52601260045260245ffd5b500490565b80820281158282048414176101e7576101e76103ce56fea2646970667358221220ad794a86c74f445924bd1a0a3334286d5f39c867ecaf924e1d16b15ebd16c15f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x85 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB873995A GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xB873995A EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0xC134F4A1 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0xC90B7192 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0xE2C9313F EQ PUSH2 0x10C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x57C0412 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x214405A9 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x4A7DFC8E EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x5EE6EFD0 EQ PUSH2 0xCB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH2 0x97 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x11F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC9 PUSH2 0xC4 CALLDATASIZE PUSH1 0x4 PUSH2 0x342 JUMP JUMPDEST PUSH2 0x13E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC9 PUSH2 0xD9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E3 JUMP JUMPDEST PUSH0 SSTORE JUMP JUMPDEST PUSH2 0x9C PUSH2 0xEB CALLDATASIZE PUSH1 0x4 PUSH2 0x3AE JUMP JUMPDEST PUSH2 0x1B1 JUMP JUMPDEST PUSH2 0x9C PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC9 PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH2 0x9C PUSH2 0x11A CALLDATASIZE PUSH1 0x4 PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x12E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x191 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D69736D61746368656420696E707574206C656E677468730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19D PUSH1 0x1 DUP6 DUP6 PUSH2 0x286 JUMP JUMPDEST POP PUSH2 0x1AA PUSH1 0x2 DUP4 DUP4 PUSH2 0x286 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1BC DUP5 PUSH2 0x1FC JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1C8 DUP5 PUSH2 0x25F JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH0 SLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x3E2 JUMP JUMPDEST PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x3E2 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x12E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x257 JUMPI PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x21C JUMPI PUSH2 0x21C PUSH2 0x3F5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD DUP4 GT PUSH2 0x24F JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x23E JUMPI PUSH2 0x23E PUSH2 0x3F5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1FF JUMP JUMPDEST POP PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x26F PUSH4 0x1E13380 DUP5 PUSH2 0x409 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 SLOAD DUP2 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x428 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2BF JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2BF JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2A4 JUMP JUMPDEST POP PUSH2 0x2CB SWAP3 SWAP2 POP PUSH2 0x2CF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2CB JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2D0 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x30A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x321 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x33B JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x355 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x36B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x377 DUP8 DUP3 DUP9 ADD PUSH2 0x2FA JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x396 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3A2 DUP8 DUP3 DUP9 ADD PUSH2 0x2FA JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1E7 JUMPI PUSH2 0x1E7 PUSH2 0x3CE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x423 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1E7 JUMPI PUSH2 0x1E7 PUSH2 0x3CE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD PUSH26 0x4A86C74F445924BD1A0A3334286D5F39C867ECAF924E1D16B15E 0xBD AND 0xC1 PUSH0 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "299:2896:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;407:38;;;;;;:::i;:::-;;:::i;:::-;;;391:25:4;;;379:2;364:18;407:38:3;;;;;;;338:28;;;;;;2450:265;;;;;;:::i;:::-;;:::i;:::-;;2845:83;;;;;;:::i;:::-;2902:7;:18;2845:83;1001:303;;;;;;:::i;:::-;;:::i;556:39::-;;;;;;3087:105;;;;;;:::i;:::-;3155:19;:29;3087:105;483:33;;;;;;:::i;:::-;;:::i;407:38::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;407:38:3;:::o;2450:265::-;2561:35;;;2553:72;;;;-1:-1:-1;;;2553:72:3;;2125:2:4;2553:72:3;;;2107:21:4;2164:2;2144:18;;;2137:30;2203:26;2183:18;;;2176:54;2247:18;;2553:72:3;;;;;;;;2636:35;:21;2660:11;;2636:35;:::i;:::-;-1:-1:-1;2682:25:3;:16;2701:6;;2682:25;:::i;:::-;;2450:265;;;;:::o;1001:303::-;1091:7;1111:19;1133:32;1154:10;1133:20;:32::i;:::-;1111:54;;1176:21;1200:39;1223:15;1200:22;:39::i;:::-;1176:63;;1283:13;1269:11;1259:7;;:21;;;;:::i;:::-;:37;;;;:::i;:::-;1252:44;;;;1001:303;;;;;:::o;483:33::-;;;;;;;;;;;;1524:309;1597:7;;1617:190;1641:21;:28;1637:32;;1617:190;;;1709:21;1731:1;1709:24;;;;;;;;:::i;:::-;;;;;;;;;1695:10;:38;1691:105;;1761:16;1778:1;1761:19;;;;;;;;:::i;:::-;;;;;;;;;1754:26;;;1524:309;;;:::o;1691:105::-;1671:3;;1617:190;;;-1:-1:-1;1824:1:3;;1524:309;-1:-1:-1;;1524:309:3:o;2042:199::-;2122:7;;2159:28;2178:8;2159:15;:28;:::i;:::-;2142:45;;2214:19;;2205:6;:28;;;;:::i;:::-;2198:35;2042:199;-1:-1:-1;;;2042:199:3:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:226:4;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;187:23:4;;14:226;-1:-1:-1;14:226:4:o;427:367::-;490:8;500:6;554:3;547:4;539:6;535:17;531:27;521:55;;572:1;569;562:12;521:55;-1:-1:-1;595:20:4;;638:18;627:30;;624:50;;;670:1;667;660:12;624:50;707:4;699:6;695:17;683:29;;767:3;760:4;750:6;747:1;743:14;735:6;731:27;727:38;724:47;721:67;;;784:1;781;774:12;721:67;427:367;;;;;:::o;799:768::-;921:6;929;937;945;998:2;986:9;977:7;973:23;969:32;966:52;;;1014:1;1011;1004:12;966:52;1054:9;1041:23;1087:18;1079:6;1076:30;1073:50;;;1119:1;1116;1109:12;1073:50;1158:70;1220:7;1211:6;1200:9;1196:22;1158:70;:::i;:::-;1247:8;;-1:-1:-1;1132:96:4;-1:-1:-1;;1335:2:4;1320:18;;1307:32;1364:18;1351:32;;1348:52;;;1396:1;1393;1386:12;1348:52;1435:72;1499:7;1488:8;1477:9;1473:24;1435:72;:::i;:::-;799:768;;;;-1:-1:-1;1526:8:4;-1:-1:-1;;;;799:768:4:o;1572:346::-;1640:6;1648;1701:2;1689:9;1680:7;1676:23;1672:32;1669:52;;;1717:1;1714;1707:12;1669:52;-1:-1:-1;;1762:23:4;;;1882:2;1867:18;;;1854:32;;-1:-1:-1;1572:346:4:o;2276:127::-;2337:10;2332:3;2328:20;2325:1;2318:31;2368:4;2365:1;2358:15;2392:4;2389:1;2382:15;2408:125;2473:9;;;2494:10;;;2491:36;;;2507:18;;:::i;2538:127::-;2599:10;2594:3;2590:20;2587:1;2580:31;2630:4;2627:1;2620:15;2654:4;2651:1;2644:15;2670:217;2710:1;2736;2726:132;;2780:10;2775:3;2771:20;2768:1;2761:31;2815:4;2812:1;2805:15;2843:4;2840:1;2833:15;2726:132;-1:-1:-1;2872:9:4;;2670:217::o;2892:168::-;2965:9;;;2996;;3013:15;;;3007:22;;2993:37;2983:71;;3034:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "228200",
								"executionCost": "44478",
								"totalCost": "272678"
							},
							"external": {
								"baseAPY()": "2304",
								"calculateAPY(uint256,uint256)": "infinite",
								"durationBonusFactor()": "2304",
								"riskPremiumRates(uint256)": "4626",
								"riskPremiumThresholds(uint256)": "4561",
								"setBaseAPY(uint256)": "22376",
								"setDurationBonusFactor(uint256)": "22354",
								"setRiskPremiums(uint256[],uint256[])": "infinite"
							},
							"internal": {
								"calculateDurationBonus(uint256)": "2296",
								"calculateRiskPremium(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 299,
									"end": 3195,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 299,
									"end": 3195,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 299,
									"end": 3195,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 363,
									"end": 366,
									"name": "PUSH",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 338,
									"end": 366,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 338,
									"end": 366,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 593,
									"end": 595,
									"name": "PUSH",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 556,
									"end": 595,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 556,
									"end": 595,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 713,
									"end": 737,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 713,
									"end": 737,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 713,
									"end": 737,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 713,
									"end": 737,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 713,
									"end": 737,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 713,
									"end": 737,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 713,
									"end": 737,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 713,
									"end": 737,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 713,
									"end": 737,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 713,
									"end": 737,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 713,
									"end": 737,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 299,
									"end": 3195,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 299,
									"end": 3195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 299,
									"end": 3195,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 299,
									"end": 3195,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 299,
									"end": 3195,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 299,
									"end": 3195,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 299,
									"end": 3195,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ad794a86c74f445924bd1a0a3334286d5f39c867ecaf924e1d16b15ebd16c15f64736f6c634300081a0033",
									".code": [
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "B873995A"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "B873995A"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "C134F4A1"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "C90B7192"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "E2C9313F"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "57C0412"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "214405A9"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "4A7DFC8E"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "5EE6EFD0"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 299,
											"end": 3195,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 407,
											"end": 445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 407,
											"end": 445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 391,
											"end": 416,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 391,
											"end": 416,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 391,
											"end": 416,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 379,
											"end": 381,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 364,
											"end": 382,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 407,
											"end": 445,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 338,
											"end": 366,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 338,
											"end": 366,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 338,
											"end": 366,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 338,
											"end": 366,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2450,
											"end": 2715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2450,
											"end": 2715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2845,
											"end": 2928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2902,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2902,
											"end": 2920,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2928,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1001,
											"end": 1304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1001,
											"end": 1304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 556,
											"end": 595,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 556,
											"end": 595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 556,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 556,
											"end": 595,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 556,
											"end": 595,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 556,
											"end": 595,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 556,
											"end": 595,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3087,
											"end": 3192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3155,
											"end": 3174,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3155,
											"end": 3184,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3087,
											"end": 3192,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 483,
											"end": 516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 483,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 516,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 483,
											"end": 516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 483,
											"end": 516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 407,
											"end": 445,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 407,
											"end": 445,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 407,
											"end": 445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2596,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2596,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2596,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2125,
											"end": 2127,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 2128,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2164,
											"end": 2166,
											"name": "PUSH",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2144,
											"end": 2162,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2144,
											"end": 2162,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2162,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2167,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2203,
											"end": 2229,
											"name": "PUSH",
											"source": 4,
											"value": "4D69736D61746368656420696E707574206C656E677468730000000000000000"
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2176,
											"end": 2230,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2265,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2247,
											"end": 2265,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2553,
											"end": 2625,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2636,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2636,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2660,
											"end": 2671,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2660,
											"end": 2671,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2636,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2636,
											"end": 2671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2636,
											"end": 2671,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2636,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2682,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2682,
											"end": 2698,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2701,
											"end": 2707,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2701,
											"end": 2707,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2682,
											"end": 2707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2707,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2682,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2707,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1098,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1130,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1154,
											"end": 1164,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1133,
											"end": 1165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1165,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1133,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1111,
											"end": 1165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1111,
											"end": 1165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1197,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1223,
											"end": 1238,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1200,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1200,
											"end": 1239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1200,
											"end": 1239,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1200,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1239,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1239,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1283,
											"end": 1296,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1280,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1266,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1266,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1259,
											"end": 1280,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1280,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1259,
											"end": 1280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1280,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1259,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1259,
											"end": 1296,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1296,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1259,
											"end": 1296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1296,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1259,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1252,
											"end": 1296,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1252,
											"end": 1296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1252,
											"end": 1296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1252,
											"end": 1296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 483,
											"end": 516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 483,
											"end": 516,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 483,
											"end": 516,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 516,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 483,
											"end": 516,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1833,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1524,
											"end": 1833,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1597,
											"end": 1604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1597,
											"end": 1604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1807,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1617,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1641,
											"end": 1662,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1641,
											"end": 1669,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1669,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1669,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1807,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1617,
											"end": 1807,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1730,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1731,
											"end": 1732,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1709,
											"end": 1733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1733,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1705,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1733,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1691,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1691,
											"end": 1796,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1777,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1761,
											"end": 1780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1780,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1780,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1780,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1833,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1833,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1833,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1691,
											"end": 1796,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1691,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1674,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1671,
											"end": 1674,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1617,
											"end": 1807,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1807,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1617,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1824,
											"end": 1825,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1825,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1833,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1524,
											"end": 1833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2241,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2042,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2122,
											"end": 2129,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2129,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2159,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2178,
											"end": 2186,
											"name": "PUSH",
											"source": 3,
											"value": "1E13380"
										},
										{
											"begin": 2159,
											"end": 2174,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2159,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2159,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2159,
											"end": 2187,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2159,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2187,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2187,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2214,
											"end": 2233,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2214,
											"end": 2233,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2211,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2205,
											"end": 2233,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2233,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2205,
											"end": 2233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2233,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2205,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2233,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2241,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2042,
											"end": 2241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "83"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "83"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "83"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "84"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "85"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "84"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "85"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "86"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "84"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "86"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 240,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 14,
											"end": 240,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 187,
											"end": 210,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 187,
											"end": 210,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14,
											"end": 240,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 427,
											"end": 794,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 427,
											"end": 794,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 490,
											"end": 498,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 506,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 554,
											"end": 557,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 547,
											"end": 551,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 539,
											"end": 545,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 535,
											"end": 552,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 531,
											"end": 558,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 521,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 521,
											"end": 576,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 572,
											"end": 573,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 569,
											"end": 570,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 562,
											"end": 574,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 521,
											"end": 576,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 521,
											"end": 576,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 615,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 595,
											"end": 615,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 638,
											"end": 656,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 627,
											"end": 657,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 627,
											"end": 657,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 624,
											"end": 674,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 624,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 624,
											"end": 674,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 670,
											"end": 671,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 667,
											"end": 668,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 660,
											"end": 672,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 624,
											"end": 674,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 624,
											"end": 674,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 707,
											"end": 711,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 699,
											"end": 705,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 695,
											"end": 712,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 683,
											"end": 712,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 683,
											"end": 712,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 767,
											"end": 770,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 760,
											"end": 764,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 750,
											"end": 756,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 747,
											"end": 748,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 743,
											"end": 757,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 735,
											"end": 741,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 731,
											"end": 758,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 727,
											"end": 765,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 724,
											"end": 771,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 721,
											"end": 788,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 721,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 721,
											"end": 788,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 784,
											"end": 785,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 782,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 774,
											"end": 786,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 721,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 721,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 427,
											"end": 794,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 427,
											"end": 794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 427,
											"end": 794,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 427,
											"end": 794,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 427,
											"end": 794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 427,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 799,
											"end": 1567,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 799,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 921,
											"end": 927,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 935,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 937,
											"end": 943,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 945,
											"end": 951,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1000,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 986,
											"end": 995,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 977,
											"end": 984,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 973,
											"end": 996,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 969,
											"end": 1001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 966,
											"end": 1018,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 966,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 966,
											"end": 1018,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1014,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1011,
											"end": 1012,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1004,
											"end": 1016,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 966,
											"end": 1018,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 966,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1054,
											"end": 1063,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1041,
											"end": 1064,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1105,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1076,
											"end": 1106,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1119,
											"end": 1120,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1117,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1109,
											"end": 1121,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1220,
											"end": 1227,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1200,
											"end": 1209,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1196,
											"end": 1218,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1158,
											"end": 1228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1228,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1158,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1255,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1255,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1132,
											"end": 1228,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1335,
											"end": 1337,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1320,
											"end": 1338,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1320,
											"end": 1338,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1307,
											"end": 1339,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1383,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1351,
											"end": 1383,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1348,
											"end": 1400,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1348,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1348,
											"end": 1400,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1396,
											"end": 1397,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1393,
											"end": 1394,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1398,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1348,
											"end": 1400,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1348,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1499,
											"end": 1506,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1488,
											"end": 1496,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1497,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1435,
											"end": 1507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1507,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1435,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 799,
											"end": 1567,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 799,
											"end": 1567,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 799,
											"end": 1567,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 799,
											"end": 1567,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1526,
											"end": 1534,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 799,
											"end": 1567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1572,
											"end": 1918,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1572,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1646,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1648,
											"end": 1654,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1703,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1689,
											"end": 1698,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1687,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1676,
											"end": 1699,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1672,
											"end": 1704,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1721,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1669,
											"end": 1721,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1714,
											"end": 1715,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1719,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1721,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1669,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1762,
											"end": 1785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 1785,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 1785,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1882,
											"end": 1884,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1867,
											"end": 1885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1885,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1885,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 1886,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 1886,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1572,
											"end": 1918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2403,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2276,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2347,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 2332,
											"end": 2335,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2328,
											"end": 2348,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2325,
											"end": 2326,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2318,
											"end": 2349,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2368,
											"end": 2372,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2365,
											"end": 2366,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2358,
											"end": 2373,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2392,
											"end": 2396,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2389,
											"end": 2390,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2382,
											"end": 2397,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2408,
											"end": 2533,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2408,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2482,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2482,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2482,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2494,
											"end": 2504,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2494,
											"end": 2504,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2494,
											"end": 2504,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2527,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2491,
											"end": 2527,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2507,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2507,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2507,
											"end": 2525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2538,
											"end": 2665,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2538,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2609,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 2594,
											"end": 2597,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2590,
											"end": 2610,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2587,
											"end": 2588,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2580,
											"end": 2611,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2630,
											"end": 2634,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2627,
											"end": 2628,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2620,
											"end": 2635,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2651,
											"end": 2652,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2644,
											"end": 2659,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2887,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2670,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2711,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2737,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2726,
											"end": 2858,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2780,
											"end": 2790,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 2775,
											"end": 2778,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2771,
											"end": 2791,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2768,
											"end": 2769,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2792,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2815,
											"end": 2819,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2812,
											"end": 2813,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2805,
											"end": 2820,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2843,
											"end": 2847,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2840,
											"end": 2841,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2833,
											"end": 2848,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2858,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2726,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2872,
											"end": 2881,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2881,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2892,
											"end": 3060,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2892,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 2974,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 2974,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 2974,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2996,
											"end": 3005,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2996,
											"end": 3005,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3007,
											"end": 3029,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3007,
											"end": 3029,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2993,
											"end": 3030,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2983,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2983,
											"end": 3054,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3034,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3034,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3034,
											"end": 3052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/contracts/lib/AdvancedAPYManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"baseAPY()": "214405a9",
							"calculateAPY(uint256,uint256)": "b873995a",
							"durationBonusFactor()": "c134f4a1",
							"riskPremiumRates(uint256)": "e2c9313f",
							"riskPremiumThresholds(uint256)": "057c0412",
							"setBaseAPY(uint256)": "5ee6efd0",
							"setDurationBonusFactor(uint256)": "c90b7192",
							"setRiskPremiums(uint256[],uint256[])": "4a7dfc8e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"baseAPY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"durationSeconds\",\"type\":\"uint256\"}],\"name\":\"calculateAPY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"durationBonusFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"riskPremiumRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"riskPremiumThresholds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_baseAPY\",\"type\":\"uint256\"}],\"name\":\"setBaseAPY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_factor\",\"type\":\"uint256\"}],\"name\":\"setDurationBonusFactor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_thresholds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_rates\",\"type\":\"uint256[]\"}],\"name\":\"setRiskPremiums\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Manages APY adjustments based on loan characteristics such as amount and duration.\",\"kind\":\"dev\",\"methods\":{\"calculateAPY(uint256,uint256)\":{\"params\":{\"durationSeconds\":\"The duration of the loan in seconds.\",\"loanAmount\":\"The amount of the loan.\"},\"returns\":{\"_0\":\"uint256 Calculated APY in basis points.\"}},\"setBaseAPY(uint256)\":{\"params\":{\"_baseAPY\":\"The new base APY in basis points.\"}},\"setDurationBonusFactor(uint256)\":{\"params\":{\"_factor\":\"The new duration bonus factor in basis points per year.\"}},\"setRiskPremiums(uint256[],uint256[])\":{\"params\":{\"_rates\":\"Array of risk premiums corresponding to the thresholds.\",\"_thresholds\":\"Array of loan amount thresholds.\"}}},\"title\":\"AdvancedAPYManager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"calculateAPY(uint256,uint256)\":{\"notice\":\"Calculates the current APY based on loan amount and duration.\"},\"constructor\":{\"notice\":\"Initializes the contract with the lending token.\"},\"setBaseAPY(uint256)\":{\"notice\":\"Allows the owner to adjust the base APY rate.\"},\"setDurationBonusFactor(uint256)\":{\"notice\":\"Allows the owner to adjust the duration bonus factor.\"},\"setRiskPremiums(uint256[],uint256[])\":{\"notice\":\"Sets the risk premium thresholds and rates.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/lib/AdvancedAPYManager.sol\":\"AdvancedAPYManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/contracts/lib/AdvancedAPYManager.sol\":{\"keccak256\":\"0x9b5a88ed41b2cd2b2337ec81a9f03acae0f80dfb33ab52d562fdd39728c3a4ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aef139621b3faf60ae930062f18b093278c8c29b2cdb069f5d09f5b711da0e4\",\"dweb:/ipfs/QmV6gxpfU8goAaY3QMX7X5BJkTfc2o8qzxevxvJUrpXzgx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 263,
								"contract": "contracts/contracts/lib/AdvancedAPYManager.sol:AdvancedAPYManager",
								"label": "baseAPY",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 266,
								"contract": "contracts/contracts/lib/AdvancedAPYManager.sol:AdvancedAPYManager",
								"label": "riskPremiumThresholds",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 269,
								"contract": "contracts/contracts/lib/AdvancedAPYManager.sol:AdvancedAPYManager",
								"label": "riskPremiumRates",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 272,
								"contract": "contracts/contracts/lib/AdvancedAPYManager.sol:AdvancedAPYManager",
								"label": "durationBonusFactor",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"calculateAPY(uint256,uint256)": {
								"notice": "Calculates the current APY based on loan amount and duration."
							},
							"constructor": {
								"notice": "Initializes the contract with the lending token."
							},
							"setBaseAPY(uint256)": {
								"notice": "Allows the owner to adjust the base APY rate."
							},
							"setDurationBonusFactor(uint256)": {
								"notice": "Allows the owner to adjust the duration bonus factor."
							},
							"setRiskPremiums(uint256[],uint256[])": {
								"notice": "Sets the risk premium thresholds and rates."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 256,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 255,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 255,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								255
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 237,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "213:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "395:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "404:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "426:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "446:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:1"
									},
									"src": "389:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "626:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "635:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "658:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:1"
									},
									"src": "620:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 225,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "930:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "970:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:1"
									},
									"scope": 225,
									"src": "911:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1233:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1266:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:1"
									},
									"scope": 225,
									"src": "1203:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1566:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1581:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1621:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:1"
									},
									"scope": 225,
									"src": "1547:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2325:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2375:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:1"
									},
									"scope": 225,
									"src": "2308:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2711:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2725:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2737:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2770:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:1"
									},
									"scope": 225,
									"src": "2689:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "203:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2673:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							255
						]
					},
					"id": 256,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 255,
							"linearizedBaseContracts": [
								255
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 233,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 232,
												"id": 235,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 255,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 242,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 241,
												"id": 244,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 255,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 250,
												"id": 252,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 255,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 256,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"contracts/contracts/lib/AdvancedAPYManager.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/lib/AdvancedAPYManager.sol",
					"exportedSymbols": {
						"AdvancedAPYManager": [
							412
						],
						"Context": [
							255
						],
						"IERC20": [
							225
						],
						"Ownable": [
							147
						]
					},
					"id": 413,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 257,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 258,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 413,
							"sourceUnit": 148,
							"src": "61:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 259,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 413,
							"sourceUnit": 226,
							"src": "115:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AdvancedAPYManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 260,
								"nodeType": "StructuredDocumentation",
								"src": "175:124:3",
								"text": "@title AdvancedAPYManager\n @dev Manages APY adjustments based on loan characteristics such as amount and duration."
							},
							"fullyImplemented": true,
							"id": 412,
							"linearizedBaseContracts": [
								412
							],
							"name": "AdvancedAPYManager",
							"nameLocation": "308:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "214405a9",
									"id": 263,
									"mutability": "mutable",
									"name": "baseAPY",
									"nameLocation": "353:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 412,
									"src": "338:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 261,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "338:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 262,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "363:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "057c0412",
									"id": 266,
									"mutability": "mutable",
									"name": "riskPremiumThresholds",
									"nameLocation": "424:21:3",
									"nodeType": "VariableDeclaration",
									"scope": 412,
									"src": "407:38:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 264,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "407:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 265,
										"nodeType": "ArrayTypeName",
										"src": "407:9:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e2c9313f",
									"id": 269,
									"mutability": "mutable",
									"name": "riskPremiumRates",
									"nameLocation": "500:16:3",
									"nodeType": "VariableDeclaration",
									"scope": 412,
									"src": "483:33:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 267,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "483:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 268,
										"nodeType": "ArrayTypeName",
										"src": "483:9:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c134f4a1",
									"id": 272,
									"mutability": "mutable",
									"name": "durationBonusFactor",
									"nameLocation": "571:19:3",
									"nodeType": "VariableDeclaration",
									"scope": 412,
									"src": "556:39:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 270,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "556:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3235",
										"id": 271,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "593:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_25_by_1",
											"typeString": "int_const 25"
										},
										"value": "25"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "727:10:3",
										"statements": []
									},
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "647:60:3",
										"text": "@notice Initializes the contract with the lending token."
									},
									"id": 277,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "724:2:3"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "727:0:3"
									},
									"scope": 412,
									"src": "713:24:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "1100:204:3",
										"statements": [
											{
												"assignments": [
													288
												],
												"declarations": [
													{
														"constant": false,
														"id": 288,
														"mutability": "mutable",
														"name": "riskPremium",
														"nameLocation": "1119:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 305,
														"src": "1111:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 287,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1111:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [
														{
															"id": 290,
															"name": "loanAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "1154:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 289,
														"name": "calculateRiskPremium",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "1133:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1133:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1111:54:3"
											},
											{
												"assignments": [
													294
												],
												"declarations": [
													{
														"constant": false,
														"id": 294,
														"mutability": "mutable",
														"name": "durationBonus",
														"nameLocation": "1184:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 305,
														"src": "1176:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 293,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1176:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 298,
												"initialValue": {
													"arguments": [
														{
															"id": 296,
															"name": "durationSeconds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "1223:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 295,
														"name": "calculateDurationBonus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "1200:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1200:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1176:63:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 299,
															"name": "baseAPY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "1259:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 300,
															"name": "riskPremium",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "1269:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1259:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 302,
														"name": "durationBonus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "1283:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1259:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 286,
												"id": 304,
												"nodeType": "Return",
												"src": "1252:44:3"
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "745:250:3",
										"text": "@notice Calculates the current APY based on loan amount and duration.\n @param loanAmount The amount of the loan.\n @param durationSeconds The duration of the loan in seconds.\n @return uint256 Calculated APY in basis points."
									},
									"functionSelector": "b873995a",
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateAPY",
									"nameLocation": "1010:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "loanAmount",
												"nameLocation": "1031:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "1023:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1023:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "durationSeconds",
												"nameLocation": "1051:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "1043:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1022:45:3"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "1091:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1091:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1090:9:3"
									},
									"scope": 412,
									"src": "1001:303:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "1606:227:3",
										"statements": [
											{
												"body": {
													"id": 336,
													"nodeType": "Block",
													"src": "1676:131:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 325,
																	"name": "loanAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "1695:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"baseExpression": {
																		"id": 326,
																		"name": "riskPremiumThresholds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 266,
																		"src": "1709:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 328,
																	"indexExpression": {
																		"id": 327,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "1731:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1709:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1695:38:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 335,
															"nodeType": "IfStatement",
															"src": "1691:105:3",
															"trueBody": {
																"id": 334,
																"nodeType": "Block",
																"src": "1735:61:3",
																"statements": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 330,
																				"name": "riskPremiumRates",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 269,
																				"src": "1761:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																					"typeString": "uint256[] storage ref"
																				}
																			},
																			"id": 332,
																			"indexExpression": {
																				"id": 331,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 315,
																				"src": "1778:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1761:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 313,
																		"id": 333,
																		"nodeType": "Return",
																		"src": "1754:26:3"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 318,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "1637:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 319,
															"name": "riskPremiumThresholds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "1641:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 320,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1663:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1641:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1637:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 337,
												"initializationExpression": {
													"assignments": [
														315
													],
													"declarations": [
														{
															"constant": false,
															"id": 315,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1630:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 337,
															"src": "1622:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 314,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1622:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 317,
													"initialValue": {
														"hexValue": "30",
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1634:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1622:13:3"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1671:3:3",
														"subExpression": {
															"id": 322,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "1671:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 324,
													"nodeType": "ExpressionStatement",
													"src": "1671:3:3"
												},
												"nodeType": "ForStatement",
												"src": "1617:190:3"
											},
											{
												"expression": {
													"hexValue": "30",
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1824:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 313,
												"id": 339,
												"nodeType": "Return",
												"src": "1817:8:3"
											}
										]
									},
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "1312:206:3",
										"text": "@notice Calculates additional risk premium based on the loan amount using thresholds.\n @param loanAmount The amount of the loan.\n @return uint256 Additional risk premium in basis points."
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRiskPremium",
									"nameLocation": "1533:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "loanAmount",
												"nameLocation": "1562:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "1554:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1554:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1553:20:3"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "1597:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1597:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:9:3"
									},
									"scope": 412,
									"src": "1524:309:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "2131:110:3",
										"statements": [
											{
												"assignments": [
													350
												],
												"declarations": [
													{
														"constant": false,
														"id": 350,
														"mutability": "mutable",
														"name": "yearss",
														"nameLocation": "2150:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 360,
														"src": "2142:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 349,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2142:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 355,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 351,
														"name": "durationSeconds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "2159:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"hexValue": "333635",
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2178:8:3",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_31536000_by_1",
																	"typeString": "int_const 31536000"
																},
																"value": "365"
															}
														],
														"id": 353,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2177:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31536000_by_1",
															"typeString": "int_const 31536000"
														}
													},
													"src": "2159:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2142:45:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 356,
														"name": "yearss",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "2205:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 357,
														"name": "durationBonusFactor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "2214:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2205:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 348,
												"id": 359,
												"nodeType": "Return",
												"src": "2198:35:3"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "1841:195:3",
										"text": "@notice Calculates a bonus based on the loan duration in seconds.\n @param durationSeconds The duration of the loan in seconds.\n @return uint256 Duration bonus in basis points."
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateDurationBonus",
									"nameLocation": "2051:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "durationSeconds",
												"nameLocation": "2082:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2074:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2074:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2073:25:3"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2122:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2122:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2121:9:3"
									},
									"scope": 412,
									"src": "2042:199:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "2542:173:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 372,
																	"name": "_thresholds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "2561:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2573:6:3",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2561:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 374,
																	"name": "_rates",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 368,
																	"src": "2583:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2590:6:3",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2583:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2561:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d69736d61746368656420696e707574206c656e67746873",
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2598:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_757ac971b3c89ff6729d1b818f9eb2011ff93a983cd352fb4a93d3214c1015fe",
																"typeString": "literal_string \"Mismatched input lengths\""
															},
															"value": "Mismatched input lengths"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_757ac971b3c89ff6729d1b818f9eb2011ff93a983cd352fb4a93d3214c1015fe",
																"typeString": "literal_string \"Mismatched input lengths\""
															}
														],
														"id": 371,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2553:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2553:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "2553:72:3"
											},
											{
												"expression": {
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 380,
														"name": "riskPremiumThresholds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "2636:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 381,
														"name": "_thresholds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "2660:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
															"typeString": "uint256[] calldata"
														}
													},
													"src": "2636:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "2636:35:3"
											},
											{
												"expression": {
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 384,
														"name": "riskPremiumRates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "2682:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 385,
														"name": "_rates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 368,
														"src": "2701:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
															"typeString": "uint256[] calldata"
														}
													},
													"src": "2682:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "2682:25:3"
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2249:195:3",
										"text": "@notice Sets the risk premium thresholds and rates.\n @param _thresholds Array of loan amount thresholds.\n @param _rates Array of risk premiums corresponding to the thresholds."
									},
									"functionSelector": "4a7dfc8e",
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setRiskPremiums",
									"nameLocation": "2459:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "_thresholds",
												"nameLocation": "2494:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "2475:30:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 363,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2475:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 364,
													"nodeType": "ArrayTypeName",
													"src": "2475:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "_rates",
												"nameLocation": "2526:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "2507:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 366,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2507:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 367,
													"nodeType": "ArrayTypeName",
													"src": "2507:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2474:59:3"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2542:0:3"
									},
									"scope": 412,
									"src": "2450:265:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 399,
										"nodeType": "Block",
										"src": "2891:37:3",
										"statements": [
											{
												"expression": {
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 395,
														"name": "baseAPY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "2902:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 396,
														"name": "_baseAPY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "2912:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2902:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "2902:18:3"
											}
										]
									},
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "2723:116:3",
										"text": "@notice Allows the owner to adjust the base APY rate.\n @param _baseAPY The new base APY in basis points."
									},
									"functionSelector": "5ee6efd0",
									"id": 400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setBaseAPY",
									"nameLocation": "2854:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "_baseAPY",
												"nameLocation": "2873:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "2865:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2865:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2864:18:3"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2891:0:3"
									},
									"scope": 412,
									"src": "2845:83:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "3144:48:3",
										"statements": [
											{
												"expression": {
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 406,
														"name": "durationBonusFactor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "3155:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 407,
														"name": "_factor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "3177:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3155:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "3155:29:3"
											}
										]
									},
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "2936:145:3",
										"text": "@notice Allows the owner to adjust the duration bonus factor.\n @param _factor The new duration bonus factor in basis points per year."
									},
									"functionSelector": "c90b7192",
									"id": 411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setDurationBonusFactor",
									"nameLocation": "3096:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "_factor",
												"nameLocation": "3127:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "3119:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3119:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3118:17:3"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3144:0:3"
									},
									"scope": 412,
									"src": "3087:105:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 413,
							"src": "299:2896:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:3164:3"
				},
				"id": 3
			}
		}
	}
}