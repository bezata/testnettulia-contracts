{
	"id": "09fed967fd3afbb332d7656ab05a1d34",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"settings": {
			"viaIR": true,
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/contracts/lib/Permit2Lib.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"solmate/src/tokens/ERC20.sol\";\n\nimport {IDAIPermit} from \"../interfaces/IDAIPermit.sol\";\nimport {IAllowanceTransfer} from \"../interfaces/IAllowanceTransfer.sol\";\nimport {SafeCast160} from \"./SafeCast160.sol\";\n\n/// @title Permit2Lib\n/// @notice Enables efficient transfers and EIP-2612/DAI\n/// permits for any token by falling back to Permit2.\nlibrary Permit2Lib {\n    using SafeCast160 for uint256;\n    /*//////////////////////////////////////////////////////////////\n                                CONSTANTS\n    //////////////////////////////////////////////////////////////*/\n\n    /// @dev The unique EIP-712 domain domain separator for the DAI token contract.\n    bytes32 internal constant DAI_DOMAIN_SEPARATOR = 0xdbb8cf42e1ecb028be3f3dbc922e1d878b963f411dc388ced501601c60f7c6f7;\n\n    /// @dev The address for the WETH9 contract on Ethereum mainnet, encoded as a bytes32.\n    bytes32 internal constant WETH9_ADDRESS = 0x000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2;\n\n    /// @dev The address of the Permit2 contract the library will use.\n    IAllowanceTransfer internal constant PERMIT2 =\n        IAllowanceTransfer(address(0x000000000022D473030F116dDEE9F6B43aC78BA3));\n\n    /// @notice Transfer a given amount of tokens from one user to another.\n    /// @param token The token to transfer.\n    /// @param from The user to transfer from.\n    /// @param to The user to transfer to.\n    /// @param amount The amount to transfer.\n    function transferFrom2(ERC20 token, address from, address to, uint256 amount) internal {\n        // Generate calldata for a standard transferFrom call.\n        bytes memory inputData = abi.encodeCall(ERC20.transferFrom, (from, to, amount));\n\n        bool success; // Call the token contract as normal, capturing whether it succeeded.\n        assembly {\n            success :=\n                and(\n                    // Set success to whether the call reverted, if not we check it either\n                    // returned exactly 1 (can't just be non-zero data), or had no return data.\n                    or(eq(mload(0), 1), iszero(returndatasize())),\n                    // Counterintuitively, this call() must be positioned after the or() in the\n                    // surrounding and() because and() evaluates its arguments from right to left.\n                    // We use 0 and 32 to copy up to 32 bytes of return data into the first slot of scratch space.\n                    call(gas(), token, 0, add(inputData, 32), mload(inputData), 0, 32)\n                )\n        }\n\n        // We'll fall back to using Permit2 if calling transferFrom on the token directly reverted.\n        if (!success) PERMIT2.transferFrom(from, to, amount.toUint160(), address(token));\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                              PERMIT LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Permit a user to spend a given amount of\n    /// another user's tokens via native EIP-2612 permit if possible, falling\n    /// back to Permit2 if native permit fails or is not implemented on the token.\n    /// @param token The token to permit spending.\n    /// @param owner The user to permit spending from.\n    /// @param spender The user to permit spending to.\n    /// @param amount The amount to permit spending.\n    /// @param deadline  The timestamp after which the signature is no longer valid.\n    /// @param v Must produce valid secp256k1 signature from the owner along with r and s.\n    /// @param r Must produce valid secp256k1 signature from the owner along with v and s.\n    /// @param s Must produce valid secp256k1 signature from the owner along with r and v.\n    function permit2(\n        ERC20 token,\n        address owner,\n        address spender,\n        uint256 amount,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        // Generate calldata for a call to DOMAIN_SEPARATOR on the token.\n        bytes memory inputData = abi.encodeWithSelector(ERC20.DOMAIN_SEPARATOR.selector);\n\n        bool success; // Call the token contract as normal, capturing whether it succeeded.\n        bytes32 domainSeparator; // If the call succeeded, we'll capture the return value here.\n\n        assembly {\n            // If the token is WETH9, we know it doesn't have a DOMAIN_SEPARATOR, and we'll skip this step.\n            // We make sure to mask the token address as its higher order bits aren't guaranteed to be clean.\n            if iszero(eq(and(token, 0xffffffffffffffffffffffffffffffffffffffff), WETH9_ADDRESS)) {\n                success :=\n                    and(\n                        // Should resolve false if its not 32 bytes or its first word is 0.\n                        and(iszero(iszero(mload(0))), eq(returndatasize(), 32)),\n                        // We use 0 and 32 to copy up to 32 bytes of return data into the scratch space.\n                        // Counterintuitively, this call must be positioned second to the and() call in the\n                        // surrounding and() call or else returndatasize() will be zero during the computation.\n                        // We send a maximum of 5000 gas to prevent tokens with fallbacks from using a ton of gas.\n                        // which should be plenty to allow tokens to fetch their DOMAIN_SEPARATOR from storage, etc.\n                        staticcall(5000, token, add(inputData, 32), mload(inputData), 0, 32)\n                    )\n\n                domainSeparator := mload(0) // Copy the return value into the domainSeparator variable.\n            }\n        }\n\n        // If the call to DOMAIN_SEPARATOR succeeded, try using permit on the token.\n        if (success) {\n            // We'll use DAI's special permit if it's DOMAIN_SEPARATOR matches,\n            // otherwise we'll just encode a call to the standard permit function.\n            inputData = domainSeparator == DAI_DOMAIN_SEPARATOR\n                ? abi.encodeCall(IDAIPermit.permit, (owner, spender, token.nonces(owner), deadline, true, v, r, s))\n                : abi.encodeCall(ERC20.permit, (owner, spender, amount, deadline, v, r, s));\n\n            assembly {\n                success := call(gas(), token, 0, add(inputData, 32), mload(inputData), 0, 0)\n            }\n        }\n\n        if (!success) {\n            // If the initial DOMAIN_SEPARATOR call on the token failed or a\n            // subsequent call to permit failed, fall back to using Permit2.\n            simplePermit2(token, owner, spender, amount, deadline, v, r, s);\n        }\n    }\n\n    /// @notice Simple unlimited permit on the Permit2 contract.\n    /// @param token The token to permit spending.\n    /// @param owner The user to permit spending from.\n    /// @param spender The user to permit spending to.\n    /// @param amount The amount to permit spending.\n    /// @param deadline  The timestamp after which the signature is no longer valid.\n    /// @param v Must produce valid secp256k1 signature from the owner along with r and s.\n    /// @param r Must produce valid secp256k1 signature from the owner along with v and s.\n    /// @param s Must produce valid secp256k1 signature from the owner along with r and v.\n    function simplePermit2(\n        ERC20 token,\n        address owner,\n        address spender,\n        uint256 amount,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        (,, uint48 nonce) = PERMIT2.allowance(owner, address(token), spender);\n\n        PERMIT2.permit(\n            owner,\n            IAllowanceTransfer.PermitSingle({\n                details: IAllowanceTransfer.PermitDetails({\n                    token: address(token),\n                    amount: amount.toUint160(),\n                    // Use an unlimited expiration because it most\n                    // closely mimics how a standard approval works.\n                    expiration: type(uint48).max,\n                    nonce: nonce\n                }),\n                spender: spender,\n                sigDeadline: deadline\n            }),\n            bytes.concat(r, s, bytes1(v))\n        );\n    }\n}\n"
			},
			"contracts/contracts/lib/SafeCast160.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nlibrary SafeCast160 {\n    /// @notice Thrown when a valude greater than type(uint160).max is cast to uint160\n    error UnsafeCast();\n\n    /// @notice Safely casts uint256 to uint160\n    /// @param value The uint256 to be cast\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) revert UnsafeCast();\n        return uint160(value);\n    }\n}\n"
			},
			"contracts/contracts/interfaces/IAllowanceTransfer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IEIP712} from \"./IEIP712.sol\";\n\n/// @title AllowanceTransfer\n/// @notice Handles ERC20 token permissions through signature based allowance setting and ERC20 token transfers by checking allowed amounts\n/// @dev Requires user's token approval on the Permit2 contract\ninterface IAllowanceTransfer is IEIP712 {\n    /// @notice Thrown when an allowance on a token has expired.\n    /// @param deadline The timestamp at which the allowed amount is no longer valid\n    error AllowanceExpired(uint256 deadline);\n\n    /// @notice Thrown when an allowance on a token has been depleted.\n    /// @param amount The maximum amount allowed\n    error InsufficientAllowance(uint256 amount);\n\n    /// @notice Thrown when too many nonces are invalidated.\n    error ExcessiveInvalidation();\n\n    /// @notice Emits an event when the owner successfully invalidates an ordered nonce.\n    event NonceInvalidation(\n        address indexed owner, address indexed token, address indexed spender, uint48 newNonce, uint48 oldNonce\n    );\n\n    /// @notice Emits an event when the owner successfully sets permissions on a token for the spender.\n    event Approval(\n        address indexed owner, address indexed token, address indexed spender, uint160 amount, uint48 expiration\n    );\n\n    /// @notice Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender.\n    event Permit(\n        address indexed owner,\n        address indexed token,\n        address indexed spender,\n        uint160 amount,\n        uint48 expiration,\n        uint48 nonce\n    );\n\n    /// @notice Emits an event when the owner sets the allowance back to 0 with the lockdown function.\n    event Lockdown(address indexed owner, address token, address spender);\n\n    /// @notice The permit data for a token\n    struct PermitDetails {\n        // ERC20 token address\n        address token;\n        // the maximum amount allowed to spend\n        uint160 amount;\n        // timestamp at which a spender's token allowances become invalid\n        uint48 expiration;\n        // an incrementing value indexed per owner,token,and spender for each signature\n        uint48 nonce;\n    }\n\n    /// @notice The permit message signed for a single token allowance\n    struct PermitSingle {\n        // the permit data for a single token alownce\n        PermitDetails details;\n        // address permissioned on the allowed tokens\n        address spender;\n        // deadline on the permit signature\n        uint256 sigDeadline;\n    }\n\n    /// @notice The permit message signed for multiple token allowances\n    struct PermitBatch {\n        // the permit data for multiple token allowances\n        PermitDetails[] details;\n        // address permissioned on the allowed tokens\n        address spender;\n        // deadline on the permit signature\n        uint256 sigDeadline;\n    }\n\n    /// @notice The saved permissions\n    /// @dev This info is saved per owner, per token, per spender and all signed over in the permit message\n    /// @dev Setting amount to type(uint160).max sets an unlimited approval\n    struct PackedAllowance {\n        // amount allowed\n        uint160 amount;\n        // permission expiry\n        uint48 expiration;\n        // an incrementing value indexed per owner,token,and spender for each signature\n        uint48 nonce;\n    }\n\n    /// @notice A token spender pair.\n    struct TokenSpenderPair {\n        // the token the spender is approved\n        address token;\n        // the spender address\n        address spender;\n    }\n\n    /// @notice Details for a token transfer.\n    struct AllowanceTransferDetails {\n        // the owner of the token\n        address from;\n        // the recipient of the token\n        address to;\n        // the amount of the token\n        uint160 amount;\n        // the token to be transferred\n        address token;\n    }\n\n    /// @notice A mapping from owner address to token address to spender address to PackedAllowance struct, which contains details and conditions of the approval.\n    /// @notice The mapping is indexed in the above order see: allowance[ownerAddress][tokenAddress][spenderAddress]\n    /// @dev The packed slot holds the allowed amount, expiration at which the allowed amount is no longer valid, and current nonce thats updated on any signature based approvals.\n    function allowance(address user, address token, address spender)\n        external\n        view\n        returns (uint160 amount, uint48 expiration, uint48 nonce);\n\n    /// @notice Approves the spender to use up to amount of the specified token up until the expiration\n    /// @param token The token to approve\n    /// @param spender The spender address to approve\n    /// @param amount The approved amount of the token\n    /// @param expiration The timestamp at which the approval is no longer valid\n    /// @dev The packed allowance also holds a nonce, which will stay unchanged in approve\n    /// @dev Setting amount to type(uint160).max sets an unlimited approval\n    function approve(address token, address spender, uint160 amount, uint48 expiration) external;\n\n    /// @notice Permit a spender to a given amount of the owners token via the owner's EIP-712 signature\n    /// @dev May fail if the owner's nonce was invalidated in-flight by invalidateNonce\n    /// @param owner The owner of the tokens being approved\n    /// @param permitSingle Data signed over by the owner specifying the terms of approval\n    /// @param signature The owner's signature over the permit data\n    function permit(address owner, PermitSingle memory permitSingle, bytes calldata signature) external;\n\n    /// @notice Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature\n    /// @dev May fail if the owner's nonce was invalidated in-flight by invalidateNonce\n    /// @param owner The owner of the tokens being approved\n    /// @param permitBatch Data signed over by the owner specifying the terms of approval\n    /// @param signature The owner's signature over the permit data\n    function permit(address owner, PermitBatch memory permitBatch, bytes calldata signature) external;\n\n    /// @notice Transfer approved tokens from one address to another\n    /// @param from The address to transfer from\n    /// @param to The address of the recipient\n    /// @param amount The amount of the token to transfer\n    /// @param token The token address to transfer\n    /// @dev Requires the from address to have approved at least the desired amount\n    /// of tokens to msg.sender.\n    function transferFrom(address from, address to, uint160 amount, address token) external;\n\n    /// @notice Transfer approved tokens in a batch\n    /// @param transferDetails Array of owners, recipients, amounts, and tokens for the transfers\n    /// @dev Requires the from addresses to have approved at least the desired amount\n    /// of tokens to msg.sender.\n    function transferFrom(AllowanceTransferDetails[] calldata transferDetails) external;\n\n    /// @notice Enables performing a \"lockdown\" of the sender's Permit2 identity\n    /// by batch revoking approvals\n    /// @param approvals Array of approvals to revoke.\n    function lockdown(TokenSpenderPair[] calldata approvals) external;\n\n    /// @notice Invalidate nonces for a given (token, spender) pair\n    /// @param token The token to invalidate nonces for\n    /// @param spender The spender to invalidate nonces for\n    /// @param newNonce The new nonce to set. Invalidates all nonces less than it.\n    /// @dev Can't invalidate more than 2**16 nonces per transaction.\n    function invalidateNonces(address token, address spender, uint48 newNonce) external;\n}\n"
			},
			"contracts/contracts/interfaces/IDAIPermit.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IDAIPermit {\n    /// @param holder The address of the token owner.\n    /// @param spender The address of the token spender.\n    /// @param nonce The owner's nonce, increases at each call to permit.\n    /// @param expiry The timestamp at which the permit is no longer valid.\n    /// @param allowed Boolean that sets approval amount, true for type(uint256).max and false for 0.\n    /// @param v Must produce valid secp256k1 signature from the owner along with r and s.\n    /// @param r Must produce valid secp256k1 signature from the owner along with v and s.\n    /// @param s Must produce valid secp256k1 signature from the owner along with r and v.\n    function permit(\n        address holder,\n        address spender,\n        uint256 nonce,\n        uint256 expiry,\n        bool allowed,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n}\n"
			},
			"solmate/src/tokens/ERC20.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.8.0;\n\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\nabstract contract ERC20 {\n    /*//////////////////////////////////////////////////////////////\n                                 EVENTS\n    //////////////////////////////////////////////////////////////*/\n\n    event Transfer(address indexed from, address indexed to, uint256 amount);\n\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\n\n    /*//////////////////////////////////////////////////////////////\n                            METADATA STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    string public name;\n\n    string public symbol;\n\n    uint8 public immutable decimals;\n\n    /*//////////////////////////////////////////////////////////////\n                              ERC20 STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    uint256 public totalSupply;\n\n    mapping(address => uint256) public balanceOf;\n\n    mapping(address => mapping(address => uint256)) public allowance;\n\n    /*//////////////////////////////////////////////////////////////\n                            EIP-2612 STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    uint256 internal immutable INITIAL_CHAIN_ID;\n\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\n\n    mapping(address => uint256) public nonces;\n\n    /*//////////////////////////////////////////////////////////////\n                               CONSTRUCTOR\n    //////////////////////////////////////////////////////////////*/\n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        uint8 _decimals\n    ) {\n        name = _name;\n        symbol = _symbol;\n        decimals = _decimals;\n\n        INITIAL_CHAIN_ID = block.chainid;\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                               ERC20 LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\n        allowance[msg.sender][spender] = amount;\n\n        emit Approval(msg.sender, spender, amount);\n\n        return true;\n    }\n\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\n        balanceOf[msg.sender] -= amount;\n\n        // Cannot overflow because the sum of all user\n        // balances can't exceed the max uint256 value.\n        unchecked {\n            balanceOf[to] += amount;\n        }\n\n        emit Transfer(msg.sender, to, amount);\n\n        return true;\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual returns (bool) {\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\n\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\n\n        balanceOf[from] -= amount;\n\n        // Cannot overflow because the sum of all user\n        // balances can't exceed the max uint256 value.\n        unchecked {\n            balanceOf[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        return true;\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                             EIP-2612 LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        require(deadline >= block.timestamp, \"PERMIT_DEADLINE_EXPIRED\");\n\n        // Unchecked because the only math done is incrementing\n        // the owner's nonce which cannot realistically overflow.\n        unchecked {\n            address recoveredAddress = ecrecover(\n                keccak256(\n                    abi.encodePacked(\n                        \"\\x19\\x01\",\n                        DOMAIN_SEPARATOR(),\n                        keccak256(\n                            abi.encode(\n                                keccak256(\n                                    \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\"\n                                ),\n                                owner,\n                                spender,\n                                value,\n                                nonces[owner]++,\n                                deadline\n                            )\n                        )\n                    )\n                ),\n                v,\n                r,\n                s\n            );\n\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \"INVALID_SIGNER\");\n\n            allowance[recoveredAddress][spender] = value;\n        }\n\n        emit Approval(owner, spender, value);\n    }\n\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\n    }\n\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\n        return\n            keccak256(\n                abi.encode(\n                    keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\n                    keccak256(bytes(name)),\n                    keccak256(\"1\"),\n                    block.chainid,\n                    address(this)\n                )\n            );\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                        INTERNAL MINT/BURN LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function _mint(address to, uint256 amount) internal virtual {\n        totalSupply += amount;\n\n        // Cannot overflow because the sum of all user\n        // balances can't exceed the max uint256 value.\n        unchecked {\n            balanceOf[to] += amount;\n        }\n\n        emit Transfer(address(0), to, amount);\n    }\n\n    function _burn(address from, uint256 amount) internal virtual {\n        balanceOf[from] -= amount;\n\n        // Cannot underflow because a user's balance\n        // will never be larger than the total supply.\n        unchecked {\n            totalSupply -= amount;\n        }\n\n        emit Transfer(from, address(0), amount);\n    }\n}\n"
			},
			"contracts/contracts/interfaces/IEIP712.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IEIP712 {\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/contracts/interfaces/IAllowanceTransfer.sol": {
				"IAllowanceTransfer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "AllowanceExpired",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExcessiveInvalidation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "InsufficientAllowance",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "expiration",
									"type": "uint48"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "Lockdown",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "newNonce",
									"type": "uint48"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "oldNonce",
									"type": "uint48"
								}
							],
							"name": "NonceInvalidation",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "expiration",
									"type": "uint48"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "nonce",
									"type": "uint48"
								}
							],
							"name": "Permit",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"internalType": "uint48",
									"name": "expiration",
									"type": "uint48"
								},
								{
									"internalType": "uint48",
									"name": "nonce",
									"type": "uint48"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"internalType": "uint48",
									"name": "expiration",
									"type": "uint48"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint48",
									"name": "newNonce",
									"type": "uint48"
								}
							],
							"name": "invalidateNonces",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "spender",
											"type": "address"
										}
									],
									"internalType": "struct IAllowanceTransfer.TokenSpenderPair[]",
									"name": "approvals",
									"type": "tuple[]"
								}
							],
							"name": "lockdown",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint160",
													"name": "amount",
													"type": "uint160"
												},
												{
													"internalType": "uint48",
													"name": "expiration",
													"type": "uint48"
												},
												{
													"internalType": "uint48",
													"name": "nonce",
													"type": "uint48"
												}
											],
											"internalType": "struct IAllowanceTransfer.PermitDetails[]",
											"name": "details",
											"type": "tuple[]"
										},
										{
											"internalType": "address",
											"name": "spender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "sigDeadline",
											"type": "uint256"
										}
									],
									"internalType": "struct IAllowanceTransfer.PermitBatch",
									"name": "permitBatch",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint160",
													"name": "amount",
													"type": "uint160"
												},
												{
													"internalType": "uint48",
													"name": "expiration",
													"type": "uint48"
												},
												{
													"internalType": "uint48",
													"name": "nonce",
													"type": "uint48"
												}
											],
											"internalType": "struct IAllowanceTransfer.PermitDetails",
											"name": "details",
											"type": "tuple"
										},
										{
											"internalType": "address",
											"name": "spender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "sigDeadline",
											"type": "uint256"
										}
									],
									"internalType": "struct IAllowanceTransfer.PermitSingle",
									"name": "permitSingle",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "from",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint160",
											"name": "amount",
											"type": "uint160"
										},
										{
											"internalType": "address",
											"name": "token",
											"type": "address"
										}
									],
									"internalType": "struct IAllowanceTransfer.AllowanceTransferDetails[]",
									"name": "transferDetails",
									"type": "tuple[]"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Requires user's token approval on the Permit2 contract",
						"errors": {
							"AllowanceExpired(uint256)": [
								{
									"params": {
										"deadline": "The timestamp at which the allowed amount is no longer valid"
									}
								}
							],
							"InsufficientAllowance(uint256)": [
								{
									"params": {
										"amount": "The maximum amount allowed"
									}
								}
							]
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address,address)": {
								"details": "The packed slot holds the allowed amount, expiration at which the allowed amount is no longer valid, and current nonce thats updated on any signature based approvals."
							},
							"approve(address,address,uint160,uint48)": {
								"details": "The packed allowance also holds a nonce, which will stay unchanged in approveSetting amount to type(uint160).max sets an unlimited approval",
								"params": {
									"amount": "The approved amount of the token",
									"expiration": "The timestamp at which the approval is no longer valid",
									"spender": "The spender address to approve",
									"token": "The token to approve"
								}
							},
							"invalidateNonces(address,address,uint48)": {
								"details": "Can't invalidate more than 2**16 nonces per transaction.",
								"params": {
									"newNonce": "The new nonce to set. Invalidates all nonces less than it.",
									"spender": "The spender to invalidate nonces for",
									"token": "The token to invalidate nonces for"
								}
							},
							"lockdown((address,address)[])": {
								"params": {
									"approvals": "Array of approvals to revoke."
								}
							},
							"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)": {
								"details": "May fail if the owner's nonce was invalidated in-flight by invalidateNonce",
								"params": {
									"owner": "The owner of the tokens being approved",
									"permitSingle": "Data signed over by the owner specifying the terms of approval",
									"signature": "The owner's signature over the permit data"
								}
							},
							"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)": {
								"details": "May fail if the owner's nonce was invalidated in-flight by invalidateNonce",
								"params": {
									"owner": "The owner of the tokens being approved",
									"permitBatch": "Data signed over by the owner specifying the terms of approval",
									"signature": "The owner's signature over the permit data"
								}
							},
							"transferFrom((address,address,uint160,address)[])": {
								"details": "Requires the from addresses to have approved at least the desired amount of tokens to msg.sender.",
								"params": {
									"transferDetails": "Array of owners, recipients, amounts, and tokens for the transfers"
								}
							},
							"transferFrom(address,address,uint160,address)": {
								"details": "Requires the from address to have approved at least the desired amount of tokens to msg.sender.",
								"params": {
									"amount": "The amount of the token to transfer",
									"from": "The address to transfer from",
									"to": "The address of the recipient",
									"token": "The token address to transfer"
								}
							}
						},
						"title": "AllowanceTransfer",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address,address)": "927da105",
							"approve(address,address,uint160,uint48)": "87517c45",
							"invalidateNonces(address,address,uint48)": "65d9723c",
							"lockdown((address,address)[])": "cc53287f",
							"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)": "2b67b570",
							"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)": "2a2d80d1",
							"transferFrom((address,address,uint160,address)[])": "0d58b1db",
							"transferFrom(address,address,uint160,address)": "36c78516"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"AllowanceExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExcessiveInvalidation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"Lockdown\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"newNonce\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"oldNonce\",\"type\":\"uint48\"}],\"name\":\"NonceInvalidation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"name\":\"Permit\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"newNonce\",\"type\":\"uint48\"}],\"name\":\"invalidateNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"internalType\":\"struct IAllowanceTransfer.TokenSpenderPair[]\",\"name\":\"approvals\",\"type\":\"tuple[]\"}],\"name\":\"lockdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IAllowanceTransfer.PermitDetails[]\",\"name\":\"details\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sigDeadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowanceTransfer.PermitBatch\",\"name\":\"permitBatch\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IAllowanceTransfer.PermitDetails\",\"name\":\"details\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sigDeadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowanceTransfer.PermitSingle\",\"name\":\"permitSingle\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"internalType\":\"struct IAllowanceTransfer.AllowanceTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Requires user's token approval on the Permit2 contract\",\"errors\":{\"AllowanceExpired(uint256)\":[{\"params\":{\"deadline\":\"The timestamp at which the allowed amount is no longer valid\"}}],\"InsufficientAllowance(uint256)\":[{\"params\":{\"amount\":\"The maximum amount allowed\"}}]},\"kind\":\"dev\",\"methods\":{\"allowance(address,address,address)\":{\"details\":\"The packed slot holds the allowed amount, expiration at which the allowed amount is no longer valid, and current nonce thats updated on any signature based approvals.\"},\"approve(address,address,uint160,uint48)\":{\"details\":\"The packed allowance also holds a nonce, which will stay unchanged in approveSetting amount to type(uint160).max sets an unlimited approval\",\"params\":{\"amount\":\"The approved amount of the token\",\"expiration\":\"The timestamp at which the approval is no longer valid\",\"spender\":\"The spender address to approve\",\"token\":\"The token to approve\"}},\"invalidateNonces(address,address,uint48)\":{\"details\":\"Can't invalidate more than 2**16 nonces per transaction.\",\"params\":{\"newNonce\":\"The new nonce to set. Invalidates all nonces less than it.\",\"spender\":\"The spender to invalidate nonces for\",\"token\":\"The token to invalidate nonces for\"}},\"lockdown((address,address)[])\":{\"params\":{\"approvals\":\"Array of approvals to revoke.\"}},\"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)\":{\"details\":\"May fail if the owner's nonce was invalidated in-flight by invalidateNonce\",\"params\":{\"owner\":\"The owner of the tokens being approved\",\"permitSingle\":\"Data signed over by the owner specifying the terms of approval\",\"signature\":\"The owner's signature over the permit data\"}},\"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)\":{\"details\":\"May fail if the owner's nonce was invalidated in-flight by invalidateNonce\",\"params\":{\"owner\":\"The owner of the tokens being approved\",\"permitBatch\":\"Data signed over by the owner specifying the terms of approval\",\"signature\":\"The owner's signature over the permit data\"}},\"transferFrom((address,address,uint160,address)[])\":{\"details\":\"Requires the from addresses to have approved at least the desired amount of tokens to msg.sender.\",\"params\":{\"transferDetails\":\"Array of owners, recipients, amounts, and tokens for the transfers\"}},\"transferFrom(address,address,uint160,address)\":{\"details\":\"Requires the from address to have approved at least the desired amount of tokens to msg.sender.\",\"params\":{\"amount\":\"The amount of the token to transfer\",\"from\":\"The address to transfer from\",\"to\":\"The address of the recipient\",\"token\":\"The token address to transfer\"}}},\"title\":\"AllowanceTransfer\",\"version\":1},\"userdoc\":{\"errors\":{\"AllowanceExpired(uint256)\":[{\"notice\":\"Thrown when an allowance on a token has expired.\"}],\"ExcessiveInvalidation()\":[{\"notice\":\"Thrown when too many nonces are invalidated.\"}],\"InsufficientAllowance(uint256)\":[{\"notice\":\"Thrown when an allowance on a token has been depleted.\"}]},\"events\":{\"Approval(address,address,address,uint160,uint48)\":{\"notice\":\"Emits an event when the owner successfully sets permissions on a token for the spender.\"},\"Lockdown(address,address,address)\":{\"notice\":\"Emits an event when the owner sets the allowance back to 0 with the lockdown function.\"},\"NonceInvalidation(address,address,address,uint48,uint48)\":{\"notice\":\"Emits an event when the owner successfully invalidates an ordered nonce.\"},\"Permit(address,address,address,uint160,uint48,uint48)\":{\"notice\":\"Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender.\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address,address)\":{\"notice\":\"A mapping from owner address to token address to spender address to PackedAllowance struct, which contains details and conditions of the approval.The mapping is indexed in the above order see: allowance[ownerAddress][tokenAddress][spenderAddress]\"},\"approve(address,address,uint160,uint48)\":{\"notice\":\"Approves the spender to use up to amount of the specified token up until the expiration\"},\"invalidateNonces(address,address,uint48)\":{\"notice\":\"Invalidate nonces for a given (token, spender) pair\"},\"lockdown((address,address)[])\":{\"notice\":\"Enables performing a \\\"lockdown\\\" of the sender's Permit2 identity by batch revoking approvals\"},\"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)\":{\"notice\":\"Permit a spender to a given amount of the owners token via the owner's EIP-712 signature\"},\"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)\":{\"notice\":\"Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature\"},\"transferFrom((address,address,uint160,address)[])\":{\"notice\":\"Transfer approved tokens in a batch\"},\"transferFrom(address,address,uint160,address)\":{\"notice\":\"Transfer approved tokens from one address to another\"}},\"notice\":\"Handles ERC20 token permissions through signature based allowance setting and ERC20 token transfers by checking allowed amounts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/interfaces/IAllowanceTransfer.sol\":\"IAllowanceTransfer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x37f0ac203b6ef605c9533e1a739477e8e9dcea90710b40e645a367f8a21ace29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0104d72aeaec1cd66cc232e7de7b7ead08608efcc179491b8a66387614670b0\",\"dweb:/ipfs/QmfAZDyuNC9FXXbnJUwqHNwmAK6uRrXxtWEytLsxjskPsN\"]},\"contracts/contracts/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"AllowanceExpired(uint256)": [
								{
									"notice": "Thrown when an allowance on a token has expired."
								}
							],
							"ExcessiveInvalidation()": [
								{
									"notice": "Thrown when too many nonces are invalidated."
								}
							],
							"InsufficientAllowance(uint256)": [
								{
									"notice": "Thrown when an allowance on a token has been depleted."
								}
							]
						},
						"events": {
							"Approval(address,address,address,uint160,uint48)": {
								"notice": "Emits an event when the owner successfully sets permissions on a token for the spender."
							},
							"Lockdown(address,address,address)": {
								"notice": "Emits an event when the owner sets the allowance back to 0 with the lockdown function."
							},
							"NonceInvalidation(address,address,address,uint48,uint48)": {
								"notice": "Emits an event when the owner successfully invalidates an ordered nonce."
							},
							"Permit(address,address,address,uint160,uint48,uint48)": {
								"notice": "Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender."
							}
						},
						"kind": "user",
						"methods": {
							"allowance(address,address,address)": {
								"notice": "A mapping from owner address to token address to spender address to PackedAllowance struct, which contains details and conditions of the approval.The mapping is indexed in the above order see: allowance[ownerAddress][tokenAddress][spenderAddress]"
							},
							"approve(address,address,uint160,uint48)": {
								"notice": "Approves the spender to use up to amount of the specified token up until the expiration"
							},
							"invalidateNonces(address,address,uint48)": {
								"notice": "Invalidate nonces for a given (token, spender) pair"
							},
							"lockdown((address,address)[])": {
								"notice": "Enables performing a \"lockdown\" of the sender's Permit2 identity by batch revoking approvals"
							},
							"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)": {
								"notice": "Permit a spender to a given amount of the owners token via the owner's EIP-712 signature"
							},
							"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)": {
								"notice": "Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature"
							},
							"transferFrom((address,address,uint160,address)[])": {
								"notice": "Transfer approved tokens in a batch"
							},
							"transferFrom(address,address,uint160,address)": {
								"notice": "Transfer approved tokens from one address to another"
							}
						},
						"notice": "Handles ERC20 token permissions through signature based allowance setting and ERC20 token transfers by checking allowed amounts",
						"version": 1
					}
				}
			},
			"contracts/contracts/interfaces/IDAIPermit.sol": {
				"IDAIPermit": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expiry",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "allowed",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)": {
								"params": {
									"allowed": "Boolean that sets approval amount, true for type(uint256).max and false for 0.",
									"expiry": "The timestamp at which the permit is no longer valid.",
									"holder": "The address of the token owner.",
									"nonce": "The owner's nonce, increases at each call to permit.",
									"r": "Must produce valid secp256k1 signature from the owner along with v and s.",
									"s": "Must produce valid secp256k1 signature from the owner along with r and v.",
									"spender": "The address of the token spender.",
									"v": "Must produce valid secp256k1 signature from the owner along with r and s."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)": "8fcbaf0c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)\":{\"params\":{\"allowed\":\"Boolean that sets approval amount, true for type(uint256).max and false for 0.\",\"expiry\":\"The timestamp at which the permit is no longer valid.\",\"holder\":\"The address of the token owner.\",\"nonce\":\"The owner's nonce, increases at each call to permit.\",\"r\":\"Must produce valid secp256k1 signature from the owner along with v and s.\",\"s\":\"Must produce valid secp256k1 signature from the owner along with r and v.\",\"spender\":\"The address of the token spender.\",\"v\":\"Must produce valid secp256k1 signature from the owner along with r and s.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/interfaces/IDAIPermit.sol\":\"IDAIPermit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/interfaces/IDAIPermit.sol\":{\"keccak256\":\"0xda8bc6826837c90ca2457a2111f5f0423672597931722adcdae236450dc7096e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db6d9b11308218f22b3c30805c9023b7d8d523f52bfdacf894e861da5fcec58e\",\"dweb:/ipfs/QmZHpKQL48iaC2xjwDTyU4jGy8RgrpWMqy6pB2objJwP6j\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/interfaces/IEIP712.sol": {
				"IEIP712": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/interfaces/IEIP712.sol\":\"IEIP712\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/lib/Permit2Lib.sol": {
				"Permit2Lib": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"DAI_DOMAIN_SEPARATOR": {
								"details": "The unique EIP-712 domain domain separator for the DAI token contract."
							},
							"PERMIT2": {
								"details": "The address of the Permit2 contract the library will use."
							},
							"WETH9_ADDRESS": {
								"details": "The address for the WETH9 contract on Ethereum mainnet, encoded as a bytes32."
							}
						},
						"title": "Permit2Lib",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/lib/Permit2Lib.sol\":422:8230  library Permit2Lib {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"contracts/contracts/lib/Permit2Lib.sol\":422:8230  library Permit2Lib {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220981ade4b69be786a43963b273c020ad29223c7ac56ebdf2000fbaf7b8e407bfc64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220981ade4b69be786a43963b273c020ad29223c7ac56ebdf2000fbaf7b8e407bfc64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 BYTE 0xDE 0x4B PUSH10 0xBE786A43963B273C020A 0xD2 SWAP3 0x23 0xC7 0xAC JUMP 0xEB 0xDF KECCAK256 STOP 0xFB 0xAF PUSH28 0x8E407BFC64736F6C6343000819003300000000000000000000000000 ",
							"sourceMap": "422:7808:3:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea2646970667358221220981ade4b69be786a43963b273c020ad29223c7ac56ebdf2000fbaf7b8e407bfc64736f6c63430008190033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 BYTE 0xDE 0x4B PUSH10 0xBE786A43963B273C020A 0xD2 SWAP3 0x23 0xC7 0xAC JUMP 0xEB 0xDF KECCAK256 STOP 0xFB 0xAF PUSH28 0x8E407BFC64736F6C6343000819003300000000000000000000000000 ",
							"sourceMap": "422:7808:3:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"permit2(contract ERC20,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"simplePermit2(contract ERC20,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"transferFrom2(contract ERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 422,
									"end": 8230,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 422,
									"end": 8230,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 422,
									"end": 8230,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 422,
									"end": 8230,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 422,
									"end": 8230,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 422,
									"end": 8230,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 422,
									"end": 8230,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 422,
									"end": 8230,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 422,
									"end": 8230,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 422,
									"end": 8230,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 422,
									"end": 8230,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 422,
									"end": 8230,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 422,
									"end": 8230,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 422,
									"end": 8230,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 422,
									"end": 8230,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 422,
									"end": 8230,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "library_deploy_address"
								},
								{
									"begin": 422,
									"end": 8230,
									"name": "RETURN",
									"source": 3
								},
								{
									"begin": 422,
									"end": 8230,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 422,
									"end": 8230,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 422,
									"end": 8230,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 8230,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 422,
									"end": 8230,
									"name": "REVERT",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220981ade4b69be786a43963b273c020ad29223c7ac56ebdf2000fbaf7b8e407bfc64736f6c63430008190033",
									".code": [
										{
											"begin": 422,
											"end": 8230,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 8230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 422,
											"end": 8230,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"contracts/contracts/interfaces/IAllowanceTransfer.sol",
								"contracts/contracts/interfaces/IDAIPermit.sol",
								"contracts/contracts/interfaces/IEIP712.sol",
								"contracts/contracts/lib/Permit2Lib.sol",
								"contracts/contracts/lib/SafeCast160.sol",
								"solmate/src/tokens/ERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"DAI_DOMAIN_SEPARATOR\":{\"details\":\"The unique EIP-712 domain domain separator for the DAI token contract.\"},\"PERMIT2\":{\"details\":\"The address of the Permit2 contract the library will use.\"},\"WETH9_ADDRESS\":{\"details\":\"The address for the WETH9 contract on Ethereum mainnet, encoded as a bytes32.\"}},\"title\":\"Permit2Lib\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Enables efficient transfers and EIP-2612/DAI permits for any token by falling back to Permit2.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/lib/Permit2Lib.sol\":\"Permit2Lib\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x37f0ac203b6ef605c9533e1a739477e8e9dcea90710b40e645a367f8a21ace29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0104d72aeaec1cd66cc232e7de7b7ead08608efcc179491b8a66387614670b0\",\"dweb:/ipfs/QmfAZDyuNC9FXXbnJUwqHNwmAK6uRrXxtWEytLsxjskPsN\"]},\"contracts/contracts/interfaces/IDAIPermit.sol\":{\"keccak256\":\"0xda8bc6826837c90ca2457a2111f5f0423672597931722adcdae236450dc7096e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db6d9b11308218f22b3c30805c9023b7d8d523f52bfdacf894e861da5fcec58e\",\"dweb:/ipfs/QmZHpKQL48iaC2xjwDTyU4jGy8RgrpWMqy6pB2objJwP6j\"]},\"contracts/contracts/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]},\"contracts/contracts/lib/Permit2Lib.sol\":{\"keccak256\":\"0x871717b9916f7c2c276728c76d0a9e0cfdb96665a235a7d998b94ec1821ccb53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f4acf586a875892556cd374c1c41854e87c90be896f4c613abbc7d84f3a1bf9\",\"dweb:/ipfs/QmVtbczxhP7fyJR3mxiwCXFrogWCaa8D5KGn1d1eSf1hay\"]},\"contracts/contracts/lib/SafeCast160.sol\":{\"keccak256\":\"0xf8ea2ba01185b05acc1fba1d969422bdb6ca3c80e5d3646932de344d4d164afb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87bda5043744b7afaeaa89ea11ee9f8cac5755887a2ef8205b38bcf93244f50d\",\"dweb:/ipfs/QmRdjkoVG63MpBDsQiQ6HrQr7sdW9b3DBM853KeCgxT4fh\"]},\"solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Enables efficient transfers and EIP-2612/DAI permits for any token by falling back to Permit2.",
						"version": 1
					}
				}
			},
			"contracts/contracts/lib/SafeCast160.sol": {
				"SafeCast160": {
					"abi": [
						{
							"inputs": [],
							"name": "UnsafeCast",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/lib/SafeCast160.sol\":58:454  library SafeCast160 {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"contracts/contracts/lib/SafeCast160.sol\":58:454  library SafeCast160 {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209028893cebe1d28257b47a7aaa2165ea5e3d3d0beb3e7fca23ba65cd7180cdbe64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212209028893cebe1d28257b47a7aaa2165ea5e3d3d0beb3e7fca23ba65cd7180cdbe64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0x28 DUP10 EXTCODECOPY 0xEB 0xE1 0xD2 DUP3 JUMPI 0xB4 PUSH27 0x7AAA2165EA5E3D3D0BEB3E7FCA23BA65CD7180CDBE64736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "58:396:4:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea26469706673582212209028893cebe1d28257b47a7aaa2165ea5e3d3d0beb3e7fca23ba65cd7180cdbe64736f6c63430008190033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0x28 DUP10 EXTCODECOPY 0xEB 0xE1 0xD2 DUP3 JUMPI 0xB4 PUSH27 0x7AAA2165EA5E3D3D0BEB3E7FCA23BA65CD7180CDBE64736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "58:396:4:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"toUint160(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 454,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 454,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 58,
									"end": 454,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 454,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 58,
									"end": 454,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 58,
									"end": 454,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 454,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 58,
									"end": 454,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 454,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 58,
									"end": 454,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 58,
									"end": 454,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 454,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 58,
									"end": 454,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 58,
									"end": 454,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 58,
									"end": 454,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 58,
									"end": 454,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "library_deploy_address"
								},
								{
									"begin": 58,
									"end": 454,
									"name": "RETURN",
									"source": 4
								},
								{
									"begin": 58,
									"end": 454,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 454,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 58,
									"end": 454,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 454,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 58,
									"end": 454,
									"name": "REVERT",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209028893cebe1d28257b47a7aaa2165ea5e3d3d0beb3e7fca23ba65cd7180cdbe64736f6c63430008190033",
									".code": [
										{
											"begin": 58,
											"end": 454,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 454,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 58,
											"end": 454,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"contracts/contracts/interfaces/IAllowanceTransfer.sol",
								"contracts/contracts/interfaces/IDAIPermit.sol",
								"contracts/contracts/interfaces/IEIP712.sol",
								"contracts/contracts/lib/Permit2Lib.sol",
								"contracts/contracts/lib/SafeCast160.sol",
								"solmate/src/tokens/ERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"UnsafeCast\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"UnsafeCast()\":[{\"notice\":\"Thrown when a valude greater than type(uint160).max is cast to uint160\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/lib/SafeCast160.sol\":\"SafeCast160\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/lib/SafeCast160.sol\":{\"keccak256\":\"0xf8ea2ba01185b05acc1fba1d969422bdb6ca3c80e5d3646932de344d4d164afb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87bda5043744b7afaeaa89ea11ee9f8cac5755887a2ef8205b38bcf93244f50d\",\"dweb:/ipfs/QmRdjkoVG63MpBDsQiQ6HrQr7sdW9b3DBM853KeCgxT4fh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"UnsafeCast()": [
								{
									"notice": "Thrown when a valude greater than type(uint160).max is cast to uint160"
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"solmate/src/tokens/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)",
						"details": "Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\",\"details\":\"Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Modern and gas efficient ERC20 + EIP-2612 implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"solmate/src/tokens/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 539,
								"contract": "solmate/src/tokens/ERC20.sol:ERC20",
								"label": "name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 541,
								"contract": "solmate/src/tokens/ERC20.sol:ERC20",
								"label": "symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 545,
								"contract": "solmate/src/tokens/ERC20.sol:ERC20",
								"label": "totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 549,
								"contract": "solmate/src/tokens/ERC20.sol:ERC20",
								"label": "balanceOf",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 555,
								"contract": "solmate/src/tokens/ERC20.sol:ERC20",
								"label": "allowance",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 563,
								"contract": "solmate/src/tokens/ERC20.sol:ERC20",
								"label": "nonces",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Modern and gas efficient ERC20 + EIP-2612 implementation.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/contracts/interfaces/IAllowanceTransfer.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/interfaces/IAllowanceTransfer.sol",
					"exportedSymbols": {
						"IAllowanceTransfer": [
							211
						],
						"IEIP712": [
							242
						]
					},
					"id": 212,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "contracts/contracts/interfaces/IEIP712.sol",
							"file": "./IEIP712.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 212,
							"sourceUnit": 243,
							"src": "57:38:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IEIP712",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 242,
										"src": "65:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "IEIP712",
										"nameLocations": [
											"362:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 242,
										"src": "362:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "362:7:0"
								}
							],
							"canonicalName": "IAllowanceTransfer",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "97:233:0",
								"text": "@title AllowanceTransfer\n @notice Handles ERC20 token permissions through signature based allowance setting and ERC20 token transfers by checking allowed amounts\n @dev Requires user's token approval on the Permit2 contract"
							},
							"fullyImplemented": false,
							"id": 211,
							"linearizedBaseContracts": [
								211,
								242
							],
							"name": "IAllowanceTransfer",
							"nameLocation": "340:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "376:145:0",
										"text": "@notice Thrown when an allowance on a token has expired.\n @param deadline The timestamp at which the allowed amount is no longer valid"
									},
									"errorSelector": "d81b2f2e",
									"id": 11,
									"name": "AllowanceExpired",
									"nameLocation": "532:16:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "557:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "549:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "548:18:0"
									},
									"src": "526:41:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "573:115:0",
										"text": "@notice Thrown when an allowance on a token has been depleted.\n @param amount The maximum amount allowed"
									},
									"errorSelector": "f96fb071",
									"id": 16,
									"name": "InsufficientAllowance",
									"nameLocation": "699:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "729:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "721:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "720:16:0"
									},
									"src": "693:44:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "743:56:0",
										"text": "@notice Thrown when too many nonces are invalidated."
									},
									"errorSelector": "24d35a26",
									"id": 19,
									"name": "ExcessiveInvalidation",
									"nameLocation": "810:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "831:2:0"
									},
									"src": "804:30:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "840:84:0",
										"text": "@notice Emits an event when the owner successfully invalidates an ordered nonce."
									},
									"eventSelector": "55eb90d810e1700b35a8e7e25395ff7f2b2259abd7415ca2284dfb1c246418f3",
									"id": 32,
									"name": "NonceInvalidation",
									"nameLocation": "935:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "978:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "962:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1001:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "985:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "985:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1008:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": false,
												"mutability": "mutable",
												"name": "newNonce",
												"nameLocation": "1040:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1033:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 27,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1033:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldNonce",
												"nameLocation": "1057:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1050:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 29,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1050:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "952:119:0"
									},
									"src": "929:143:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1078:99:0",
										"text": "@notice Emits an event when the owner successfully sets permissions on a token for the spender."
									},
									"eventSelector": "da9fa7c1b00402c17d0161b249b1ab8bbec047c5a52207b9c112deffd817036b",
									"id": 45,
									"name": "Approval",
									"nameLocation": "1188:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1222:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1206:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1245:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1229:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1229:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1268:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1252:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1285:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1277:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 40,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1277:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"indexed": false,
												"mutability": "mutable",
												"name": "expiration",
												"nameLocation": "1300:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1293:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 42,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1293:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1196:120:0"
									},
									"src": "1182:135:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1323:124:0",
										"text": "@notice Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender."
									},
									"eventSelector": "c6a377bfc4eb120024a8ac08eef205be16b817020812c73223e81d1bdb9708ec",
									"id": 60,
									"name": "Permit",
									"nameLocation": "1458:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1490:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1474:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1474:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1521:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1505:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1505:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1552:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1536:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1577:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1569:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 53,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1569:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"indexed": false,
												"mutability": "mutable",
												"name": "expiration",
												"nameLocation": "1600:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1593:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 55,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1593:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"indexed": false,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1627:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1620:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 57,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1620:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1464:174:0"
									},
									"src": "1452:187:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1645:98:0",
										"text": "@notice Emits an event when the owner sets the allowance back to 0 with the lockdown function."
									},
									"eventSelector": "89b1add15eff56b3dfe299ad94e01f2b52fbcb80ae1a3baea6ae8c04cb2b98a4",
									"id": 69,
									"name": "Lockdown",
									"nameLocation": "1754:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1779:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "1763:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1794:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "1786:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1786:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"indexed": false,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1809:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "1801:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1801:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1762:55:0"
									},
									"src": "1748:70:0"
								},
								{
									"canonicalName": "IAllowanceTransfer.PermitDetails",
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "1824:39:0",
										"text": "@notice The permit data for a token"
									},
									"id": 79,
									"members": [
										{
											"constant": false,
											"id": 72,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "1938:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 79,
											"src": "1930:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 71,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1930:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 74,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "2008:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 79,
											"src": "2000:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 73,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "2000:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 76,
											"mutability": "mutable",
											"name": "expiration",
											"nameLocation": "2105:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 79,
											"src": "2098:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 75,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "2098:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 78,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "2220:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 79,
											"src": "2213:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 77,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "2213:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PermitDetails",
									"nameLocation": "1875:13:0",
									"nodeType": "StructDefinition",
									"scope": 211,
									"src": "1868:364:0",
									"visibility": "public"
								},
								{
									"canonicalName": "IAllowanceTransfer.PermitSingle",
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "2238:66:0",
										"text": "@notice The permit message signed for a single token allowance"
									},
									"id": 88,
									"members": [
										{
											"constant": false,
											"id": 83,
											"mutability": "mutable",
											"name": "details",
											"nameLocation": "2407:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 88,
											"src": "2393:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PermitDetails_$79_storage_ptr",
												"typeString": "struct IAllowanceTransfer.PermitDetails"
											},
											"typeName": {
												"id": 82,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 81,
													"name": "PermitDetails",
													"nameLocations": [
														"2393:13:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 79,
													"src": "2393:13:0"
												},
												"referencedDeclaration": 79,
												"src": "2393:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitDetails_$79_storage_ptr",
													"typeString": "struct IAllowanceTransfer.PermitDetails"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 85,
											"mutability": "mutable",
											"name": "spender",
											"nameLocation": "2486:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 88,
											"src": "2478:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 84,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2478:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 87,
											"mutability": "mutable",
											"name": "sigDeadline",
											"nameLocation": "2555:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 88,
											"src": "2547:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 86,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2547:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PermitSingle",
									"nameLocation": "2316:12:0",
									"nodeType": "StructDefinition",
									"scope": 211,
									"src": "2309:264:0",
									"visibility": "public"
								},
								{
									"canonicalName": "IAllowanceTransfer.PermitBatch",
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "2579:67:0",
										"text": "@notice The permit message signed for multiple token allowances"
									},
									"id": 98,
									"members": [
										{
											"constant": false,
											"id": 93,
											"mutability": "mutable",
											"name": "details",
											"nameLocation": "2753:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 98,
											"src": "2737:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_PermitDetails_$79_storage_$dyn_storage_ptr",
												"typeString": "struct IAllowanceTransfer.PermitDetails[]"
											},
											"typeName": {
												"baseType": {
													"id": 91,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 90,
														"name": "PermitDetails",
														"nameLocations": [
															"2737:13:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 79,
														"src": "2737:13:0"
													},
													"referencedDeclaration": 79,
													"src": "2737:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitDetails_$79_storage_ptr",
														"typeString": "struct IAllowanceTransfer.PermitDetails"
													}
												},
												"id": 92,
												"nodeType": "ArrayTypeName",
												"src": "2737:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PermitDetails_$79_storage_$dyn_storage_ptr",
													"typeString": "struct IAllowanceTransfer.PermitDetails[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 95,
											"mutability": "mutable",
											"name": "spender",
											"nameLocation": "2832:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 98,
											"src": "2824:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 94,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2824:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 97,
											"mutability": "mutable",
											"name": "sigDeadline",
											"nameLocation": "2901:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 98,
											"src": "2893:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 96,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2893:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PermitBatch",
									"nameLocation": "2658:11:0",
									"nodeType": "StructDefinition",
									"scope": 211,
									"src": "2651:268:0",
									"visibility": "public"
								},
								{
									"canonicalName": "IAllowanceTransfer.PackedAllowance",
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2925:217:0",
										"text": "@notice The saved permissions\n @dev This info is saved per owner, per token, per spender and all signed over in the permit message\n @dev Setting amount to type(uint160).max sets an unlimited approval"
									},
									"id": 106,
									"members": [
										{
											"constant": false,
											"id": 101,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "3214:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 106,
											"src": "3206:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 100,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "3206:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 103,
											"mutability": "mutable",
											"name": "expiration",
											"nameLocation": "3266:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 106,
											"src": "3259:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 102,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "3259:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 105,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "3381:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 106,
											"src": "3374:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 104,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "3374:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PackedAllowance",
									"nameLocation": "3154:15:0",
									"nodeType": "StructDefinition",
									"scope": 211,
									"src": "3147:246:0",
									"visibility": "public"
								},
								{
									"canonicalName": "IAllowanceTransfer.TokenSpenderPair",
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "3399:33:0",
										"text": "@notice A token spender pair."
									},
									"id": 112,
									"members": [
										{
											"constant": false,
											"id": 109,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "3524:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 112,
											"src": "3516:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 108,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3516:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 111,
											"mutability": "mutable",
											"name": "spender",
											"nameLocation": "3578:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 112,
											"src": "3570:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 110,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3570:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenSpenderPair",
									"nameLocation": "3444:16:0",
									"nodeType": "StructDefinition",
									"scope": 211,
									"src": "3437:155:0",
									"visibility": "public"
								},
								{
									"canonicalName": "IAllowanceTransfer.AllowanceTransferDetails",
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "3598:41:0",
										"text": "@notice Details for a token transfer."
									},
									"id": 122,
									"members": [
										{
											"constant": false,
											"id": 115,
											"mutability": "mutable",
											"name": "from",
											"nameLocation": "3728:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 122,
											"src": "3720:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 114,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3720:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 117,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "3788:2:0",
											"nodeType": "VariableDeclaration",
											"scope": 122,
											"src": "3780:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 116,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3780:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 119,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "3843:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 122,
											"src": "3835:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 118,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "3835:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 121,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "3906:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 122,
											"src": "3898:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 120,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3898:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AllowanceTransferDetails",
									"nameLocation": "3651:24:0",
									"nodeType": "StructDefinition",
									"scope": 211,
									"src": "3644:274:0",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "3924:455:0",
										"text": "@notice A mapping from owner address to token address to spender address to PackedAllowance struct, which contains details and conditions of the approval.\n @notice The mapping is indexed in the above order see: allowance[ownerAddress][tokenAddress][spenderAddress]\n @dev The packed slot holds the allowed amount, expiration at which the allowed amount is no longer valid, and current nonce thats updated on any signature based approvals."
									},
									"functionSelector": "927da105",
									"id": 138,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4393:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4411:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4403:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4425:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4417:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4417:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4440:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4432:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4402:46:0"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4504:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4496:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 131,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4496:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "expiration",
												"nameLocation": "4519:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4512:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 133,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "4512:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "4538:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4531:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 135,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "4531:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4495:49:0"
									},
									"scope": 211,
									"src": "4384:161:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "4551:498:0",
										"text": "@notice Approves the spender to use up to amount of the specified token up until the expiration\n @param token The token to approve\n @param spender The spender address to approve\n @param amount The approved amount of the token\n @param expiration The timestamp at which the approval is no longer valid\n @dev The packed allowance also holds a nonce, which will stay unchanged in approve\n @dev Setting amount to type(uint160).max sets an unlimited approval"
									},
									"functionSelector": "87517c45",
									"id": 150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5063:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5079:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5071:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5071:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5094:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5086:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5086:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5111:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5103:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 144,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "5103:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "expiration",
												"nameLocation": "5126:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5119:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 146,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "5119:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5070:67:0"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5146:0:0"
									},
									"scope": 211,
									"src": "5054:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5153:407:0",
										"text": "@notice Permit a spender to a given amount of the owners token via the owner's EIP-712 signature\n @dev May fail if the owner's nonce was invalidated in-flight by invalidateNonce\n @param owner The owner of the tokens being approved\n @param permitSingle Data signed over by the owner specifying the terms of approval\n @param signature The owner's signature over the permit data"
									},
									"functionSelector": "2b67b570",
									"id": 161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "5574:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5589:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "5581:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "permitSingle",
												"nameLocation": "5616:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "5596:32:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitSingle_$88_memory_ptr",
													"typeString": "struct IAllowanceTransfer.PermitSingle"
												},
												"typeName": {
													"id": 155,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 154,
														"name": "PermitSingle",
														"nameLocations": [
															"5596:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 88,
														"src": "5596:12:0"
													},
													"referencedDeclaration": 88,
													"src": "5596:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitSingle_$88_storage_ptr",
														"typeString": "struct IAllowanceTransfer.PermitSingle"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "5645:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "5630:24:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 157,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5630:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5580:75:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5664:0:0"
									},
									"scope": 211,
									"src": "5565:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "5671:411:0",
										"text": "@notice Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature\n @dev May fail if the owner's nonce was invalidated in-flight by invalidateNonce\n @param owner The owner of the tokens being approved\n @param permitBatch Data signed over by the owner specifying the terms of approval\n @param signature The owner's signature over the permit data"
									},
									"functionSelector": "2a2d80d1",
									"id": 172,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "6096:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6111:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "6103:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6103:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "permitBatch",
												"nameLocation": "6137:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "6118:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitBatch_$98_memory_ptr",
													"typeString": "struct IAllowanceTransfer.PermitBatch"
												},
												"typeName": {
													"id": 166,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 165,
														"name": "PermitBatch",
														"nameLocations": [
															"6118:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 98,
														"src": "6118:11:0"
													},
													"referencedDeclaration": 98,
													"src": "6118:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitBatch_$98_storage_ptr",
														"typeString": "struct IAllowanceTransfer.PermitBatch"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "6165:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "6150:24:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 168,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6150:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6102:73:0"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6184:0:0"
									},
									"scope": 211,
									"src": "6087:98:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "6191:386:0",
										"text": "@notice Transfer approved tokens from one address to another\n @param from The address to transfer from\n @param to The address of the recipient\n @param amount The amount of the token to transfer\n @param token The token address to transfer\n @dev Requires the from address to have approved at least the desired amount\n of tokens to msg.sender."
									},
									"functionSelector": "36c78516",
									"id": 184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6591:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6612:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "6604:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6604:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6626:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "6618:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6618:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6638:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "6630:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 178,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6630:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6654:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "6646:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6646:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6603:57:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6669:0:0"
									},
									"scope": 211,
									"src": "6582:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "6676:264:0",
										"text": "@notice Transfer approved tokens in a batch\n @param transferDetails Array of owners, recipients, amounts, and tokens for the transfers\n @dev Requires the from addresses to have approved at least the desired amount\n of tokens to msg.sender."
									},
									"functionSelector": "0d58b1db",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6954:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "transferDetails",
												"nameLocation": "7003:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "6967:51:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_AllowanceTransferDetails_$122_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IAllowanceTransfer.AllowanceTransferDetails[]"
												},
												"typeName": {
													"baseType": {
														"id": 187,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 186,
															"name": "AllowanceTransferDetails",
															"nameLocations": [
																"6967:24:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 122,
															"src": "6967:24:0"
														},
														"referencedDeclaration": 122,
														"src": "6967:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AllowanceTransferDetails_$122_storage_ptr",
															"typeString": "struct IAllowanceTransfer.AllowanceTransferDetails"
														}
													},
													"id": 188,
													"nodeType": "ArrayTypeName",
													"src": "6967:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_AllowanceTransferDetails_$122_storage_$dyn_storage_ptr",
														"typeString": "struct IAllowanceTransfer.AllowanceTransferDetails[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6966:53:0"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7028:0:0"
									},
									"scope": 211,
									"src": "6945:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "7035:167:0",
										"text": "@notice Enables performing a \"lockdown\" of the sender's Permit2 identity\n by batch revoking approvals\n @param approvals Array of approvals to revoke."
									},
									"functionSelector": "cc53287f",
									"id": 200,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lockdown",
									"nameLocation": "7216:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "approvals",
												"nameLocation": "7253:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "7225:37:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenSpenderPair_$112_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IAllowanceTransfer.TokenSpenderPair[]"
												},
												"typeName": {
													"baseType": {
														"id": 195,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 194,
															"name": "TokenSpenderPair",
															"nameLocations": [
																"7225:16:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 112,
															"src": "7225:16:0"
														},
														"referencedDeclaration": 112,
														"src": "7225:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenSpenderPair_$112_storage_ptr",
															"typeString": "struct IAllowanceTransfer.TokenSpenderPair"
														}
													},
													"id": 196,
													"nodeType": "ArrayTypeName",
													"src": "7225:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenSpenderPair_$112_storage_$dyn_storage_ptr",
														"typeString": "struct IAllowanceTransfer.TokenSpenderPair[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7224:39:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7272:0:0"
									},
									"scope": 211,
									"src": "7207:66:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "7279:332:0",
										"text": "@notice Invalidate nonces for a given (token, spender) pair\n @param token The token to invalidate nonces for\n @param spender The spender to invalidate nonces for\n @param newNonce The new nonce to set. Invalidates all nonces less than it.\n @dev Can't invalidate more than 2**16 nonces per transaction."
									},
									"functionSelector": "65d9723c",
									"id": 210,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "invalidateNonces",
									"nameLocation": "7625:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "7642:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7642:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7665:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "7657:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "newNonce",
												"nameLocation": "7681:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "7674:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 206,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "7674:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7641:49:0"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7699:0:0"
									},
									"scope": 211,
									"src": "7616:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 212,
							"src": "330:7372:0",
							"usedErrors": [
								11,
								16,
								19
							],
							"usedEvents": [
								32,
								45,
								60,
								69
							]
						}
					],
					"src": "32:7671:0"
				},
				"id": 0
			},
			"contracts/contracts/interfaces/IDAIPermit.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/interfaces/IDAIPermit.sol",
					"exportedSymbols": {
						"IDAIPermit": [
							234
						]
					},
					"id": 235,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 213,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDAIPermit",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 234,
							"linearizedBaseContracts": [
								234
							],
							"name": "IDAIPermit",
							"nameLocation": "67:10:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "84:631:1",
										"text": "@param holder The address of the token owner.\n @param spender The address of the token spender.\n @param nonce The owner's nonce, increases at each call to permit.\n @param expiry The timestamp at which the permit is no longer valid.\n @param allowed Boolean that sets approval amount, true for type(uint256).max and false for 0.\n @param v Must produce valid secp256k1 signature from the owner along with r and s.\n @param r Must produce valid secp256k1 signature from the owner along with v and s.\n @param s Must produce valid secp256k1 signature from the owner along with r and v."
									},
									"functionSelector": "8fcbaf0c",
									"id": 233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "729:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "753:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "745:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "777:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "769:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "802:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "794:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "expiry",
												"nameLocation": "825:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "817:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "allowed",
												"nameLocation": "846:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "841:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "841:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "869:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "863:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 225,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "863:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "888:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "880:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 227,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "880:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "907:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "899:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 229,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "735:179:1"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:0:1"
									},
									"scope": 234,
									"src": "720:204:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 235,
							"src": "57:869:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:895:1"
				},
				"id": 1
			},
			"contracts/contracts/interfaces/IEIP712.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/interfaces/IEIP712.sol",
					"exportedSymbols": {
						"IEIP712": [
							242
						]
					},
					"id": 243,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 236,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IEIP712",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 242,
							"linearizedBaseContracts": [
								242
							],
							"name": "IEIP712",
							"nameLocation": "67:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "3644e515",
									"id": 241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "90:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "106:2:2"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "132:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 238,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "132:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "131:9:2"
									},
									"scope": 242,
									"src": "81:60:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 243,
							"src": "57:86:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:112:2"
				},
				"id": 2
			},
			"contracts/contracts/lib/Permit2Lib.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/lib/Permit2Lib.sol",
					"exportedSymbols": {
						"ERC20": [
							906
						],
						"IAllowanceTransfer": [
							211
						],
						"IDAIPermit": [
							234
						],
						"Permit2Lib": [
							487
						],
						"SafeCast160": [
							518
						]
					},
					"id": 488,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 244,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"absolutePath": "solmate/src/tokens/ERC20.sol",
							"file": "solmate/src/tokens/ERC20.sol",
							"id": 246,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 488,
							"sourceUnit": 907,
							"src": "58:51:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 245,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 906,
										"src": "66:5:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/interfaces/IDAIPermit.sol",
							"file": "../interfaces/IDAIPermit.sol",
							"id": 248,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 488,
							"sourceUnit": 235,
							"src": "111:56:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 247,
										"name": "IDAIPermit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 234,
										"src": "119:10:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/interfaces/IAllowanceTransfer.sol",
							"file": "../interfaces/IAllowanceTransfer.sol",
							"id": 250,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 488,
							"sourceUnit": 212,
							"src": "168:72:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 249,
										"name": "IAllowanceTransfer",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 211,
										"src": "176:18:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/lib/SafeCast160.sol",
							"file": "./SafeCast160.sol",
							"id": 252,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 488,
							"sourceUnit": 519,
							"src": "241:46:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 251,
										"name": "SafeCast160",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 518,
										"src": "249:11:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Permit2Lib",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 253,
								"nodeType": "StructuredDocumentation",
								"src": "289:133:3",
								"text": "@title Permit2Lib\n @notice Enables efficient transfers and EIP-2612/DAI\n permits for any token by falling back to Permit2."
							},
							"fullyImplemented": true,
							"id": 487,
							"linearizedBaseContracts": [
								487
							],
							"name": "Permit2Lib",
							"nameLocation": "430:10:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 256,
									"libraryName": {
										"id": 254,
										"name": "SafeCast160",
										"nameLocations": [
											"453:11:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 518,
										"src": "453:11:3"
									},
									"nodeType": "UsingForDirective",
									"src": "447:30:3",
									"typeName": {
										"id": 255,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "469:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "663:79:3",
										"text": "@dev The unique EIP-712 domain domain separator for the DAI token contract."
									},
									"id": 260,
									"mutability": "constant",
									"name": "DAI_DOMAIN_SEPARATOR",
									"nameLocation": "773:20:3",
									"nodeType": "VariableDeclaration",
									"scope": 487,
									"src": "747:115:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 258,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "747:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307864626238636634326531656362303238626533663364626339323265316438373862393633663431316463333838636564353031363031633630663763366637",
										"id": 259,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "796:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_99383044164297460920199564169379472118763403594000230800569066591923778078455_by_1",
											"typeString": "int_const 9938...(69 digits omitted)...8455"
										},
										"value": "0xdbb8cf42e1ecb028be3f3dbc922e1d878b963f411dc388ced501601c60f7c6f7"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "869:86:3",
										"text": "@dev The address for the WETH9 contract on Ethereum mainnet, encoded as a bytes32."
									},
									"id": 264,
									"mutability": "constant",
									"name": "WETH9_ADDRESS",
									"nameLocation": "986:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 487,
									"src": "960:108:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 262,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "960:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303063303261616133396232323366653864306130653563346632376561643930383363373536636332",
										"id": 263,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1002:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1097077688018008265106216665536940668749033598146_by_1",
											"typeString": "int_const 1097...(41 digits omitted)...8146"
										},
										"value": "0x000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "1075:66:3",
										"text": "@dev The address of the Permit2 contract the library will use."
									},
									"id": 274,
									"mutability": "constant",
									"name": "PERMIT2",
									"nameLocation": "1183:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 487,
									"src": "1146:126:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IAllowanceTransfer_$211",
										"typeString": "contract IAllowanceTransfer"
									},
									"typeName": {
										"id": 267,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 266,
											"name": "IAllowanceTransfer",
											"nameLocations": [
												"1146:18:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 211,
											"src": "1146:18:3"
										},
										"referencedDeclaration": 211,
										"src": "1146:18:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IAllowanceTransfer_$211",
											"typeString": "contract IAllowanceTransfer"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"hexValue": "307830303030303030303030323244343733303330463131366444454539463642343361433738424133",
														"id": 271,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1228:42:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x000000000022D473030F116dDEE9F6B43aC78BA3"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													],
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "1220:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_address_$",
														"typeString": "type(address)"
													},
													"typeName": {
														"id": 269,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1220:7:3",
														"typeDescriptions": {}
													}
												},
												"id": 272,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "1220:51:3",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 268,
											"name": "IAllowanceTransfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 211,
											"src": "1201:18:3",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IAllowanceTransfer_$211_$",
												"typeString": "type(contract IAllowanceTransfer)"
											}
										},
										"id": 273,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1201:71:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IAllowanceTransfer_$211",
											"typeString": "contract IAllowanceTransfer"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "1622:1185:3",
										"statements": [
											{
												"assignments": [
													288
												],
												"declarations": [
													{
														"constant": false,
														"id": 288,
														"mutability": "mutable",
														"name": "inputData",
														"nameLocation": "1708:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 320,
														"src": "1695:22:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 287,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1695:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 298,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 291,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 906,
																"src": "1735:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$906_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1741:12:3",
															"memberName": "transferFrom",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 717,
															"src": "1735:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function ERC20.transferFrom(address,address,uint256) returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 293,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 280,
																	"src": "1756:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 294,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 282,
																	"src": "1762:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 295,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 284,
																	"src": "1766:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 296,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1755:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function ERC20.transferFrom(address,address,uint256) returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,address,uint256)"
															}
														],
														"expression": {
															"id": 289,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "1720:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1724:10:3",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "1720:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1720:54:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1695:79:3"
											},
											{
												"assignments": [
													300
												],
												"declarations": [
													{
														"constant": false,
														"id": 300,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1790:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 320,
														"src": "1785:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 299,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1785:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 301,
												"nodeType": "VariableDeclarationStatement",
												"src": "1785:12:3"
											},
											{
												"AST": {
													"nativeSrc": "1886:724:3",
													"nodeType": "YulBlock",
													"src": "1886:724:3",
													"statements": [
														{
															"nativeSrc": "1900:700:3",
															"nodeType": "YulAssignment",
															"src": "1900:700:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2151:1:3",
																								"nodeType": "YulLiteral",
																								"src": "2151:1:3",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nativeSrc": "2145:5:3",
																							"nodeType": "YulIdentifier",
																							"src": "2145:5:3"
																						},
																						"nativeSrc": "2145:8:3",
																						"nodeType": "YulFunctionCall",
																						"src": "2145:8:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2155:1:3",
																						"nodeType": "YulLiteral",
																						"src": "2155:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "2142:2:3",
																					"nodeType": "YulIdentifier",
																					"src": "2142:2:3"
																				},
																				"nativeSrc": "2142:15:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2142:15:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nativeSrc": "2166:14:3",
																							"nodeType": "YulIdentifier",
																							"src": "2166:14:3"
																						},
																						"nativeSrc": "2166:16:3",
																						"nodeType": "YulFunctionCall",
																						"src": "2166:16:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2159:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "2159:6:3"
																				},
																				"nativeSrc": "2159:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2159:24:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2139:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "2139:2:3"
																		},
																		"nativeSrc": "2139:45:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2139:45:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "gas",
																					"nativeSrc": "2521:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2521:3:3"
																				},
																				"nativeSrc": "2521:5:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2521:5:3"
																			},
																			{
																				"name": "token",
																				"nativeSrc": "2528:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2528:5:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2535:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2535:1:3",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "inputData",
																						"nativeSrc": "2542:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "2542:9:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2553:2:3",
																						"nodeType": "YulLiteral",
																						"src": "2553:2:3",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2538:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2538:3:3"
																				},
																				"nativeSrc": "2538:18:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2538:18:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "inputData",
																						"nativeSrc": "2564:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "2564:9:3"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "2558:5:3",
																					"nodeType": "YulIdentifier",
																					"src": "2558:5:3"
																				},
																				"nativeSrc": "2558:16:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2558:16:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2576:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2576:1:3",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2579:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2579:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "call",
																			"nativeSrc": "2516:4:3",
																			"nodeType": "YulIdentifier",
																			"src": "2516:4:3"
																		},
																		"nativeSrc": "2516:66:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2516:66:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1927:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1927:3:3"
																},
																"nativeSrc": "1927:673:3",
																"nodeType": "YulFunctionCall",
																"src": "1927:673:3"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "1900:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1900:7:3"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 288,
														"isOffset": false,
														"isSlot": false,
														"src": "2542:9:3",
														"valueSize": 1
													},
													{
														"declaration": 288,
														"isOffset": false,
														"isSlot": false,
														"src": "2564:9:3",
														"valueSize": 1
													},
													{
														"declaration": 300,
														"isOffset": false,
														"isSlot": false,
														"src": "1900:7:3",
														"valueSize": 1
													},
													{
														"declaration": 278,
														"isOffset": false,
														"isSlot": false,
														"src": "2528:5:3",
														"valueSize": 1
													}
												],
												"id": 302,
												"nodeType": "InlineAssembly",
												"src": "1877:733:3"
											},
											{
												"condition": {
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2724:8:3",
													"subExpression": {
														"id": 303,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2725:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 319,
												"nodeType": "IfStatement",
												"src": "2720:80:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"id": 308,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "2755:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 309,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 282,
																"src": "2761:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 310,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 284,
																		"src": "2765:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2772:9:3",
																	"memberName": "toUint160",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 517,
																	"src": "2765:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint160_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint160)"
																	}
																},
																"id": 312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2765:18:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"arguments": [
																	{
																		"id": 315,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 278,
																		"src": "2793:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$906",
																			"typeString": "contract ERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_ERC20_$906",
																			"typeString": "contract ERC20"
																		}
																	],
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2785:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 313,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2785:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2785:14:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 305,
																"name": "PERMIT2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "2734:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IAllowanceTransfer_$211",
																	"typeString": "contract IAllowanceTransfer"
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2742:12:3",
															"memberName": "transferFrom",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 184,
															"src": "2734:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint160_$_t_address_$returns$__$",
																"typeString": "function (address,address,uint160,address) external"
															}
														},
														"id": 317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2734:66:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 318,
													"nodeType": "ExpressionStatement",
													"src": "2734:66:3"
												}
											}
										]
									},
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "1279:251:3",
										"text": "@notice Transfer a given amount of tokens from one user to another.\n @param token The token to transfer.\n @param from The user to transfer from.\n @param to The user to transfer to.\n @param amount The amount to transfer."
									},
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom2",
									"nameLocation": "1544:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1564:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "1558:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$906",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"id": 277,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 276,
														"name": "ERC20",
														"nameLocations": [
															"1558:5:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 906,
														"src": "1558:5:3"
													},
													"referencedDeclaration": 906,
													"src": "1558:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$906",
														"typeString": "contract ERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1579:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "1571:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1571:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1593:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "1585:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1605:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "1597:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1597:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1557:55:3"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1622:0:3"
									},
									"scope": 487,
									"src": "1535:1272:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "3991:2675:3",
										"statements": [
											{
												"assignments": [
													343
												],
												"declarations": [
													{
														"constant": false,
														"id": 343,
														"mutability": "mutable",
														"name": "inputData",
														"nameLocation": "4088:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 414,
														"src": "4075:22:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 342,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4075:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 350,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 346,
																	"name": "ERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 906,
																	"src": "4123:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC20_$906_$",
																		"typeString": "type(contract ERC20)"
																	}
																},
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4129:16:3",
																"memberName": "DOMAIN_SEPARATOR",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 819,
																"src": "4123:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_declaration_view$__$returns$_t_bytes32_$",
																	"typeString": "function ERC20.DOMAIN_SEPARATOR() view returns (bytes32)"
																}
															},
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4146:8:3",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "4123:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 344,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4100:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 345,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4104:18:3",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "4100:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4100:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4075:80:3"
											},
											{
												"assignments": [
													352
												],
												"declarations": [
													{
														"constant": false,
														"id": 352,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4171:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 414,
														"src": "4166:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 351,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4166:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 353,
												"nodeType": "VariableDeclarationStatement",
												"src": "4166:12:3"
											},
											{
												"assignments": [
													355
												],
												"declarations": [
													{
														"constant": false,
														"id": 355,
														"mutability": "mutable",
														"name": "domainSeparator",
														"nameLocation": "4266:15:3",
														"nodeType": "VariableDeclaration",
														"scope": 414,
														"src": "4258:23:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 354,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4258:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 356,
												"nodeType": "VariableDeclarationStatement",
												"src": "4258:23:3"
											},
											{
												"AST": {
													"nativeSrc": "4364:1344:3",
													"nodeType": "YulBlock",
													"src": "4364:1344:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "4681:1017:3",
																"nodeType": "YulBlock",
																"src": "4681:1017:3",
																"statements": [
																	{
																		"nativeSrc": "4699:880:3",
																		"nodeType": "YulAssignment",
																		"src": "4699:880:3",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "4875:1:3",
																													"nodeType": "YulLiteral",
																													"src": "4875:1:3",
																													"type": "",
																													"value": "0"
																												}
																											],
																											"functionName": {
																												"name": "mload",
																												"nativeSrc": "4869:5:3",
																												"nodeType": "YulIdentifier",
																												"src": "4869:5:3"
																											},
																											"nativeSrc": "4869:8:3",
																											"nodeType": "YulFunctionCall",
																											"src": "4869:8:3"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nativeSrc": "4862:6:3",
																										"nodeType": "YulIdentifier",
																										"src": "4862:6:3"
																									},
																									"nativeSrc": "4862:16:3",
																									"nodeType": "YulFunctionCall",
																									"src": "4862:16:3"
																								}
																							],
																							"functionName": {
																								"name": "iszero",
																								"nativeSrc": "4855:6:3",
																								"nodeType": "YulIdentifier",
																								"src": "4855:6:3"
																							},
																							"nativeSrc": "4855:24:3",
																							"nodeType": "YulFunctionCall",
																							"src": "4855:24:3"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [],
																									"functionName": {
																										"name": "returndatasize",
																										"nativeSrc": "4884:14:3",
																										"nodeType": "YulIdentifier",
																										"src": "4884:14:3"
																									},
																									"nativeSrc": "4884:16:3",
																									"nodeType": "YulFunctionCall",
																									"src": "4884:16:3"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4902:2:3",
																									"nodeType": "YulLiteral",
																									"src": "4902:2:3",
																									"type": "",
																									"value": "32"
																								}
																							],
																							"functionName": {
																								"name": "eq",
																								"nativeSrc": "4881:2:3",
																								"nodeType": "YulIdentifier",
																								"src": "4881:2:3"
																							},
																							"nativeSrc": "4881:24:3",
																							"nodeType": "YulFunctionCall",
																							"src": "4881:24:3"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4851:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "4851:3:3"
																					},
																					"nativeSrc": "4851:55:3",
																					"nodeType": "YulFunctionCall",
																					"src": "4851:55:3"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5500:4:3",
																							"nodeType": "YulLiteral",
																							"src": "5500:4:3",
																							"type": "",
																							"value": "5000"
																						},
																						{
																							"name": "token",
																							"nativeSrc": "5506:5:3",
																							"nodeType": "YulIdentifier",
																							"src": "5506:5:3"
																						},
																						{
																							"arguments": [
																								{
																									"name": "inputData",
																									"nativeSrc": "5517:9:3",
																									"nodeType": "YulIdentifier",
																									"src": "5517:9:3"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5528:2:3",
																									"nodeType": "YulLiteral",
																									"src": "5528:2:3",
																									"type": "",
																									"value": "32"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5513:3:3",
																								"nodeType": "YulIdentifier",
																								"src": "5513:3:3"
																							},
																							"nativeSrc": "5513:18:3",
																							"nodeType": "YulFunctionCall",
																							"src": "5513:18:3"
																						},
																						{
																							"arguments": [
																								{
																									"name": "inputData",
																									"nativeSrc": "5539:9:3",
																									"nodeType": "YulIdentifier",
																									"src": "5539:9:3"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "5533:5:3",
																								"nodeType": "YulIdentifier",
																								"src": "5533:5:3"
																							},
																							"nativeSrc": "5533:16:3",
																							"nodeType": "YulFunctionCall",
																							"src": "5533:16:3"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5551:1:3",
																							"nodeType": "YulLiteral",
																							"src": "5551:1:3",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5554:2:3",
																							"nodeType": "YulLiteral",
																							"src": "5554:2:3",
																							"type": "",
																							"value": "32"
																						}
																					],
																					"functionName": {
																						"name": "staticcall",
																						"nativeSrc": "5489:10:3",
																						"nodeType": "YulIdentifier",
																						"src": "5489:10:3"
																					},
																					"nativeSrc": "5489:68:3",
																					"nodeType": "YulFunctionCall",
																					"src": "5489:68:3"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4730:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "4730:3:3"
																			},
																			"nativeSrc": "4730:849:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4730:849:3"
																		},
																		"variableNames": [
																			{
																				"name": "success",
																				"nativeSrc": "4699:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "4699:7:3"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5597:27:3",
																		"nodeType": "YulAssignment",
																		"src": "5597:27:3",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5622:1:3",
																					"nodeType": "YulLiteral",
																					"src": "5622:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5616:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "5616:5:3"
																			},
																			"nativeSrc": "5616:8:3",
																			"nodeType": "YulFunctionCall",
																			"src": "5616:8:3"
																		},
																		"variableNames": [
																			{
																				"name": "domainSeparator",
																				"nativeSrc": "5597:15:3",
																				"nodeType": "YulIdentifier",
																				"src": "5597:15:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "token",
																						"nativeSrc": "4613:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "4613:5:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4620:42:3",
																						"nodeType": "YulLiteral",
																						"src": "4620:42:3",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "4609:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "4609:3:3"
																				},
																				"nativeSrc": "4609:54:3",
																				"nodeType": "YulFunctionCall",
																				"src": "4609:54:3"
																			},
																			{
																				"name": "WETH9_ADDRESS",
																				"nativeSrc": "4665:13:3",
																				"nodeType": "YulIdentifier",
																				"src": "4665:13:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4606:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "4606:2:3"
																		},
																		"nativeSrc": "4606:73:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4606:73:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4599:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4599:6:3"
																},
																"nativeSrc": "4599:81:3",
																"nodeType": "YulFunctionCall",
																"src": "4599:81:3"
															},
															"nativeSrc": "4596:1102:3",
															"nodeType": "YulIf",
															"src": "4596:1102:3"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 264,
														"isOffset": false,
														"isSlot": false,
														"src": "4665:13:3",
														"valueSize": 1
													},
													{
														"declaration": 355,
														"isOffset": false,
														"isSlot": false,
														"src": "5597:15:3",
														"valueSize": 1
													},
													{
														"declaration": 343,
														"isOffset": false,
														"isSlot": false,
														"src": "5517:9:3",
														"valueSize": 1
													},
													{
														"declaration": 343,
														"isOffset": false,
														"isSlot": false,
														"src": "5539:9:3",
														"valueSize": 1
													},
													{
														"declaration": 352,
														"isOffset": false,
														"isSlot": false,
														"src": "4699:7:3",
														"valueSize": 1
													},
													{
														"declaration": 325,
														"isOffset": false,
														"isSlot": false,
														"src": "4613:5:3",
														"valueSize": 1
													},
													{
														"declaration": 325,
														"isOffset": false,
														"isSlot": false,
														"src": "5506:5:3",
														"valueSize": 1
													}
												],
												"id": 357,
												"nodeType": "InlineAssembly",
												"src": "4355:1353:3"
											},
											{
												"condition": {
													"id": 358,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 352,
													"src": "5807:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 398,
												"nodeType": "IfStatement",
												"src": "5803:591:3",
												"trueBody": {
													"id": 397,
													"nodeType": "Block",
													"src": "5816:578:3",
													"statements": [
														{
															"expression": {
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 359,
																	"name": "inputData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "5993:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 360,
																			"name": "domainSeparator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 355,
																			"src": "6005:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 361,
																			"name": "DAI_DOMAIN_SEPARATOR",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 260,
																			"src": "6024:20:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6005:39:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 382,
																					"name": "ERC20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 906,
																					"src": "6194:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_ERC20_$906_$",
																						"typeString": "type(contract ERC20)"
																					}
																				},
																				"id": 383,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "6200:6:3",
																				"memberName": "permit",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 804,
																				"src": "6194:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
																					"typeString": "function ERC20.permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 384,
																						"name": "owner",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 327,
																						"src": "6209:5:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"id": 385,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 329,
																						"src": "6216:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"id": 386,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 331,
																						"src": "6225:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 387,
																						"name": "deadline",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 333,
																						"src": "6233:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 388,
																						"name": "v",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 335,
																						"src": "6243:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					{
																						"id": 389,
																						"name": "r",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 337,
																						"src": "6246:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					{
																						"id": 390,
																						"name": "s",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 339,
																						"src": "6249:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"id": 391,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "6208:43:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$",
																					"typeString": "tuple(address,address,uint256,uint256,uint8,bytes32,bytes32)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
																					"typeString": "function ERC20.permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$",
																					"typeString": "tuple(address,address,uint256,uint256,uint8,bytes32,bytes32)"
																				}
																			],
																			"expression": {
																				"id": 380,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "6179:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6183:10:3",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "6179:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6179:73:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "6005:247:3",
																	"trueExpression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 365,
																					"name": "IDAIPermit",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 234,
																					"src": "6078:10:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IDAIPermit_$234_$",
																						"typeString": "type(contract IDAIPermit)"
																					}
																				},
																				"id": 366,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "6089:6:3",
																				"memberName": "permit",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 233,
																				"src": "6078:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
																					"typeString": "function IDAIPermit.permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 367,
																						"name": "owner",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 327,
																						"src": "6098:5:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"id": 368,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 329,
																						"src": "6105:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"arguments": [
																							{
																								"id": 371,
																								"name": "owner",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 327,
																								"src": "6127:5:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 369,
																								"name": "token",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 325,
																								"src": "6114:5:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_ERC20_$906",
																									"typeString": "contract ERC20"
																								}
																							},
																							"id": 370,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "6120:6:3",
																							"memberName": "nonces",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 563,
																							"src": "6114:12:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																								"typeString": "function (address) view external returns (uint256)"
																							}
																						},
																						"id": 372,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "6114:19:3",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 373,
																						"name": "deadline",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 333,
																						"src": "6135:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"hexValue": "74727565",
																						"id": 374,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "bool",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6145:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						"value": "true"
																					},
																					{
																						"id": 375,
																						"name": "v",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 335,
																						"src": "6151:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					{
																						"id": 376,
																						"name": "r",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 337,
																						"src": "6154:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					{
																						"id": 377,
																						"name": "s",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 339,
																						"src": "6157:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"id": 378,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "6097:62:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint8_$_t_bytes32_$_t_bytes32_$",
																					"typeString": "tuple(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
																					"typeString": "function IDAIPermit.permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint8_$_t_bytes32_$_t_bytes32_$",
																					"typeString": "tuple(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)"
																				}
																			],
																			"expression": {
																				"id": 363,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "6063:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 364,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6067:10:3",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "6063:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6063:97:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"src": "5993:259:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 395,
															"nodeType": "ExpressionStatement",
															"src": "5993:259:3"
														},
														{
															"AST": {
																"nativeSrc": "6276:108:3",
																"nodeType": "YulBlock",
																"src": "6276:108:3",
																"statements": [
																	{
																		"nativeSrc": "6294:76:3",
																		"nodeType": "YulAssignment",
																		"src": "6294:76:3",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "gas",
																						"nativeSrc": "6310:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "6310:3:3"
																					},
																					"nativeSrc": "6310:5:3",
																					"nodeType": "YulFunctionCall",
																					"src": "6310:5:3"
																				},
																				{
																					"name": "token",
																					"nativeSrc": "6317:5:3",
																					"nodeType": "YulIdentifier",
																					"src": "6317:5:3"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6324:1:3",
																					"nodeType": "YulLiteral",
																					"src": "6324:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "inputData",
																							"nativeSrc": "6331:9:3",
																							"nodeType": "YulIdentifier",
																							"src": "6331:9:3"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6342:2:3",
																							"nodeType": "YulLiteral",
																							"src": "6342:2:3",
																							"type": "",
																							"value": "32"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6327:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "6327:3:3"
																					},
																					"nativeSrc": "6327:18:3",
																					"nodeType": "YulFunctionCall",
																					"src": "6327:18:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "inputData",
																							"nativeSrc": "6353:9:3",
																							"nodeType": "YulIdentifier",
																							"src": "6353:9:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "6347:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "6347:5:3"
																					},
																					"nativeSrc": "6347:16:3",
																					"nodeType": "YulFunctionCall",
																					"src": "6347:16:3"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6365:1:3",
																					"nodeType": "YulLiteral",
																					"src": "6365:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6368:1:3",
																					"nodeType": "YulLiteral",
																					"src": "6368:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "call",
																				"nativeSrc": "6305:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "6305:4:3"
																			},
																			"nativeSrc": "6305:65:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6305:65:3"
																		},
																		"variableNames": [
																			{
																				"name": "success",
																				"nativeSrc": "6294:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "6294:7:3"
																			}
																		]
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 343,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6331:9:3",
																	"valueSize": 1
																},
																{
																	"declaration": 343,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6353:9:3",
																	"valueSize": 1
																},
																{
																	"declaration": 352,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6294:7:3",
																	"valueSize": 1
																},
																{
																	"declaration": 325,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6317:5:3",
																	"valueSize": 1
																}
															],
															"id": 396,
															"nodeType": "InlineAssembly",
															"src": "6267:117:3"
														}
													]
												}
											},
											{
												"condition": {
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6408:8:3",
													"subExpression": {
														"id": 399,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "6409:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 413,
												"nodeType": "IfStatement",
												"src": "6404:256:3",
												"trueBody": {
													"id": 412,
													"nodeType": "Block",
													"src": "6418:242:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 402,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 325,
																		"src": "6600:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$906",
																			"typeString": "contract ERC20"
																		}
																	},
																	{
																		"id": 403,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "6607:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 404,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 329,
																		"src": "6614:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 405,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 331,
																		"src": "6623:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 406,
																		"name": "deadline",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "6631:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 407,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 335,
																		"src": "6641:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 408,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 337,
																		"src": "6644:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 409,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 339,
																		"src": "6647:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_ERC20_$906",
																			"typeString": "contract ERC20"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 401,
																	"name": "simplePermit2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "6586:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$906_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
																		"typeString": "function (contract ERC20,address,address,uint256,uint256,uint8,bytes32,bytes32)"
																	}
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6586:63:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 411,
															"nodeType": "ExpressionStatement",
															"src": "6586:63:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 322,
										"nodeType": "StructuredDocumentation",
										"src": "2995:785:3",
										"text": "@notice Permit a user to spend a given amount of\n another user's tokens via native EIP-2612 permit if possible, falling\n back to Permit2 if native permit fails or is not implemented on the token.\n @param token The token to permit spending.\n @param owner The user to permit spending from.\n @param spender The user to permit spending to.\n @param amount The amount to permit spending.\n @param deadline  The timestamp after which the signature is no longer valid.\n @param v Must produce valid secp256k1 signature from the owner along with r and s.\n @param r Must produce valid secp256k1 signature from the owner along with v and s.\n @param s Must produce valid secp256k1 signature from the owner along with r and v."
									},
									"id": 415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit2",
									"nameLocation": "3794:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3817:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "3811:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$906",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"id": 324,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 323,
														"name": "ERC20",
														"nameLocations": [
															"3811:5:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 906,
														"src": "3811:5:3"
													},
													"referencedDeclaration": 906,
													"src": "3811:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$906",
														"typeString": "contract ERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3840:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "3832:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3863:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "3855:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3855:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3888:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "3880:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3912:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "3904:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3936:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "3930:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 334,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3930:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3955:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "3947:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 336,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3947:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3974:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "3966:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3966:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:180:3"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3991:0:3"
									},
									"scope": 487,
									"src": "3785:2881:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "7521:707:3",
										"statements": [
											{
												"assignments": [
													null,
													null,
													437
												],
												"declarations": [
													null,
													null,
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "nonce",
														"nameLocation": "7542:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 485,
														"src": "7535:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														},
														"typeName": {
															"id": 436,
															"name": "uint48",
															"nodeType": "ElementaryTypeName",
															"src": "7535:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 447,
												"initialValue": {
													"arguments": [
														{
															"id": 440,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "7569:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 443,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "7584:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$906",
																		"typeString": "contract ERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20_$906",
																		"typeString": "contract ERC20"
																	}
																],
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7576:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 441,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7576:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7576:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 445,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "7592:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 438,
															"name": "PERMIT2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "7551:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IAllowanceTransfer_$211",
																"typeString": "contract IAllowanceTransfer"
															}
														},
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7559:9:3",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 138,
														"src": "7551:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_address_$returns$_t_uint160_$_t_uint48_$_t_uint48_$",
															"typeString": "function (address,address,address) view external returns (uint160,uint48,uint48)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7551:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint160_$_t_uint48_$_t_uint48_$",
														"typeString": "tuple(uint160,uint48,uint48)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7531:69:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 451,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "7639:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 458,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 419,
																					"src": "7787:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ERC20_$906",
																						"typeString": "contract ERC20"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_ERC20_$906",
																						"typeString": "contract ERC20"
																					}
																				],
																				"id": 457,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7779:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 456,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7779:7:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7779:14:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 460,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 425,
																					"src": "7823:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 461,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7830:9:3",
																				"memberName": "toUint160",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 517,
																				"src": "7823:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint160_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint160)"
																				}
																			},
																			"id": 462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7823:18:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"expression": {
																				"arguments": [
																					{
																						"id": 465,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "8016:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint48_$",
																							"typeString": "type(uint48)"
																						},
																						"typeName": {
																							"id": 464,
																							"name": "uint48",
																							"nodeType": "ElementaryTypeName",
																							"src": "8016:6:3",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_type$_t_uint48_$",
																							"typeString": "type(uint48)"
																						}
																					],
																					"id": 463,
																					"name": "type",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967269,
																					"src": "8011:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 466,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8011:12:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_meta_type_t_uint48",
																					"typeString": "type(uint48)"
																				}
																			},
																			"id": 467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "8024:3:3",
																			"memberName": "max",
																			"nodeType": "MemberAccess",
																			"src": "8011:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint48",
																				"typeString": "uint48"
																			}
																		},
																		{
																			"id": 468,
																			"name": "nonce",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 437,
																			"src": "8056:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint48",
																				"typeString": "uint48"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint48",
																				"typeString": "uint48"
																			},
																			{
																				"typeIdentifier": "t_uint48",
																				"typeString": "uint48"
																			}
																		],
																		"expression": {
																			"id": 454,
																			"name": "IAllowanceTransfer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 211,
																			"src": "7717:18:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IAllowanceTransfer_$211_$",
																				"typeString": "type(contract IAllowanceTransfer)"
																			}
																		},
																		"id": 455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7736:13:3",
																		"memberName": "PermitDetails",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 79,
																		"src": "7717:32:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_PermitDetails_$79_storage_ptr_$",
																			"typeString": "type(struct IAllowanceTransfer.PermitDetails storage pointer)"
																		}
																	},
																	"id": 469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [
																		"7772:5:3",
																		"7815:6:3",
																		"7999:10:3",
																		"8049:5:3"
																	],
																	"names": [
																		"token",
																		"amount",
																		"expiration",
																		"nonce"
																	],
																	"nodeType": "FunctionCall",
																	"src": "7717:363:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PermitDetails_$79_memory_ptr",
																		"typeString": "struct IAllowanceTransfer.PermitDetails memory"
																	}
																},
																{
																	"id": 470,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "8107:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 471,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "8145:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_PermitDetails_$79_memory_ptr",
																		"typeString": "struct IAllowanceTransfer.PermitDetails memory"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 452,
																	"name": "IAllowanceTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7658:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IAllowanceTransfer_$211_$",
																		"typeString": "type(contract IAllowanceTransfer)"
																	}
																},
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7677:12:3",
																"memberName": "PermitSingle",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 88,
																"src": "7658:31:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PermitSingle_$88_storage_ptr_$",
																	"typeString": "type(struct IAllowanceTransfer.PermitSingle storage pointer)"
																}
															},
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"7708:7:3",
																"8098:7:3",
																"8132:11:3"
															],
															"names": [
																"details",
																"spender",
																"sigDeadline"
															],
															"nodeType": "FunctionCall",
															"src": "7658:510:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PermitSingle_$88_memory_ptr",
																"typeString": "struct IAllowanceTransfer.PermitSingle memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 476,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "8195:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 477,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "8198:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 480,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 429,
																			"src": "8208:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8201:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 478,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "8201:6:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8201:9:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																],
																"expression": {
																	"id": 474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8182:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 473,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "8182:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8188:6:3",
																"memberName": "concat",
																"nodeType": "MemberAccess",
																"src": "8182:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8182:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_PermitSingle_$88_memory_ptr",
																"typeString": "struct IAllowanceTransfer.PermitSingle memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 448,
															"name": "PERMIT2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "7611:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IAllowanceTransfer_$211",
																"typeString": "contract IAllowanceTransfer"
															}
														},
														"id": 450,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7619:6:3",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 161,
														"src": "7611:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_struct$_PermitSingle_$88_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,struct IAllowanceTransfer.PermitSingle memory,bytes memory) external"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7611:610:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "7611:610:3"
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "6672:632:3",
										"text": "@notice Simple unlimited permit on the Permit2 contract.\n @param token The token to permit spending.\n @param owner The user to permit spending from.\n @param spender The user to permit spending to.\n @param amount The amount to permit spending.\n @param deadline  The timestamp after which the signature is no longer valid.\n @param v Must produce valid secp256k1 signature from the owner along with r and s.\n @param r Must produce valid secp256k1 signature from the owner along with v and s.\n @param s Must produce valid secp256k1 signature from the owner along with r and v."
									},
									"id": 486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "simplePermit2",
									"nameLocation": "7318:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7347:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "7341:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$906",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"id": 418,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 417,
														"name": "ERC20",
														"nameLocations": [
															"7341:5:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 906,
														"src": "7341:5:3"
													},
													"referencedDeclaration": 906,
													"src": "7341:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$906",
														"typeString": "contract ERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7370:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "7362:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7362:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7393:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "7385:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7385:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7418:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "7410:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7410:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "7442:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "7434:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7434:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "7466:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "7460:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 428,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7460:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "7485:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "7477:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 430,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7477:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "7504:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "7496:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 432,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7496:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7331:180:3"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7521:0:3"
									},
									"scope": 487,
									"src": "7309:919:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 488,
							"src": "422:7808:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:8199:3"
				},
				"id": 3
			},
			"contracts/contracts/lib/SafeCast160.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/lib/SafeCast160.sol",
					"exportedSymbols": {
						"SafeCast160": [
							518
						]
					},
					"id": 519,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 489,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeCast160",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 518,
							"linearizedBaseContracts": [
								518
							],
							"name": "SafeCast160",
							"nameLocation": "66:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "84:82:4",
										"text": "@notice Thrown when a valude greater than type(uint160).max is cast to uint160"
									},
									"errorSelector": "c4bd89a9",
									"id": 492,
									"name": "UnsafeCast",
									"nameLocation": "177:10:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "187:2:4"
									},
									"src": "171:19:4"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "354:98:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 500,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "368:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "381:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 502,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "381:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	}
																],
																"id": 501,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "376:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "376:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint160",
																"typeString": "type(uint160)"
															}
														},
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "390:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "376:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "368:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 510,
												"nodeType": "IfStatement",
												"src": "364:50:4",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 507,
															"name": "UnsafeCast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "402:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "402:12:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 509,
													"nodeType": "RevertStatement",
													"src": "395:19:4"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 513,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "439:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "431:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 511,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "431:7:4",
															"typeDescriptions": {}
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "431:14:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 499,
												"id": 515,
												"nodeType": "Return",
												"src": "424:21:4"
											}
										]
									},
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "196:87:4",
										"text": "@notice Safely casts uint256 to uint160\n @param value The uint256 to be cast"
									},
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint160",
									"nameLocation": "297:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "315:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "307:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:15:4"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "345:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 497,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "345:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "344:9:4"
									},
									"scope": 518,
									"src": "288:164:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 519,
							"src": "58:396:4",
							"usedErrors": [
								492
							],
							"usedEvents": []
						}
					],
					"src": "32:423:4"
				},
				"id": 4
			},
			"solmate/src/tokens/ERC20.sol": {
				"ast": {
					"absolutePath": "solmate/src/tokens/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							906
						]
					},
					"id": 907,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 520,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 521,
								"nodeType": "StructuredDocumentation",
								"src": "68:406:5",
								"text": "@notice Modern and gas efficient ERC20 + EIP-2612 implementation.\n @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\n @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\n @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it."
							},
							"fullyImplemented": true,
							"id": 906,
							"linearizedBaseContracts": [
								906
							],
							"name": "ERC20",
							"nameLocation": "492:5:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 529,
									"name": "Transfer",
									"nameLocation": "689:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "714:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "698:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "698:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "736:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "720:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "720:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "748:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "740:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:58:5"
									},
									"src": "683:73:5"
								},
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 537,
									"name": "Approval",
									"nameLocation": "768:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "793:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "777:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "816:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "800:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "800:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "833:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "825:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "825:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:64:5"
									},
									"src": "762:79:5"
								},
								{
									"constant": false,
									"functionSelector": "06fdde03",
									"id": 539,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "1045:4:5",
									"nodeType": "VariableDeclaration",
									"scope": 906,
									"src": "1031:18:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 538,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1031:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "95d89b41",
									"id": 541,
									"mutability": "mutable",
									"name": "symbol",
									"nameLocation": "1070:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 906,
									"src": "1056:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 540,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1056:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "313ce567",
									"id": 543,
									"mutability": "immutable",
									"name": "decimals",
									"nameLocation": "1106:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 906,
									"src": "1083:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 542,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1083:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 545,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "1319:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 906,
									"src": "1304:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 544,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1304:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "70a08231",
									"id": 549,
									"mutability": "mutable",
									"name": "balanceOf",
									"nameLocation": "1372:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 906,
									"src": "1337:44:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 548,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 546,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1345:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1337:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 547,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1356:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dd62ed3e",
									"id": 555,
									"mutability": "mutable",
									"name": "allowance",
									"nameLocation": "1443:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 906,
									"src": "1388:64:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 554,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 550,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1396:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1388:47:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 553,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 551,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1415:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1407:27:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 552,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1426:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 557,
									"mutability": "immutable",
									"name": "INITIAL_CHAIN_ID",
									"nameLocation": "1670:16:5",
									"nodeType": "VariableDeclaration",
									"scope": 906,
									"src": "1643:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 556,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1643:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 559,
									"mutability": "immutable",
									"name": "INITIAL_DOMAIN_SEPARATOR",
									"nameLocation": "1720:24:5",
									"nodeType": "VariableDeclaration",
									"scope": 906,
									"src": "1693:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 558,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1693:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "7ecebe00",
									"id": 563,
									"mutability": "mutable",
									"name": "nonces",
									"nameLocation": "1786:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 906,
									"src": "1751:41:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 562,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 560,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1759:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1751:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 561,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1770:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "2084:189:5",
										"statements": [
											{
												"expression": {
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 572,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 539,
														"src": "2094:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 573,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "2101:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2094:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 575,
												"nodeType": "ExpressionStatement",
												"src": "2094:12:5"
											},
											{
												"expression": {
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 576,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "2116:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 577,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "2125:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2116:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "2116:16:5"
											},
											{
												"expression": {
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 580,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "2142:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 581,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "2153:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "2142:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "2142:20:5"
											},
											{
												"expression": {
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 584,
														"name": "INITIAL_CHAIN_ID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "2173:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 585,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2192:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2198:7:5",
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "2192:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2173:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "2173:32:5"
											},
											{
												"expression": {
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 589,
														"name": "INITIAL_DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 559,
														"src": "2215:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 590,
															"name": "computeDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "2242:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2242:24:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2215:51:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "2215:51:5"
											}
										]
									},
									"id": 595,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "2016:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "2002:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 564,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2002:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "2045:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "2031:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 566,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2031:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "_decimals",
												"nameLocation": "2068:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "2062:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 568,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2062:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1992:91:5"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2084:0:5"
									},
									"scope": 906,
									"src": "1981:292:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "2541:131:5",
										"statements": [
											{
												"expression": {
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 604,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 555,
																"src": "2551:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 608,
															"indexExpression": {
																"expression": {
																	"id": 605,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2561:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2565:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2561:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2551:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 609,
														"indexExpression": {
															"id": 607,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "2573:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2551:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 610,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "2584:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2551:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 612,
												"nodeType": "ExpressionStatement",
												"src": "2551:39:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 614,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2615:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2619:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2615:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "2627:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 617,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "2636:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 613,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "2606:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2606:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "EmitStatement",
												"src": "2601:42:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2661:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 603,
												"id": 621,
												"nodeType": "Return",
												"src": "2654:11:5"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2470:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2486:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "2478:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2478:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2503:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "2495:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2495:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2477:33:5"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "2535:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 601,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2535:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2534:6:5"
									},
									"scope": 906,
									"src": "2461:211:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "2754:297:5",
										"statements": [
											{
												"expression": {
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 632,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "2764:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 635,
														"indexExpression": {
															"expression": {
																"id": 633,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2774:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2778:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2774:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2764:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 636,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "2789:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2764:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 638,
												"nodeType": "ExpressionStatement",
												"src": "2764:31:5"
											},
											{
												"id": 645,
												"nodeType": "UncheckedBlock",
												"src": "2917:58:5",
												"statements": [
													{
														"expression": {
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 639,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 549,
																	"src": "2941:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 641,
																"indexExpression": {
																	"id": 640,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 625,
																	"src": "2951:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "2941:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 642,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 627,
																"src": "2958:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2941:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 644,
														"nodeType": "ExpressionStatement",
														"src": "2941:23:5"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 647,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2999:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3003:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2999:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 649,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "3011:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 650,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "3015:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 646,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "2990:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2990:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 652,
												"nodeType": "EmitStatement",
												"src": "2985:37:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3040:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 631,
												"id": 654,
												"nodeType": "Return",
												"src": "3033:11:5"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2687:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2704:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "2696:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2696:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2716:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "2708:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2695:28:5"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "2748:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 629,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2748:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2747:6:5"
									},
									"scope": 906,
									"src": "2678:373:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "3181:468:5",
										"statements": [
											{
												"assignments": [
													668
												],
												"declarations": [
													{
														"constant": false,
														"id": 668,
														"mutability": "mutable",
														"name": "allowed",
														"nameLocation": "3199:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 716,
														"src": "3191:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 667,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3191:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 675,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 669,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "3209:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 671,
														"indexExpression": {
															"id": 670,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "3219:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3209:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 674,
													"indexExpression": {
														"expression": {
															"id": 672,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3225:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3229:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3225:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3209:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3191:45:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 676,
														"name": "allowed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "3287:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3303:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 678,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3303:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 677,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3298:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3298:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3312:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3298:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3287:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 694,
												"nodeType": "IfStatement",
												"src": "3283:80:5",
												"trueBody": {
													"expression": {
														"id": 692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"baseExpression": {
																"baseExpression": {
																	"id": 683,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 555,
																	"src": "3317:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 687,
																"indexExpression": {
																	"id": 684,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "3327:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3317:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 688,
															"indexExpression": {
																"expression": {
																	"id": 685,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3333:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3337:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3333:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "IndexAccess",
															"src": "3317:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 689,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 668,
																"src": "3347:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 690,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 662,
																"src": "3357:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3347:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3317:46:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 693,
													"nodeType": "ExpressionStatement",
													"src": "3317:46:5"
												}
											},
											{
												"expression": {
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 695,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "3374:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 697,
														"indexExpression": {
															"id": 696,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "3384:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3374:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 698,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "3393:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3374:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "3374:25:5"
											},
											{
												"id": 707,
												"nodeType": "UncheckedBlock",
												"src": "3521:58:5",
												"statements": [
													{
														"expression": {
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 701,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 549,
																	"src": "3545:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 703,
																"indexExpression": {
																	"id": 702,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 660,
																	"src": "3555:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "3545:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 704,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 662,
																"src": "3562:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3545:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 706,
														"nodeType": "ExpressionStatement",
														"src": "3545:23:5"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 709,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "3603:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 710,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "3609:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 711,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "3613:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 708,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3594:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3594:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 713,
												"nodeType": "EmitStatement",
												"src": "3589:31:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3638:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 666,
												"id": 715,
												"nodeType": "Return",
												"src": "3631:11:5"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3066:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3096:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "3088:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3088:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3118:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "3110:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3110:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3138:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "3130:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3130:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3078:72:5"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "3175:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 664,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3175:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3174:6:5"
									},
									"scope": 906,
									"src": "3057:592:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "4027:1294:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 735,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "4045:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 736,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4057:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4063:9:5",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4057:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4045:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5045524d49545f444541444c494e455f45585049524544",
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4074:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e",
																"typeString": "literal_string \"PERMIT_DEADLINE_EXPIRED\""
															},
															"value": "PERMIT_DEADLINE_EXPIRED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e",
																"typeString": "literal_string \"PERMIT_DEADLINE_EXPIRED\""
															}
														],
														"id": 734,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4037:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:63:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 741,
												"nodeType": "ExpressionStatement",
												"src": "4037:63:5"
											},
											{
												"id": 796,
												"nodeType": "UncheckedBlock",
												"src": "4241:1027:5",
												"statements": [
													{
														"assignments": [
															743
														],
														"declarations": [
															{
																"constant": false,
																"id": 743,
																"mutability": "mutable",
																"name": "recoveredAddress",
																"nameLocation": "4273:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 796,
																"src": "4265:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"typeName": {
																	"id": 742,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4265:7:5",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 773,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "1901",
																					"id": 748,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4392:10:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																						"typeString": "literal_string hex\"1901\""
																					},
																					"value": "\u0019\u0001"
																				},
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 749,
																						"name": "DOMAIN_SEPARATOR",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 819,
																						"src": "4428:16:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																							"typeString": "function () view returns (bytes32)"
																						}
																					},
																					"id": 750,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4428:18:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
																											"id": 755,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "string",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "4602:84:5",
																											"typeDescriptions": {
																												"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
																												"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
																											},
																											"value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
																												"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
																											}
																										],
																										"id": 754,
																										"name": "keccak256",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967288,
																										"src": "4555:9:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																											"typeString": "function (bytes memory) pure returns (bytes32)"
																										}
																									},
																									"id": 756,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "4555:165:5",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								},
																								{
																									"id": 757,
																									"name": "owner",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 719,
																									"src": "4754:5:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"id": 758,
																									"name": "spender",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 721,
																									"src": "4793:7:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"id": 759,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 723,
																									"src": "4834:5:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								{
																									"id": 763,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "UnaryOperation",
																									"operator": "++",
																									"prefix": false,
																									"src": "4873:15:5",
																									"subExpression": {
																										"baseExpression": {
																											"id": 760,
																											"name": "nonces",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 563,
																											"src": "4873:6:5",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																												"typeString": "mapping(address => uint256)"
																											}
																										},
																										"id": 762,
																										"indexExpression": {
																											"id": 761,
																											"name": "owner",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 719,
																											"src": "4880:5:5",
																											"typeDescriptions": {
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"nodeType": "IndexAccess",
																										"src": "4873:13:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								{
																									"id": 764,
																									"name": "deadline",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 725,
																									"src": "4922:8:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									},
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"id": 752,
																									"name": "abi",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967295,
																									"src": "4511:3:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_abi",
																										"typeString": "abi"
																									}
																								},
																								"id": 753,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"memberLocation": "4515:6:5",
																								"memberName": "encode",
																								"nodeType": "MemberAccess",
																								"src": "4511:10:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																									"typeString": "function () pure returns (bytes memory)"
																								}
																							},
																							"id": 765,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "4511:449:5",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						],
																						"id": 751,
																						"name": "keccak256",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967288,
																						"src": "4472:9:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																							"typeString": "function (bytes memory) pure returns (bytes32)"
																						}
																					},
																					"id": 766,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4472:514:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																						"typeString": "literal_string hex\"1901\""
																					},
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"expression": {
																					"id": 746,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "4350:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 747,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "4354:12:5",
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "4350:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4350:658:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 745,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "4319:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4319:707:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 769,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "5044:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 770,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "5063:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 771,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 731,
																	"src": "5082:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 744,
																"name": "ecrecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967290,
																"src": "4292:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
																}
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4292:805:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4265:832:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 775,
																			"name": "recoveredAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 743,
																			"src": "5120:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 778,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5148:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 777,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5140:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 776,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5140:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 779,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5140:10:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "5120:30:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 781,
																			"name": "recoveredAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 743,
																			"src": "5154:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 782,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 719,
																			"src": "5174:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "5154:25:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5120:59:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "494e56414c49445f5349474e4552",
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5181:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c",
																		"typeString": "literal_string \"INVALID_SIGNER\""
																	},
																	"value": "INVALID_SIGNER"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c",
																		"typeString": "literal_string \"INVALID_SIGNER\""
																	}
																],
																"id": 774,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5112:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5112:86:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 787,
														"nodeType": "ExpressionStatement",
														"src": "5112:86:5"
													},
													{
														"expression": {
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 788,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 555,
																		"src": "5213:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 791,
																	"indexExpression": {
																		"id": 789,
																		"name": "recoveredAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 743,
																		"src": "5223:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5213:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 792,
																"indexExpression": {
																	"id": 790,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 721,
																	"src": "5241:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5213:36:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 793,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 723,
																"src": "5252:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5213:44:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 795,
														"nodeType": "ExpressionStatement",
														"src": "5213:44:5"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 798,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "5292:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 799,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "5299:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 800,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "5308:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 797,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "5283:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5283:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 802,
												"nodeType": "EmitStatement",
												"src": "5278:36:5"
											}
										]
									},
									"functionSelector": "d505accf",
									"id": 804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3847:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3871:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "3863:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3894:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "3886:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3886:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3919:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "3911:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3911:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3942:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "3934:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3934:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3966:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "3960:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 726,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3960:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3985:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "3977:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 728,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3977:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "4004:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "3996:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 730,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3853:158:5"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4027:0:5"
									},
									"scope": 906,
									"src": "3838:1483:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "5393:111:5",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 812,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 809,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5410:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5416:7:5",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "5410:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 811,
															"name": "INITIAL_CHAIN_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "5427:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5410:33:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 814,
															"name": "computeDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "5473:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5473:24:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5410:87:5",
													"trueExpression": {
														"id": 813,
														"name": "INITIAL_DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 559,
														"src": "5446:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 808,
												"id": 817,
												"nodeType": "Return",
												"src": "5403:94:5"
											}
										]
									},
									"functionSelector": "3644e515",
									"id": 819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "5336:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5352:2:5"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "5384:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 806,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5384:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5383:9:5"
									},
									"scope": 906,
									"src": "5327:177:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 848,
										"nodeType": "Block",
										"src": "5584:372:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																			"id": 828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5682:84:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																				"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																			},
																			"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																				"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																			}
																		],
																		"id": 827,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "5672:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5672:95:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 833,
																					"name": "name",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 539,
																					"src": "5805:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				],
																				"id": 832,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5799:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": {
																					"id": 831,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "5799:5:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5799:11:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_storage_ptr",
																				"typeString": "bytes storage pointer"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_storage_ptr",
																				"typeString": "bytes storage pointer"
																			}
																		],
																		"id": 830,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "5789:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5789:22:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "31",
																			"id": 837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5843:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																				"typeString": "literal_string \"1\""
																			},
																			"value": "1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																				"typeString": "literal_string \"1\""
																			}
																		],
																		"id": 836,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "5833:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5833:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 839,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "5869:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5875:7:5",
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "5869:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 843,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5912:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ERC20_$906",
																				"typeString": "contract ERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_ERC20_$906",
																				"typeString": "contract ERC20"
																			}
																		],
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5904:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 841,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5904:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5904:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 825,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "5640:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 826,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5644:6:5",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "5640:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5640:295:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 824,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "5613:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5613:336:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 823,
												"id": 847,
												"nodeType": "Return",
												"src": "5594:355:5"
											}
										]
									},
									"id": 849,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeDomainSeparator",
									"nameLocation": "5519:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5541:2:5"
									},
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "5575:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 821,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5575:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5574:9:5"
									},
									"scope": 906,
									"src": "5510:446:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "6210:265:5",
										"statements": [
											{
												"expression": {
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 856,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "6220:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 857,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "6235:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6220:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 859,
												"nodeType": "ExpressionStatement",
												"src": "6220:21:5"
											},
											{
												"id": 866,
												"nodeType": "UncheckedBlock",
												"src": "6363:58:5",
												"statements": [
													{
														"expression": {
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 860,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 549,
																	"src": "6387:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 862,
																"indexExpression": {
																	"id": 861,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 851,
																	"src": "6397:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "6387:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 863,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "6404:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6387:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 865,
														"nodeType": "ExpressionStatement",
														"src": "6387:23:5"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6453:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6445:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 868,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6445:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6445:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 872,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "6457:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 873,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "6461:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 867,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "6436:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6436:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 875,
												"nodeType": "EmitStatement",
												"src": "6431:37:5"
											}
										]
									},
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "6159:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6173:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "6165:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6165:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6185:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "6177:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6177:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6164:28:5"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6210:0:5"
									},
									"scope": 906,
									"src": "6150:325:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "6543:266:5",
										"statements": [
											{
												"expression": {
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 884,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "6553:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 886,
														"indexExpression": {
															"id": 885,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "6563:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6553:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 887,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "6572:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6553:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 889,
												"nodeType": "ExpressionStatement",
												"src": "6553:25:5"
											},
											{
												"id": 894,
												"nodeType": "UncheckedBlock",
												"src": "6697:56:5",
												"statements": [
													{
														"expression": {
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 890,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "6721:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 891,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "6736:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6721:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 893,
														"nodeType": "ExpressionStatement",
														"src": "6721:21:5"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 896,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "6777:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6791:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6783:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 897,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6783:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6783:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 901,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "6795:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 895,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "6768:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6768:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 903,
												"nodeType": "EmitStatement",
												"src": "6763:39:5"
											}
										]
									},
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "6490:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6504:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "6496:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6496:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6518:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "6510:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6510:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6495:30:5"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6543:0:5"
									},
									"scope": 906,
									"src": "6481:328:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 907,
							"src": "474:6337:5",
							"usedErrors": [],
							"usedEvents": [
								529,
								537
							]
						}
					],
					"src": "42:6770:5"
				},
				"id": 5
			}
		}
	}
}