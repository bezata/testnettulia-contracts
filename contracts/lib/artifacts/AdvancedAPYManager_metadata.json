{
	"compiler": {
		"version": "0.8.20+commit.a1b79de6"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "baseAPY",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "loanAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "durationSeconds",
						"type": "uint256"
					}
				],
				"name": "calculateAPY",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "durationBonusFactor",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "riskPremiumRates",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "riskPremiumThresholds",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_baseAPY",
						"type": "uint256"
					}
				],
				"name": "setBaseAPY",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_factor",
						"type": "uint256"
					}
				],
				"name": "setDurationBonusFactor",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "_thresholds",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "_rates",
						"type": "uint256[]"
					}
				],
				"name": "setRiskPremiums",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Manages APY adjustments based on loan characteristics such as amount and duration.",
			"kind": "dev",
			"methods": {
				"calculateAPY(uint256,uint256)": {
					"params": {
						"durationSeconds": "The duration of the loan in seconds.",
						"loanAmount": "The amount of the loan."
					},
					"returns": {
						"_0": "uint256 Calculated APY in basis points."
					}
				},
				"setBaseAPY(uint256)": {
					"params": {
						"_baseAPY": "The new base APY in basis points."
					}
				},
				"setDurationBonusFactor(uint256)": {
					"params": {
						"_factor": "The new duration bonus factor in basis points per year."
					}
				},
				"setRiskPremiums(uint256[],uint256[])": {
					"params": {
						"_rates": "Array of risk premiums corresponding to the thresholds.",
						"_thresholds": "Array of loan amount thresholds."
					}
				}
			},
			"title": "AdvancedAPYManager",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"calculateAPY(uint256,uint256)": {
					"notice": "Calculates the current APY based on loan amount and duration."
				},
				"constructor": {
					"notice": "Initializes the contract with the lending token."
				},
				"setBaseAPY(uint256)": {
					"notice": "Allows the owner to adjust the base APY rate."
				},
				"setDurationBonusFactor(uint256)": {
					"notice": "Allows the owner to adjust the duration bonus factor."
				},
				"setRiskPremiums(uint256[],uint256[])": {
					"notice": "Sets the risk premium thresholds and rates."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/contracts/lib/AdvancedAPYManager.sol": "AdvancedAPYManager"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": [],
		"viaIR": true
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
			"license": "MIT",
			"urls": [
				"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
				"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"contracts/contracts/lib/AdvancedAPYManager.sol": {
			"keccak256": "0x9b5a88ed41b2cd2b2337ec81a9f03acae0f80dfb33ab52d562fdd39728c3a4ed",
			"license": "MIT",
			"urls": [
				"bzz-raw://5aef139621b3faf60ae930062f18b093278c8c29b2cdb069f5d09f5b711da0e4",
				"dweb:/ipfs/QmV6gxpfU8goAaY3QMX7X5BJkTfc2o8qzxevxvJUrpXzgx"
			]
		}
	},
	"version": 1
}