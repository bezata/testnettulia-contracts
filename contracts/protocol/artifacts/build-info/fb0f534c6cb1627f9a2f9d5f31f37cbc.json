{
	"id": "fb0f534c6cb1627f9a2f9d5f31f37cbc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"settings": {
			"viaIR": true,
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/contracts/protocol/TuliaFlashPool.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\";\nimport \"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\";\nimport \"../interfaces/IPoolOrganizer.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"../interfaces/IFlashPoolRewardManager.sol\";\n\n/// @title TuliaFlashPool\n/// @dev Implements flash loan functionalities with integrated fee management.\n/// This contract allows issuing flash loans backed by ERC20 tokens.\ncontract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {\n\n\n    /// @notice ERC20 asset used for flash loans\n    IERC20 public asset;\n    uint256 public loanAmount;\n    IPoolOrganizer public poolOrganizer;\n    IFlashPoolRewardManager public flashPoolRewardManager;\n\n    bytes32 public constant LENDER_ROLE = keccak256(\"LENDER_ROLE\");\n    address public lender; // Address of the lender who funded the pool\n\n    /// @notice Initial fee rate for flash loans issued by this pool\n    uint256 public flashLoanFeeRate;\n\n    /// @notice Event emitted when a flash loan is executed\n    /// @param receiver The borrower contract\n    /// @param token The ERC20 token for the loan\n    /// @param amount The loan amount\n    /// @param fee The loan fee\n    event FlashLoanExecuted(\n        address indexed receiver,\n        address indexed token,\n        uint256 amount,\n        uint256 fee\n    );\n\n    /// @dev Enumerates the possible states of a loan.\n    enum FlashLoanState {\n        UNINITIALIZED,\n        FUNDED,\n        CLOSED\n    }\n\n    FlashLoanState public state; // Current state of the loan.\n\n    /// @notice Event emitted when a loan is funded\n    /// @param lender The address of the lender\n    /// @param amount The amount of the loan\n    event LoanFunded(address indexed lender, uint256 amount);\n    event LoanClosed(address indexed lender, uint256 amount);\n\n    /// @notice Constructs the TuliaFlashPool lending pool\n    /// @param _asset The ERC20 token asset used for flash loans\n    /// @param _flashLoanFeeRate The initial fee rate for flash loans issued by this pool\n    /// @param _poolOrganizer The Pool Organizer contract\n    /// @param _flashPoolRewardManager The FlashPool Reward Manager contract\n    /// @param _loanAmount The amount of the loan to be funded\n    constructor(\n        IERC20 _asset,\n        uint256 _flashLoanFeeRate,\n        IPoolOrganizer _poolOrganizer,\n        IFlashPoolRewardManager _flashPoolRewardManager,\n        uint256 _loanAmount\n    ) {\n        asset = _asset;\n        flashLoanFeeRate = _flashLoanFeeRate;\n        poolOrganizer = _poolOrganizer;\n        flashPoolRewardManager = _flashPoolRewardManager;   \n        \n        loanAmount = _loanAmount;\n        state = FlashLoanState.UNINITIALIZED;\n    }\n\n    /// @notice Allows a lender to fund the pool directly with the specified loan amount\n    function fundLoan() external nonReentrant {\n        require(state == FlashLoanState.UNINITIALIZED, \"Loan is already funded\");\n        lender = msg.sender;\n\n        // Check if lender has enough balance\n        require(asset.balanceOf(msg.sender) >= loanAmount, \"Insufficient balance to fund the loan\");\n\n        // Check if the contract is allowed to transfer tokens\n        require(asset.allowance(msg.sender, address(this)) >= loanAmount, \"Allowance not set for this contract\");\n\n        // Transfer tokens to the contract\n        asset.transferFrom(msg.sender, address(this), loanAmount);\n\n        // Register the pool\n        flashPoolRewardManager.registerPool(address(this), address(asset), loanAmount);\n\n        // Grant role\n        _grantRole(LENDER_ROLE, msg.sender);\n        // Update state\n        state = FlashLoanState.FUNDED;\n\n        emit LoanFunded(msg.sender, loanAmount);\n    }\n\n    /// @notice Returns the maximum loanable amount of the asset\n    /// @param token The ERC20 token address for which the max loan amount is queried\n    /// @return The maximum amount available for a flash loan\n    function maxFlashLoan(address token)\n        public\n        view\n        override\n        returns (uint256)\n    {\n        return token == address(asset) ? asset.balanceOf(address(this)) : 0;\n    }\n\n    /// @notice Calculates the flash loan fee for a given loan amount\n    /// @param token The ERC20 token for which the fee is calculated\n    /// @param amount The amount of the loan\n    /// @return The calculated fee amount\n    function flashFee(address token, uint256 amount)\n        public\n        view\n        override\n        returns (uint256)\n    {\n        require(token == address(asset), \"Unsupported token\");\n        uint256 userFee = (amount * flashLoanFeeRate) / 10000;\n        return userFee;\n    }\n\n    /// @notice Initiates a flash loan transaction\n    /// @param receiver The borrower contract that must implement the IERC3156FlashBorrower interface\n    /// @param token The ERC20 token to be borrowed\n    /// @param amount The amount of tokens to borrow\n    /// @param data Arbitrary data passed to the borrower's `onFlashLoan` method\n    /// @return true if the flash loan is paid back successfully within the same transaction\n    function flashLoan(\n        IERC3156FlashBorrower receiver,\n        address token,\n        uint256 amount,\n        bytes calldata data\n    ) external override nonReentrant returns (bool) {\n        require(state == FlashLoanState.FUNDED, \"Pool not funded\");\n        return _executeFlashLoan(receiver, token, amount, data);\n    }\n\n    /// @notice Allows the lender to close the loan and withdraw their funds if no active flash loans are present\n    function closeLoan() external nonReentrant {\n        require(hasRole(LENDER_ROLE, msg.sender), \"Caller is not the lender\");\n        require(\n            state == FlashLoanState.FUNDED,\n            \"Loan is not in a funded state\"\n        );\n\n        uint256 amount = asset.balanceOf(address(this));\n        require(amount > 0, \"No funds to withdraw\");\n\n        state = FlashLoanState.CLOSED;\n        poolOrganizer.updateLoanState(\n            address(this),\n            IPoolOrganizer.LoanState.CLOSED\n        );\n        poolOrganizer.deregisterPool(address(this));\n\n        asset.transfer(lender, amount);\n\n        emit LoanClosed(lender, amount);\n    }\n\n    /// @dev Internal function to execute a flash loan transaction\n    /// Handles the lifecycle of a flash loan including fee calculation, asset transfer, and repayment check\n    /// @param receiver The borrower contract\n    /// @param token The ERC20 token for the loan\n    /// @param amount The loan amount\n    /// @param data Data payload for the borrower\n    /// @return true if the transaction is successful\n    function _executeFlashLoan(\n        IERC3156FlashBorrower receiver,\n        address token,\n        uint256 amount,\n        bytes calldata data\n    ) internal returns (bool) {\n        require(token == address(asset), \"Unsupported token\");\n\n        uint256 totalFee = flashFee(token, amount);\n        uint256 balanceBefore = asset.balanceOf(address(this));\n\n        asset.transfer(address(receiver), amount);\n\n        require(\n            receiver.onFlashLoan(msg.sender, token, amount, totalFee, data) ==\n                keccak256(\"ERC3156FlashBorrower.onFlashLoan\"),\n            \"Flash loan failed\"\n        );\n\n        uint256 amountOwed = amount + totalFee;\n        asset.transferFrom(address(receiver), address(this), amountOwed);\n\n        require(\n            asset.balanceOf(address(this)) >= balanceBefore,\n            \"Flash loan repayment failed\"\n        );\n\n        // Transfer the repaid amount and fee back to the lender\n        asset.transfer(lender, totalFee);\n\n        emit FlashLoanExecuted(address(receiver), token, amount, totalFee);\n        return true;\n    }\n\n    /// @notice Returns the current state of the flash loan\n    /// @return The current state of the flash loan\n    function getFlashLoanState() external view returns (FlashLoanState) {\n        return state;\n    }\n}\n"
			},
			"contracts/contracts/interfaces/IFlashPoolRewardManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\ninterface IFlashPoolRewardManager {\r\n    /// @notice Registers a pool to start accruing rewards, initializing the reward mechanism.\r\n    /// @param pool The address of the pool to register.\r\n    /// @param rewardToken The ERC20 token used as the reward token.\r\n    function registerPool(address pool, address rewardToken, uint256 loanAmount) external returns (bool);\r\n\r\n    /// @notice Claims rewards for the lender from a specific pool.\r\n    /// @param pool The address of the flash pool.\r\n    function claimRewards(address pool) external;\r\n\r\n    /// @notice Calculates claimable interest for the lender.\r\n    /// @param pool The address of the pool.\r\n    /// @return uint256 The amount of interest that can be claimed.\r\n    function calculateClaimableInterest(address pool) external view returns (uint256);\r\n\r\n    /// @notice Accrues rewards for a specific pool based on the current APY and block difference.\r\n    /// @param pool The address of the pool for which to accrue rewards.\r\n    function accrueRewards(address pool) external;\r\n\r\n\r\n    /// @notice Deregisters a pool, stopping it from accruing further rewards.\r\n    /// @param pool The address of the pool to deregister.\r\n    function deregisterPool(address pool) external;\r\n\r\n    /// @notice Returns the reward details for a specific pool.\r\n    /// @param pool The address of the pool.\r\n    /// @return rewardToken The token used for rewards.\r\n    /// @return rewardsAccrued Total accrued rewards.\r\n    /// @return lastRewardBlock Last block number when rewards were calculated.\r\n    /// @return rewardRate Dynamic reward rate based on APY.\r\n    /// @return lenderClaimedRewards Amount of rewards claimed by the lender.\r\n    /// @return isAccruing Flag to indicate if the pool is accruing rewards.\r\n    function getRewardDetails(address pool) \r\n        external \r\n        view \r\n        returns (\r\n            address rewardToken,\r\n            uint256 rewardsAccrued,\r\n            uint256 lastRewardBlock,\r\n            uint256 rewardRate,\r\n            uint256 lenderClaimedRewards,\r\n            bool isAccruing\r\n        );\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"contracts/contracts/interfaces/IPoolOrganizer.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\n/// @title IPoolOrganizer interface\r\n/// @notice Interface for the Pool Organizer contract managing pools, vaults, and rewards.\r\ninterface IPoolOrganizer {\r\n    enum PoolType { STANDARD, FLASH_LOAN }\r\n\r\n    enum LoanState {\r\n        CREATED,\r\n        PENDING,\r\n        ACTIVE,\r\n        DEFAULTED,\r\n        REPAID,\r\n        CLOSED,\r\n        FUNDED\r\n    }\r\n\r\n \r\n    struct PoolDetails {\r\n        address lender;\r\n        address borrower;\r\n        uint256 creationTime;\r\n        address vault;\r\n        IERC20 loanToken;\r\n        IERC20 assetToken;\r\n        IERC20 repaymentToken;\r\n        uint256 loanAmount;\r\n        uint256 interestRate;\r\n        uint256 repaymentPeriod;\r\n        PoolType poolType;\r\n        bool funded;\r\n        LoanState loanState;\r\n        address pool;\r\n    }\r\n\r\n    /// @notice Registers a new pool\r\n    /// @param pool The address of the pool contract\r\n    /// @param lender The address of the lender\r\n    /// @param borrower The address of the borrower\r\n    /// @param vault The address of the vault associated with the pool\r\n    /// @param loanToken The token to be loaned\r\n    /// @param assetToken The token used as collateral\r\n    /// @param repaymentToken The token used for loan repayment\r\n    /// @param loanAmount The amount of the loan\r\n    /// @param interestRate The interest rate of the loan\r\n    /// @param repaymentPeriod The loan repayment period\r\n    /// @param poolType The type of the pool (standard or flash loan)\r\n    function registerPool(\r\n        address pool,\r\n        address lender,\r\n        address borrower,\r\n        address vault,\r\n        IERC20 loanToken,\r\n        IERC20 assetToken,\r\n        IERC20 repaymentToken,\r\n        uint256 loanAmount,\r\n        uint256 interestRate,\r\n        uint256 repaymentPeriod,\r\n        PoolType poolType\r\n    \r\n    ) external;\r\n\r\n    /// @notice Deregisters a pool\r\n    /// @param pool The address of the pool to deregister\r\n    function deregisterPool(address pool) external;\r\n\r\n    /// @notice Gets the total number of registered pools\r\n    /// @return The total number of registered pools\r\n    function getTotalPools() external view returns (uint256);\r\n\r\n    /// @notice Retrieves all pool addresses associated with a specific lender\r\n    /// @param lender The address of the lender\r\n    /// @return An array of pool addresses\r\n    function getPoolsByLender(address lender) external view returns (address[] memory);\r\n\r\n    /// @notice Retrieves the loan state of a specific pool\r\n    /// @param pool The address of the pool\r\n    /// @return The loan state of the specified pool\r\n    function getLoanState(address pool) external view returns (LoanState);\r\n\r\n    /// @notice Updates the loan state of a specific pool\r\n    /// @param pool The address of the pool\r\n    /// @param newState The new state of the loan\r\n    function updateLoanState(address pool, LoanState newState) external;\r\n\r\n    /// @notice Retrieves detailed information about a specific pool\r\n    /// @param pool The address of the pool\r\n    /// @return The details of the specified pool\r\n    function getPoolDetails(address pool) external view returns (PoolDetails memory);\r\n\r\n    /// @notice Retrieves the associated vault address for a given pool\r\n    /// @param pool The address of the pool\r\n    /// @return The address of the linked vault\r\n    function getVaultForPool(address pool) external view returns (address);\r\n\r\n    /// @notice Grants factory access to manage pools\r\n    /// @param factoryAddress The address of the factory to be granted access\r\n    function grantFactoryAccess(address factoryAddress) external;\r\n\r\n    /// @notice Registers a vault for a specific pool\r\n    /// @param pool The address of the pool\r\n    /// @param vault The address of the vault\r\n    function registerVault(address pool, address vault) external;\r\n\r\n    /// @notice Registers manager contracts for managing vaults and rewards\r\n    /// @param _vaultManager The address of the VaultManager contract\r\n    /// @param _rewardManager The address of the RewardManager contract\r\n    function registerManagers(address _vaultManager, address _rewardManager) external;\r\n\r\n    /// @notice Marks a pool as funded\r\n    /// @param pool The address of the pool to mark as funded\r\n    function markPoolAsFunded(address pool) external;\r\n     \r\n    /// @notice Sets the borrower for a specified pool\r\n    /// @param pool The address of the pool\r\n    /// @param newBorrower The address of the new borrower\r\n    function setBorrowerForPool(address pool, address newBorrower) external;\r\n}\r\n"
			},
			"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC3156FlashBorrower.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC3156 FlashBorrower, as defined in\n * https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n */\ninterface IERC3156FlashBorrower {\n    /**\n     * @dev Receive a flash loan.\n     * @param initiator The initiator of the loan.\n     * @param token The loan currency.\n     * @param amount The amount of tokens lent.\n     * @param fee The additional amount of tokens to repay.\n     * @param data Arbitrary data structure, intended to contain user-defined parameters.\n     * @return The keccak256 hash of \"ERC3156FlashBorrower.onFlashLoan\"\n     */\n    function onFlashLoan(\n        address initiator,\n        address token,\n        uint256 amount,\n        uint256 fee,\n        bytes calldata data\n    ) external returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC3156FlashLender.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC3156FlashBorrower} from \"./IERC3156FlashBorrower.sol\";\n\n/**\n * @dev Interface of the ERC3156 FlashLender, as defined in\n * https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n */\ninterface IERC3156FlashLender {\n    /**\n     * @dev The amount of currency available to be lended.\n     * @param token The loan currency.\n     * @return The amount of `token` that can be borrowed.\n     */\n    function maxFlashLoan(address token) external view returns (uint256);\n\n    /**\n     * @dev The fee to be charged for a given loan.\n     * @param token The loan currency.\n     * @param amount The amount of tokens lent.\n     * @return The amount of `token` to be charged for the loan, on top of the returned principal.\n     */\n    function flashFee(address token, uint256 amount) external view returns (uint256);\n\n    /**\n     * @dev Initiate a flash loan.\n     * @param receiver The receiver of the tokens in the loan, and the receiver of the callback.\n     * @param token The loan currency.\n     * @param amount The amount of tokens lent.\n     * @param data Arbitrary data structure, intended to contain user-defined parameters.\n     */\n    function flashLoan(\n        IERC3156FlashBorrower receiver,\n        address token,\n        uint256 amount,\n        bytes calldata data\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol": {
				"IERC3156FlashBorrower": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initiator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onFlashLoan",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC3156 FlashBorrower, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].",
						"kind": "dev",
						"methods": {
							"onFlashLoan(address,address,uint256,uint256,bytes)": {
								"details": "Receive a flash loan.",
								"params": {
									"amount": "The amount of tokens lent.",
									"data": "Arbitrary data structure, intended to contain user-defined parameters.",
									"fee": "The additional amount of tokens to repay.",
									"initiator": "The initiator of the loan.",
									"token": "The loan currency."
								},
								"returns": {
									"_0": "The keccak256 hash of \"ERC3156FlashBorrower.onFlashLoan\""
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onFlashLoan(address,address,uint256,uint256,bytes)": "23e30c8b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onFlashLoan\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC3156 FlashBorrower, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\",\"kind\":\"dev\",\"methods\":{\"onFlashLoan(address,address,uint256,uint256,bytes)\":{\"details\":\"Receive a flash loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"data\":\"Arbitrary data structure, intended to contain user-defined parameters.\",\"fee\":\"The additional amount of tokens to repay.\",\"initiator\":\"The initiator of the loan.\",\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The keccak256 hash of \\\"ERC3156FlashBorrower.onFlashLoan\\\"\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":\"IERC3156FlashBorrower\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x9f9e6dba43fe0775c400aa384375f1f503efaf733a40187169fdfc195f5ea6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff5fe5fac5e4ecbf9fcd34c42b6d58d1af150263dfe07bc6785a59329dd1e475\",\"dweb:/ipfs/QmX1EhNKKL6n6RFrLLAYh6Uf3itkozjSHyGFs9DqwW4Rzy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol": {
				"IERC3156FlashLender": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "flashFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC3156FlashBorrower",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flashLoan",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "maxFlashLoan",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC3156 FlashLender, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].",
						"kind": "dev",
						"methods": {
							"flashFee(address,uint256)": {
								"details": "The fee to be charged for a given loan.",
								"params": {
									"amount": "The amount of tokens lent.",
									"token": "The loan currency."
								},
								"returns": {
									"_0": "The amount of `token` to be charged for the loan, on top of the returned principal."
								}
							},
							"flashLoan(address,address,uint256,bytes)": {
								"details": "Initiate a flash loan.",
								"params": {
									"amount": "The amount of tokens lent.",
									"data": "Arbitrary data structure, intended to contain user-defined parameters.",
									"receiver": "The receiver of the tokens in the loan, and the receiver of the callback.",
									"token": "The loan currency."
								}
							},
							"maxFlashLoan(address)": {
								"details": "The amount of currency available to be lended.",
								"params": {
									"token": "The loan currency."
								},
								"returns": {
									"_0": "The amount of `token` that can be borrowed."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"flashFee(address,uint256)": "d9d98ce4",
							"flashLoan(address,address,uint256,bytes)": "5cffe9de",
							"maxFlashLoan(address)": "613255ab"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"flashFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC3156FlashBorrower\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"maxFlashLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC3156 FlashLender, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\",\"kind\":\"dev\",\"methods\":{\"flashFee(address,uint256)\":{\"details\":\"The fee to be charged for a given loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The amount of `token` to be charged for the loan, on top of the returned principal.\"}},\"flashLoan(address,address,uint256,bytes)\":{\"details\":\"Initiate a flash loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"data\":\"Arbitrary data structure, intended to contain user-defined parameters.\",\"receiver\":\"The receiver of the tokens in the loan, and the receiver of the callback.\",\"token\":\"The loan currency.\"}},\"maxFlashLoan(address)\":{\"details\":\"The amount of currency available to be lended.\",\"params\":{\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The amount of `token` that can be borrowed.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":\"IERC3156FlashLender\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x9f9e6dba43fe0775c400aa384375f1f503efaf733a40187169fdfc195f5ea6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff5fe5fac5e4ecbf9fcd34c42b6d58d1af150263dfe07bc6785a59329dd1e475\",\"dweb:/ipfs/QmX1EhNKKL6n6RFrLLAYh6Uf3itkozjSHyGFs9DqwW4Rzy\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":{\"keccak256\":\"0x95d9eb59f21e885406d0e28b0510f9e1a0e7b4abe6636b5c966682927c65cfdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1cbff4d620ab51abe0c4ede9e4395bae53bcc3a7edd74e0eb08d7bdef155306\",\"dweb:/ipfs/QmQcnBK28GDH4S5uXWqAcdRY1KcusXH4CxAqp87rYLir6n\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 556,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/interfaces/IFlashPoolRewardManager.sol": {
				"IFlashPoolRewardManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "accrueRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "calculateClaimableInterest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "claimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "deregisterPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "getRewardDetails",
							"outputs": [
								{
									"internalType": "address",
									"name": "rewardToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rewardsAccrued",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lenderClaimedRewards",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isAccruing",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rewardToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "loanAmount",
									"type": "uint256"
								}
							],
							"name": "registerPool",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"accrueRewards(address)": {
								"params": {
									"pool": "The address of the pool for which to accrue rewards."
								}
							},
							"calculateClaimableInterest(address)": {
								"params": {
									"pool": "The address of the pool."
								},
								"returns": {
									"_0": "uint256 The amount of interest that can be claimed."
								}
							},
							"claimRewards(address)": {
								"params": {
									"pool": "The address of the flash pool."
								}
							},
							"deregisterPool(address)": {
								"params": {
									"pool": "The address of the pool to deregister."
								}
							},
							"getRewardDetails(address)": {
								"params": {
									"pool": "The address of the pool."
								},
								"returns": {
									"isAccruing": "Flag to indicate if the pool is accruing rewards.",
									"lastRewardBlock": "Last block number when rewards were calculated.",
									"lenderClaimedRewards": "Amount of rewards claimed by the lender.",
									"rewardRate": "Dynamic reward rate based on APY.",
									"rewardToken": "The token used for rewards.",
									"rewardsAccrued": "Total accrued rewards."
								}
							},
							"registerPool(address,address,uint256)": {
								"params": {
									"pool": "The address of the pool to register.",
									"rewardToken": "The ERC20 token used as the reward token."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"accrueRewards(address)": "3d39955c",
							"calculateClaimableInterest(address)": "51b2d521",
							"claimRewards(address)": "ef5cfb8c",
							"deregisterPool(address)": "7e72c7d7",
							"getRewardDetails(address)": "d919007e",
							"registerPool(address,address,uint256)": "51c15721"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"accrueRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"calculateClaimableInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"deregisterPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getRewardDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardsAccrued\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lenderClaimedRewards\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isAccruing\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"}],\"name\":\"registerPool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"accrueRewards(address)\":{\"params\":{\"pool\":\"The address of the pool for which to accrue rewards.\"}},\"calculateClaimableInterest(address)\":{\"params\":{\"pool\":\"The address of the pool.\"},\"returns\":{\"_0\":\"uint256 The amount of interest that can be claimed.\"}},\"claimRewards(address)\":{\"params\":{\"pool\":\"The address of the flash pool.\"}},\"deregisterPool(address)\":{\"params\":{\"pool\":\"The address of the pool to deregister.\"}},\"getRewardDetails(address)\":{\"params\":{\"pool\":\"The address of the pool.\"},\"returns\":{\"isAccruing\":\"Flag to indicate if the pool is accruing rewards.\",\"lastRewardBlock\":\"Last block number when rewards were calculated.\",\"lenderClaimedRewards\":\"Amount of rewards claimed by the lender.\",\"rewardRate\":\"Dynamic reward rate based on APY.\",\"rewardToken\":\"The token used for rewards.\",\"rewardsAccrued\":\"Total accrued rewards.\"}},\"registerPool(address,address,uint256)\":{\"params\":{\"pool\":\"The address of the pool to register.\",\"rewardToken\":\"The ERC20 token used as the reward token.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accrueRewards(address)\":{\"notice\":\"Accrues rewards for a specific pool based on the current APY and block difference.\"},\"calculateClaimableInterest(address)\":{\"notice\":\"Calculates claimable interest for the lender.\"},\"claimRewards(address)\":{\"notice\":\"Claims rewards for the lender from a specific pool.\"},\"deregisterPool(address)\":{\"notice\":\"Deregisters a pool, stopping it from accruing further rewards.\"},\"getRewardDetails(address)\":{\"notice\":\"Returns the reward details for a specific pool.\"},\"registerPool(address,address,uint256)\":{\"notice\":\"Registers a pool to start accruing rewards, initializing the reward mechanism.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/interfaces/IFlashPoolRewardManager.sol\":\"IFlashPoolRewardManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/interfaces/IFlashPoolRewardManager.sol\":{\"keccak256\":\"0x9dd0d2b6a0a9561e31b724b73ad384a3d5525e8c9786e98f608e8a7b16052084\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6e01c75eb15ad3ba0dd1b965df8188200177519c6fd7e6d9b624654da527fec\",\"dweb:/ipfs/QmQdysNJH7hW9mXMcy22TMyfdMjJSNtzmRFMniGMYoAXAr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"accrueRewards(address)": {
								"notice": "Accrues rewards for a specific pool based on the current APY and block difference."
							},
							"calculateClaimableInterest(address)": {
								"notice": "Calculates claimable interest for the lender."
							},
							"claimRewards(address)": {
								"notice": "Claims rewards for the lender from a specific pool."
							},
							"deregisterPool(address)": {
								"notice": "Deregisters a pool, stopping it from accruing further rewards."
							},
							"getRewardDetails(address)": {
								"notice": "Returns the reward details for a specific pool."
							},
							"registerPool(address,address,uint256)": {
								"notice": "Registers a pool to start accruing rewards, initializing the reward mechanism."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/contracts/interfaces/IPoolOrganizer.sol": {
				"IPoolOrganizer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "deregisterPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "getLoanState",
							"outputs": [
								{
									"internalType": "enum IPoolOrganizer.LoanState",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "getPoolDetails",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "lender",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "borrower",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "creationTime",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "vault",
											"type": "address"
										},
										{
											"internalType": "contract IERC20",
											"name": "loanToken",
											"type": "address"
										},
										{
											"internalType": "contract IERC20",
											"name": "assetToken",
											"type": "address"
										},
										{
											"internalType": "contract IERC20",
											"name": "repaymentToken",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "loanAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "interestRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "repaymentPeriod",
											"type": "uint256"
										},
										{
											"internalType": "enum IPoolOrganizer.PoolType",
											"name": "poolType",
											"type": "uint8"
										},
										{
											"internalType": "bool",
											"name": "funded",
											"type": "bool"
										},
										{
											"internalType": "enum IPoolOrganizer.LoanState",
											"name": "loanState",
											"type": "uint8"
										},
										{
											"internalType": "address",
											"name": "pool",
											"type": "address"
										}
									],
									"internalType": "struct IPoolOrganizer.PoolDetails",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "lender",
									"type": "address"
								}
							],
							"name": "getPoolsByLender",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalPools",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "getVaultForPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "factoryAddress",
									"type": "address"
								}
							],
							"name": "grantFactoryAccess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "markPoolAsFunded",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_vaultManager",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardManager",
									"type": "address"
								}
							],
							"name": "registerManagers",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "lender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "borrower",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "loanToken",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "assetToken",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "repaymentToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "loanAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "repaymentPeriod",
									"type": "uint256"
								},
								{
									"internalType": "enum IPoolOrganizer.PoolType",
									"name": "poolType",
									"type": "uint8"
								}
							],
							"name": "registerPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "registerVault",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "newBorrower",
									"type": "address"
								}
							],
							"name": "setBorrowerForPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "enum IPoolOrganizer.LoanState",
									"name": "newState",
									"type": "uint8"
								}
							],
							"name": "updateLoanState",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"deregisterPool(address)": {
								"params": {
									"pool": "The address of the pool to deregister"
								}
							},
							"getLoanState(address)": {
								"params": {
									"pool": "The address of the pool"
								},
								"returns": {
									"_0": "The loan state of the specified pool"
								}
							},
							"getPoolDetails(address)": {
								"params": {
									"pool": "The address of the pool"
								},
								"returns": {
									"_0": "The details of the specified pool"
								}
							},
							"getPoolsByLender(address)": {
								"params": {
									"lender": "The address of the lender"
								},
								"returns": {
									"_0": "An array of pool addresses"
								}
							},
							"getTotalPools()": {
								"returns": {
									"_0": "The total number of registered pools"
								}
							},
							"getVaultForPool(address)": {
								"params": {
									"pool": "The address of the pool"
								},
								"returns": {
									"_0": "The address of the linked vault"
								}
							},
							"grantFactoryAccess(address)": {
								"params": {
									"factoryAddress": "The address of the factory to be granted access"
								}
							},
							"markPoolAsFunded(address)": {
								"params": {
									"pool": "The address of the pool to mark as funded"
								}
							},
							"registerManagers(address,address)": {
								"params": {
									"_rewardManager": "The address of the RewardManager contract",
									"_vaultManager": "The address of the VaultManager contract"
								}
							},
							"registerPool(address,address,address,address,address,address,address,uint256,uint256,uint256,uint8)": {
								"params": {
									"assetToken": "The token used as collateral",
									"borrower": "The address of the borrower",
									"interestRate": "The interest rate of the loan",
									"lender": "The address of the lender",
									"loanAmount": "The amount of the loan",
									"loanToken": "The token to be loaned",
									"pool": "The address of the pool contract",
									"poolType": "The type of the pool (standard or flash loan)",
									"repaymentPeriod": "The loan repayment period",
									"repaymentToken": "The token used for loan repayment",
									"vault": "The address of the vault associated with the pool"
								}
							},
							"registerVault(address,address)": {
								"params": {
									"pool": "The address of the pool",
									"vault": "The address of the vault"
								}
							},
							"setBorrowerForPool(address,address)": {
								"params": {
									"newBorrower": "The address of the new borrower",
									"pool": "The address of the pool"
								}
							},
							"updateLoanState(address,uint8)": {
								"params": {
									"newState": "The new state of the loan",
									"pool": "The address of the pool"
								}
							}
						},
						"title": "IPoolOrganizer interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deregisterPool(address)": "7e72c7d7",
							"getLoanState(address)": "c81c3bef",
							"getPoolDetails(address)": "d3e90fa0",
							"getPoolsByLender(address)": "24a44efb",
							"getTotalPools()": "d3ffe67a",
							"getVaultForPool(address)": "7570e389",
							"grantFactoryAccess(address)": "5d102df7",
							"markPoolAsFunded(address)": "1f2f2e14",
							"registerManagers(address,address)": "c489579d",
							"registerPool(address,address,address,address,address,address,address,uint256,uint256,uint256,uint8)": "43756020",
							"registerVault(address,address)": "05c4fdf9",
							"setBorrowerForPool(address,address)": "37e238c5",
							"updateLoanState(address,uint8)": "a956239b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"deregisterPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getLoanState\",\"outputs\":[{\"internalType\":\"enum IPoolOrganizer.LoanState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"loanToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"assetToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"repaymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repaymentPeriod\",\"type\":\"uint256\"},{\"internalType\":\"enum IPoolOrganizer.PoolType\",\"name\":\"poolType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"funded\",\"type\":\"bool\"},{\"internalType\":\"enum IPoolOrganizer.LoanState\",\"name\":\"loanState\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"internalType\":\"struct IPoolOrganizer.PoolDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"}],\"name\":\"getPoolsByLender\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalPools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getVaultForPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factoryAddress\",\"type\":\"address\"}],\"name\":\"grantFactoryAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"markPoolAsFunded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardManager\",\"type\":\"address\"}],\"name\":\"registerManagers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"loanToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"assetToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"repaymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repaymentPeriod\",\"type\":\"uint256\"},{\"internalType\":\"enum IPoolOrganizer.PoolType\",\"name\":\"poolType\",\"type\":\"uint8\"}],\"name\":\"registerPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"registerVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newBorrower\",\"type\":\"address\"}],\"name\":\"setBorrowerForPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"enum IPoolOrganizer.LoanState\",\"name\":\"newState\",\"type\":\"uint8\"}],\"name\":\"updateLoanState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deregisterPool(address)\":{\"params\":{\"pool\":\"The address of the pool to deregister\"}},\"getLoanState(address)\":{\"params\":{\"pool\":\"The address of the pool\"},\"returns\":{\"_0\":\"The loan state of the specified pool\"}},\"getPoolDetails(address)\":{\"params\":{\"pool\":\"The address of the pool\"},\"returns\":{\"_0\":\"The details of the specified pool\"}},\"getPoolsByLender(address)\":{\"params\":{\"lender\":\"The address of the lender\"},\"returns\":{\"_0\":\"An array of pool addresses\"}},\"getTotalPools()\":{\"returns\":{\"_0\":\"The total number of registered pools\"}},\"getVaultForPool(address)\":{\"params\":{\"pool\":\"The address of the pool\"},\"returns\":{\"_0\":\"The address of the linked vault\"}},\"grantFactoryAccess(address)\":{\"params\":{\"factoryAddress\":\"The address of the factory to be granted access\"}},\"markPoolAsFunded(address)\":{\"params\":{\"pool\":\"The address of the pool to mark as funded\"}},\"registerManagers(address,address)\":{\"params\":{\"_rewardManager\":\"The address of the RewardManager contract\",\"_vaultManager\":\"The address of the VaultManager contract\"}},\"registerPool(address,address,address,address,address,address,address,uint256,uint256,uint256,uint8)\":{\"params\":{\"assetToken\":\"The token used as collateral\",\"borrower\":\"The address of the borrower\",\"interestRate\":\"The interest rate of the loan\",\"lender\":\"The address of the lender\",\"loanAmount\":\"The amount of the loan\",\"loanToken\":\"The token to be loaned\",\"pool\":\"The address of the pool contract\",\"poolType\":\"The type of the pool (standard or flash loan)\",\"repaymentPeriod\":\"The loan repayment period\",\"repaymentToken\":\"The token used for loan repayment\",\"vault\":\"The address of the vault associated with the pool\"}},\"registerVault(address,address)\":{\"params\":{\"pool\":\"The address of the pool\",\"vault\":\"The address of the vault\"}},\"setBorrowerForPool(address,address)\":{\"params\":{\"newBorrower\":\"The address of the new borrower\",\"pool\":\"The address of the pool\"}},\"updateLoanState(address,uint8)\":{\"params\":{\"newState\":\"The new state of the loan\",\"pool\":\"The address of the pool\"}}},\"title\":\"IPoolOrganizer interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deregisterPool(address)\":{\"notice\":\"Deregisters a pool\"},\"getLoanState(address)\":{\"notice\":\"Retrieves the loan state of a specific pool\"},\"getPoolDetails(address)\":{\"notice\":\"Retrieves detailed information about a specific pool\"},\"getPoolsByLender(address)\":{\"notice\":\"Retrieves all pool addresses associated with a specific lender\"},\"getTotalPools()\":{\"notice\":\"Gets the total number of registered pools\"},\"getVaultForPool(address)\":{\"notice\":\"Retrieves the associated vault address for a given pool\"},\"grantFactoryAccess(address)\":{\"notice\":\"Grants factory access to manage pools\"},\"markPoolAsFunded(address)\":{\"notice\":\"Marks a pool as funded\"},\"registerManagers(address,address)\":{\"notice\":\"Registers manager contracts for managing vaults and rewards\"},\"registerPool(address,address,address,address,address,address,address,uint256,uint256,uint256,uint8)\":{\"notice\":\"Registers a new pool\"},\"registerVault(address,address)\":{\"notice\":\"Registers a vault for a specific pool\"},\"setBorrowerForPool(address,address)\":{\"notice\":\"Sets the borrower for a specified pool\"},\"updateLoanState(address,uint8)\":{\"notice\":\"Updates the loan state of a specific pool\"}},\"notice\":\"Interface for the Pool Organizer contract managing pools, vaults, and rewards.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/interfaces/IPoolOrganizer.sol\":\"IPoolOrganizer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"contracts/contracts/interfaces/IPoolOrganizer.sol\":{\"keccak256\":\"0x0ce052094139df49200b21b6c088c9997ddc2c688f4528d1fcdfb0c0414080a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c18bdcccf32a2a9e7fb8e347b80d09032c8fe64dcb02e6b92a4b99c6d7a16a8\",\"dweb:/ipfs/QmVprNk8mRzHy6GWT6bhBPmgtj3U3rkN8LamBAwES92GMh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deregisterPool(address)": {
								"notice": "Deregisters a pool"
							},
							"getLoanState(address)": {
								"notice": "Retrieves the loan state of a specific pool"
							},
							"getPoolDetails(address)": {
								"notice": "Retrieves detailed information about a specific pool"
							},
							"getPoolsByLender(address)": {
								"notice": "Retrieves all pool addresses associated with a specific lender"
							},
							"getTotalPools()": {
								"notice": "Gets the total number of registered pools"
							},
							"getVaultForPool(address)": {
								"notice": "Retrieves the associated vault address for a given pool"
							},
							"grantFactoryAccess(address)": {
								"notice": "Grants factory access to manage pools"
							},
							"markPoolAsFunded(address)": {
								"notice": "Marks a pool as funded"
							},
							"registerManagers(address,address)": {
								"notice": "Registers manager contracts for managing vaults and rewards"
							},
							"registerPool(address,address,address,address,address,address,address,uint256,uint256,uint256,uint8)": {
								"notice": "Registers a new pool"
							},
							"registerVault(address,address)": {
								"notice": "Registers a vault for a specific pool"
							},
							"setBorrowerForPool(address,address)": {
								"notice": "Sets the borrower for a specified pool"
							},
							"updateLoanState(address,uint8)": {
								"notice": "Updates the loan state of a specific pool"
							}
						},
						"notice": "Interface for the Pool Organizer contract managing pools, vaults, and rewards.",
						"version": 1
					}
				}
			},
			"contracts/contracts/protocol/TuliaFlashPool.sol": {
				"TuliaFlashPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_flashLoanFeeRate",
									"type": "uint256"
								},
								{
									"internalType": "contract IPoolOrganizer",
									"name": "_poolOrganizer",
									"type": "address"
								},
								{
									"internalType": "contract IFlashPoolRewardManager",
									"name": "_flashPoolRewardManager",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_loanAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "FlashLoanExecuted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "lender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "LoanClosed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "lender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "LoanFunded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LENDER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "asset",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "closeLoan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "flashFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC3156FlashBorrower",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flashLoan",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "flashLoanFeeRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "flashPoolRewardManager",
							"outputs": [
								{
									"internalType": "contract IFlashPoolRewardManager",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fundLoan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getFlashLoanState",
							"outputs": [
								{
									"internalType": "enum TuliaFlashPool.FlashLoanState",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lender",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "loanAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "maxFlashLoan",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolOrganizer",
							"outputs": [
								{
									"internalType": "contract IPoolOrganizer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "state",
							"outputs": [
								{
									"internalType": "enum TuliaFlashPool.FlashLoanState",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implements flash loan functionalities with integrated fee management. This contract allows issuing flash loans backed by ERC20 tokens.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"events": {
							"FlashLoanExecuted(address,address,uint256,uint256)": {
								"params": {
									"amount": "The loan amount",
									"fee": "The loan fee",
									"receiver": "The borrower contract",
									"token": "The ERC20 token for the loan"
								}
							},
							"LoanFunded(address,uint256)": {
								"params": {
									"amount": "The amount of the loan",
									"lender": "The address of the lender"
								}
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"_asset": "The ERC20 token asset used for flash loans",
									"_flashLoanFeeRate": "The initial fee rate for flash loans issued by this pool",
									"_flashPoolRewardManager": "The FlashPool Reward Manager contract",
									"_loanAmount": "The amount of the loan to be funded",
									"_poolOrganizer": "The Pool Organizer contract"
								}
							},
							"flashFee(address,uint256)": {
								"params": {
									"amount": "The amount of the loan",
									"token": "The ERC20 token for which the fee is calculated"
								},
								"returns": {
									"_0": "The calculated fee amount"
								}
							},
							"flashLoan(address,address,uint256,bytes)": {
								"params": {
									"amount": "The amount of tokens to borrow",
									"data": "Arbitrary data passed to the borrower's `onFlashLoan` method",
									"receiver": "The borrower contract that must implement the IERC3156FlashBorrower interface",
									"token": "The ERC20 token to be borrowed"
								},
								"returns": {
									"_0": "true if the flash loan is paid back successfully within the same transaction"
								}
							},
							"getFlashLoanState()": {
								"returns": {
									"_0": "The current state of the flash loan"
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"maxFlashLoan(address)": {
								"params": {
									"token": "The ERC20 token address for which the max loan amount is queried"
								},
								"returns": {
									"_0": "The maximum amount available for a flash loan"
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"title": "TuliaFlashPool",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n  0x80\n  jumpi(tag_11, callvalue)\n  0x1f\n  bytecodeSize\n  codesize\n  dup2\n  swap1\n  sub\n  swap2\n  dup3\n  add\n  not(0x1f)\n  and\n  dup4\n  add\n  swap2\n  sub(shl(0x40, 0x01), 0x01)\n  dup4\n  gt\n  dup5\n  dup5\n  lt\n  or\n  tag_3\n  jumpi\n  dup1\n  dup5\n  swap3\n  0xa0\n  swap5\n  0x40\n  mstore\n  dup4\n  codecopy\n  dup2\n  add\n  sub\n  slt\n  tag_11\n  jumpi\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n  dup2\n  and\n  swap2\n  swap1\n  dup3\n  swap1\n  sub\n  tag_11\n  jumpi\n  0x20\n  dup2\n  add\n  mload\n  0x40\n  dup3\n  add\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n  dup2\n  and\n  swap2\n  swap1\n  dup3\n  swap1\n  sub\n  tag_11\n  jumpi\n  0x60\n  dup4\n  add\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n  dup2\n  and\n  swap4\n  swap1\n  dup5\n  swap1\n  sub\n  tag_11\n  jumpi\n  0x80\n  add\n  mload\n  swap4\n  sstore(0x00, 0x01)\n  0x01\n  dup1\n  0xa0\n  shl\n  sub\n  not\n    /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":2656:2670  asset = _asset */\n  0x02\n    /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n  sload\n  and\n  or\n    /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":2656:2670  asset = _asset */\n  0x02\n    /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n  sstore\n    /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":2680:2716  flashLoanFeeRate = _flashLoanFeeRate */\n  0x07\n    /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n  sstore\n  0x01\n  dup1\n  0xa0\n  shl\n  sub\n  not\n    /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":2726:2756  poolOrganizer = _poolOrganizer */\n  0x04\n    /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n  sload\n  and\n  or\n    /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":2726:2756  poolOrganizer = _poolOrganizer */\n  0x04\n    /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n  sstore\n  0x01\n  dup1\n  0xa0\n  shl\n  sub\n  not\n    /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":2766:2814  flashPoolRewardManager = _flashPoolRewardManager */\n  0x05\n    /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n  sload\n  and\n  or\n    /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":2766:2814  flashPoolRewardManager = _flashPoolRewardManager */\n  0x05\n    /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n  sstore\n    /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":2836:2860  loanAmount = _loanAmount */\n  0x03\n    /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n  sstore\n  not(0xff)\n    /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":2870:2906  state = FlashLoanState.UNINITIALIZED */\n  0x08\n    /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n  sload\n  and\n    /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":2870:2906  state = FlashLoanState.UNINITIALIZED */\n  0x08\n    /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n  sstore\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_11:\n  0x00\n  dup1\n  revert\ntag_3:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\nstop\n\nsub_0: assembly {\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_16, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_16:\n      0x00\n      swap1\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0xabafe1\n      eq\n      tag_18\n      jumpi\n      pop\n      dup1\n      0x01ffc9a7\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x232fa733\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x38d52e0f\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x5cffe9de\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x613255ab\n      eq\n      tag_34\n      jumpi\n      dup1\n      0x8c9f305f\n      eq\n      tag_36\n      jumpi\n      dup1\n      0x8db57994\n      eq\n      tag_38\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_40\n      jumpi\n      dup1\n      0x9d585f7f\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_44\n      jumpi\n      dup1\n      0xbcead63e\n      eq\n      tag_46\n      jumpi\n      dup1\n      0xc19d93fb\n      eq\n      tag_52\n      jumpi\n      dup1\n      0xc51b9507\n      eq\n      tag_50\n      jumpi\n      dup1\n      0xc694b54c\n      eq\n      tag_52\n      jumpi\n      dup1\n      0xc9c36353\n      eq\n      tag_54\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_56\n      jumpi\n      0xd9d98ce4\n      eq\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      jumpi(tag_62, callvalue)\n      jumpi(tag_62, slt(add(not(0x03), calldatasize), 0x40))\n      0x20\n      tag_64\n      tag_65\n      tag_2\n      jump\t// in\n    tag_65:\n      calldataload(0x24)\n      swap1\n      tag_10\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_62:\n      dup1\n      revert\n    tag_56:\n      pop\n      jumpi(tag_62, callvalue)\n      jumpi(tag_62, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_70\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      calldataload(0x04)\n      tag_71\n      tag_1\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_72\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_73\n      dup3\n      0x00\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x01\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x01\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      keccak256(0x00, 0x40)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_12\n      jump\t// in\n    tag_72:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_15\n      jump\t// in\n    tag_70:\n      pop\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      dup1\n      return\n    tag_54:\n      pop\n      jumpi(tag_62, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_62\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":877:930  IFlashPoolRewardManager public flashPoolRewardManager */\n      0x05\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_52:\n      pop\n      jumpi(tag_62, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_62\n      jumpi\n      tag_82\n      0xff\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":8069:8074  state */\n      0x08\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sload\n      and\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      dup3\n      tag_3\n      jump\t// in\n    tag_82:\n      sub\n      swap1\n      return\n    tag_50:\n      pop\n      jumpi(tag_62, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_62\n      jumpi\n      sload(0x04)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_46:\n      pop\n      jumpi(tag_62, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_62\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":1005:1026  address public lender */\n      0x06\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_44:\n      pop\n      jumpi(tag_62, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_62\n      jumpi\n      0x20\n      swap1\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_42:\n      pop\n      jumpi(tag_62, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_62\n      jumpi\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":805:830  uint256 public loanAmount */\n      0x03\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_40:\n      pop\n      jumpi(tag_62, callvalue)\n      jumpi(tag_62, slt(add(not(0x03), calldatasize), 0x40))\n      0x40\n      tag_108\n      tag_1\n      jump\t// in\n    tag_108:\n      swap2\n      calldataload(0x04)\n      dup2\n      mstore\n      mstore(0x20, 0x01)\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      swap1\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      0x20\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_38:\n      pop\n      jumpi(tag_62, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_62\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2322:2425  modifier nonReentrant() {... */\n      tag_113\n      tag_11\n      jump\t// in\n    tag_113:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0xff\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3068:3073  state */\n      0x08\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sload\n      and\n      0x03\n      dup2\n      lt\n      iszero\n      tag_114\n      jumpi\n      tag_116\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3142:3161  lender = msg.sender */\n      0x06\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3151:3161  msg.sender */\n      caller\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3226:3231  asset */\n      0x02\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sload\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3226:3253  asset.balanceOf(msg.sender) */\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x04\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3226:3253  asset.balanceOf(msg.sender) */\n      dup2\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      swap3\n      swap1\n      swap3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      0x20\n      dup3\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3226:3253  asset.balanceOf(msg.sender) */\n      0x24\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      dup2\n      dup5\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3226:3253  asset.balanceOf(msg.sender) */\n      gas\n      staticcall\n      swap2\n      dup3\n      iszero\n      tag_118\n      jumpi\n      dup4\n      swap3\n      tag_120\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n    tag_121:\n      pop\n      sload(0x03)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3226:3267  asset.balanceOf(msg.sender) >= loanAmount */\n      dup1\n      swap3\n      lt\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe1, 0x6eb1769f)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3391:3433  asset.allowance(msg.sender, address(this)) */\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3151:3161  msg.sender */\n      caller\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x04\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3391:3433  asset.allowance(msg.sender, address(this)) */\n      dup3\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      mstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3427:3431  this */\n      address\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3226:3253  asset.balanceOf(msg.sender) */\n      0x24\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      dup3\n      add\n      mstore\n      0x20\n      dup2\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3391:3433  asset.allowance(msg.sender, address(this)) */\n      0x44\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      dup2\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3391:3433  asset.allowance(msg.sender, address(this)) */\n      dup6\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_124\n      jumpi\n      dup4\n      swap2\n      dup6\n      swap2\n      tag_126\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n    tag_127:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3391:3447  asset.allowance(msg.sender, address(this)) >= loanAmount */\n      pop\n      lt\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3541:3598  asset.transferFrom(msg.sender, address(this), loanAmount) */\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3151:3161  msg.sender */\n      caller\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x04\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3541:3598  asset.transferFrom(msg.sender, address(this), loanAmount) */\n      dup3\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      mstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3427:3431  this */\n      address\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x20\n      swap1\n      dup3\n      swap1\n      0x64\n      swap1\n      dup3\n      swap1\n      dup7\n      swap1\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3541:3598  asset.transferFrom(msg.sender, address(this), loanAmount) */\n      gas\n      call\n      dup1\n      iszero\n      tag_136\n      jumpi\n      tag_133\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n    tag_134:\n      pop\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3638:3660  flashPoolRewardManager */\n      0x05\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sload\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3226:3231  asset */\n      0x02\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sload\n      sload(0x03)\n      mload(0x40)\n      shl(0xe0, 0x51c15721)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3638:3716  flashPoolRewardManager.registerPool(address(this), address(asset), loanAmount) */\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3427:3431  this */\n      address\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x04\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3638:3716  flashPoolRewardManager.registerPool(address(this), address(asset), loanAmount) */\n      dup3\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      dup4\n      and\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap2\n      0x20\n      swap2\n      dup4\n      swap2\n      0x64\n      swap2\n      dup4\n      swap2\n      dup8\n      swap2\n      and\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3638:3716  flashPoolRewardManager.registerPool(address(this), address(asset), loanAmount) */\n      gas\n      call\n      dup1\n      iszero\n      tag_136\n      jumpi\n      tag_138\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n    tag_139:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3151:3161  msg.sender */\n      pop\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3749:3784  _grantRole(LENDER_ROLE, msg.sender) */\n      tag_140\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3151:3161  msg.sender */\n      caller\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3749:3784  _grantRole(LENDER_ROLE, msg.sender) */\n      tag_13\n      jump\t// in\n    tag_140:\n      pop\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x01\n      not(0xff)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3068:3073  state */\n      0x08\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sload\n      and\n      or\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3068:3073  state */\n      0x08\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sstore\n      sload(0x03)\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3863:3897  LoanFunded(msg.sender, loanAmount) */\n      0x726d5f1a838fe31748f737fa3ae5539ccff95952adfc593a1299532b643ff7a8\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3151:3161  msg.sender */\n      caller\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3863:3897  LoanFunded(msg.sender, loanAmount) */\n      swap3\n      log2\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1755:1756  2 */\n      dup2\n      sstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      dup1\n      return\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3638:3716  flashPoolRewardManager.registerPool(address(this), address(asset), loanAmount) */\n    tag_138:\n      tag_141\n      swap1\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3638:3716  flashPoolRewardManager.registerPool(address(this), address(asset), loanAmount) */\n      returndatasize\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3638:3716  flashPoolRewardManager.registerPool(address(this), address(asset), loanAmount) */\n      gt\n      tag_142\n      jumpi\n    tag_143:\n      tag_144\n      dup2\n      dup4\n      tag_4\n      jump\t// in\n    tag_144:\n      dup2\n      add\n      swap1\n      tag_5\n      jump\t// in\n    tag_141:\n      jump(tag_139)\n    tag_142:\n      pop\n      returndatasize\n      jump(tag_143)\n    tag_136:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      mload(0x40)\n      returndatasize\n      dup5\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3541:3598  asset.transferFrom(msg.sender, address(this), loanAmount) */\n    tag_133:\n      tag_145\n      swap1\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3541:3598  asset.transferFrom(msg.sender, address(this), loanAmount) */\n      returndatasize\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3541:3598  asset.transferFrom(msg.sender, address(this), loanAmount) */\n      gt\n      tag_142\n      jumpi\n      tag_144\n      dup2\n      dup4\n      tag_4\n      jump\t// in\n    tag_145:\n      jump(tag_134)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n    tag_128:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x23\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3226:3253  asset.balanceOf(msg.sender) */\n      0x24\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      dup3\n      add\n      mstore\n      0x416c6c6f77616e6365206e6f742073657420666f72207468697320636f6e7472\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3391:3433  asset.allowance(msg.sender, address(this)) */\n      0x44\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      dup3\n      add\n      mstore\n      shl(0xea, 0x1858dd)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3391:3433  asset.allowance(msg.sender, address(this)) */\n    tag_126:\n      swap2\n      pop\n      pop\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3391:3433  asset.allowance(msg.sender, address(this)) */\n      dup2\n      returndatasize\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3391:3433  asset.allowance(msg.sender, address(this)) */\n      gt\n      tag_149\n      jumpi\n    tag_150:\n      dup2\n      tag_151\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3391:3433  asset.allowance(msg.sender, address(this)) */\n      swap4\n      dup4\n      tag_4\n      jump\t// in\n    tag_151:\n      dup2\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sub\n      slt\n      tag_152\n      jumpi\n      dup3\n      swap1\n      mload\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3391:3433  asset.allowance(msg.sender, address(this)) */\n      0x00\n      jump(tag_127)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n    tag_152:\n      0x00\n      dup1\n      revert\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3391:3433  asset.allowance(msg.sender, address(this)) */\n    tag_149:\n      returndatasize\n      swap2\n      pop\n      jump(tag_150)\n    tag_124:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      mload(0x40)\n      returndatasize\n      dup7\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_122:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x25\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3226:3253  asset.balanceOf(msg.sender) */\n      0x24\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      dup3\n      add\n      mstore\n      0x496e73756666696369656e742062616c616e636520746f2066756e6420746865\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xd9, 0x103637b0b7)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3226:3253  asset.balanceOf(msg.sender) */\n    tag_120:\n      swap1\n      swap2\n      pop\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3226:3253  asset.balanceOf(msg.sender) */\n      dup2\n      returndatasize\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3226:3253  asset.balanceOf(msg.sender) */\n      gt\n      tag_154\n      jumpi\n    tag_155:\n      dup2\n      tag_156\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3226:3253  asset.balanceOf(msg.sender) */\n      swap4\n      dup4\n      tag_4\n      jump\t// in\n    tag_156:\n      dup2\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sub\n      slt\n      tag_152\n      jumpi\n      mload\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3226:3253  asset.balanceOf(msg.sender) */\n      swap1\n      0x00\n      jump(tag_121)\n    tag_154:\n      returndatasize\n      swap2\n      pop\n      jump(tag_155)\n    tag_118:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      mload(0x40)\n      returndatasize\n      dup6\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_116:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x16\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x52, 0x131bd85b881a5cc8185b1c9958591e48199d5b991959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_114:\n      shl(0xe0, 0x4e487b71)\n      dup3\n      mstore\n      mstore(0x04, 0x21)\n      0x24\n      dup3\n      revert\n    tag_36:\n      pop\n      jumpi(tag_62, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_62\n      jumpi\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":1147:1178  uint256 public flashLoanFeeRate */\n      0x07\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_34:\n      pop\n      jumpi(tag_62, callvalue)\n      jumpi(tag_62, slt(add(not(0x03), calldatasize), 0x20))\n      tag_167\n      tag_2\n      jump\t// in\n    tag_167:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4269:4274  asset */\n      0x02\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap3\n      swap2\n      and\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4252:4275  token == address(asset) */\n      dup3\n      sub\n      tag_168\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4278:4308  asset.balanceOf(address(this)) */\n      0x24\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      swap3\n      mload(0x40)\n      swap4\n      dup5\n      dup1\n      swap3\n      shl(0xe0, 0x70a08231)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4278:4308  asset.balanceOf(address(this)) */\n      dup3\n      mstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4302:4306  this */\n      address\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x04\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4278:4308  asset.balanceOf(address(this)) */\n      dup4\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      mstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4278:4308  asset.balanceOf(address(this)) */\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_170\n      jumpi\n      swap1\n      tag_172\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4252:4312  token == address(asset) ? asset.balanceOf(address(this)) : 0 */\n    tag_173:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4252:4312  token == address(asset) ? asset.balanceOf(address(this)) : 0 */\n      swap2\n      pop\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4278:4308  asset.balanceOf(address(this)) */\n    tag_172:\n      pop\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4278:4308  asset.balanceOf(address(this)) */\n      dup2\n      returndatasize\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4278:4308  asset.balanceOf(address(this)) */\n      gt\n      tag_175\n      jumpi\n    tag_176:\n      dup2\n      tag_177\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4278:4308  asset.balanceOf(address(this)) */\n      swap4\n      dup4\n      tag_4\n      jump\t// in\n    tag_177:\n      dup2\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sub\n      slt\n      tag_152\n      jumpi\n      0x20\n      swap1\n      mload\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4278:4308  asset.balanceOf(address(this)) */\n      jump(tag_173)\n    tag_175:\n      returndatasize\n      swap2\n      pop\n      jump(tag_176)\n    tag_170:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      mload(0x40)\n      swap1\n      returndatasize\n      swap1\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4252:4312  token == address(asset) ? asset.balanceOf(address(this)) : 0 */\n    tag_168:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4252:4312  token == address(asset) ? asset.balanceOf(address(this)) : 0 */\n      swap2\n      pop\n      jump(tag_64)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n    tag_32:\n      pop\n      jumpi(tag_62, callvalue)\n      jumpi(tag_62, slt(add(not(0x03), calldatasize), 0x80))\n      calldataload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      tag_62\n      jumpi\n      tag_186\n      tag_1\n      jump\t// in\n    tag_186:\n      calldataload(0x44)\n      swap3\n      calldataload(0x64)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_189\n      jumpi\n      calldatasize\n      0x23\n      dup3\n      add\n      slt\n      iszero\n      tag_189\n      jumpi\n      dup1\n      0x04\n      add\n      calldataload\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_193\n      jumpi\n      calldatasize\n      0x24\n      dup4\n      dup4\n      add\n      add\n      gt\n      tag_193\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2322:2425  modifier nonReentrant() {... */\n      tag_195\n      tag_11\n      jump\t// in\n    tag_195:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0xff\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":5475:5480  state */\n      0x08\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sload\n      and\n      0x03\n      dup2\n      lt\n      iszero\n      tag_196\n      jumpi\n      0x01\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":5475:5505  state == FlashLoanState.FUNDED */\n      sub\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      tag_198\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6998:7003  asset */\n      0x02\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      dup2\n      and\n      swap6\n      swap2\n      and\n      swap2\n      swap1\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7056:7079  flashFee(token, amount) */\n      tag_200\n      swap1\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      dup9\n      swap1\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6973:7026  require(token == address(asset), \"Unsupported token\") */\n      tag_201\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6981:7004  token == address(asset) */\n      dup9\n      dup7\n      eq\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6973:7026  require(token == address(asset), \"Unsupported token\") */\n      tag_9\n      jump\t// in\n    tag_201:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7056:7079  flashFee(token, amount) */\n      tag_10\n      jump\t// in\n    tag_200:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      swap3\n      mload(0x40)\n      swap3\n      shl(0xe0, 0x70a08231)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7113:7143  asset.balanceOf(address(this)) */\n      dup5\n      mstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7137:7141  this */\n      address\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x04\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7113:7143  asset.balanceOf(address(this)) */\n      dup6\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      mstore\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7113:7143  asset.balanceOf(address(this)) */\n      dup5\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x24\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7113:7143  asset.balanceOf(address(this)) */\n      dup2\n      dup5\n      gas\n      staticcall\n      swap4\n      dup5\n      iszero\n      tag_207\n      jumpi\n      swap1\n      dup9\n      swap2\n      dup3\n      swap6\n      tag_204\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n    tag_205:\n      pop\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7154:7195  asset.transfer(address(receiver), amount) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      dup9\n      and\n      0x04\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7154:7195  asset.transfer(address(receiver), amount) */\n      dup3\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      mstore\n      0x24\n      dup2\n      add\n      dup12\n      swap1\n      mstore\n      swap2\n      0x20\n      swap2\n      dup4\n      swap2\n      dup3\n      swap1\n      dup2\n      0x44\n      dup2\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7154:7195  asset.transfer(address(receiver), amount) */\n    tag_206:\n      sub\n      swap3\n      gas\n      call\n      dup1\n      iszero\n      tag_207\n      jumpi\n      dup10\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7154:7195  asset.transfer(address(receiver), amount) */\n      swap4\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x24\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7154:7195  asset.transfer(address(receiver), amount) */\n      swap6\n      swap4\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0xc4\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7154:7195  asset.transfer(address(receiver), amount) */\n      swap4\n      tag_209\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n    tag_210:\n      pop\n      dup1\n      mload(0x40)\n      swap7\n      dup8\n      swap6\n      dup7\n      swap5\n      shl(0xe0, 0x23e30c8b)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7227:7290  receiver.onFlashLoan(msg.sender, token, amount, totalFee, data) */\n      dup7\n      mstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7248:7258  msg.sender */\n      caller\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x04\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7227:7290  receiver.onFlashLoan(msg.sender, token, amount, totalFee, data) */\n      dup8\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      mstore\n      dup14\n      dup4\n      dup8\n      add\n      mstore\n      0x44\n      dup7\n      add\n      mstore\n      dup11\n      0x64\n      dup7\n      add\n      mstore\n      0xa0\n      0x84\n      dup7\n      add\n      mstore\n      dup3\n      0xa4\n      dup7\n      add\n      mstore\n      add\n      dup5\n      dup5\n      add\n      calldatacopy\n      dup2\n      dup2\n      add\n      dup4\n      add\n      dup12\n      swap1\n      mstore\n      0x1f\n      add\n      not(0x1f)\n      and\n      dup2\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7227:7290  receiver.onFlashLoan(msg.sender, token, amount, totalFee, data) */\n      sub\n      add\n      dup2\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      dup10\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7227:7290  receiver.onFlashLoan(msg.sender, token, amount, totalFee, data) */\n      dup9\n      gas\n      call\n      dup1\n      iszero\n      tag_220\n      jumpi\n      dup7\n      swap1\n      tag_213\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n    tag_214:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7310:7355  keccak256(\"ERC3156FlashBorrower.onFlashLoan\") */\n      0x439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7227:7355  receiver.onFlashLoan(msg.sender, token, amount, totalFee, data) ==... */\n      swap2\n      pop\n      sub\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      tag_215\n      jumpi\n      dup2\n      dup7\n      add\n      dup1\n      dup8\n      gt\n      tag_217\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6998:7003  asset */\n      0x02\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sload\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7457:7521  asset.transferFrom(address(receiver), address(this), amountOwed) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      dup7\n      dup2\n      and\n      0x04\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7457:7521  asset.transferFrom(address(receiver), address(this), amountOwed) */\n      dup4\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      mstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7137:7141  this */\n      address\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x24\n      dup4\n      add\n      mstore\n      0x44\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      swap2\n      0x20\n      swap2\n      dup4\n      swap2\n      0x64\n      swap2\n      dup4\n      swap2\n      dup12\n      swap2\n      and\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7457:7521  asset.transferFrom(address(receiver), address(this), amountOwed) */\n      gas\n      call\n      dup1\n      iszero\n      tag_220\n      jumpi\n      tag_222\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n    tag_223:\n      pop\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6998:7003  asset */\n      0x02\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sload\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7553:7583  asset.balanceOf(address(this)) */\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7137:7141  this */\n      address\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x04\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7553:7583  asset.balanceOf(address(this)) */\n      dup3\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      swap2\n      swap1\n      0x20\n      dup2\n      0x24\n      dup2\n      dup7\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7553:7583  asset.balanceOf(address(this)) */\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_224\n      jumpi\n      dup8\n      swap2\n      tag_226\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n    tag_227:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7553:7600  asset.balanceOf(address(this)) >= balanceBefore */\n      pop\n      lt\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      tag_228\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7744:7750  lender */\n      0x06\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sload\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7729:7761  asset.transfer(lender, totalFee) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      swap1\n      swap2\n      and\n      0x04\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7729:7761  asset.transfer(lender, totalFee) */\n      dup3\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      mstore\n      0x24\n      dup2\n      add\n      dup4\n      swap1\n      mstore\n      swap1\n      0x20\n      swap1\n      dup3\n      swap1\n      0x44\n      swap1\n      dup3\n      swap1\n      dup10\n      swap1\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7729:7761  asset.transfer(lender, totalFee) */\n      gas\n      call\n      dup1\n      iszero\n      tag_231\n      jumpi\n      swap6\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7777:7838  FlashLoanExecuted(address(receiver), token, amount, totalFee) */\n      0x9d0d497e678f62d6b162c97b9724a39f45fe674650dcd4a5e88ff6317e63764f\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7729:7761  asset.transfer(lender, totalFee) */\n      swap3\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x40\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7729:7761  asset.transfer(lender, totalFee) */\n      swap3\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x01\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7729:7761  asset.transfer(lender, totalFee) */\n      swap9\n      tag_233\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n    tag_234:\n      pop\n      dup3\n      mload\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7777:7838  FlashLoanExecuted(address(receiver), token, amount, totalFee) */\n      log3\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1755:1756  2 */\n      sstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n      mload(0x40)\n      0x01\n      dup2\n      mstore\n      return\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7729:7761  asset.transfer(lender, totalFee) */\n    tag_233:\n      tag_235\n      swap1\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7729:7761  asset.transfer(lender, totalFee) */\n      returndatasize\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7729:7761  asset.transfer(lender, totalFee) */\n      gt\n      tag_142\n      jumpi\n      tag_144\n      dup2\n      dup4\n      tag_4\n      jump\t// in\n    tag_235:\n      jump(tag_234)\n    tag_231:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      mload(0x40)\n      returndatasize\n      dup8\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_228:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x466c617368206c6f616e2072657061796d656e74206661696c65640000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7553:7583  asset.balanceOf(address(this)) */\n    tag_226:\n      swap1\n      pop\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7553:7583  asset.balanceOf(address(this)) */\n      dup2\n      returndatasize\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7553:7583  asset.balanceOf(address(this)) */\n      gt\n      tag_239\n      jumpi\n    tag_240:\n      dup2\n      tag_241\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7553:7583  asset.balanceOf(address(this)) */\n      swap4\n      dup4\n      tag_4\n      jump\t// in\n    tag_241:\n      dup2\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sub\n      slt\n      tag_152\n      jumpi\n      mload\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7553:7583  asset.balanceOf(address(this)) */\n      0x00\n      jump(tag_227)\n    tag_239:\n      returndatasize\n      swap2\n      pop\n      jump(tag_240)\n    tag_224:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      mload(0x40)\n      returndatasize\n      dup10\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7457:7521  asset.transferFrom(address(receiver), address(this), amountOwed) */\n    tag_222:\n      tag_244\n      swap1\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7457:7521  asset.transferFrom(address(receiver), address(this), amountOwed) */\n      returndatasize\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7457:7521  asset.transferFrom(address(receiver), address(this), amountOwed) */\n      gt\n      tag_142\n      jumpi\n      tag_144\n      dup2\n      dup4\n      tag_4\n      jump\t// in\n    tag_244:\n      jump(tag_223)\n    tag_220:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      mload(0x40)\n      returndatasize\n      dup9\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_217:\n      shl(0xe0, 0x4e487b71)\n      dup7\n      mstore\n      mstore(0x04, 0x11)\n      0x24\n      dup7\n      revert\n    tag_215:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x7a, 0x119b185cda081b1bd85b8819985a5b1959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7227:7290  receiver.onFlashLoan(msg.sender, token, amount, totalFee, data) */\n    tag_213:\n      pop\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7227:7290  receiver.onFlashLoan(msg.sender, token, amount, totalFee, data) */\n      dup2\n      returndatasize\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7227:7290  receiver.onFlashLoan(msg.sender, token, amount, totalFee, data) */\n      gt\n      tag_248\n      jumpi\n    tag_249:\n      dup2\n      tag_250\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7227:7290  receiver.onFlashLoan(msg.sender, token, amount, totalFee, data) */\n      swap4\n      dup4\n      tag_4\n      jump\t// in\n    tag_250:\n      dup2\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sub\n      slt\n      tag_251\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7310:7355  keccak256(\"ERC3156FlashBorrower.onFlashLoan\") */\n      0x439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      swap1\n      mload\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7227:7290  receiver.onFlashLoan(msg.sender, token, amount, totalFee, data) */\n      jump(tag_214)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n    tag_251:\n      dup6\n      dup1\n      revert\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7227:7290  receiver.onFlashLoan(msg.sender, token, amount, totalFee, data) */\n    tag_248:\n      returndatasize\n      swap2\n      pop\n      jump(tag_249)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7154:7195  asset.transfer(address(receiver), amount) */\n    tag_209:\n      tag_253\n      swap1\n      dup7\n      returndatasize\n      dup9\n      gt\n      tag_142\n      jumpi\n      tag_144\n      dup2\n      dup4\n      tag_4\n      jump\t// in\n    tag_253:\n      jump(tag_210)\n    tag_207:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      mload(0x40)\n      returndatasize\n      dup11\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7113:7143  asset.balanceOf(address(this)) */\n    tag_204:\n      swap2\n      pop\n      swap4\n      pop\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7113:7143  asset.balanceOf(address(this)) */\n      dup2\n      returndatasize\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7113:7143  asset.balanceOf(address(this)) */\n      gt\n      tag_257\n      jumpi\n    tag_258:\n      dup2\n      tag_259\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7113:7143  asset.balanceOf(address(this)) */\n      swap4\n      dup4\n      tag_4\n      jump\t// in\n    tag_259:\n      dup2\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sub\n      slt\n      tag_152\n      jumpi\n      mload\n      swap3\n      dup8\n      swap1\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7154:7195  asset.transfer(address(receiver), amount) */\n      tag_206\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":7113:7143  asset.balanceOf(address(this)) */\n      jump(tag_205)\n    tag_257:\n      returndatasize\n      swap2\n      pop\n      jump(tag_258)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n    tag_198:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x141bdbdb081b9bdd08199d5b991959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_196:\n      shl(0xe0, 0x4e487b71)\n      dup7\n      mstore\n      mstore(0x04, 0x21)\n      0x24\n      dup7\n      revert\n    tag_193:\n      dup5\n      dup1\n      revert\n    tag_189:\n      dup4\n      dup1\n      revert\n    tag_30:\n      pop\n      jumpi(tag_62, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_62\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":780:799  IERC20 public asset */\n      0x02\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_28:\n      pop\n      jumpi(tag_62, callvalue)\n      jumpi(tag_62, slt(add(not(0x03), calldatasize), 0x40))\n      tag_270\n      tag_1\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      sub\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_271\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_70\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      swap1\n      calldataload(0x04)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_15\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_271:\n      shl(0xe1, 0x334bd919)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      dup3\n      mstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x04\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      dup3\n      revert\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n    tag_26:\n      pop\n      jumpi(tag_62, callvalue)\n      jumpi(tag_62, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_70\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      calldataload(0x04)\n      tag_279\n      tag_1\n      jump\t// in\n    tag_279:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_280\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_73\n      dup3\n      0x00\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x01\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x01\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      keccak256(0x00, 0x40)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n    tag_280:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_14\n      jump\t// in\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n    tag_24:\n      pop\n      jumpi(tag_62, callvalue)\n      jumpi(tag_62, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      tag_64\n      mstore(0x00, calldataload(0x04))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x01\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x01\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      keccak256(0x00, 0x40)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n    tag_22:\n      pop\n      jumpi(tag_152, callvalue)\n      jumpi(tag_152, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2322:2425  modifier nonReentrant() {... */\n      tag_291\n      tag_11\n      jump\t// in\n    tag_291:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":5799:5809  msg.sender */\n      caller\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x00\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0x95902c4d6c8ea17825d5632af066dcb87e033f1b2a91b49a7ad79e83f02c4dec)\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      iszero\n      tag_292\n      jumpi\n      0xff\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":5870:5875  state */\n      0x08\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sload\n      and\n      0x03\n      dup2\n      lt\n      iszero\n      tag_294\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x01\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":5870:5900  state == FlashLoanState.FUNDED */\n      sub\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      tag_296\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":5983:5988  asset */\n      0x02\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sload\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":5983:6013  asset.balanceOf(address(this)) */\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6007:6011  this */\n      address\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x04\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":5983:6013  asset.balanceOf(address(this)) */\n      dup3\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      mstore\n      swap1\n      0x20\n      swap1\n      dup3\n      swap1\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":5983:6013  asset.balanceOf(address(this)) */\n      0x24\n      swap1\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":5983:6013  asset.balanceOf(address(this)) */\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_306\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x00\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":5983:6013  asset.balanceOf(address(this)) */\n      swap2\n      tag_300\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n    tag_301:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6031:6041  amount > 0 */\n      pop\n      dup1\n      iszero\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      tag_302\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":5870:5875  state */\n      0x08\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":5983:5988  asset */\n      0x02\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      or\n      swap1\n      sstore\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6116:6227  poolOrganizer.updateLoanState(... */\n      dup1\n      extcodesize\n      iszero\n      tag_152\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x00\n      dup1\n      swap2\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6116:6227  poolOrganizer.updateLoanState(... */\n      0x44\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      mload(0x40)\n      dup1\n      swap5\n      dup2\n      swap4\n      shl(0xe0, 0xa956239b)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6116:6227  poolOrganizer.updateLoanState(... */\n      dup4\n      mstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6007:6011  this */\n      address\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x04\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6116:6227  poolOrganizer.updateLoanState(... */\n      dup5\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      mstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6186:6217  IPoolOrganizer.LoanState.CLOSED */\n      0x05\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":5983:6013  asset.balanceOf(address(this)) */\n      0x24\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      dup5\n      add\n      mstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6116:6227  poolOrganizer.updateLoanState(... */\n      gas\n      call\n      dup1\n      iszero\n      tag_306\n      jumpi\n      tag_308\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n    tag_309:\n      pop\n      sload(0x04)\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6237:6280  poolOrganizer.deregisterPool(address(this)) */\n      dup1\n      extcodesize\n      iszero\n      tag_326\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      dup2\n      dup1\n      swap2\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":5983:6013  asset.balanceOf(address(this)) */\n      0x24\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      mload(0x40)\n      dup1\n      swap5\n      dup2\n      swap4\n      shl(0xe0, 0x7e72c7d7)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6237:6280  poolOrganizer.deregisterPool(address(this)) */\n      dup4\n      mstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6007:6011  this */\n      address\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x04\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6237:6280  poolOrganizer.deregisterPool(address(this)) */\n      dup5\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      mstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6237:6280  poolOrganizer.deregisterPool(address(this)) */\n      gas\n      call\n      dup1\n      iszero\n      tag_136\n      jumpi\n      tag_314\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n    tag_315:\n      pop\n      pop\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":5983:5988  asset */\n      0x02\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sload\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6306:6312  lender */\n      0x06\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sload\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6291:6321  asset.transfer(lender, amount) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      swap2\n      dup3\n      and\n      0x04\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6291:6321  asset.transfer(lender, amount) */\n      dup3\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      mstore\n      0x24\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n      swap2\n      0x20\n      swap2\n      dup4\n      swap2\n      0x44\n      swap2\n      dup4\n      swap2\n      dup9\n      swap2\n      and\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6291:6321  asset.transfer(lender, amount) */\n      gas\n      call\n      dup1\n      iszero\n      tag_118\n      jumpi\n      tag_319\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n    tag_320:\n      pop\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6306:6312  lender */\n      0x06\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sload\n      mload(0x40)\n      swap2\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6337:6363  LoanClosed(lender, amount) */\n      0xcab22a4e95d29d40da2ace3f6ec72b49954a9bc7b2584f8fd47bf7f357a3ed6f\n      swap1\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n      swap1\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6337:6363  LoanClosed(lender, amount) */\n      log2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1755:1756  2 */\n      dup2\n      sstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      dup1\n      return\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6291:6321  asset.transfer(lender, amount) */\n    tag_319:\n      tag_321\n      swap1\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6291:6321  asset.transfer(lender, amount) */\n      returndatasize\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6291:6321  asset.transfer(lender, amount) */\n      gt\n      tag_142\n      jumpi\n      tag_144\n      dup2\n      dup4\n      tag_4\n      jump\t// in\n    tag_321:\n      jump(tag_320)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6237:6280  poolOrganizer.deregisterPool(address(this)) */\n    tag_314:\n      dup2\n      tag_325\n      swap2\n      tag_4\n      jump\t// in\n    tag_325:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      tag_326\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6237:6280  poolOrganizer.deregisterPool(address(this)) */\n      dup2\n      0x00\n      jump(tag_315)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n    tag_326:\n      pop\n      dup1\n      revert\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6116:6227  poolOrganizer.updateLoanState(... */\n    tag_308:\n      tag_328\n      swap2\n      swap3\n      pop\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x00\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6116:6227  poolOrganizer.updateLoanState(... */\n      swap1\n      tag_4\n      jump\t// in\n    tag_328:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x00\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":6116:6227  poolOrganizer.updateLoanState(... */\n      swap1\n      0x00\n      jump(tag_309)\n    tag_306:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_302:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":5983:6013  asset.balanceOf(address(this)) */\n      0x24\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      dup3\n      add\n      mstore\n      shl(0x60, 0x4e6f2066756e647320746f207769746864726177)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":5983:6013  asset.balanceOf(address(this)) */\n    tag_300:\n      swap1\n      pop\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":5983:6013  asset.balanceOf(address(this)) */\n      dup2\n      returndatasize\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":5983:6013  asset.balanceOf(address(this)) */\n      gt\n      tag_329\n      jumpi\n    tag_330:\n      dup2\n      tag_331\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":5983:6013  asset.balanceOf(address(this)) */\n      swap4\n      dup4\n      tag_4\n      jump\t// in\n    tag_331:\n      dup2\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sub\n      slt\n      tag_152\n      jumpi\n      mload\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":5983:6013  asset.balanceOf(address(this)) */\n      0x00\n      jump(tag_301)\n    tag_329:\n      returndatasize\n      swap2\n      pop\n      jump(tag_330)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n    tag_296:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1d\n      0x24\n      dup3\n      add\n      mstore\n      0x4c6f616e206973206e6f7420696e20612066756e646564207374617465000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_294:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_292:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x18\n      0x24\n      dup3\n      add\n      mstore\n      0x43616c6c6572206973206e6f7420746865206c656e6465720000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_20:\n      jumpi(tag_152, callvalue)\n      jumpi(tag_152, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      shl(0xe0, 0xffffffff)\n      dup2\n      and\n      dup1\n      swap2\n      sub\n      tag_152\n      jumpi\n      0x20\n      swap1\n      shl(0xe0, 0x7965db0b)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      dup2\n      eq\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup2\n      iszero\n      tag_340\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n    tag_341:\n      pop\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_340:\n      shl(0xe0, 0x01ffc9a7)\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      eq\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup3\n      jump(tag_341)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n    tag_18:\n      jumpi(tag_152, callvalue)\n      jumpi(tag_152, slt(add(not(0x03), calldatasize), 0x00))\n      dup1\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":975:999  keccak256(\"LENDER_ROLE\") */\n      0xc60d7a62d8843f2b14bc63f2a5240b187980481ad8c001a3caf4916aef3f667e\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n      swap3\n      mstore\n      return\n    tag_1:\n      calldataload(0x24)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_152\n      jumpi\n      jump\t// out\n    tag_2:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_152\n      jumpi\n      jump\t// out\n    tag_3:\n      swap2\n      swap1\n      0x20\n      dup4\n      add\n      swap3\n      0x03\n      dup3\n      lt\n      iszero\n      tag_294\n      jumpi\n      mstore\n      jump\t// out\n    tag_4:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_352\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_352:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_5:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_152\n      jumpi\n      mload\n      dup1\n      iszero\n      iszero\n      dup2\n      sub\n      tag_152\n      jumpi\n      swap1\n      jump\t// out\n    tag_9:\n      iszero\n      tag_358\n      jumpi\n      jump\t// out\n    tag_358:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x79, 0x2ab739bab83837b93a32b2103a37b5b2b7)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4551:4832  function flashFee(address token, uint256 amount)... */\n    tag_10:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4710:4715  asset */\n      0x02\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sload\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4685:4738  require(token == address(asset), \"Unsupported token\") */\n      tag_360\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      swap1\n      dup2\n      and\n      swap2\n      and\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4693:4716  token == address(asset) */\n      eq\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4685:4738  require(token == address(asset), \"Unsupported token\") */\n      tag_9\n      jump\t// in\n    tag_360:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4776:4792  flashLoanFeeRate */\n      0x07\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sload\n      swap1\n      dup2\n      dup2\n      mul\n      swap2\n      dup2\n      dup4\n      div\n      eq\n      swap1\n      iszero\n      or\n      iszero\n      tag_361\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4796:4801  10000 */\n      0x2710\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      swap1\n      div\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4551:4832  function flashFee(address token, uint256 amount)... */\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n    tag_361:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2431:2738  function _nonReentrantBefore() private {... */\n    tag_11:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1755:1756  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2558:2565  _status */\n      0x00\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      sload\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2558:2576  _status == ENTERED */\n      eq\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2554:2640  if (_status == ENTERED) {... */\n      tag_363\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1755:1756  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2558:2565  _status */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1755:1756  2 */\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2431:2738  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2554:2640  if (_status == ENTERED) {... */\n    tag_363:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2599:2629  ReentrancyGuardReentrantCall() */\n      shl(0xe0, 0x3ee5aeb5)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2558:2565  _status */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2599:2629  ReentrancyGuardReentrantCall() */\n      mstore\n      0x04\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2558:2565  _status */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2599:2629  ReentrancyGuardReentrantCall() */\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_12:\n      0x00\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x01\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3519:3542  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_365\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_365:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mstore(0x00, shl(0xe0, 0xe2517d3f))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      mstore\n      0x24\n      mstore\n      0x44\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_13:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0x95902c4d6c8ea17825d5632af066dcb87e033f1b2a91b49a7ad79e83f02c4dec)\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      tag_367\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n      mstore(0x20, 0x95902c4d6c8ea17825d5632af066dcb87e033f1b2a91b49a7ad79e83f02c4dec)\n      0x40\n      dup2\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x01\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap2\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      swap1\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":975:999  keccak256(\"LENDER_ROLE\") */\n      0xc60d7a62d8843f2b14bc63f2a5240b187980481ad8c001a3caf4916aef3f667e\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      swap1\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_367:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      pop\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_14:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x01\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      tag_369\n      jumpi\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x01\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      swap7\n      swap1\n      swap7\n      and\n      dup1\n      dup6\n      mstore\n      swap6\n      swap1\n      swap2\n      mstore\n      dup3\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      swap1\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_369:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      pop\n      pop\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_15:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x01\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      iszero\n      tag_369\n      jumpi\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x01\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      swap6\n      swap1\n      swap6\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap1\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":644:8083  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard, AccessControl {... */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220529c49a1c174c87525d21141ef07129a18f06108a365495bf724d08a23e85ab064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080346100e057601f6114d538819003918201601f19168301916001600160401b038311848410176100e45780849260a0946040528339810103126100e05780516001600160a01b03811691908290036100e057602081015160408201516001600160a01b03811691908290036100e05760608301516001600160a01b03811693908490036100e057608001519360015f5560018060a01b0319600254161760025560075560018060a01b0319600454161760045560018060a01b0319600554161760055560035560ff19600854166008556040516113dc90816100f98239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015610012575f80fd5b5f905f3560e01c908162abafe11461101e5750806301ffc9a714610fc8578063232fa73314610ca9578063248a9ca314610c7d5780632f2ff15d14610c3e57806336568abe14610bf957806338d52e0f14610bd05780635cffe9de146106d6578063613255ab146106265780638c9f305f146106085780638db57994146102a757806391d148541461025d5780639d585f7f1461023f578063a217fddf14610223578063bcead63e146101fa578063c19d93fb146101a7578063c51b9507146101d1578063c694b54c146101a7578063c9c363531461017e578063d547741f146101365763d9d98ce414610104575f80fd5b3461013357604036600319011261013357602061012b61012261106c565b60243590611123565b604051908152f35b80fd5b50346101335760403660031901126101335761017a600435610156611056565b90610175610170825f526001602052600160405f20015490565b61118b565b611322565b5080f35b50346101335780600319360112610133576005546040516001600160a01b039091168152602090f35b50346101335780600319360112610133576101cd60ff6008541660405191829182611082565b0390f35b50346101335780600319360112610133576004546040516001600160a01b039091168152602090f35b50346101335780600319360112610133576006546040516001600160a01b039091168152602090f35b5034610133578060031936011261013357602090604051908152f35b50346101335780600319360112610133576020600354604051908152f35b5034610133576040366003190112610133576040610279611056565b9160043581526001602052209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b50346101335780600319360112610133576102c061116d565b60ff6008541660038110156105f4576105b657600680546001600160a01b031916339081179091556002546040516370a0823160e01b815260048101929092526001600160a01b0316602082602481845afa9182156105ab578392610577575b5060035480921061052457604051636eb1769f60e11b8152336004820152306024820152602081604481855afa801561051957839185916104e0575b501061048f576040516323b872dd60e01b815233600482015230602482015260448101929092526020908290606490829086905af1801561046757610472575b506005546002546003546040516351c1572160e01b81523060048201526001600160a01b039283166024820152604481019190915291602091839160649183918791165af180156104675761043a575b506103f6336111c5565b50600160ff1960085416176008556003546040519081527f726d5f1a838fe31748f737fa3ae5539ccff95952adfc593a1299532b643ff7a860203392a26001815580f35b61045b9060203d602011610460575b6104538183611095565b8101906110cb565b6103ec565b503d610449565b6040513d84823e3d90fd5b61048a9060203d602011610460576104538183611095565b61039c565b60405162461bcd60e51b815260206004820152602360248201527f416c6c6f77616e6365206e6f742073657420666f72207468697320636f6e74726044820152621858dd60ea1b6064820152608490fd5b9150506020813d602011610511575b816104fc60209383611095565b8101031261050d578290515f61035c565b5f80fd5b3d91506104ef565b6040513d86823e3d90fd5b60405162461bcd60e51b815260206004820152602560248201527f496e73756666696369656e742062616c616e636520746f2066756e6420746865604482015264103637b0b760d91b6064820152608490fd5b9091506020813d6020116105a3575b8161059360209383611095565b8101031261050d5751905f610320565b3d9150610586565b6040513d85823e3d90fd5b60405162461bcd60e51b8152602060048201526016602482015275131bd85b881a5cc8185b1c9958591e48199d5b99195960521b6044820152606490fd5b634e487b7160e01b82526021600452602482fd5b50346101335780600319360112610133576020600754604051908152f35b50346101335760203660031901126101335761064061106c565b6002546001600160a01b0390811692911682036106cd576020602492604051938480926370a0823160e01b82523060048301525afa9081156106c1579061068e575b60209150604051908152f35b506020813d6020116106b9575b816106a860209383611095565b8101031261050d5760209051610682565b3d915061069b565b604051903d90823e3d90fd5b6020915061012b565b5034610133576080366003190112610133576004356001600160a01b038116919082900361013357610706611056565b6044359260643567ffffffffffffffff8111610bcc5736602382011215610bcc5780600401359067ffffffffffffffff8211610bc8573660248383010111610bc85761075061116d565b60ff600854166003811015610bb457600103610b7d576002546001600160a01b03858116959116919061078f90889061078a8886146110e3565b611123565b92604051926370a0823160e01b8452306004850152602084602481845afa938415610b39579088918295610b44575b5060405163a9059cbb60e01b81526001600160a01b0388166004820152602481018b9052916020918391829081604481015b03925af18015610b3957896020936024959360c493610b1e575b508060405196879586946323e30c8b60e01b86523360048701528d8387015260448601528a606486015260a060848601528260a4860152018484013781810183018b9052601f01601f1916810103018189885af18015610a70578690610ac8575b7f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9915003610a8f57818601808711610a7b576002546040516323b872dd60e01b81526001600160a01b038681166004830152306024830152604482019390935291602091839160649183918b91165af18015610a7057610a53575b506002546040516370a0823160e01b81523060048201526001600160a01b039091169190602081602481865afa908115610a48578791610a16575b50106109d15760065460405163a9059cbb60e01b81526001600160a01b03909116600482015260248101839052906020908290604490829089905af180156109c657957f9d0d497e678f62d6b162c97b9724a39f45fe674650dcd4a5e88ff6317e63764f926040926001986109a9575b5082519182526020820152a355602060405160018152f35b6109c19060203d602011610460576104538183611095565b610991565b6040513d87823e3d90fd5b60405162461bcd60e51b815260206004820152601b60248201527f466c617368206c6f616e2072657061796d656e74206661696c656400000000006044820152606490fd5b90506020813d602011610a40575b81610a3160209383611095565b8101031261050d57515f610921565b3d9150610a24565b6040513d89823e3d90fd5b610a6b9060203d602011610460576104538183611095565b6108e6565b6040513d88823e3d90fd5b634e487b7160e01b86526011600452602486fd5b60405162461bcd60e51b8152602060048201526011602482015270119b185cda081b1bd85b8819985a5b1959607a1b6044820152606490fd5b506020813d602011610b16575b81610ae260209383611095565b81010312610b12577f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9905161086b565b8580fd5b3d9150610ad5565b610b3490863d8811610460576104538183611095565b61080a565b6040513d8a823e3d90fd5b915093506020813d602011610b75575b81610b6160209383611095565b8101031261050d57519287906107f06107be565b3d9150610b54565b60405162461bcd60e51b815260206004820152600f60248201526e141bdbdb081b9bdd08199d5b991959608a1b6044820152606490fd5b634e487b7160e01b86526021600452602486fd5b8480fd5b8380fd5b50346101335780600319360112610133576002546040516001600160a01b039091168152602090f35b503461013357604036600319011261013357610c13611056565b336001600160a01b03821603610c2f5761017a90600435611322565b63334bd91960e11b8252600482fd5b50346101335760403660031901126101335761017a600435610c5e611056565b90610c78610170825f526001602052600160405f20015490565b611296565b503461013357602036600319011261013357602061012b6004355f526001602052600160405f20015490565b503461050d575f36600319011261050d57610cc261116d565b335f9081527f95902c4d6c8ea17825d5632af066dcb87e033f1b2a91b49a7ad79e83f02c4dec602052604090205460ff1615610f835760ff600854166003811015610f6f57600103610f2a576002546040516370a0823160e01b815230600482015290602090829060249082906001600160a01b03165afa908115610eb1575f91610ef8575b508015610ebc576008805460ff191660021790556004546001600160a01b0316803b1561050d575f809160446040518094819363a956239b60e01b8352306004840152600560248401525af18015610eb157610e9c575b5060045482906001600160a01b0316803b15610e9857818091602460405180948193637e72c7d760e01b83523060048401525af1801561046757610e83575b505060025460065460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291602091839160449183918891165af180156105ab57610e66575b506006546040519182526001600160a01b0316907fcab22a4e95d29d40da2ace3f6ec72b49954a9bc7b2584f8fd47bf7f357a3ed6f90602090a26001815580f35b610e7e9060203d602011610460576104538183611095565b610e25565b81610e8d91611095565b610e9857815f610dde565b5080fd5b610ea99192505f90611095565b5f905f610d9f565b6040513d5f823e3d90fd5b60405162461bcd60e51b81526020600482015260146024820152734e6f2066756e647320746f20776974686472617760601b6044820152606490fd5b90506020813d602011610f22575b81610f1360209383611095565b8101031261050d57515f610d48565b3d9150610f06565b60405162461bcd60e51b815260206004820152601d60248201527f4c6f616e206973206e6f7420696e20612066756e6465642073746174650000006044820152606490fd5b634e487b7160e01b5f52602160045260245ffd5b60405162461bcd60e51b815260206004820152601860248201527f43616c6c6572206973206e6f7420746865206c656e64657200000000000000006044820152606490fd5b3461050d57602036600319011261050d5760043563ffffffff60e01b811680910361050d57602090637965db0b60e01b811490811561100d575b506040519015158152f35b6301ffc9a760e01b14905082611002565b3461050d575f36600319011261050d57807fc60d7a62d8843f2b14bc63f2a5240b187980481ad8c001a3caf4916aef3f667e60209252f35b602435906001600160a01b038216820361050d57565b600435906001600160a01b038216820361050d57565b919060208301926003821015610f6f5752565b90601f8019910116810190811067ffffffffffffffff8211176110b757604052565b634e487b7160e01b5f52604160045260245ffd5b9081602091031261050d5751801515810361050d5790565b156110ea57565b60405162461bcd60e51b81526020600482015260116024820152702ab739bab83837b93a32b2103a37b5b2b760791b6044820152606490fd5b60025461113d916001600160a01b039081169116146110e3565b6007549081810291818304149015171561115957612710900490565b634e487b7160e01b5f52601160045260245ffd5b60025f541461117c5760025f55565b633ee5aeb560e01b5f5260045ffd5b5f81815260016020908152604080832033845290915290205460ff16156111af5750565b63e2517d3f60e01b5f523360045260245260445ffd5b6001600160a01b0381165f9081527f95902c4d6c8ea17825d5632af066dcb87e033f1b2a91b49a7ad79e83f02c4dec602052604090205460ff16611291576001600160a01b03165f8181527f95902c4d6c8ea17825d5632af066dcb87e033f1b2a91b49a7ad79e83f02c4dec60205260408120805460ff191660011790553391907fc60d7a62d8843f2b14bc63f2a5240b187980481ad8c001a3caf4916aef3f667e907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b505f90565b5f8181526001602090815260408083206001600160a01b038616845290915290205460ff1661131c575f8181526001602081815260408084206001600160a01b0396909616808552959091528220805460ff19169091179055339291907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50505f90565b5f8181526001602090815260408083206001600160a01b038616845290915290205460ff161561131c575f8181526001602090815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a460019056fea2646970667358221220529c49a1c174c87525d21141ef07129a18f06108a365495bf724d08a23e85ab064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0xE0 JUMPI PUSH1 0x1F PUSH2 0x14D5 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xE4 JUMPI DUP1 DUP5 SWAP3 PUSH1 0xA0 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xE0 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0xE0 JUMPI PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0xE0 JUMPI PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP4 SWAP1 DUP5 SWAP1 SUB PUSH2 0xE0 JUMPI PUSH1 0x80 ADD MLOAD SWAP4 PUSH1 0x1 PUSH0 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH1 0x7 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE PUSH1 0x3 SSTORE PUSH1 0xFF NOT PUSH1 0x8 SLOAD AND PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD PUSH2 0x13DC SWAP1 DUP2 PUSH2 0xF9 DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH3 0xABAFE1 EQ PUSH2 0x101E JUMPI POP DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xFC8 JUMPI DUP1 PUSH4 0x232FA733 EQ PUSH2 0xCA9 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xC7D JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0xC3E JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0xBF9 JUMPI DUP1 PUSH4 0x38D52E0F EQ PUSH2 0xBD0 JUMPI DUP1 PUSH4 0x5CFFE9DE EQ PUSH2 0x6D6 JUMPI DUP1 PUSH4 0x613255AB EQ PUSH2 0x626 JUMPI DUP1 PUSH4 0x8C9F305F EQ PUSH2 0x608 JUMPI DUP1 PUSH4 0x8DB57994 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x9D585F7F EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0xBCEAD63E EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xC19D93FB EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xC51B9507 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xC694B54C EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xC9C36353 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x136 JUMPI PUSH4 0xD9D98CE4 EQ PUSH2 0x104 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH1 0x20 PUSH2 0x12B PUSH2 0x122 PUSH2 0x106C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1123 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x133 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH2 0x17A PUSH1 0x4 CALLDATALOAD PUSH2 0x156 PUSH2 0x1056 JUMP JUMPDEST SWAP1 PUSH2 0x175 PUSH2 0x170 DUP3 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x118B JUMP JUMPDEST PUSH2 0x1322 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x133 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x133 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x133 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x133 JUMPI PUSH2 0x1CD PUSH1 0xFF PUSH1 0x8 SLOAD AND PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1082 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x133 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x133 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x133 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x133 JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x133 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x133 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x133 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x133 JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x133 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH1 0x40 PUSH2 0x279 PUSH2 0x1056 JUMP JUMPDEST SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x133 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x133 JUMPI PUSH2 0x2C0 PUSH2 0x116D JUMP JUMPDEST PUSH1 0xFF PUSH1 0x8 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x5F4 JUMPI PUSH2 0x5B6 JUMPI PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x5AB JUMPI DUP4 SWAP3 PUSH2 0x577 JUMPI JUMPDEST POP PUSH1 0x3 SLOAD DUP1 SWAP3 LT PUSH2 0x524 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x519 JUMPI DUP4 SWAP2 DUP6 SWAP2 PUSH2 0x4E0 JUMPI JUMPDEST POP LT PUSH2 0x48F JUMPI PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP7 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x467 JUMPI PUSH2 0x472 JUMPI JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x51C15721 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x64 SWAP2 DUP4 SWAP2 DUP8 SWAP2 AND GAS CALL DUP1 ISZERO PUSH2 0x467 JUMPI PUSH2 0x43A JUMPI JUMPDEST POP PUSH2 0x3F6 CALLER PUSH2 0x11C5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x726D5F1A838FE31748F737FA3AE5539CCFF95952ADFC593A1299532B643FF7A8 PUSH1 0x20 CALLER SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH2 0x45B SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x460 JUMPI JUMPDEST PUSH2 0x453 DUP2 DUP4 PUSH2 0x1095 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH2 0x3EC JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x449 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x48A SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x460 JUMPI PUSH2 0x453 DUP2 DUP4 PUSH2 0x1095 JUMP JUMPDEST PUSH2 0x39C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C6F77616E6365206E6F742073657420666F72207468697320636F6E7472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1858DD PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x511 JUMPI JUMPDEST DUP2 PUSH2 0x4FC PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1095 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x50D JUMPI DUP3 SWAP1 MLOAD PUSH0 PUSH2 0x35C JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E636520746F2066756E6420746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x103637B0B7 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x5A3 JUMPI JUMPDEST DUP2 PUSH2 0x593 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1095 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x50D JUMPI MLOAD SWAP1 PUSH0 PUSH2 0x320 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x131BD85B881A5CC8185B1C9958591E48199D5B991959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x133 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x133 JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x133 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH2 0x640 PUSH2 0x106C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP2 AND DUP3 SUB PUSH2 0x6CD JUMPI PUSH1 0x20 PUSH1 0x24 SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x6C1 JUMPI SWAP1 PUSH2 0x68E JUMPI JUMPDEST PUSH1 0x20 SWAP2 POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x6B9 JUMPI JUMPDEST DUP2 PUSH2 0x6A8 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1095 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x50D JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0x682 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x69B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 POP PUSH2 0x12B JUMP JUMPDEST POP CALLVALUE PUSH2 0x133 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x133 JUMPI PUSH2 0x706 PUSH2 0x1056 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xBCC JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xBCC JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xBC8 JUMPI CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0xBC8 JUMPI PUSH2 0x750 PUSH2 0x116D JUMP JUMPDEST PUSH1 0xFF PUSH1 0x8 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xBB4 JUMPI PUSH1 0x1 SUB PUSH2 0xB7D JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP6 SWAP2 AND SWAP2 SWAP1 PUSH2 0x78F SWAP1 DUP9 SWAP1 PUSH2 0x78A DUP9 DUP7 EQ PUSH2 0x10E3 JUMP JUMPDEST PUSH2 0x1123 JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP5 MSTORE ADDRESS PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x20 DUP5 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0xB39 JUMPI SWAP1 DUP9 SWAP2 DUP3 SWAP6 PUSH2 0xB44 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP12 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 DUP3 SWAP1 DUP2 PUSH1 0x44 DUP2 ADD JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xB39 JUMPI DUP10 PUSH1 0x20 SWAP4 PUSH1 0x24 SWAP6 SWAP4 PUSH1 0xC4 SWAP4 PUSH2 0xB1E JUMPI JUMPDEST POP DUP1 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0x23E30C8B PUSH1 0xE0 SHL DUP7 MSTORE CALLER PUSH1 0x4 DUP8 ADD MSTORE DUP14 DUP4 DUP8 ADD MSTORE PUSH1 0x44 DUP7 ADD MSTORE DUP11 PUSH1 0x64 DUP7 ADD MSTORE PUSH1 0xA0 PUSH1 0x84 DUP7 ADD MSTORE DUP3 PUSH1 0xA4 DUP7 ADD MSTORE ADD DUP5 DUP5 ADD CALLDATACOPY DUP2 DUP2 ADD DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD DUP2 DUP10 DUP9 GAS CALL DUP1 ISZERO PUSH2 0xA70 JUMPI DUP7 SWAP1 PUSH2 0xAC8 JUMPI JUMPDEST PUSH32 0x439148F0BBC682CA079E46D6E2C2F0C1E3B820F1A291B069D8882ABF8CF18DD9 SWAP2 POP SUB PUSH2 0xA8F JUMPI DUP2 DUP7 ADD DUP1 DUP8 GT PUSH2 0xA7B JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x64 SWAP2 DUP4 SWAP2 DUP12 SWAP2 AND GAS CALL DUP1 ISZERO PUSH2 0xA70 JUMPI PUSH2 0xA53 JUMPI JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xA48 JUMPI DUP8 SWAP2 PUSH2 0xA16 JUMPI JUMPDEST POP LT PUSH2 0x9D1 JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP10 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x9C6 JUMPI SWAP6 PUSH32 0x9D0D497E678F62D6B162C97B9724A39F45FE674650DCD4A5E88FF6317E63764F SWAP3 PUSH1 0x40 SWAP3 PUSH1 0x1 SWAP9 PUSH2 0x9A9 JUMPI JUMPDEST POP DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG3 SSTORE PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x9C1 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x460 JUMPI PUSH2 0x453 DUP2 DUP4 PUSH2 0x1095 JUMP JUMPDEST PUSH2 0x991 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C617368206C6F616E2072657061796D656E74206661696C65640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xA40 JUMPI JUMPDEST DUP2 PUSH2 0xA31 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1095 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x50D JUMPI MLOAD PUSH0 PUSH2 0x921 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xA6B SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x460 JUMPI PUSH2 0x453 DUP2 DUP4 PUSH2 0x1095 JUMP JUMPDEST PUSH2 0x8E6 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x119B185CDA081B1BD85B8819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB16 JUMPI JUMPDEST DUP2 PUSH2 0xAE2 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1095 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB12 JUMPI PUSH32 0x439148F0BBC682CA079E46D6E2C2F0C1E3B820F1A291B069D8882ABF8CF18DD9 SWAP1 MLOAD PUSH2 0x86B JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xAD5 JUMP JUMPDEST PUSH2 0xB34 SWAP1 DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x460 JUMPI PUSH2 0x453 DUP2 DUP4 PUSH2 0x1095 JUMP JUMPDEST PUSH2 0x80A JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 POP SWAP4 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB75 JUMPI JUMPDEST DUP2 PUSH2 0xB61 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1095 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x50D JUMPI MLOAD SWAP3 DUP8 SWAP1 PUSH2 0x7F0 PUSH2 0x7BE JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xB54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x141BDBDB081B9BDD08199D5B991959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x133 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x133 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x133 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH2 0xC13 PUSH2 0x1056 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0xC2F JUMPI PUSH2 0x17A SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x1322 JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x133 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH2 0x17A PUSH1 0x4 CALLDATALOAD PUSH2 0xC5E PUSH2 0x1056 JUMP JUMPDEST SWAP1 PUSH2 0xC78 PUSH2 0x170 DUP3 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1296 JUMP JUMPDEST POP CALLVALUE PUSH2 0x133 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH1 0x20 PUSH2 0x12B PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x50D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x50D JUMPI PUSH2 0xCC2 PUSH2 0x116D JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x95902C4D6C8EA17825D5632AF066DCB87E033F1B2A91B49A7AD79E83F02C4DEC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF83 JUMPI PUSH1 0xFF PUSH1 0x8 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xF6F JUMPI PUSH1 0x1 SUB PUSH2 0xF2A JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xEB1 JUMPI PUSH0 SWAP2 PUSH2 0xEF8 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0xEBC JUMPI PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x50D JUMPI PUSH0 DUP1 SWAP2 PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0xA956239B PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0xEB1 JUMPI PUSH2 0xE9C JUMPI JUMPDEST POP PUSH1 0x4 SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0xE98 JUMPI DUP2 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x7E72C7D7 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x467 JUMPI PUSH2 0xE83 JUMPI JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 DUP9 SWAP2 AND GAS CALL DUP1 ISZERO PUSH2 0x5AB JUMPI PUSH2 0xE66 JUMPI JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xCAB22A4E95D29D40DA2ACE3F6EC72B49954A9BC7B2584F8FD47BF7F357A3ED6F SWAP1 PUSH1 0x20 SWAP1 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH2 0xE7E SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x460 JUMPI PUSH2 0x453 DUP2 DUP4 PUSH2 0x1095 JUMP JUMPDEST PUSH2 0xE25 JUMP JUMPDEST DUP2 PUSH2 0xE8D SWAP2 PUSH2 0x1095 JUMP JUMPDEST PUSH2 0xE98 JUMPI DUP2 PUSH0 PUSH2 0xDDE JUMP JUMPDEST POP DUP1 REVERT JUMPDEST PUSH2 0xEA9 SWAP2 SWAP3 POP PUSH0 SWAP1 PUSH2 0x1095 JUMP JUMPDEST PUSH0 SWAP1 PUSH0 PUSH2 0xD9F JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F2066756E647320746F207769746864726177 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xF22 JUMPI JUMPDEST DUP2 PUSH2 0xF13 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1095 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x50D JUMPI MLOAD PUSH0 PUSH2 0xD48 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xF06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6F616E206973206E6F7420696E20612066756E646564207374617465000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F7420746865206C656E6465720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x50D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x50D JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x50D JUMPI PUSH1 0x20 SWAP1 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x100D JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP3 PUSH2 0x1002 JUMP JUMPDEST CALLVALUE PUSH2 0x50D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x50D JUMPI DUP1 PUSH32 0xC60D7A62D8843F2B14BC63F2A5240B187980481AD8C001A3CAF4916AEF3F667E PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x50D JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x50D JUMPI JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP3 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0xF6F JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x10B7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x50D JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x50D JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x10EA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2AB739BAB83837B93A32B2103A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x113D SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1159 JUMPI PUSH2 0x2710 SWAP1 DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x2 PUSH0 SLOAD EQ PUSH2 0x117C JUMPI PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x11AF JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x95902C4D6C8EA17825D5632AF066DCB87E033F1B2A91B49A7AD79E83F02C4DEC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1291 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH32 0x95902C4D6C8EA17825D5632AF066DCB87E033F1B2A91B49A7AD79E83F02C4DEC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 SWAP1 PUSH32 0xC60D7A62D8843F2B14BC63F2A5240B187980481AD8C001A3CAF4916AEF3F667E SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x131C JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND DUP1 DUP6 MSTORE SWAP6 SWAP1 SWAP2 MSTORE DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x131C JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE SWAP13 BLOBHASH LOG1 0xC1 PUSH21 0xC87525D21141EF07129A18F06108A365495BF724D0 DUP11 0x23 0xE8 GAS 0xB0 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "644:7439:11:-:0;;;;;;;;;;;;;-1:-1:-1;;644:7439:11;;;;-1:-1:-1;;;;;644:7439:11;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;644:7439:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;644:7439:11;;;;;;;;;;;;;-1:-1:-1;;;;;644:7439:11;;;;;;;;;;;;;;-1:-1:-1;644:7439:11;;;;;;;2656:14;644:7439;;;2656:14;644:7439;2680:36;644:7439;;;;;;;2726:30;644:7439;;;2726:30;644:7439;;;;;;;2766:48;644:7439;;;2766:48;644:7439;2836:24;644:7439;;;2870:36;644:7439;;2870:36;644:7439;;;;;;;;;;;-1:-1:-1;644:7439:11;;;;;;-1:-1:-1;644:7439:11;;;;;-1:-1:-1;644:7439:11"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 4204,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_14394": {
									"entryPoint": 4182,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_bool_fromMemory": {
									"entryPoint": 4299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_address_address_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_address_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_enum_FlashLoanState": {
									"entryPoint": 4226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 4245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_checkRole": {
									"entryPoint": 4491,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_flashFee": {
									"entryPoint": 4387,
									"id": 1142,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_getRoleAdmin": {
									"entryPoint": null,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_grantRole": {
									"entryPoint": 4758,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_grantRole_14398": {
									"entryPoint": 4549,
									"id": 256,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_nonReentrantBefore": {
									"entryPoint": 4461,
									"id": 594,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_revokeRole": {
									"entryPoint": 4898,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"require_helper_stringliteral": {
									"entryPoint": 4323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH3 0xABAFE1 EQ PUSH2 0x101E JUMPI POP DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xFC8 JUMPI DUP1 PUSH4 0x232FA733 EQ PUSH2 0xCA9 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xC7D JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0xC3E JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0xBF9 JUMPI DUP1 PUSH4 0x38D52E0F EQ PUSH2 0xBD0 JUMPI DUP1 PUSH4 0x5CFFE9DE EQ PUSH2 0x6D6 JUMPI DUP1 PUSH4 0x613255AB EQ PUSH2 0x626 JUMPI DUP1 PUSH4 0x8C9F305F EQ PUSH2 0x608 JUMPI DUP1 PUSH4 0x8DB57994 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x9D585F7F EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0xBCEAD63E EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xC19D93FB EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xC51B9507 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xC694B54C EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xC9C36353 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x136 JUMPI PUSH4 0xD9D98CE4 EQ PUSH2 0x104 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH1 0x20 PUSH2 0x12B PUSH2 0x122 PUSH2 0x106C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1123 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x133 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH2 0x17A PUSH1 0x4 CALLDATALOAD PUSH2 0x156 PUSH2 0x1056 JUMP JUMPDEST SWAP1 PUSH2 0x175 PUSH2 0x170 DUP3 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x118B JUMP JUMPDEST PUSH2 0x1322 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x133 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x133 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x133 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x133 JUMPI PUSH2 0x1CD PUSH1 0xFF PUSH1 0x8 SLOAD AND PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1082 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x133 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x133 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x133 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x133 JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x133 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x133 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x133 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x133 JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x133 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH1 0x40 PUSH2 0x279 PUSH2 0x1056 JUMP JUMPDEST SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x133 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x133 JUMPI PUSH2 0x2C0 PUSH2 0x116D JUMP JUMPDEST PUSH1 0xFF PUSH1 0x8 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x5F4 JUMPI PUSH2 0x5B6 JUMPI PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x5AB JUMPI DUP4 SWAP3 PUSH2 0x577 JUMPI JUMPDEST POP PUSH1 0x3 SLOAD DUP1 SWAP3 LT PUSH2 0x524 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x519 JUMPI DUP4 SWAP2 DUP6 SWAP2 PUSH2 0x4E0 JUMPI JUMPDEST POP LT PUSH2 0x48F JUMPI PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP7 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x467 JUMPI PUSH2 0x472 JUMPI JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x51C15721 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x64 SWAP2 DUP4 SWAP2 DUP8 SWAP2 AND GAS CALL DUP1 ISZERO PUSH2 0x467 JUMPI PUSH2 0x43A JUMPI JUMPDEST POP PUSH2 0x3F6 CALLER PUSH2 0x11C5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x726D5F1A838FE31748F737FA3AE5539CCFF95952ADFC593A1299532B643FF7A8 PUSH1 0x20 CALLER SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH2 0x45B SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x460 JUMPI JUMPDEST PUSH2 0x453 DUP2 DUP4 PUSH2 0x1095 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH2 0x3EC JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x449 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x48A SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x460 JUMPI PUSH2 0x453 DUP2 DUP4 PUSH2 0x1095 JUMP JUMPDEST PUSH2 0x39C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C6F77616E6365206E6F742073657420666F72207468697320636F6E7472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1858DD PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x511 JUMPI JUMPDEST DUP2 PUSH2 0x4FC PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1095 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x50D JUMPI DUP3 SWAP1 MLOAD PUSH0 PUSH2 0x35C JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E636520746F2066756E6420746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x103637B0B7 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x5A3 JUMPI JUMPDEST DUP2 PUSH2 0x593 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1095 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x50D JUMPI MLOAD SWAP1 PUSH0 PUSH2 0x320 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x131BD85B881A5CC8185B1C9958591E48199D5B991959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x133 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x133 JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x133 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH2 0x640 PUSH2 0x106C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP2 AND DUP3 SUB PUSH2 0x6CD JUMPI PUSH1 0x20 PUSH1 0x24 SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x6C1 JUMPI SWAP1 PUSH2 0x68E JUMPI JUMPDEST PUSH1 0x20 SWAP2 POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x6B9 JUMPI JUMPDEST DUP2 PUSH2 0x6A8 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1095 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x50D JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0x682 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x69B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 POP PUSH2 0x12B JUMP JUMPDEST POP CALLVALUE PUSH2 0x133 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x133 JUMPI PUSH2 0x706 PUSH2 0x1056 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xBCC JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xBCC JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xBC8 JUMPI CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0xBC8 JUMPI PUSH2 0x750 PUSH2 0x116D JUMP JUMPDEST PUSH1 0xFF PUSH1 0x8 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xBB4 JUMPI PUSH1 0x1 SUB PUSH2 0xB7D JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP6 SWAP2 AND SWAP2 SWAP1 PUSH2 0x78F SWAP1 DUP9 SWAP1 PUSH2 0x78A DUP9 DUP7 EQ PUSH2 0x10E3 JUMP JUMPDEST PUSH2 0x1123 JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP5 MSTORE ADDRESS PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x20 DUP5 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0xB39 JUMPI SWAP1 DUP9 SWAP2 DUP3 SWAP6 PUSH2 0xB44 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP12 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 DUP3 SWAP1 DUP2 PUSH1 0x44 DUP2 ADD JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xB39 JUMPI DUP10 PUSH1 0x20 SWAP4 PUSH1 0x24 SWAP6 SWAP4 PUSH1 0xC4 SWAP4 PUSH2 0xB1E JUMPI JUMPDEST POP DUP1 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0x23E30C8B PUSH1 0xE0 SHL DUP7 MSTORE CALLER PUSH1 0x4 DUP8 ADD MSTORE DUP14 DUP4 DUP8 ADD MSTORE PUSH1 0x44 DUP7 ADD MSTORE DUP11 PUSH1 0x64 DUP7 ADD MSTORE PUSH1 0xA0 PUSH1 0x84 DUP7 ADD MSTORE DUP3 PUSH1 0xA4 DUP7 ADD MSTORE ADD DUP5 DUP5 ADD CALLDATACOPY DUP2 DUP2 ADD DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD DUP2 DUP10 DUP9 GAS CALL DUP1 ISZERO PUSH2 0xA70 JUMPI DUP7 SWAP1 PUSH2 0xAC8 JUMPI JUMPDEST PUSH32 0x439148F0BBC682CA079E46D6E2C2F0C1E3B820F1A291B069D8882ABF8CF18DD9 SWAP2 POP SUB PUSH2 0xA8F JUMPI DUP2 DUP7 ADD DUP1 DUP8 GT PUSH2 0xA7B JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x64 SWAP2 DUP4 SWAP2 DUP12 SWAP2 AND GAS CALL DUP1 ISZERO PUSH2 0xA70 JUMPI PUSH2 0xA53 JUMPI JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xA48 JUMPI DUP8 SWAP2 PUSH2 0xA16 JUMPI JUMPDEST POP LT PUSH2 0x9D1 JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP10 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x9C6 JUMPI SWAP6 PUSH32 0x9D0D497E678F62D6B162C97B9724A39F45FE674650DCD4A5E88FF6317E63764F SWAP3 PUSH1 0x40 SWAP3 PUSH1 0x1 SWAP9 PUSH2 0x9A9 JUMPI JUMPDEST POP DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG3 SSTORE PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x9C1 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x460 JUMPI PUSH2 0x453 DUP2 DUP4 PUSH2 0x1095 JUMP JUMPDEST PUSH2 0x991 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C617368206C6F616E2072657061796D656E74206661696C65640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xA40 JUMPI JUMPDEST DUP2 PUSH2 0xA31 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1095 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x50D JUMPI MLOAD PUSH0 PUSH2 0x921 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xA6B SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x460 JUMPI PUSH2 0x453 DUP2 DUP4 PUSH2 0x1095 JUMP JUMPDEST PUSH2 0x8E6 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x119B185CDA081B1BD85B8819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB16 JUMPI JUMPDEST DUP2 PUSH2 0xAE2 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1095 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB12 JUMPI PUSH32 0x439148F0BBC682CA079E46D6E2C2F0C1E3B820F1A291B069D8882ABF8CF18DD9 SWAP1 MLOAD PUSH2 0x86B JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xAD5 JUMP JUMPDEST PUSH2 0xB34 SWAP1 DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x460 JUMPI PUSH2 0x453 DUP2 DUP4 PUSH2 0x1095 JUMP JUMPDEST PUSH2 0x80A JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 POP SWAP4 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB75 JUMPI JUMPDEST DUP2 PUSH2 0xB61 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1095 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x50D JUMPI MLOAD SWAP3 DUP8 SWAP1 PUSH2 0x7F0 PUSH2 0x7BE JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xB54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x141BDBDB081B9BDD08199D5B991959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x133 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x133 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x133 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH2 0xC13 PUSH2 0x1056 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0xC2F JUMPI PUSH2 0x17A SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x1322 JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x133 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH2 0x17A PUSH1 0x4 CALLDATALOAD PUSH2 0xC5E PUSH2 0x1056 JUMP JUMPDEST SWAP1 PUSH2 0xC78 PUSH2 0x170 DUP3 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1296 JUMP JUMPDEST POP CALLVALUE PUSH2 0x133 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH1 0x20 PUSH2 0x12B PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x50D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x50D JUMPI PUSH2 0xCC2 PUSH2 0x116D JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x95902C4D6C8EA17825D5632AF066DCB87E033F1B2A91B49A7AD79E83F02C4DEC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF83 JUMPI PUSH1 0xFF PUSH1 0x8 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xF6F JUMPI PUSH1 0x1 SUB PUSH2 0xF2A JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xEB1 JUMPI PUSH0 SWAP2 PUSH2 0xEF8 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0xEBC JUMPI PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x50D JUMPI PUSH0 DUP1 SWAP2 PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0xA956239B PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0xEB1 JUMPI PUSH2 0xE9C JUMPI JUMPDEST POP PUSH1 0x4 SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0xE98 JUMPI DUP2 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x7E72C7D7 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x467 JUMPI PUSH2 0xE83 JUMPI JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 DUP9 SWAP2 AND GAS CALL DUP1 ISZERO PUSH2 0x5AB JUMPI PUSH2 0xE66 JUMPI JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xCAB22A4E95D29D40DA2ACE3F6EC72B49954A9BC7B2584F8FD47BF7F357A3ED6F SWAP1 PUSH1 0x20 SWAP1 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH2 0xE7E SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x460 JUMPI PUSH2 0x453 DUP2 DUP4 PUSH2 0x1095 JUMP JUMPDEST PUSH2 0xE25 JUMP JUMPDEST DUP2 PUSH2 0xE8D SWAP2 PUSH2 0x1095 JUMP JUMPDEST PUSH2 0xE98 JUMPI DUP2 PUSH0 PUSH2 0xDDE JUMP JUMPDEST POP DUP1 REVERT JUMPDEST PUSH2 0xEA9 SWAP2 SWAP3 POP PUSH0 SWAP1 PUSH2 0x1095 JUMP JUMPDEST PUSH0 SWAP1 PUSH0 PUSH2 0xD9F JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F2066756E647320746F207769746864726177 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xF22 JUMPI JUMPDEST DUP2 PUSH2 0xF13 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1095 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x50D JUMPI MLOAD PUSH0 PUSH2 0xD48 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xF06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6F616E206973206E6F7420696E20612066756E646564207374617465000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F7420746865206C656E6465720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x50D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x50D JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x50D JUMPI PUSH1 0x20 SWAP1 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x100D JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP3 PUSH2 0x1002 JUMP JUMPDEST CALLVALUE PUSH2 0x50D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x50D JUMPI DUP1 PUSH32 0xC60D7A62D8843F2B14BC63F2A5240B187980481AD8C001A3CAF4916AEF3F667E PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x50D JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x50D JUMPI JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP3 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0xF6F JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x10B7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x50D JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x50D JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x10EA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2AB739BAB83837B93A32B2103A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x113D SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1159 JUMPI PUSH2 0x2710 SWAP1 DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x2 PUSH0 SLOAD EQ PUSH2 0x117C JUMPI PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x11AF JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x95902C4D6C8EA17825D5632AF066DCB87E033F1B2A91B49A7AD79E83F02C4DEC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1291 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH32 0x95902C4D6C8EA17825D5632AF066DCB87E033F1B2A91B49A7AD79E83F02C4DEC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 SWAP1 PUSH32 0xC60D7A62D8843F2B14BC63F2A5240B187980481AD8C001A3CAF4916AEF3F667E SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x131C JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND DUP1 DUP6 MSTORE SWAP6 SWAP1 SWAP2 MSTORE DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x131C JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE SWAP13 BLOBHASH LOG1 0xC1 PUSH21 0xC87525D21141EF07129A18F06108A365495BF724D0 DUP11 0x23 0xE8 GAS 0xB0 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "644:7439:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;644:7439:11;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;644:7439:11;;;;4747:26:0;644:7439:11;;;;:::i;:::-;4717:18:0;2475:4;4717:18;;-1:-1:-1;644:7439:11;3901:6:0;644:7439:11;;3901:6:0;644:7439:11;-1:-1:-1;644:7439:11;3901:22:0;644:7439:11;3810:120:0;;4717:18;2475:4;:::i;:::-;4747:26;:::i;:::-;;644:7439:11;;;;;;;;;;;;;;;877:53;644:7439;;;-1:-1:-1;;;;;644:7439:11;;;;;;;;;;;;;;;;;;;;;;;8069:5;644:7439;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;644:7439:11;;;;;;;;;;;;;;;;;;;;;1005:21;644:7439;;;-1:-1:-1;;;;;644:7439:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;805:25;644:7439;;;;;;;;;;;;;;-1:-1:-1;;644:7439:11;;;;;;;:::i;:::-;;;;;;;;;;2954:29:0;644:7439:11;;;;;;-1:-1:-1;644:7439:11;;;;;;-1:-1:-1;644:7439:11;;;;;;;;;;;;;;;;;;;;;;;;2322:103:6;;:::i;:::-;644:7439:11;3068:5;644:7439;;;;;;;;;;3142:19;644:7439;;-1:-1:-1;;;;;;644:7439:11;3151:10;644:7439;;;;;;3226:5;644:7439;;;-1:-1:-1;;;3226:27:11;;644:7439;3226:27;;644:7439;;;;-1:-1:-1;;;;;644:7439:11;;;3226:27;644:7439;;3226:27;;;;;;;;;;;644:7439;;;;3226:41;;;644:7439;;;;-1:-1:-1;;;3391:42:11;;3151:10;644:7439;3391:42;;644:7439;3427:4;3226:27;644:7439;;;;;3391:42;644:7439;3391:42;;;;;;;;;;;;;644:7439;3391:56;;644:7439;;;;-1:-1:-1;;;3541:57:11;;3151:10;644:7439;3541:57;;644:7439;3427:4;644:7439;;;;;;;;;;;;;;;;;;;;;3541:57;;;;;;;;644:7439;-1:-1:-1;3638:22:11;644:7439;3226:5;644:7439;;;;;-1:-1:-1;;;3638:78:11;;3427:4;644:7439;3638:78;;644:7439;-1:-1:-1;;;;;644:7439:11;;;;;;;;;;;;;;;;;;;;;;;;;;3638:78;;;;;;;;644:7439;3151:10;3749:35;3151:10;3749:35;:::i;:::-;;644:7439;;;3068:5;644:7439;;;3068:5;644:7439;;;;;;;;3863:34;644:7439;3151:10;3863:34;;644:7439;1755:1:6;;644:7439:11;;3638:78;;;644:7439;3638:78;644:7439;3638:78;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;644:7439;;;;;;;;;3541:57;;;644:7439;3541:57;644:7439;3541:57;;;;;;;:::i;:::-;;;644:7439;;;-1:-1:-1;;;644:7439:11;;;;;;;;3226:27;644:7439;;;;3391:42;644:7439;;;-1:-1:-1;;;644:7439:11;;;;;;;3391:42;;;;644:7439;3391:42;;644:7439;3391:42;;;;;;644:7439;3391:42;;;:::i;:::-;;;644:7439;;;;;;;3391:42;;;644:7439;-1:-1:-1;644:7439:11;;3391:42;;;-1:-1:-1;3391:42:11;;;644:7439;;;;;;;;;;;;-1:-1:-1;;;644:7439:11;;;;;;;;3226:27;644:7439;;;;;;;;-1:-1:-1;;;644:7439:11;;;;;;;3226:27;;;;644:7439;3226:27;;644:7439;3226:27;;;;;;644:7439;3226:27;;;:::i;:::-;;;644:7439;;;;;3226:27;;;;;;;-1:-1:-1;3226:27:11;;;644:7439;;;;;;;;;;;;-1:-1:-1;;;644:7439:11;;;;;;;;;;;;-1:-1:-1;;;644:7439:11;;;;;;;;-1:-1:-1;;;644:7439:11;;;;;;;;;;;;;;;;;;;;;;1147:31;644:7439;;;;;;;;;;;;;;-1:-1:-1;;644:7439:11;;;;;;:::i;:::-;4269:5;644:7439;-1:-1:-1;;;;;644:7439:11;;;;;;4252:23;;;;644:7439;4278:30;644:7439;;;;;;;;;;4278:30;;4302:4;644:7439;4278:30;;644:7439;4278:30;;;;;;;;;;4252:60;644:7439;4252:60;;644:7439;;;;;;4278:30;;644:7439;4278:30;;644:7439;4278:30;;;;;;644:7439;4278:30;;;:::i;:::-;;;644:7439;;;;;;;4278:30;;;;;-1:-1:-1;4278:30:11;;;644:7439;;;;;;;;;;4252:60;644:7439;4252:60;;;;644:7439;;;;;;;-1:-1:-1;;644:7439:11;;;;;;-1:-1:-1;;;;;644:7439:11;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2322:103:6;;:::i;:::-;644:7439:11;5475:5;644:7439;;;;;;;;;5475:30;644:7439;;6998:5;644:7439;-1:-1:-1;;;;;644:7439:11;;;;;;;;7056:23;;644:7439;;6973:53;6981:23;;;6973:53;:::i;:::-;7056:23;:::i;:::-;644:7439;;;;;;;7113:30;;7137:4;644:7439;7113:30;;644:7439;;7113:30;644:7439;7113:30;;;;;;;;;;;;;;;;644:7439;-1:-1:-1;644:7439:11;;-1:-1:-1;;;7154:41:11;;-1:-1:-1;;;;;644:7439:11;;;7154:41;;644:7439;;;;;;;;;;;;;;;;;;7154:41;;;;;;;;;;644:7439;7154:41;644:7439;7154:41;;644:7439;7154:41;;;644:7439;;;;;;;;;;;;;7227:63;;7248:10;644:7439;7227:63;;644:7439;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;644:7439:11;;;7227:63;;;644:7439;7227:63;;;;;;;;;;;644:7439;7310:45;7227:128;;;644:7439;;;;;;;;;;6998:5;644:7439;;;-1:-1:-1;;;7457:64:11;;-1:-1:-1;;;;;644:7439:11;;;;7457:64;;644:7439;7137:4;644:7439;;;;;;;;;;;;;;;;;;;;;;;7457:64;;;;;;;;644:7439;-1:-1:-1;6998:5:11;644:7439;;;-1:-1:-1;;;7553:30:11;;7137:4;644:7439;7553:30;;644:7439;-1:-1:-1;;;;;644:7439:11;;;;;;;;;;7553:30;;;;;;;;;;;644:7439;7553:47;;644:7439;;7744:6;644:7439;;;-1:-1:-1;;;7729:32:11;;-1:-1:-1;;;;;644:7439:11;;;;7729:32;;644:7439;;;;;;;;;;;;;;;;;;7729:32;;;;;;;7777:61;7729:32;644:7439;7729:32;644:7439;7729:32;;;644:7439;;;;;;;;;;;7777:61;1755:1:6;644:7439:11;;;;;;;7729:32;;;644:7439;7729:32;644:7439;7729:32;;;;;;;:::i;:::-;;;;644:7439;;;;;;;;;;;;-1:-1:-1;;;644:7439:11;;;;;;;;;;;;;;;;;;;;7553:30;;;644:7439;7553:30;;644:7439;7553:30;;;;;;644:7439;7553:30;;;:::i;:::-;;;644:7439;;;;;7553:30;;;;;;-1:-1:-1;7553:30:11;;;644:7439;;;;;;;;;7457:64;;;644:7439;7457:64;644:7439;7457:64;;;;;;;:::i;:::-;;;;644:7439;;;;;;;;;;-1:-1:-1;;;644:7439:11;;;;;;;;;;;-1:-1:-1;;;644:7439:11;;;;;;;;;;;;-1:-1:-1;;;644:7439:11;;;;;;;7227:63;;644:7439;7227:63;;644:7439;7227:63;;;;;;644:7439;7227:63;;;:::i;:::-;;;644:7439;;;;7310:45;644:7439;;7227:63;;644:7439;;;;7227:63;;;-1:-1:-1;7227:63:11;;7154:41;;;;;;;;;;;;;:::i;:::-;;;;644:7439;;;;;;;;;7113:30;;;;;644:7439;7113:30;;644:7439;7113:30;;;;;;644:7439;7113:30;;;:::i;:::-;;;644:7439;;;;;;;;7154:41;7113:30;;;;;-1:-1:-1;7113:30:11;;644:7439;;;-1:-1:-1;;;644:7439:11;;;;;;;;;;;;-1:-1:-1;;;644:7439:11;;;;;;;;-1:-1:-1;;;644:7439:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;780:19;644:7439;;;-1:-1:-1;;;;;644:7439:11;;;;;;;;;;;;;;;-1:-1:-1;;644:7439:11;;;;;;:::i;:::-;735:10:5;-1:-1:-1;;;;;644:7439:11;;5421:34:0;5417:102;;5529:37;644:7439:11;;;5529:37:0;:::i;5417:102::-;-1:-1:-1;;;5478:30:0;;644:7439:11;5478:30:0;;644:7439:11;;;;;;;-1:-1:-1;;644:7439:11;;;;4330:25:0;644:7439:11;;;;:::i;:::-;4300:18:0;2475:4;4300:18;;-1:-1:-1;644:7439:11;3901:6:0;644:7439:11;;3901:6:0;644:7439:11;-1:-1:-1;644:7439:11;3901:22:0;644:7439:11;3810:120:0;;2475:4;4330:25;:::i;644:7439:11:-;;;;;;;-1:-1:-1;;644:7439:11;;;;;;;;-1:-1:-1;644:7439:11;3901:6:0;644:7439:11;;3901:6:0;644:7439:11;-1:-1:-1;644:7439:11;3901:22:0;644:7439:11;3810:120:0;;644:7439:11;;;;;;;-1:-1:-1;;644:7439:11;;;;2322:103:6;;:::i;:::-;5799:10:11;644:7439;;;;;;;;;;;;;;;;;5870:5;644:7439;;;;;;;;2954:6:0;5870:30:11;644:7439;;5983:5;644:7439;;;-1:-1:-1;;;5983:30:11;;6007:4;644:7439;5983:30;;644:7439;;;;;;5983:30;;644:7439;;-1:-1:-1;;;;;644:7439:11;5983:30;;;;;;;644:7439;5983:30;;;644:7439;6031:10;;;644:7439;;5870:5;644:7439;;-1:-1:-1;;644:7439:11;5983:5;644:7439;;;;;-1:-1:-1;;;;;644:7439:11;6116:111;;;;;644:7439;;;6116:111;644:7439;;;;;;;;;6116:111;;6007:4;644:7439;6116:111;;644:7439;6186:31;5983:30;644:7439;;;6116:111;;;;;;;;644:7439;-1:-1:-1;644:7439:11;;;;-1:-1:-1;;;;;644:7439:11;6237:43;;;;;644:7439;;;5983:30;644:7439;;;;;;;;;6237:43;;6007:4;644:7439;6237:43;;644:7439;6237:43;;;;;;;;644:7439;-1:-1:-1;;5983:5:11;644:7439;6306:6;644:7439;;;-1:-1:-1;;;6291:30:11;;-1:-1:-1;;;;;644:7439:11;;;;6291:30;;644:7439;;;;;;;;;;;;;;;;;;;6291:30;;;;;;;;644:7439;-1:-1:-1;6306:6:11;644:7439;;;;;;-1:-1:-1;;;;;644:7439:11;;6337:26;;644:7439;;6337:26;2954:6:0;1755:1:6;;644:7439:11;;6291:30;;;644:7439;6291:30;644:7439;6291:30;;;;;;;:::i;:::-;;;6237:43;;;;;:::i;:::-;644:7439;;6237:43;;;;644:7439;;;;6116:111;;;;;644:7439;6116:111;;:::i;:::-;644:7439;6116:111;;;;;644:7439;;;;;;;;;;;;-1:-1:-1;;;644:7439:11;;;;;;;;5983:30;644:7439;;;-1:-1:-1;;;644:7439:11;;;;;;;5983:30;;;644:7439;5983:30;;644:7439;5983:30;;;;;;644:7439;5983:30;;;:::i;:::-;;;644:7439;;;;;5983:30;;;;;;-1:-1:-1;5983:30:11;;644:7439;;;-1:-1:-1;;;644:7439:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;644:7439:11;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;644:7439:11;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2673:47:0;;;:87;;;;644:7439:11;;;;;;;;;;2673:87:0;-1:-1:-1;;;861:40:7;;-1:-1:-1;2673:87:0;;;644:7439:11;;;;;;-1:-1:-1;;644:7439:11;;;;;975:24;644:7439;;;;;;;;-1:-1:-1;;;;;644:7439:11;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;644:7439:11;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;644:7439:11;;;;;-1:-1:-1;644:7439:11;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;644:7439:11;;;;;;;;;;;;-1:-1:-1;;;644:7439:11;;;;;;;4551:281;4710:5;644:7439;4685:53;;-1:-1:-1;;;;;644:7439:11;;;;;4693:23;4685:53;:::i;:::-;4776:16;644:7439;;;;;;;;;;;;;;;;4796:5;644:7439;;4551:281;:::o;644:7439::-;;;;-1:-1:-1;644:7439:11;;;;;-1:-1:-1;644:7439:11;2431:307:6;1755:1;2558:7;644:7439:11;2558:18:6;2554:86;;1755:1;2558:7;1755:1;2431:307::o;2554:86::-;2599:30;;;2558:7;2599:30;;2558:7;2599:30;3199:103:0;-1:-1:-1;644:7439:11;;;2954:6:0;644:7439:11;;;;;;;;735:10:5;644:7439:11;;;;;;;;;;3519:23:0;3515:108;;3199:103;:::o;3515:108::-;3565:47;;;-1:-1:-1;3565:47:0;735:10:5;3565:47:0;644:7439:11;;;;-1:-1:-1;3565:47:0;6179:316;-1:-1:-1;;;;;644:7439:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;644:7439:11;;;;;;;;;;;;;-1:-1:-1;;644:7439:11;2954:6:0;644:7439:11;;;735:10:5;;644:7439:11;975:24;;6370:40:0;;644:7439:11;6370:40:0;2954:6;6424:11;:::o;6272:217::-;6466:12;644:7439:11;6466:12:0;:::o;6179:316::-;644:7439:11;;;;2954:6:0;644:7439:11;;;;;;;;-1:-1:-1;;;;;644:7439:11;;;;;;;;;;;;;;;;;;2954:6:0;644:7439:11;;;;;;;;-1:-1:-1;;;;;644:7439:11;;;;;;;;;;;;;;;-1:-1:-1;;644:7439:11;;;;;;735:10:5;;644:7439:11;;6370:40:0;;644:7439:11;6370:40:0;2954:6;6424:11;:::o;6272:217::-;6466:12;;644:7439:11;6466:12:0;:::o;6730:317::-;644:7439:11;;;;2954:6:0;644:7439:11;;;;;;;;-1:-1:-1;;;;;644:7439:11;;;;;;;;;;;;;;;;;;;2954:6:0;644:7439:11;;;;;;;;-1:-1:-1;;;;;644:7439:11;;;;;;;;;;;;;;;-1:-1:-1;;644:7439:11;;;735:10:5;;644:7439:11;;6922:40:0;;644:7439:11;6922:40:0;2954:6;6976:11;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1016800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "450",
								"LENDER_ROLE()": "153",
								"asset()": "2420",
								"closeLoan()": "infinite",
								"flashFee(address,uint256)": "5054",
								"flashLoan(address,address,uint256,bytes)": "infinite",
								"flashLoanFeeRate()": "2462",
								"flashPoolRewardManager()": "2684",
								"fundLoan()": "infinite",
								"getFlashLoanState()": "2725",
								"getRoleAdmin(bytes32)": "2415",
								"grantRole(bytes32,address)": "33380",
								"hasRole(bytes32,address)": "2736",
								"lender()": "2596",
								"loanAmount()": "2528",
								"maxFlashLoan(address)": "infinite",
								"poolOrganizer()": "2640",
								"renounceRole(bytes32,address)": "28963",
								"revokeRole(bytes32,address)": "33704",
								"state()": "2681",
								"supportsInterface(bytes4)": "305"
							},
							"internal": {
								"_executeFlashLoan(contract IERC3156FlashBorrower,address,uint256,bytes calldata)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 644,
									"end": 8083,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 2656,
									"end": 2670,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 2656,
									"end": 2670,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2680,
									"end": 2716,
									"name": "PUSH",
									"source": 11,
									"value": "7"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 2726,
									"end": 2756,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 2726,
									"end": 2756,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 2766,
									"end": 2814,
									"name": "PUSH",
									"source": 11,
									"value": "5"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 2766,
									"end": 2814,
									"name": "PUSH",
									"source": 11,
									"value": "5"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2836,
									"end": 2860,
									"name": "PUSH",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 2870,
									"end": 2906,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2870,
									"end": 2906,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "RETURN",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "tag",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B71"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 644,
									"end": 8083,
									"name": "REVERT",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220529c49a1c174c87525d21141ef07129a18f06108a365495bf724d08a23e85ab064736f6c634300081a0033",
									".code": [
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "ABAFE1"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "232FA733"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "248A9CA3"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "2F2FF15D"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "36568ABE"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "38D52E0F"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "5CFFE9DE"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "613255AB"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "8C9F305F"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "8DB57994"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "91D14854"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "9D585F7F"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "A217FDDF"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "BCEAD63E"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "C19D93FB"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "C51B9507"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "C694B54C"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "C9C36353"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "D547741F"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "D9D98CE4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 644,
											"end": 8083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 644,
											"end": 8083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 644,
											"end": 8083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 877,
											"end": 930,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 8069,
											"end": 8074,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 644,
											"end": 8083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1026,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 805,
											"end": 830,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 644,
											"end": 8083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2322,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2322,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2322,
											"end": 2425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2425,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2322,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3068,
											"end": 3073,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3142,
											"end": 3161,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3151,
											"end": 3161,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3231,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3267,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3267,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3267,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EB1769F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3151,
											"end": 3161,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3427,
											"end": 3431,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3447,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3447,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3541,
											"end": 3598,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3541,
											"end": 3598,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3151,
											"end": 3161,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3541,
											"end": 3598,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3541,
											"end": 3598,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3427,
											"end": 3431,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3541,
											"end": 3598,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3541,
											"end": 3598,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 3541,
											"end": 3598,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3541,
											"end": 3598,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3541,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 3541,
											"end": 3598,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3541,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 3541,
											"end": 3598,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3660,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3231,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51C15721"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3427,
											"end": 3431,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3151,
											"end": 3161,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3749,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 3151,
											"end": 3161,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3749,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 3749,
											"end": 3784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3749,
											"end": 3784,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 3749,
											"end": 3784,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3749,
											"end": 3784,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3068,
											"end": 3073,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 3068,
											"end": 3073,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3863,
											"end": 3897,
											"name": "PUSH",
											"source": 11,
											"value": "726D5F1A838FE31748F737FA3AE5539CCFF95952ADFC593A1299532B643FF7A8"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3151,
											"end": 3161,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3863,
											"end": 3897,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3863,
											"end": 3897,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3638,
											"end": 3716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 3638,
											"end": 3716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 3638,
											"end": 3716,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3541,
											"end": 3598,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 3541,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3541,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 3541,
											"end": 3598,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3541,
											"end": 3598,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3541,
											"end": 3598,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3541,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 3541,
											"end": 3598,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3541,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 3541,
											"end": 3598,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3541,
											"end": 3598,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3541,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3541,
											"end": 3598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3541,
											"end": 3598,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 3541,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3541,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 3541,
											"end": 3598,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "416C6C6F77616E6365206E6F742073657420666F72207468697320636F6E7472"
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3391,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "496E73756666696369656E742062616C616E636520746F2066756E6420746865"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103637B0B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3226,
											"end": 3253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "tag",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "131BD85B881A5CC8185B1C9958591E48199D5B991959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1178,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 644,
											"end": 8083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4269,
											"end": 4274,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4252,
											"end": 4275,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4252,
											"end": 4275,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4252,
											"end": 4275,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 4252,
											"end": 4275,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4302,
											"end": 4306,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4252,
											"end": 4312,
											"name": "tag",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 4252,
											"end": 4312,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4252,
											"end": 4312,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4252,
											"end": 4312,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4278,
											"end": 4308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4252,
											"end": 4312,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 4252,
											"end": 4312,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4252,
											"end": 4312,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4252,
											"end": 4312,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4252,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 4252,
											"end": 4312,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 644,
											"end": 8083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2322,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2322,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2322,
											"end": 2425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2425,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2322,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 5475,
											"end": 5480,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5475,
											"end": 5505,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6998,
											"end": 7003,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7056,
											"end": 7079,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 7056,
											"end": 7079,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6973,
											"end": 7026,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 6981,
											"end": 7004,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 6981,
											"end": 7004,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6981,
											"end": 7004,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 6973,
											"end": 7026,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 6973,
											"end": 7026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6973,
											"end": 7026,
											"name": "tag",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 6973,
											"end": 7026,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7056,
											"end": 7079,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 7056,
											"end": 7079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7056,
											"end": 7079,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 7056,
											"end": 7079,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7137,
											"end": 7141,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP12",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "tag",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "C4"
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "23E30C8B"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7248,
											"end": 7258,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP14",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "A4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP12",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7310,
											"end": 7355,
											"name": "PUSH",
											"source": 11,
											"value": "439148F0BBC682CA079E46D6E2C2F0C1E3B820F1A291B069D8882ABF8CF18DD9"
										},
										{
											"begin": 7227,
											"end": 7355,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7355,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7355,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6998,
											"end": 7003,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7457,
											"end": 7521,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7457,
											"end": 7521,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7457,
											"end": 7521,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7457,
											"end": 7521,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7137,
											"end": 7141,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP12",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7457,
											"end": 7521,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 7457,
											"end": 7521,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 7457,
											"end": 7521,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7457,
											"end": 7521,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7457,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 7457,
											"end": 7521,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7457,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 7457,
											"end": 7521,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6998,
											"end": 7003,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7137,
											"end": 7141,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7600,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7600,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7744,
											"end": 7750,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 7777,
											"end": 7838,
											"name": "PUSH",
											"source": 11,
											"value": "9D0D497E678F62D6B162C97B9724A39F45FE674650DCD4A5E88FF6317E63764F"
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7777,
											"end": 7838,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "tag",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7729,
											"end": 7761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "tag",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "tag",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 7729,
											"end": 7761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "1B"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "466C617368206C6F616E2072657061796D656E74206661696C65640000000000"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "tag",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 7553,
											"end": 7583,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7457,
											"end": 7521,
											"name": "tag",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 7457,
											"end": 7521,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7457,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 7457,
											"end": 7521,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7457,
											"end": 7521,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7457,
											"end": 7521,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7457,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 7457,
											"end": 7521,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7457,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 7457,
											"end": 7521,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7457,
											"end": 7521,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7457,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7457,
											"end": 7521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7457,
											"end": 7521,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 7457,
											"end": 7521,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7457,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 7457,
											"end": 7521,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7457,
											"end": 7521,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 7457,
											"end": 7521,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "119B185CDA081B1BD85B8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "tag",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7227,
											"end": 7290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "tag",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7310,
											"end": 7355,
											"name": "PUSH",
											"source": 11,
											"value": "439148F0BBC682CA079E46D6E2C2F0C1E3B820F1A291B069D8882ABF8CF18DD9"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "tag",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 7227,
											"end": 7290,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "tag",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7154,
											"end": 7195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "tag",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "tag",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "tag",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7113,
											"end": 7143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7154,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "F"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "141BDBDB081B9BDD08199D5B991959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 780,
											"end": 799,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 644,
											"end": 8083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "334BD919"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 644,
											"end": 8083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2322,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 2322,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2322,
											"end": 2425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2425,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 2322,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5809,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "95902C4D6C8EA17825D5632AF066DCB87E033F1B2A91B49A7AD79E83F02C4DEC"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 5870,
											"end": 5875,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5870,
											"end": 5900,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 5988,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6007,
											"end": 6011,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6041,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6041,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6041,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5870,
											"end": 5875,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 5988,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "A956239B"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6007,
											"end": 6011,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6186,
											"end": 6217,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6237,
											"end": 6280,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6237,
											"end": 6280,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 6237,
											"end": 6280,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6237,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 6237,
											"end": 6280,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "7E72C7D7"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 6237,
											"end": 6280,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6237,
											"end": 6280,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6007,
											"end": 6011,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6237,
											"end": 6280,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6237,
											"end": 6280,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6237,
											"end": 6280,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 6237,
											"end": 6280,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 6237,
											"end": 6280,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6237,
											"end": 6280,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6237,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 6237,
											"end": 6280,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6237,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 6237,
											"end": 6280,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5983,
											"end": 5988,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6306,
											"end": 6312,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6291,
											"end": 6321,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6291,
											"end": 6321,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6291,
											"end": 6321,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6291,
											"end": 6321,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6291,
											"end": 6321,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 6291,
											"end": 6321,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 6291,
											"end": 6321,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6291,
											"end": 6321,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6291,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 6291,
											"end": 6321,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6291,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 6291,
											"end": 6321,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6306,
											"end": 6312,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6337,
											"end": 6363,
											"name": "PUSH",
											"source": 11,
											"value": "CAB22A4E95D29D40DA2ACE3F6EC72B49954A9BC7B2584F8FD47BF7F357A3ED6F"
										},
										{
											"begin": 6337,
											"end": 6363,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6337,
											"end": 6363,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 6291,
											"end": 6321,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 6291,
											"end": 6321,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6291,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 6291,
											"end": 6321,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6321,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6321,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 6291,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 6291,
											"end": 6321,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6291,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 6291,
											"end": 6321,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6291,
											"end": 6321,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6291,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6291,
											"end": 6321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6291,
											"end": 6321,
											"name": "tag",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 6291,
											"end": 6321,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6291,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 6291,
											"end": 6321,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6237,
											"end": 6280,
											"name": "tag",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 6237,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6237,
											"end": 6280,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6237,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 6237,
											"end": 6280,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6237,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6237,
											"end": 6280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6237,
											"end": 6280,
											"name": "tag",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 6237,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6237,
											"end": 6280,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6237,
											"end": 6280,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6237,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 6237,
											"end": 6280,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6116,
											"end": 6227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "tag",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 6116,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F2066756E647320746F207769746864726177"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "tag",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5983,
											"end": 6013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "tag",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "tag",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 5983,
											"end": 6013,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "1D"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4C6F616E206973206E6F7420696E20612066756E646564207374617465000000"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "43616C6C6572206973206E6F7420746865206C656E6465720000000000000000"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 861,
											"end": 901,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 975,
											"end": 999,
											"name": "PUSH",
											"source": 11,
											"value": "C60D7A62D8843F2B14BC63F2A5240B187980481AD8C001A3CAF4916AEF3F667E"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2AB739BAB83837B93A32B2103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4551,
											"end": 4832,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 4551,
											"end": 4832,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4710,
											"end": 4715,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4685,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 4685,
											"end": 4738,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4693,
											"end": 4716,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 4685,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 4685,
											"end": 4738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4685,
											"end": 4738,
											"name": "tag",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 4685,
											"end": 4738,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 4792,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4796,
											"end": 4801,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4551,
											"end": 4832,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4551,
											"end": 4832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "tag",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2431,
											"end": 2738,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2431,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2558,
											"end": 2576,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "tag",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 6,
											"value": "3EE5AEB5"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "95902C4D6C8EA17825D5632AF066DCB87E033F1B2A91B49A7AD79E83F02C4DEC"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "95902C4D6C8EA17825D5632AF066DCB87E033F1B2A91B49A7AD79E83F02C4DEC"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 975,
											"end": 999,
											"name": "PUSH",
											"source": 11,
											"value": "C60D7A62D8843F2B14BC63F2A5240B187980481AD8C001A3CAF4916AEF3F667E"
										},
										{
											"begin": 975,
											"end": 999,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 644,
											"end": 8083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol",
								"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/contracts/interfaces/IFlashPoolRewardManager.sol",
								"contracts/contracts/interfaces/IPoolOrganizer.sol",
								"contracts/contracts/protocol/TuliaFlashPool.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"LENDER_ROLE()": "00abafe1",
							"asset()": "38d52e0f",
							"closeLoan()": "232fa733",
							"flashFee(address,uint256)": "d9d98ce4",
							"flashLoan(address,address,uint256,bytes)": "5cffe9de",
							"flashLoanFeeRate()": "8c9f305f",
							"flashPoolRewardManager()": "c9c36353",
							"fundLoan()": "8db57994",
							"getFlashLoanState()": "c694b54c",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"lender()": "bcead63e",
							"loanAmount()": "9d585f7f",
							"maxFlashLoan(address)": "613255ab",
							"poolOrganizer()": "c51b9507",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"state()": "c19d93fb",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_flashLoanFeeRate\",\"type\":\"uint256\"},{\"internalType\":\"contract IPoolOrganizer\",\"name\":\"_poolOrganizer\",\"type\":\"address\"},{\"internalType\":\"contract IFlashPoolRewardManager\",\"name\":\"_flashPoolRewardManager\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_loanAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"FlashLoanExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LoanClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LoanFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LENDER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"flashFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC3156FlashBorrower\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flashLoanFeeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flashPoolRewardManager\",\"outputs\":[{\"internalType\":\"contract IFlashPoolRewardManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFlashLoanState\",\"outputs\":[{\"internalType\":\"enum TuliaFlashPool.FlashLoanState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"loanAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"maxFlashLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolOrganizer\",\"outputs\":[{\"internalType\":\"contract IPoolOrganizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum TuliaFlashPool.FlashLoanState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implements flash loan functionalities with integrated fee management. This contract allows issuing flash loans backed by ERC20 tokens.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"FlashLoanExecuted(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"The loan amount\",\"fee\":\"The loan fee\",\"receiver\":\"The borrower contract\",\"token\":\"The ERC20 token for the loan\"}},\"LoanFunded(address,uint256)\":{\"params\":{\"amount\":\"The amount of the loan\",\"lender\":\"The address of the lender\"}},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_asset\":\"The ERC20 token asset used for flash loans\",\"_flashLoanFeeRate\":\"The initial fee rate for flash loans issued by this pool\",\"_flashPoolRewardManager\":\"The FlashPool Reward Manager contract\",\"_loanAmount\":\"The amount of the loan to be funded\",\"_poolOrganizer\":\"The Pool Organizer contract\"}},\"flashFee(address,uint256)\":{\"params\":{\"amount\":\"The amount of the loan\",\"token\":\"The ERC20 token for which the fee is calculated\"},\"returns\":{\"_0\":\"The calculated fee amount\"}},\"flashLoan(address,address,uint256,bytes)\":{\"params\":{\"amount\":\"The amount of tokens to borrow\",\"data\":\"Arbitrary data passed to the borrower's `onFlashLoan` method\",\"receiver\":\"The borrower contract that must implement the IERC3156FlashBorrower interface\",\"token\":\"The ERC20 token to be borrowed\"},\"returns\":{\"_0\":\"true if the flash loan is paid back successfully within the same transaction\"}},\"getFlashLoanState()\":{\"returns\":{\"_0\":\"The current state of the flash loan\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"maxFlashLoan(address)\":{\"params\":{\"token\":\"The ERC20 token address for which the max loan amount is queried\"},\"returns\":{\"_0\":\"The maximum amount available for a flash loan\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"title\":\"TuliaFlashPool\",\"version\":1},\"userdoc\":{\"events\":{\"FlashLoanExecuted(address,address,uint256,uint256)\":{\"notice\":\"Event emitted when a flash loan is executed\"},\"LoanFunded(address,uint256)\":{\"notice\":\"Event emitted when a loan is funded\"}},\"kind\":\"user\",\"methods\":{\"asset()\":{\"notice\":\"ERC20 asset used for flash loans\"},\"closeLoan()\":{\"notice\":\"Allows the lender to close the loan and withdraw their funds if no active flash loans are present\"},\"constructor\":{\"notice\":\"Constructs the TuliaFlashPool lending pool\"},\"flashFee(address,uint256)\":{\"notice\":\"Calculates the flash loan fee for a given loan amount\"},\"flashLoan(address,address,uint256,bytes)\":{\"notice\":\"Initiates a flash loan transaction\"},\"flashLoanFeeRate()\":{\"notice\":\"Initial fee rate for flash loans issued by this pool\"},\"fundLoan()\":{\"notice\":\"Allows a lender to fund the pool directly with the specified loan amount\"},\"getFlashLoanState()\":{\"notice\":\"Returns the current state of the flash loan\"},\"maxFlashLoan(address)\":{\"notice\":\"Returns the maximum loanable amount of the asset\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/protocol/TuliaFlashPool.sol\":\"TuliaFlashPool\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x9f9e6dba43fe0775c400aa384375f1f503efaf733a40187169fdfc195f5ea6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff5fe5fac5e4ecbf9fcd34c42b6d58d1af150263dfe07bc6785a59329dd1e475\",\"dweb:/ipfs/QmX1EhNKKL6n6RFrLLAYh6Uf3itkozjSHyGFs9DqwW4Rzy\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":{\"keccak256\":\"0x95d9eb59f21e885406d0e28b0510f9e1a0e7b4abe6636b5c966682927c65cfdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1cbff4d620ab51abe0c4ede9e4395bae53bcc3a7edd74e0eb08d7bdef155306\",\"dweb:/ipfs/QmQcnBK28GDH4S5uXWqAcdRY1KcusXH4CxAqp87rYLir6n\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/contracts/interfaces/IFlashPoolRewardManager.sol\":{\"keccak256\":\"0x9dd0d2b6a0a9561e31b724b73ad384a3d5525e8c9786e98f608e8a7b16052084\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6e01c75eb15ad3ba0dd1b965df8188200177519c6fd7e6d9b624654da527fec\",\"dweb:/ipfs/QmQdysNJH7hW9mXMcy22TMyfdMjJSNtzmRFMniGMYoAXAr\"]},\"contracts/contracts/interfaces/IPoolOrganizer.sol\":{\"keccak256\":\"0x0ce052094139df49200b21b6c088c9997ddc2c688f4528d1fcdfb0c0414080a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c18bdcccf32a2a9e7fb8e347b80d09032c8fe64dcb02e6b92a4b99c6d7a16a8\",\"dweb:/ipfs/QmVprNk8mRzHy6GWT6bhBPmgtj3U3rkN8LamBAwES92GMh\"]},\"contracts/contracts/protocol/TuliaFlashPool.sol\":{\"keccak256\":\"0x9d2c583da76d62f6d5e486ad759d5e2a44a9271696fd99b534a418e091905f42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a8ceb74eb22ab356af5c8838829ad4145fb6f348dd078d4b4d2f7a3f38c7b22\",\"dweb:/ipfs/QmQRCmifsHT33PYQo2PMXJupyuduist6tCrqTWZs5mBuTS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 556,
								"contract": "contracts/contracts/protocol/TuliaFlashPool.sol:TuliaFlashPool",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 26,
								"contract": "contracts/contracts/protocol/TuliaFlashPool.sol:TuliaFlashPool",
								"label": "_roles",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 901,
								"contract": "contracts/contracts/protocol/TuliaFlashPool.sol:TuliaFlashPool",
								"label": "asset",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)515"
							},
							{
								"astId": 903,
								"contract": "contracts/contracts/protocol/TuliaFlashPool.sol:TuliaFlashPool",
								"label": "loanAmount",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 906,
								"contract": "contracts/contracts/protocol/TuliaFlashPool.sol:TuliaFlashPool",
								"label": "poolOrganizer",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(IPoolOrganizer)881"
							},
							{
								"astId": 909,
								"contract": "contracts/contracts/protocol/TuliaFlashPool.sol:TuliaFlashPool",
								"label": "flashPoolRewardManager",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IFlashPoolRewardManager)709"
							},
							{
								"astId": 916,
								"contract": "contracts/contracts/protocol/TuliaFlashPool.sol:TuliaFlashPool",
								"label": "lender",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 919,
								"contract": "contracts/contracts/protocol/TuliaFlashPool.sol:TuliaFlashPool",
								"label": "flashLoanFeeRate",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 938,
								"contract": "contracts/contracts/protocol/TuliaFlashPool.sol:TuliaFlashPool",
								"label": "state",
								"offset": 0,
								"slot": "8",
								"type": "t_enum(FlashLoanState)935"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)515": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IFlashPoolRewardManager)709": {
								"encoding": "inplace",
								"label": "contract IFlashPoolRewardManager",
								"numberOfBytes": "20"
							},
							"t_contract(IPoolOrganizer)881": {
								"encoding": "inplace",
								"label": "contract IPoolOrganizer",
								"numberOfBytes": "20"
							},
							"t_enum(FlashLoanState)935": {
								"encoding": "inplace",
								"label": "enum TuliaFlashPool.FlashLoanState",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "contracts/contracts/protocol/TuliaFlashPool.sol:TuliaFlashPool",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "contracts/contracts/protocol/TuliaFlashPool.sol:TuliaFlashPool",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"FlashLoanExecuted(address,address,uint256,uint256)": {
								"notice": "Event emitted when a flash loan is executed"
							},
							"LoanFunded(address,uint256)": {
								"notice": "Event emitted when a loan is funded"
							}
						},
						"kind": "user",
						"methods": {
							"asset()": {
								"notice": "ERC20 asset used for flash loans"
							},
							"closeLoan()": {
								"notice": "Allows the lender to close the loan and withdraw their funds if no active flash loans are present"
							},
							"constructor": {
								"notice": "Constructs the TuliaFlashPool lending pool"
							},
							"flashFee(address,uint256)": {
								"notice": "Calculates the flash loan fee for a given loan amount"
							},
							"flashLoan(address,address,uint256,bytes)": {
								"notice": "Initiates a flash loan transaction"
							},
							"flashLoanFeeRate()": {
								"notice": "Initial fee rate for flash loans issued by this pool"
							},
							"fundLoan()": {
								"notice": "Allows a lender to fund the pool directly with the specified loan amount"
							},
							"getFlashLoanState()": {
								"notice": "Returns the current state of the flash loan"
							},
							"maxFlashLoan(address)": {
								"notice": "Returns the maximum loanable amount of the asset"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							545
						],
						"ERC165": [
							638
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 546,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 545,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 639,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 638,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 545,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 638,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								638,
								650,
								378,
								545
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										637
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 637,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 527,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 527,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 527,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "356:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "373:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:1"
									},
									"src": "317:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:1"
									},
									"src": "552:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "877:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "899:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "934:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:1"
									},
									"src": "854:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1193:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1205:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1227:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1252:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:1"
									},
									"src": "1187:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1580:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1602:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1627:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:1"
									},
									"src": "1562:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1755:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1769:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1809:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:1"
									},
									"scope": 378,
									"src": "1738:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:1"
									},
									"scope": 378,
									"src": "2010:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2347:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2361:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:1"
									},
									"scope": 378,
									"src": "2328:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2641:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2655:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:1"
									},
									"scope": 378,
									"src": "2621:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3205:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3219:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 378,
									"src": "3183:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "225:3033:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3150:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol",
					"exportedSymbols": {
						"IERC3156FlashBorrower": [
							398
						]
					},
					"id": 399,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "120:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC3156FlashBorrower",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "146:123:2",
								"text": " @dev Interface of the ERC3156 FlashBorrower, as defined in\n https://eips.ethereum.org/EIPS/eip-3156[ERC-3156]."
							},
							"fullyImplemented": false,
							"id": 398,
							"linearizedBaseContracts": [
								398
							],
							"name": "IERC3156FlashBorrower",
							"nameLocation": "280:21:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "308:405:2",
										"text": " @dev Receive a flash loan.\n @param initiator The initiator of the loan.\n @param token The loan currency.\n @param amount The amount of tokens lent.\n @param fee The additional amount of tokens to repay.\n @param data Arbitrary data structure, intended to contain user-defined parameters.\n @return The keccak256 hash of \"ERC3156FlashBorrower.onFlashLoan\""
									},
									"functionSelector": "23e30c8b",
									"id": 397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onFlashLoan",
									"nameLocation": "727:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "initiator",
												"nameLocation": "756:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "748:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "783:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "775:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "806:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "798:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "798:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "830:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "822:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "858:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "843:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 391,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "843:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:130:2"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "887:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 394,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "886:9:2"
									},
									"scope": 398,
									"src": "718:178:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 399,
							"src": "270:628:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "120:779:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol",
					"exportedSymbols": {
						"IERC3156FlashBorrower": [
							398
						],
						"IERC3156FlashLender": [
							437
						]
					},
					"id": 438,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 400,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol",
							"file": "./IERC3156FlashBorrower.sol",
							"id": 402,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 438,
							"sourceUnit": 399,
							"src": "144:66:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 401,
										"name": "IERC3156FlashBorrower",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 398,
										"src": "152:21:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC3156FlashLender",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 403,
								"nodeType": "StructuredDocumentation",
								"src": "212:121:3",
								"text": " @dev Interface of the ERC3156 FlashLender, as defined in\n https://eips.ethereum.org/EIPS/eip-3156[ERC-3156]."
							},
							"fullyImplemented": false,
							"id": 437,
							"linearizedBaseContracts": [
								437
							],
							"name": "IERC3156FlashLender",
							"nameLocation": "344:19:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "370:168:3",
										"text": " @dev The amount of currency available to be lended.\n @param token The loan currency.\n @return The amount of `token` that can be borrowed."
									},
									"functionSelector": "613255ab",
									"id": 411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxFlashLoan",
									"nameLocation": "552:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "573:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "565:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:15:3"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "603:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "602:9:3"
									},
									"scope": 437,
									"src": "543:69:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "618:249:3",
										"text": " @dev The fee to be charged for a given loan.\n @param token The loan currency.\n @param amount The amount of tokens lent.\n @return The amount of `token` to be charged for the loan, on top of the returned principal."
									},
									"functionSelector": "d9d98ce4",
									"id": 421,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flashFee",
									"nameLocation": "881:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "898:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "890:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "913:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "905:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "905:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:31:3"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "944:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "944:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "943:9:3"
									},
									"scope": 437,
									"src": "872:81:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "959:320:3",
										"text": " @dev Initiate a flash loan.\n @param receiver The receiver of the tokens in the loan, and the receiver of the callback.\n @param token The loan currency.\n @param amount The amount of tokens lent.\n @param data Arbitrary data structure, intended to contain user-defined parameters."
									},
									"functionSelector": "5cffe9de",
									"id": 436,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flashLoan",
									"nameLocation": "1293:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1334:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "1312:30:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC3156FlashBorrower_$398",
													"typeString": "contract IERC3156FlashBorrower"
												},
												"typeName": {
													"id": 424,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 423,
														"name": "IERC3156FlashBorrower",
														"nameLocations": [
															"1312:21:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 398,
														"src": "1312:21:3"
													},
													"referencedDeclaration": 398,
													"src": "1312:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC3156FlashBorrower_$398",
														"typeString": "contract IERC3156FlashBorrower"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1360:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "1352:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1383:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "1375:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1375:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1414:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "1399:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 430,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1399:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1302:122:3"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "1443:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1443:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:6:3"
									},
									"scope": 437,
									"src": "1284:165:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 438,
							"src": "334:1117:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:1334:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							515
						]
					},
					"id": 516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 439,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 440,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 515,
							"linearizedBaseContracts": [
								515
							],
							"name": "IERC20",
							"nameLocation": "213:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 449,
									"name": "Transfer",
									"nameLocation": "395:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "404:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "426:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "446:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:4"
									},
									"src": "389:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 458,
									"name": "Approval",
									"nameLocation": "626:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "635:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "658:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "683:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:4"
									},
									"src": "620:78:4"
								},
								{
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 464,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:4"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "820:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:4"
									},
									"scope": 515,
									"src": "774:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 472,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "930:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:4"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "970:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:4"
									},
									"scope": 515,
									"src": "911:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 482,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "1221:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "1233:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:4"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "1266:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 479,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:4"
									},
									"scope": 515,
									"src": "1203:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 492,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "1566:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "1581:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:4"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "1621:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:4"
									},
									"scope": 515,
									"src": "1547:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 502,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "2325:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "2342:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:4"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "2375:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 499,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:4"
									},
									"scope": 515,
									"src": "2308:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 514,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "2711:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "2725:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "2737:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:4"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "2770:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 511,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:4"
									},
									"scope": 515,
									"src": "2689:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 516,
							"src": "203:2575:4",
							"usedErrors": [],
							"usedEvents": [
								449,
								458
							]
						}
					],
					"src": "106:2673:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							545
						]
					},
					"id": 546,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 517,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 518,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 545,
							"linearizedBaseContracts": [
								545
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 523,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 522,
												"id": 525,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 545,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 532,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 531,
												"id": 534,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 529,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 545,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 540,
												"id": 542,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 545,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 546,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							614
						]
					},
					"id": 615,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 547,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 548,
								"nodeType": "StructuredDocumentation",
								"src": "135:750:6",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 614,
							"linearizedBaseContracts": [
								614
							],
							"name": "ReentrancyGuard",
							"nameLocation": "904:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 551,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1699:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 614,
									"src": "1674:40:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 549,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1674:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 550,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1713:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 554,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1745:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 614,
									"src": "1720:36:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 552,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1720:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 553,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1755:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 556,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1779:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 614,
									"src": "1763:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 555,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1763:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "1793:52:6",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 559,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "1856:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1884:2:6"
									},
									"src": "1850:37:6"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "1907:38:6",
										"statements": [
											{
												"expression": {
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 562,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "1917:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 563,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 551,
														"src": "1927:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1917:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "1917:21:6"
											}
										]
									},
									"id": 567,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:2:6"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1907:0:6"
									},
									"scope": 614,
									"src": "1893:52:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "2346:79:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 570,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "2356:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2356:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 572,
												"nodeType": "ExpressionStatement",
												"src": "2356:21:6"
											},
											{
												"id": 573,
												"nodeType": "PlaceholderStatement",
												"src": "2387:1:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 574,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "2398:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "ExpressionStatement",
												"src": "2398:20:6"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "1951:366:6",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 578,
									"name": "nonReentrant",
									"nameLocation": "2331:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2343:2:6"
									},
									"src": "2322:103:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "2470:268:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 581,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "2558:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 582,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "2569:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2558:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 588,
												"nodeType": "IfStatement",
												"src": "2554:86:6",
												"trueBody": {
													"id": 587,
													"nodeType": "Block",
													"src": "2578:62:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 584,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "2599:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2599:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 586,
															"nodeType": "RevertStatement",
															"src": "2592:37:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 589,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "2714:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 590,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "2724:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2714:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "2714:17:6"
											}
										]
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2440:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2459:2:6"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:6"
									},
									"scope": 614,
									"src": "2431:307:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "2782:170:6",
										"statements": [
											{
												"expression": {
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 597,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "2924:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 598,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 551,
														"src": "2934:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2924:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "2924:21:6"
											}
										]
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2753:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2771:2:6"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2782:0:6"
									},
									"scope": 614,
									"src": "2744:208:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "3195:42:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 608,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "3212:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 609,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "3223:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3212:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 607,
												"id": 611,
												"nodeType": "Return",
												"src": "3205:25:6"
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "2958:168:6",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3140:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3163:2:6"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "3189:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 605,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3189:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3188:6:6"
									},
									"scope": 614,
									"src": "3131:106:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 615,
							"src": "886:2353:6",
							"usedErrors": [
								559
							],
							"usedEvents": []
						}
					],
					"src": "109:3131:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							638
						],
						"IERC165": [
							650
						]
					},
					"id": 639,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 616,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 618,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 639,
							"sourceUnit": 651,
							"src": "140:38:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 617,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 650,
										"src": "148:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 620,
										"name": "IERC165",
										"nameLocations": [
											"687:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 650,
										"src": "687:7:7"
									},
									"id": 621,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:7"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 619,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 638,
							"linearizedBaseContracts": [
								638,
								650
							],
							"name": "ERC165",
							"nameLocation": "677:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										649
									],
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "844:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 629,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "861:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 631,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 650,
																	"src": "881:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$650_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$650_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 630,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$650",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 633,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:7",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 628,
												"id": 635,
												"nodeType": "Return",
												"src": "854:47:7"
											}
										]
									},
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "789:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 623,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:7"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "838:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 626,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:7"
									},
									"scope": 638,
									"src": "762:146:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 639,
							"src": "659:251:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							650
						]
					},
					"id": 651,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 640,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 641,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 650,
							"linearizedBaseContracts": [
								650
							],
							"name": "IERC165",
							"nameLocation": "431:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 649,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "817:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 643,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:8"
									},
									"returnParameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "860:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 646,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:8"
									},
									"scope": 650,
									"src": "790:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 651,
							"src": "421:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:8"
				},
				"id": 8
			},
			"contracts/contracts/interfaces/IFlashPoolRewardManager.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/interfaces/IFlashPoolRewardManager.sol",
					"exportedSymbols": {
						"IFlashPoolRewardManager": [
							709
						]
					},
					"id": 710,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 652,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IFlashPoolRewardManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 709,
							"linearizedBaseContracts": [
								709
							],
							"name": "IFlashPoolRewardManager",
							"nameLocation": "71:23:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "102:218:9",
										"text": "@notice Registers a pool to start accruing rewards, initializing the reward mechanism.\n @param pool The address of the pool to register.\n @param rewardToken The ERC20 token used as the reward token."
									},
									"functionSelector": "51c15721",
									"id": 664,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerPool",
									"nameLocation": "335:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "356:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "348:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "rewardToken",
												"nameLocation": "370:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "362:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "362:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "loanAmount",
												"nameLocation": "391:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "383:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "383:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:55:9"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "421:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 661,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "421:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "420:6:9"
									},
									"scope": 709,
									"src": "326:101:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "435:115:9",
										"text": "@notice Claims rewards for the lender from a specific pool.\n @param pool The address of the flash pool."
									},
									"functionSelector": "ef5cfb8c",
									"id": 670,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewards",
									"nameLocation": "565:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "586:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "578:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "578:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "577:14:9"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "600:0:9"
									},
									"scope": 709,
									"src": "556:45:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "609:172:9",
										"text": "@notice Calculates claimable interest for the lender.\n @param pool The address of the pool.\n @return uint256 The amount of interest that can be claimed."
									},
									"functionSelector": "51b2d521",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateClaimableInterest",
									"nameLocation": "796:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "831:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "823:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:14:9"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "860:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:9:9"
									},
									"scope": 709,
									"src": "787:82:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "877:168:9",
										"text": "@notice Accrues rewards for a specific pool based on the current APY and block difference.\n @param pool The address of the pool for which to accrue rewards."
									},
									"functionSelector": "3d39955c",
									"id": 684,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "accrueRewards",
									"nameLocation": "1060:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1082:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "1074:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1074:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1073:14:9"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1096:0:9"
									},
									"scope": 709,
									"src": "1051:46:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "1107:134:9",
										"text": "@notice Deregisters a pool, stopping it from accruing further rewards.\n @param pool The address of the pool to deregister."
									},
									"functionSelector": "7e72c7d7",
									"id": 690,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deregisterPool",
									"nameLocation": "1256:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1279:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "1271:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1270:14:9"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1293:0:9"
									},
									"scope": 709,
									"src": "1247:47:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "1302:517:9",
										"text": "@notice Returns the reward details for a specific pool.\n @param pool The address of the pool.\n @return rewardToken The token used for rewards.\n @return rewardsAccrued Total accrued rewards.\n @return lastRewardBlock Last block number when rewards were calculated.\n @return rewardRate Dynamic reward rate based on APY.\n @return lenderClaimedRewards Amount of rewards claimed by the lender.\n @return isAccruing Flag to indicate if the pool is accruing rewards."
									},
									"functionSelector": "d919007e",
									"id": 708,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardDetails",
									"nameLocation": "1834:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1859:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "1851:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1851:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1850:14:9"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "rewardToken",
												"nameLocation": "1940:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "1932:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1932:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "rewardsAccrued",
												"nameLocation": "1974:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "1966:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1966:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "lastRewardBlock",
												"nameLocation": "2011:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "2003:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2003:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "rewardRate",
												"nameLocation": "2049:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "2041:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "lenderClaimedRewards",
												"nameLocation": "2082:20:9",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "2074:28:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2074:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "isAccruing",
												"nameLocation": "2122:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "2117:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 705,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2117:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1917:226:9"
									},
									"scope": 709,
									"src": "1825:319:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 710,
							"src": "61:2086:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:2116:9"
				},
				"id": 9
			},
			"contracts/contracts/interfaces/IPoolOrganizer.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/interfaces/IPoolOrganizer.sol",
					"exportedSymbols": {
						"IERC20": [
							515
						],
						"IPoolOrganizer": [
							881
						]
					},
					"id": 882,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 711,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 712,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 882,
							"sourceUnit": 516,
							"src": "61:56:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPoolOrganizer",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 713,
								"nodeType": "StructuredDocumentation",
								"src": "121:129:10",
								"text": "@title IPoolOrganizer interface\n @notice Interface for the Pool Organizer contract managing pools, vaults, and rewards."
							},
							"fullyImplemented": false,
							"id": 881,
							"linearizedBaseContracts": [
								881
							],
							"name": "IPoolOrganizer",
							"nameLocation": "260:14:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IPoolOrganizer.PoolType",
									"id": 716,
									"members": [
										{
											"id": 714,
											"name": "STANDARD",
											"nameLocation": "298:8:10",
											"nodeType": "EnumValue",
											"src": "298:8:10"
										},
										{
											"id": 715,
											"name": "FLASH_LOAN",
											"nameLocation": "308:10:10",
											"nodeType": "EnumValue",
											"src": "308:10:10"
										}
									],
									"name": "PoolType",
									"nameLocation": "287:8:10",
									"nodeType": "EnumDefinition",
									"src": "282:38:10"
								},
								{
									"canonicalName": "IPoolOrganizer.LoanState",
									"id": 724,
									"members": [
										{
											"id": 717,
											"name": "CREATED",
											"nameLocation": "354:7:10",
											"nodeType": "EnumValue",
											"src": "354:7:10"
										},
										{
											"id": 718,
											"name": "PENDING",
											"nameLocation": "372:7:10",
											"nodeType": "EnumValue",
											"src": "372:7:10"
										},
										{
											"id": 719,
											"name": "ACTIVE",
											"nameLocation": "390:6:10",
											"nodeType": "EnumValue",
											"src": "390:6:10"
										},
										{
											"id": 720,
											"name": "DEFAULTED",
											"nameLocation": "407:9:10",
											"nodeType": "EnumValue",
											"src": "407:9:10"
										},
										{
											"id": 721,
											"name": "REPAID",
											"nameLocation": "427:6:10",
											"nodeType": "EnumValue",
											"src": "427:6:10"
										},
										{
											"id": 722,
											"name": "CLOSED",
											"nameLocation": "444:6:10",
											"nodeType": "EnumValue",
											"src": "444:6:10"
										},
										{
											"id": 723,
											"name": "FUNDED",
											"nameLocation": "461:6:10",
											"nodeType": "EnumValue",
											"src": "461:6:10"
										}
									],
									"name": "LoanState",
									"nameLocation": "333:9:10",
									"nodeType": "EnumDefinition",
									"src": "328:146:10"
								},
								{
									"canonicalName": "IPoolOrganizer.PoolDetails",
									"id": 758,
									"members": [
										{
											"constant": false,
											"id": 726,
											"mutability": "mutable",
											"name": "lender",
											"nameLocation": "523:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 758,
											"src": "515:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 725,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "515:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 728,
											"mutability": "mutable",
											"name": "borrower",
											"nameLocation": "548:8:10",
											"nodeType": "VariableDeclaration",
											"scope": 758,
											"src": "540:16:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 727,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "540:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 730,
											"mutability": "mutable",
											"name": "creationTime",
											"nameLocation": "575:12:10",
											"nodeType": "VariableDeclaration",
											"scope": 758,
											"src": "567:20:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 729,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "567:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 732,
											"mutability": "mutable",
											"name": "vault",
											"nameLocation": "606:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 758,
											"src": "598:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 731,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "598:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 735,
											"mutability": "mutable",
											"name": "loanToken",
											"nameLocation": "629:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 758,
											"src": "622:16:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$515",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 734,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 733,
													"name": "IERC20",
													"nameLocations": [
														"622:6:10"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 515,
													"src": "622:6:10"
												},
												"referencedDeclaration": 515,
												"src": "622:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$515",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 738,
											"mutability": "mutable",
											"name": "assetToken",
											"nameLocation": "656:10:10",
											"nodeType": "VariableDeclaration",
											"scope": 758,
											"src": "649:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$515",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 737,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 736,
													"name": "IERC20",
													"nameLocations": [
														"649:6:10"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 515,
													"src": "649:6:10"
												},
												"referencedDeclaration": 515,
												"src": "649:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$515",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 741,
											"mutability": "mutable",
											"name": "repaymentToken",
											"nameLocation": "684:14:10",
											"nodeType": "VariableDeclaration",
											"scope": 758,
											"src": "677:21:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$515",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 740,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 739,
													"name": "IERC20",
													"nameLocations": [
														"677:6:10"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 515,
													"src": "677:6:10"
												},
												"referencedDeclaration": 515,
												"src": "677:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$515",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 743,
											"mutability": "mutable",
											"name": "loanAmount",
											"nameLocation": "717:10:10",
											"nodeType": "VariableDeclaration",
											"scope": 758,
											"src": "709:18:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 742,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "709:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 745,
											"mutability": "mutable",
											"name": "interestRate",
											"nameLocation": "746:12:10",
											"nodeType": "VariableDeclaration",
											"scope": 758,
											"src": "738:20:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 744,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "738:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 747,
											"mutability": "mutable",
											"name": "repaymentPeriod",
											"nameLocation": "777:15:10",
											"nodeType": "VariableDeclaration",
											"scope": 758,
											"src": "769:23:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 746,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "769:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 750,
											"mutability": "mutable",
											"name": "poolType",
											"nameLocation": "812:8:10",
											"nodeType": "VariableDeclaration",
											"scope": 758,
											"src": "803:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_PoolType_$716",
												"typeString": "enum IPoolOrganizer.PoolType"
											},
											"typeName": {
												"id": 749,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 748,
													"name": "PoolType",
													"nameLocations": [
														"803:8:10"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 716,
													"src": "803:8:10"
												},
												"referencedDeclaration": 716,
												"src": "803:8:10",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PoolType_$716",
													"typeString": "enum IPoolOrganizer.PoolType"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 752,
											"mutability": "mutable",
											"name": "funded",
											"nameLocation": "836:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 758,
											"src": "831:11:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 751,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "831:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 755,
											"mutability": "mutable",
											"name": "loanState",
											"nameLocation": "863:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 758,
											"src": "853:19:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_LoanState_$724",
												"typeString": "enum IPoolOrganizer.LoanState"
											},
											"typeName": {
												"id": 754,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 753,
													"name": "LoanState",
													"nameLocations": [
														"853:9:10"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 724,
													"src": "853:9:10"
												},
												"referencedDeclaration": 724,
												"src": "853:9:10",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_LoanState_$724",
													"typeString": "enum IPoolOrganizer.LoanState"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 757,
											"mutability": "mutable",
											"name": "pool",
											"nameLocation": "891:4:10",
											"nodeType": "VariableDeclaration",
											"scope": 758,
											"src": "883:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 756,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "883:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolDetails",
									"nameLocation": "492:11:10",
									"nodeType": "StructDefinition",
									"scope": 881,
									"src": "485:418:10",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "911:668:10",
										"text": "@notice Registers a new pool\n @param pool The address of the pool contract\n @param lender The address of the lender\n @param borrower The address of the borrower\n @param vault The address of the vault associated with the pool\n @param loanToken The token to be loaned\n @param assetToken The token used as collateral\n @param repaymentToken The token used for loan repayment\n @param loanAmount The amount of the loan\n @param interestRate The interest rate of the loan\n @param repaymentPeriod The loan repayment period\n @param poolType The type of the pool (standard or flash loan)"
									},
									"functionSelector": "43756020",
									"id": 788,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerPool",
									"nameLocation": "1594:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1625:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "1617:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1617:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "1648:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "1640:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1640:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "borrower",
												"nameLocation": "1673:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "1665:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1665:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "1700:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "1692:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "loanToken",
												"nameLocation": "1723:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "1716:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$515",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 769,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 768,
														"name": "IERC20",
														"nameLocations": [
															"1716:6:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 515,
														"src": "1716:6:10"
													},
													"referencedDeclaration": 515,
													"src": "1716:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$515",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "assetToken",
												"nameLocation": "1750:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "1743:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$515",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 772,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 771,
														"name": "IERC20",
														"nameLocations": [
															"1743:6:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 515,
														"src": "1743:6:10"
													},
													"referencedDeclaration": 515,
													"src": "1743:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$515",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "repaymentToken",
												"nameLocation": "1778:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "1771:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$515",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 775,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 774,
														"name": "IERC20",
														"nameLocations": [
															"1771:6:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 515,
														"src": "1771:6:10"
													},
													"referencedDeclaration": 515,
													"src": "1771:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$515",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "loanAmount",
												"nameLocation": "1811:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "1803:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1803:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "interestRate",
												"nameLocation": "1840:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "1832:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "repaymentPeriod",
												"nameLocation": "1871:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "1863:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1863:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "poolType",
												"nameLocation": "1906:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "1897:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PoolType_$716",
													"typeString": "enum IPoolOrganizer.PoolType"
												},
												"typeName": {
													"id": 784,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 783,
														"name": "PoolType",
														"nameLocations": [
															"1897:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 716,
														"src": "1897:8:10"
													},
													"referencedDeclaration": 716,
													"src": "1897:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PoolType_$716",
														"typeString": "enum IPoolOrganizer.PoolType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1606:321:10"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1936:0:10"
									},
									"scope": 881,
									"src": "1585:352:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "1945:89:10",
										"text": "@notice Deregisters a pool\n @param pool The address of the pool to deregister"
									},
									"functionSelector": "7e72c7d7",
									"id": 794,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deregisterPool",
									"nameLocation": "2049:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "2072:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "2064:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2064:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2063:14:10"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2086:0:10"
									},
									"scope": 881,
									"src": "2040:47:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "2095:107:10",
										"text": "@notice Gets the total number of registered pools\n @return The total number of registered pools"
									},
									"functionSelector": "d3ffe67a",
									"id": 800,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalPools",
									"nameLocation": "2217:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2230:2:10"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "2256:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2256:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2255:9:10"
									},
									"scope": 881,
									"src": "2208:57:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 801,
										"nodeType": "StructuredDocumentation",
										"src": "2273:167:10",
										"text": "@notice Retrieves all pool addresses associated with a specific lender\n @param lender The address of the lender\n @return An array of pool addresses"
									},
									"functionSelector": "24a44efb",
									"id": 809,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolsByLender",
									"nameLocation": "2455:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "2480:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "2472:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2472:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2471:16:10"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "2511:16:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 805,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2511:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 806,
													"nodeType": "ArrayTypeName",
													"src": "2511:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2510:18:10"
									},
									"scope": 881,
									"src": "2446:83:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 810,
										"nodeType": "StructuredDocumentation",
										"src": "2537:154:10",
										"text": "@notice Retrieves the loan state of a specific pool\n @param pool The address of the pool\n @return The loan state of the specified pool"
									},
									"functionSelector": "c81c3bef",
									"id": 818,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLoanState",
									"nameLocation": "2706:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "2727:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "2719:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2718:14:10"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "2756:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_LoanState_$724",
													"typeString": "enum IPoolOrganizer.LoanState"
												},
												"typeName": {
													"id": 815,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 814,
														"name": "LoanState",
														"nameLocations": [
															"2756:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 724,
														"src": "2756:9:10"
													},
													"referencedDeclaration": 724,
													"src": "2756:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_LoanState_$724",
														"typeString": "enum IPoolOrganizer.LoanState"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:11:10"
									},
									"scope": 881,
									"src": "2697:70:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 819,
										"nodeType": "StructuredDocumentation",
										"src": "2775:149:10",
										"text": "@notice Updates the loan state of a specific pool\n @param pool The address of the pool\n @param newState The new state of the loan"
									},
									"functionSelector": "a956239b",
									"id": 827,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateLoanState",
									"nameLocation": "2939:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "2963:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "2955:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2955:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "newState",
												"nameLocation": "2979:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "2969:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_LoanState_$724",
													"typeString": "enum IPoolOrganizer.LoanState"
												},
												"typeName": {
													"id": 823,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 822,
														"name": "LoanState",
														"nameLocations": [
															"2969:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 724,
														"src": "2969:9:10"
													},
													"referencedDeclaration": 724,
													"src": "2969:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_LoanState_$724",
														"typeString": "enum IPoolOrganizer.LoanState"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2954:34:10"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2997:0:10"
									},
									"scope": 881,
									"src": "2930:68:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "3006:160:10",
										"text": "@notice Retrieves detailed information about a specific pool\n @param pool The address of the pool\n @return The details of the specified pool"
									},
									"functionSelector": "d3e90fa0",
									"id": 836,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolDetails",
									"nameLocation": "3181:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "3204:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "3196:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:14:10"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "3233:18:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolDetails_$758_memory_ptr",
													"typeString": "struct IPoolOrganizer.PoolDetails"
												},
												"typeName": {
													"id": 833,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 832,
														"name": "PoolDetails",
														"nameLocations": [
															"3233:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 758,
														"src": "3233:11:10"
													},
													"referencedDeclaration": 758,
													"src": "3233:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolDetails_$758_storage_ptr",
														"typeString": "struct IPoolOrganizer.PoolDetails"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:20:10"
									},
									"scope": 881,
									"src": "3172:81:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "3261:161:10",
										"text": "@notice Retrieves the associated vault address for a given pool\n @param pool The address of the pool\n @return The address of the linked vault"
									},
									"functionSelector": "7570e389",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getVaultForPool",
									"nameLocation": "3437:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "3461:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "3453:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3452:14:10"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "3490:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3490:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3489:9:10"
									},
									"scope": 881,
									"src": "3428:71:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "3507:128:10",
										"text": "@notice Grants factory access to manage pools\n @param factoryAddress The address of the factory to be granted access"
									},
									"functionSelector": "5d102df7",
									"id": 850,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantFactoryAccess",
									"nameLocation": "3650:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "factoryAddress",
												"nameLocation": "3677:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "3669:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3669:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3668:24:10"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3701:0:10"
									},
									"scope": 881,
									"src": "3641:61:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "3710:141:10",
										"text": "@notice Registers a vault for a specific pool\n @param pool The address of the pool\n @param vault The address of the vault"
									},
									"functionSelector": "05c4fdf9",
									"id": 858,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerVault",
									"nameLocation": "3866:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "3888:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "3880:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "3902:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "3894:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3879:29:10"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3917:0:10"
									},
									"scope": 881,
									"src": "3857:61:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 859,
										"nodeType": "StructuredDocumentation",
										"src": "3926:215:10",
										"text": "@notice Registers manager contracts for managing vaults and rewards\n @param _vaultManager The address of the VaultManager contract\n @param _rewardManager The address of the RewardManager contract"
									},
									"functionSelector": "c489579d",
									"id": 866,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerManagers",
									"nameLocation": "4156:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "_vaultManager",
												"nameLocation": "4181:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "4173:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4173:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "_rewardManager",
												"nameLocation": "4204:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "4196:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4196:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4172:47:10"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4228:0:10"
									},
									"scope": 881,
									"src": "4147:82:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "4237:97:10",
										"text": "@notice Marks a pool as funded\n @param pool The address of the pool to mark as funded"
									},
									"functionSelector": "1f2f2e14",
									"id": 872,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "markPoolAsFunded",
									"nameLocation": "4349:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "4374:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "4366:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4366:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:14:10"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4388:0:10"
									},
									"scope": 881,
									"src": "4340:49:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "4402:155:10",
										"text": "@notice Sets the borrower for a specified pool\n @param pool The address of the pool\n @param newBorrower The address of the new borrower"
									},
									"functionSelector": "37e238c5",
									"id": 880,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setBorrowerForPool",
									"nameLocation": "4572:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "4599:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "4591:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4591:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "newBorrower",
												"nameLocation": "4613:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "4605:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4605:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4590:35:10"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4634:0:10"
									},
									"scope": 881,
									"src": "4563:72:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 882,
							"src": "250:4388:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:4607:10"
				},
				"id": 10
			},
			"contracts/contracts/protocol/TuliaFlashPool.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/protocol/TuliaFlashPool.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							545
						],
						"ERC165": [
							638
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							515
						],
						"IERC3156FlashBorrower": [
							398
						],
						"IERC3156FlashLender": [
							437
						],
						"IFlashPoolRewardManager": [
							709
						],
						"IPoolOrganizer": [
							881
						],
						"ReentrancyGuard": [
							614
						],
						"TuliaFlashPool": [
							1388
						]
					},
					"id": 1389,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 883,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 884,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1389,
							"sourceUnit": 516,
							"src": "58:56:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 885,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1389,
							"sourceUnit": 615,
							"src": "115:59:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol",
							"file": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol",
							"id": 886,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1389,
							"sourceUnit": 438,
							"src": "175:68:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol",
							"file": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol",
							"id": 887,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1389,
							"sourceUnit": 399,
							"src": "244:70:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/interfaces/IPoolOrganizer.sol",
							"file": "../interfaces/IPoolOrganizer.sol",
							"id": 888,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1389,
							"sourceUnit": 882,
							"src": "315:42:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 889,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1389,
							"sourceUnit": 296,
							"src": "358:58:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/interfaces/IFlashPoolRewardManager.sol",
							"file": "../interfaces/IFlashPoolRewardManager.sol",
							"id": 890,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1389,
							"sourceUnit": 710,
							"src": "417:51:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 892,
										"name": "IERC3156FlashLender",
										"nameLocations": [
											"671:19:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 437,
										"src": "671:19:11"
									},
									"id": 893,
									"nodeType": "InheritanceSpecifier",
									"src": "671:19:11"
								},
								{
									"baseName": {
										"id": 894,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"692:15:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 614,
										"src": "692:15:11"
									},
									"id": 895,
									"nodeType": "InheritanceSpecifier",
									"src": "692:15:11"
								},
								{
									"baseName": {
										"id": 896,
										"name": "AccessControl",
										"nameLocations": [
											"709:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "709:13:11"
									},
									"id": 897,
									"nodeType": "InheritanceSpecifier",
									"src": "709:13:11"
								}
							],
							"canonicalName": "TuliaFlashPool",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 891,
								"nodeType": "StructuredDocumentation",
								"src": "470:174:11",
								"text": "@title TuliaFlashPool\n @dev Implements flash loan functionalities with integrated fee management.\n This contract allows issuing flash loans backed by ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 1388,
							"linearizedBaseContracts": [
								1388,
								295,
								638,
								650,
								378,
								545,
								614,
								437
							],
							"name": "TuliaFlashPool",
							"nameLocation": "653:14:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "731:44:11",
										"text": "@notice ERC20 asset used for flash loans"
									},
									"functionSelector": "38d52e0f",
									"id": 901,
									"mutability": "mutable",
									"name": "asset",
									"nameLocation": "794:5:11",
									"nodeType": "VariableDeclaration",
									"scope": 1388,
									"src": "780:19:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$515",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 900,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 899,
											"name": "IERC20",
											"nameLocations": [
												"780:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 515,
											"src": "780:6:11"
										},
										"referencedDeclaration": 515,
										"src": "780:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$515",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9d585f7f",
									"id": 903,
									"mutability": "mutable",
									"name": "loanAmount",
									"nameLocation": "820:10:11",
									"nodeType": "VariableDeclaration",
									"scope": 1388,
									"src": "805:25:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 902,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "805:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c51b9507",
									"id": 906,
									"mutability": "mutable",
									"name": "poolOrganizer",
									"nameLocation": "858:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 1388,
									"src": "836:35:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IPoolOrganizer_$881",
										"typeString": "contract IPoolOrganizer"
									},
									"typeName": {
										"id": 905,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 904,
											"name": "IPoolOrganizer",
											"nameLocations": [
												"836:14:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 881,
											"src": "836:14:11"
										},
										"referencedDeclaration": 881,
										"src": "836:14:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPoolOrganizer_$881",
											"typeString": "contract IPoolOrganizer"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c9c36353",
									"id": 909,
									"mutability": "mutable",
									"name": "flashPoolRewardManager",
									"nameLocation": "908:22:11",
									"nodeType": "VariableDeclaration",
									"scope": 1388,
									"src": "877:53:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IFlashPoolRewardManager_$709",
										"typeString": "contract IFlashPoolRewardManager"
									},
									"typeName": {
										"id": 908,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 907,
											"name": "IFlashPoolRewardManager",
											"nameLocations": [
												"877:23:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 709,
											"src": "877:23:11"
										},
										"referencedDeclaration": 709,
										"src": "877:23:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IFlashPoolRewardManager_$709",
											"typeString": "contract IFlashPoolRewardManager"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "00abafe1",
									"id": 914,
									"mutability": "constant",
									"name": "LENDER_ROLE",
									"nameLocation": "961:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 1388,
									"src": "937:62:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 910,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "937:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4c454e4445525f524f4c45",
												"id": 912,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "985:13:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_c60d7a62d8843f2b14bc63f2a5240b187980481ad8c001a3caf4916aef3f667e",
													"typeString": "literal_string \"LENDER_ROLE\""
												},
												"value": "LENDER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_c60d7a62d8843f2b14bc63f2a5240b187980481ad8c001a3caf4916aef3f667e",
													"typeString": "literal_string \"LENDER_ROLE\""
												}
											],
											"id": 911,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "975:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 913,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "975:24:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bcead63e",
									"id": 916,
									"mutability": "mutable",
									"name": "lender",
									"nameLocation": "1020:6:11",
									"nodeType": "VariableDeclaration",
									"scope": 1388,
									"src": "1005:21:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 915,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1005:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 917,
										"nodeType": "StructuredDocumentation",
										"src": "1078:64:11",
										"text": "@notice Initial fee rate for flash loans issued by this pool"
									},
									"functionSelector": "8c9f305f",
									"id": 919,
									"mutability": "mutable",
									"name": "flashLoanFeeRate",
									"nameLocation": "1162:16:11",
									"nodeType": "VariableDeclaration",
									"scope": 1388,
									"src": "1147:31:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 918,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1147:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "1185:221:11",
										"text": "@notice Event emitted when a flash loan is executed\n @param receiver The borrower contract\n @param token The ERC20 token for the loan\n @param amount The loan amount\n @param fee The loan fee"
									},
									"eventSelector": "9d0d497e678f62d6b162c97b9724a39f45fe674650dcd4a5e88ff6317e63764f",
									"id": 930,
									"name": "FlashLoanExecuted",
									"nameLocation": "1417:17:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"indexed": true,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1460:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "1444:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1444:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1494:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "1478:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1478:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1517:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "1509:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1541:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "1533:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1533:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1434:116:11"
									},
									"src": "1411:140:11"
								},
								{
									"canonicalName": "TuliaFlashPool.FlashLoanState",
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "1557:50:11",
										"text": "@dev Enumerates the possible states of a loan."
									},
									"id": 935,
									"members": [
										{
											"id": 932,
											"name": "UNINITIALIZED",
											"nameLocation": "1642:13:11",
											"nodeType": "EnumValue",
											"src": "1642:13:11"
										},
										{
											"id": 933,
											"name": "FUNDED",
											"nameLocation": "1665:6:11",
											"nodeType": "EnumValue",
											"src": "1665:6:11"
										},
										{
											"id": 934,
											"name": "CLOSED",
											"nameLocation": "1681:6:11",
											"nodeType": "EnumValue",
											"src": "1681:6:11"
										}
									],
									"name": "FlashLoanState",
									"nameLocation": "1617:14:11",
									"nodeType": "EnumDefinition",
									"src": "1612:81:11"
								},
								{
									"constant": false,
									"functionSelector": "c19d93fb",
									"id": 938,
									"mutability": "mutable",
									"name": "state",
									"nameLocation": "1721:5:11",
									"nodeType": "VariableDeclaration",
									"scope": 1388,
									"src": "1699:27:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_FlashLoanState_$935",
										"typeString": "enum TuliaFlashPool.FlashLoanState"
									},
									"typeName": {
										"id": 937,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 936,
											"name": "FlashLoanState",
											"nameLocations": [
												"1699:14:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 935,
											"src": "1699:14:11"
										},
										"referencedDeclaration": 935,
										"src": "1699:14:11",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_FlashLoanState_$935",
											"typeString": "enum TuliaFlashPool.FlashLoanState"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 939,
										"nodeType": "StructuredDocumentation",
										"src": "1763:140:11",
										"text": "@notice Event emitted when a loan is funded\n @param lender The address of the lender\n @param amount The amount of the loan"
									},
									"eventSelector": "726d5f1a838fe31748f737fa3ae5539ccff95952adfc593a1299532b643ff7a8",
									"id": 945,
									"name": "LoanFunded",
									"nameLocation": "1914:10:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"indexed": true,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "1941:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "1925:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1925:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1957:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "1949:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1949:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1924:40:11"
									},
									"src": "1908:57:11"
								},
								{
									"anonymous": false,
									"eventSelector": "cab22a4e95d29d40da2ace3f6ec72b49954a9bc7b2584f8fd47bf7f357a3ed6f",
									"id": 951,
									"name": "LoanClosed",
									"nameLocation": "1976:10:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"indexed": true,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "2003:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "1987:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1987:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2019:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "2011:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2011:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1986:40:11"
									},
									"src": "1970:57:11"
								},
								{
									"body": {
										"id": 993,
										"nodeType": "Block",
										"src": "2646:267:11",
										"statements": [
											{
												"expression": {
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 968,
														"name": "asset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "2656:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$515",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 969,
														"name": "_asset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "2664:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$515",
															"typeString": "contract IERC20"
														}
													},
													"src": "2656:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$515",
														"typeString": "contract IERC20"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "2656:14:11"
											},
											{
												"expression": {
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 972,
														"name": "flashLoanFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "2680:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 973,
														"name": "_flashLoanFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "2699:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2680:36:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 975,
												"nodeType": "ExpressionStatement",
												"src": "2680:36:11"
											},
											{
												"expression": {
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 976,
														"name": "poolOrganizer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "2726:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPoolOrganizer_$881",
															"typeString": "contract IPoolOrganizer"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 977,
														"name": "_poolOrganizer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "2742:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPoolOrganizer_$881",
															"typeString": "contract IPoolOrganizer"
														}
													},
													"src": "2726:30:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPoolOrganizer_$881",
														"typeString": "contract IPoolOrganizer"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "2726:30:11"
											},
											{
												"expression": {
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 980,
														"name": "flashPoolRewardManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "2766:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFlashPoolRewardManager_$709",
															"typeString": "contract IFlashPoolRewardManager"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 981,
														"name": "_flashPoolRewardManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "2791:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFlashPoolRewardManager_$709",
															"typeString": "contract IFlashPoolRewardManager"
														}
													},
													"src": "2766:48:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFlashPoolRewardManager_$709",
														"typeString": "contract IFlashPoolRewardManager"
													}
												},
												"id": 983,
												"nodeType": "ExpressionStatement",
												"src": "2766:48:11"
											},
											{
												"expression": {
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 984,
														"name": "loanAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "2836:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 985,
														"name": "_loanAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "2849:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2836:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "2836:24:11"
											},
											{
												"expression": {
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 988,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "2870:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_FlashLoanState_$935",
															"typeString": "enum TuliaFlashPool.FlashLoanState"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 989,
															"name": "FlashLoanState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "2878:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_FlashLoanState_$935_$",
																"typeString": "type(enum TuliaFlashPool.FlashLoanState)"
															}
														},
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2893:13:11",
														"memberName": "UNINITIALIZED",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 932,
														"src": "2878:28:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_FlashLoanState_$935",
															"typeString": "enum TuliaFlashPool.FlashLoanState"
														}
													},
													"src": "2870:36:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_FlashLoanState_$935",
														"typeString": "enum TuliaFlashPool.FlashLoanState"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "2870:36:11"
											}
										]
									},
									"documentation": {
										"id": 952,
										"nodeType": "StructuredDocumentation",
										"src": "2033:407:11",
										"text": "@notice Constructs the TuliaFlashPool lending pool\n @param _asset The ERC20 token asset used for flash loans\n @param _flashLoanFeeRate The initial fee rate for flash loans issued by this pool\n @param _poolOrganizer The Pool Organizer contract\n @param _flashPoolRewardManager The FlashPool Reward Manager contract\n @param _loanAmount The amount of the loan to be funded"
									},
									"id": 994,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "_asset",
												"nameLocation": "2473:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "2466:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$515",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 954,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 953,
														"name": "IERC20",
														"nameLocations": [
															"2466:6:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 515,
														"src": "2466:6:11"
													},
													"referencedDeclaration": 515,
													"src": "2466:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$515",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "_flashLoanFeeRate",
												"nameLocation": "2497:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "2489:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2489:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "_poolOrganizer",
												"nameLocation": "2539:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "2524:29:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IPoolOrganizer_$881",
													"typeString": "contract IPoolOrganizer"
												},
												"typeName": {
													"id": 959,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 958,
														"name": "IPoolOrganizer",
														"nameLocations": [
															"2524:14:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "2524:14:11"
													},
													"referencedDeclaration": 881,
													"src": "2524:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPoolOrganizer_$881",
														"typeString": "contract IPoolOrganizer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "_flashPoolRewardManager",
												"nameLocation": "2587:23:11",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "2563:47:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IFlashPoolRewardManager_$709",
													"typeString": "contract IFlashPoolRewardManager"
												},
												"typeName": {
													"id": 962,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 961,
														"name": "IFlashPoolRewardManager",
														"nameLocations": [
															"2563:23:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 709,
														"src": "2563:23:11"
													},
													"referencedDeclaration": 709,
													"src": "2563:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFlashPoolRewardManager_$709",
														"typeString": "contract IFlashPoolRewardManager"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "_loanAmount",
												"nameLocation": "2628:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "2620:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2620:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2456:189:11"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2646:0:11"
									},
									"scope": 1388,
									"src": "2445:468:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "3050:854:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_FlashLoanState_$935",
																"typeString": "enum TuliaFlashPool.FlashLoanState"
															},
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1001,
																"name": "state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 938,
																"src": "3068:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_FlashLoanState_$935",
																	"typeString": "enum TuliaFlashPool.FlashLoanState"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1002,
																	"name": "FlashLoanState",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 935,
																	"src": "3077:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_FlashLoanState_$935_$",
																		"typeString": "type(enum TuliaFlashPool.FlashLoanState)"
																	}
																},
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3092:13:11",
																"memberName": "UNINITIALIZED",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 932,
																"src": "3077:28:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_FlashLoanState_$935",
																	"typeString": "enum TuliaFlashPool.FlashLoanState"
																}
															},
															"src": "3068:37:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6f616e20697320616c72656164792066756e646564",
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3107:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0eaeb8851ec94c578efacccfc1b8d3a9c19a3eca764c4ba8332196e6b9235b43",
																"typeString": "literal_string \"Loan is already funded\""
															},
															"value": "Loan is already funded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0eaeb8851ec94c578efacccfc1b8d3a9c19a3eca764c4ba8332196e6b9235b43",
																"typeString": "literal_string \"Loan is already funded\""
															}
														],
														"id": 1000,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3060:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3060:72:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "3060:72:11"
											},
											{
												"expression": {
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1008,
														"name": "lender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "3142:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1009,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3151:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3155:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3151:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3142:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "3142:19:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1016,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3242:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1017,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3246:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3242:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1014,
																		"name": "asset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 901,
																		"src": "3226:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$515",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3232:9:11",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 472,
																	"src": "3226:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3226:27:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1019,
																"name": "loanAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 903,
																"src": "3257:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3226:41:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e636520746f2066756e6420746865206c6f616e",
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3269:39:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_65315e04f098dfcf4dec0e80633306129e13970ac69352f4bdba9c8551415f2c",
																"typeString": "literal_string \"Insufficient balance to fund the loan\""
															},
															"value": "Insufficient balance to fund the loan"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_65315e04f098dfcf4dec0e80633306129e13970ac69352f4bdba9c8551415f2c",
																"typeString": "literal_string \"Insufficient balance to fund the loan\""
															}
														],
														"id": 1013,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3218:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3218:91:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1023,
												"nodeType": "ExpressionStatement",
												"src": "3218:91:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1027,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3407:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3411:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3407:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1031,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3427:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TuliaFlashPool_$1388",
																					"typeString": "contract TuliaFlashPool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TuliaFlashPool_$1388",
																					"typeString": "contract TuliaFlashPool"
																				}
																			],
																			"id": 1030,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3419:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1029,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3419:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3419:13:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1025,
																		"name": "asset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 901,
																		"src": "3391:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$515",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3397:9:11",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 492,
																	"src": "3391:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3391:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1034,
																"name": "loanAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 903,
																"src": "3437:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3391:56:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c6c6f77616e6365206e6f742073657420666f72207468697320636f6e7472616374",
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:37:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dbfe25d7c74deb1287fc3c3f791a4f7416d69ebc90b3a8ae6f635ce71345304d",
																"typeString": "literal_string \"Allowance not set for this contract\""
															},
															"value": "Allowance not set for this contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dbfe25d7c74deb1287fc3c3f791a4f7416d69ebc90b3a8ae6f635ce71345304d",
																"typeString": "literal_string \"Allowance not set for this contract\""
															}
														],
														"id": 1024,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3383:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3383:104:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1038,
												"nodeType": "ExpressionStatement",
												"src": "3383:104:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1042,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3560:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3564:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3560:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1046,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3580:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TuliaFlashPool_$1388",
																		"typeString": "contract TuliaFlashPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TuliaFlashPool_$1388",
																		"typeString": "contract TuliaFlashPool"
																	}
																],
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3572:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1044,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3572:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3572:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1048,
															"name": "loanAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "3587:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1039,
															"name": "asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "3541:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$515",
																"typeString": "contract IERC20"
															}
														},
														"id": 1041,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3547:12:11",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 514,
														"src": "3541:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3541:57:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "3541:57:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1056,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3682:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TuliaFlashPool_$1388",
																		"typeString": "contract TuliaFlashPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TuliaFlashPool_$1388",
																		"typeString": "contract TuliaFlashPool"
																	}
																],
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3674:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1054,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3674:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3674:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1060,
																	"name": "asset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "3697:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$515",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$515",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3689:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1058,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3689:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3689:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1062,
															"name": "loanAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "3705:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1051,
															"name": "flashPoolRewardManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "3638:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IFlashPoolRewardManager_$709",
																"typeString": "contract IFlashPoolRewardManager"
															}
														},
														"id": 1053,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3661:12:11",
														"memberName": "registerPool",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 664,
														"src": "3638:35:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3638:78:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "3638:78:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1066,
															"name": "LENDER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "3760:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1067,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3773:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3777:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3773:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1065,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3749:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3749:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "3749:35:11"
											},
											{
												"expression": {
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1071,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "3818:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_FlashLoanState_$935",
															"typeString": "enum TuliaFlashPool.FlashLoanState"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1072,
															"name": "FlashLoanState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "3826:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_FlashLoanState_$935_$",
																"typeString": "type(enum TuliaFlashPool.FlashLoanState)"
															}
														},
														"id": 1073,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3841:6:11",
														"memberName": "FUNDED",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 933,
														"src": "3826:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_FlashLoanState_$935",
															"typeString": "enum TuliaFlashPool.FlashLoanState"
														}
													},
													"src": "3818:29:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_FlashLoanState_$935",
														"typeString": "enum TuliaFlashPool.FlashLoanState"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "3818:29:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1077,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3874:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3878:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3874:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1079,
															"name": "loanAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "3886:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1076,
														"name": "LoanFunded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "3863:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:34:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1081,
												"nodeType": "EmitStatement",
												"src": "3858:39:11"
											}
										]
									},
									"documentation": {
										"id": 995,
										"nodeType": "StructuredDocumentation",
										"src": "2919:84:11",
										"text": "@notice Allows a lender to fund the pool directly with the specified loan amount"
									},
									"functionSelector": "8db57994",
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 998,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 997,
												"name": "nonReentrant",
												"nameLocations": [
													"3037:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 578,
												"src": "3037:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3037:12:11"
										}
									],
									"name": "fundLoan",
									"nameLocation": "3017:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3025:2:11"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3050:0:11"
									},
									"scope": 1388,
									"src": "3008:896:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										411
									],
									"body": {
										"id": 1108,
										"nodeType": "Block",
										"src": "4235:84:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1097,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1092,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "4252:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1095,
																	"name": "asset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "4269:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$515",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$515",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1094,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4261:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1093,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4261:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4261:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4252:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 1105,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4311:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4252:60:11",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1102,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4302:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_TuliaFlashPool_$1388",
																			"typeString": "contract TuliaFlashPool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_TuliaFlashPool_$1388",
																			"typeString": "contract TuliaFlashPool"
																		}
																	],
																	"id": 1101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4294:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1100,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4294:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4294:13:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1098,
																"name": "asset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 901,
																"src": "4278:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$515",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4284:9:11",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 472,
															"src": "4278:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4278:30:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1091,
												"id": 1107,
												"nodeType": "Return",
												"src": "4245:67:11"
											}
										]
									},
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "3910:208:11",
										"text": "@notice Returns the maximum loanable amount of the asset\n @param token The ERC20 token address for which the max loan amount is queried\n @return The maximum amount available for a flash loan"
									},
									"functionSelector": "613255ab",
									"id": 1109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maxFlashLoan",
									"nameLocation": "4132:12:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1088,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4196:8:11"
									},
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4153:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "4145:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4145:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4144:15:11"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "4222:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4222:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4221:9:11"
									},
									"scope": 1388,
									"src": "4123:196:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										421
									],
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "4675:157:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1121,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "4693:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1124,
																		"name": "asset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 901,
																		"src": "4710:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$515",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$515",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4702:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1122,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4702:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4702:14:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4693:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e737570706f7274656420746f6b656e",
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4718:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_35557054842e6bac2d5677ccc2aeb32b43981809d9c333559406d70b18885a3e",
																"typeString": "literal_string \"Unsupported token\""
															},
															"value": "Unsupported token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_35557054842e6bac2d5677ccc2aeb32b43981809d9c333559406d70b18885a3e",
																"typeString": "literal_string \"Unsupported token\""
															}
														],
														"id": 1120,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4685:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4685:53:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "4685:53:11"
											},
											{
												"assignments": [
													1131
												],
												"declarations": [
													{
														"constant": false,
														"id": 1131,
														"mutability": "mutable",
														"name": "userFee",
														"nameLocation": "4756:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1141,
														"src": "4748:15:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1130,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4748:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1138,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1132,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1114,
																	"src": "4767:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1133,
																	"name": "flashLoanFeeRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 919,
																	"src": "4776:16:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4767:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1135,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4766:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 1136,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4796:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "4766:35:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4748:53:11"
											},
											{
												"expression": {
													"id": 1139,
													"name": "userFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1131,
													"src": "4818:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1119,
												"id": 1140,
												"nodeType": "Return",
												"src": "4811:14:11"
											}
										]
									},
									"documentation": {
										"id": 1110,
										"nodeType": "StructuredDocumentation",
										"src": "4325:221:11",
										"text": "@notice Calculates the flash loan fee for a given loan amount\n @param token The ERC20 token for which the fee is calculated\n @param amount The amount of the loan\n @return The calculated fee amount"
									},
									"functionSelector": "d9d98ce4",
									"id": 1142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "flashFee",
									"nameLocation": "4560:8:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1116,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4636:8:11"
									},
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4577:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "4569:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4569:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4592:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "4584:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4584:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4568:31:11"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "4662:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:9:11"
									},
									"scope": 1388,
									"src": "4551:281:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										436
									],
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "5457:140:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_FlashLoanState_$935",
																"typeString": "enum TuliaFlashPool.FlashLoanState"
															},
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1161,
																"name": "state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 938,
																"src": "5475:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_FlashLoanState_$935",
																	"typeString": "enum TuliaFlashPool.FlashLoanState"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1162,
																	"name": "FlashLoanState",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 935,
																	"src": "5484:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_FlashLoanState_$935_$",
																		"typeString": "type(enum TuliaFlashPool.FlashLoanState)"
																	}
																},
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5499:6:11",
																"memberName": "FUNDED",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 933,
																"src": "5484:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_FlashLoanState_$935",
																	"typeString": "enum TuliaFlashPool.FlashLoanState"
																}
															},
															"src": "5475:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c206e6f742066756e646564",
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5507:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6cd8f74f06ccfc6b51aecc4739d036029fee42ebda0c68198bbbcacc80ff9ee0",
																"typeString": "literal_string \"Pool not funded\""
															},
															"value": "Pool not funded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6cd8f74f06ccfc6b51aecc4739d036029fee42ebda0c68198bbbcacc80ff9ee0",
																"typeString": "literal_string \"Pool not funded\""
															}
														],
														"id": 1160,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5467:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5467:58:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1167,
												"nodeType": "ExpressionStatement",
												"src": "5467:58:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1169,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "5560:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC3156FlashBorrower_$398",
																"typeString": "contract IERC3156FlashBorrower"
															}
														},
														{
															"id": 1170,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "5570:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1171,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "5577:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1172,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "5585:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC3156FlashBorrower_$398",
																"typeString": "contract IERC3156FlashBorrower"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 1168,
														"name": "_executeFlashLoan",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "5542:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC3156FlashBorrower_$398_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC3156FlashBorrower,address,uint256,bytes calldata) returns (bool)"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5542:48:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1159,
												"id": 1174,
												"nodeType": "Return",
												"src": "5535:55:11"
											}
										]
									},
									"documentation": {
										"id": 1143,
										"nodeType": "StructuredDocumentation",
										"src": "4838:427:11",
										"text": "@notice Initiates a flash loan transaction\n @param receiver The borrower contract that must implement the IERC3156FlashBorrower interface\n @param token The ERC20 token to be borrowed\n @param amount The amount of tokens to borrow\n @param data Arbitrary data passed to the borrower's `onFlashLoan` method\n @return true if the flash loan is paid back successfully within the same transaction"
									},
									"functionSelector": "5cffe9de",
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1156,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1155,
												"name": "nonReentrant",
												"nameLocations": [
													"5429:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 578,
												"src": "5429:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5429:12:11"
										}
									],
									"name": "flashLoan",
									"nameLocation": "5279:9:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1154,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5420:8:11"
									},
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5320:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "5298:30:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC3156FlashBorrower_$398",
													"typeString": "contract IERC3156FlashBorrower"
												},
												"typeName": {
													"id": 1145,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1144,
														"name": "IERC3156FlashBorrower",
														"nameLocations": [
															"5298:21:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 398,
														"src": "5298:21:11"
													},
													"referencedDeclaration": 398,
													"src": "5298:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC3156FlashBorrower_$398",
														"typeString": "contract IERC3156FlashBorrower"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5346:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "5338:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5338:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5369:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "5361:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5361:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5400:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "5385:19:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1151,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5385:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5288:122:11"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "5451:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1157,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5451:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5450:6:11"
									},
									"scope": 1388,
									"src": "5270:327:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1254,
										"nodeType": "Block",
										"src": "5760:610:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1184,
																	"name": "LENDER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 914,
																	"src": "5786:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 1185,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5799:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5803:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5799:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1183,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "5778:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5778:32:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f7420746865206c656e646572",
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5812:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_de4c7e68b808b4e22d2dc4ea5c7dc05f1eb05f19187ed6ba95f51dad39a5f39a",
																"typeString": "literal_string \"Caller is not the lender\""
															},
															"value": "Caller is not the lender"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_de4c7e68b808b4e22d2dc4ea5c7dc05f1eb05f19187ed6ba95f51dad39a5f39a",
																"typeString": "literal_string \"Caller is not the lender\""
															}
														],
														"id": 1182,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5770:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5770:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "5770:69:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_FlashLoanState_$935",
																"typeString": "enum TuliaFlashPool.FlashLoanState"
															},
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1192,
																"name": "state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 938,
																"src": "5870:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_FlashLoanState_$935",
																	"typeString": "enum TuliaFlashPool.FlashLoanState"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1193,
																	"name": "FlashLoanState",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 935,
																	"src": "5879:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_FlashLoanState_$935_$",
																		"typeString": "type(enum TuliaFlashPool.FlashLoanState)"
																	}
																},
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5894:6:11",
																"memberName": "FUNDED",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 933,
																"src": "5879:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_FlashLoanState_$935",
																	"typeString": "enum TuliaFlashPool.FlashLoanState"
																}
															},
															"src": "5870:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6f616e206973206e6f7420696e20612066756e646564207374617465",
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5914:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb6aa89ffa3f4791c893c4b4cba6370a0456dfcc053f8896be0cf78813b27237",
																"typeString": "literal_string \"Loan is not in a funded state\""
															},
															"value": "Loan is not in a funded state"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb6aa89ffa3f4791c893c4b4cba6370a0456dfcc053f8896be0cf78813b27237",
																"typeString": "literal_string \"Loan is not in a funded state\""
															}
														],
														"id": 1191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5849:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5849:106:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1198,
												"nodeType": "ExpressionStatement",
												"src": "5849:106:11"
											},
											{
												"assignments": [
													1200
												],
												"declarations": [
													{
														"constant": false,
														"id": 1200,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "5974:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1254,
														"src": "5966:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1199,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5966:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1208,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1205,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6007:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TuliaFlashPool_$1388",
																		"typeString": "contract TuliaFlashPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TuliaFlashPool_$1388",
																		"typeString": "contract TuliaFlashPool"
																	}
																],
																"id": 1204,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5999:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1203,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5999:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5999:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1201,
															"name": "asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "5983:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$515",
																"typeString": "contract IERC20"
															}
														},
														"id": 1202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5989:9:11",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 472,
														"src": "5983:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5983:30:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5966:47:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1210,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1200,
																"src": "6031:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6040:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6031:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2066756e647320746f207769746864726177",
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6043:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9",
																"typeString": "literal_string \"No funds to withdraw\""
															},
															"value": "No funds to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9",
																"typeString": "literal_string \"No funds to withdraw\""
															}
														],
														"id": 1209,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6023:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6023:43:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "6023:43:11"
											},
											{
												"expression": {
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1216,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "6077:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_FlashLoanState_$935",
															"typeString": "enum TuliaFlashPool.FlashLoanState"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1217,
															"name": "FlashLoanState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "6085:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_FlashLoanState_$935_$",
																"typeString": "type(enum TuliaFlashPool.FlashLoanState)"
															}
														},
														"id": 1218,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6100:6:11",
														"memberName": "CLOSED",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 934,
														"src": "6085:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_FlashLoanState_$935",
															"typeString": "enum TuliaFlashPool.FlashLoanState"
														}
													},
													"src": "6077:29:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_FlashLoanState_$935",
														"typeString": "enum TuliaFlashPool.FlashLoanState"
													}
												},
												"id": 1220,
												"nodeType": "ExpressionStatement",
												"src": "6077:29:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1226,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6167:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TuliaFlashPool_$1388",
																		"typeString": "contract TuliaFlashPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TuliaFlashPool_$1388",
																		"typeString": "contract TuliaFlashPool"
																	}
																],
																"id": 1225,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6159:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1224,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6159:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6159:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1228,
																	"name": "IPoolOrganizer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "6186:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IPoolOrganizer_$881_$",
																		"typeString": "type(contract IPoolOrganizer)"
																	}
																},
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6201:9:11",
																"memberName": "LoanState",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 724,
																"src": "6186:24:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_LoanState_$724_$",
																	"typeString": "type(enum IPoolOrganizer.LoanState)"
																}
															},
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6211:6:11",
															"memberName": "CLOSED",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 722,
															"src": "6186:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_LoanState_$724",
																"typeString": "enum IPoolOrganizer.LoanState"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_enum$_LoanState_$724",
																"typeString": "enum IPoolOrganizer.LoanState"
															}
														],
														"expression": {
															"id": 1221,
															"name": "poolOrganizer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "6116:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPoolOrganizer_$881",
																"typeString": "contract IPoolOrganizer"
															}
														},
														"id": 1223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6130:15:11",
														"memberName": "updateLoanState",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 827,
														"src": "6116:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_enum$_LoanState_$724_$returns$__$",
															"typeString": "function (address,enum IPoolOrganizer.LoanState) external"
														}
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6116:111:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1232,
												"nodeType": "ExpressionStatement",
												"src": "6116:111:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1238,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6274:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TuliaFlashPool_$1388",
																		"typeString": "contract TuliaFlashPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TuliaFlashPool_$1388",
																		"typeString": "contract TuliaFlashPool"
																	}
																],
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6266:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1236,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6266:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6266:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1233,
															"name": "poolOrganizer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "6237:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPoolOrganizer_$881",
																"typeString": "contract IPoolOrganizer"
															}
														},
														"id": 1235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6251:14:11",
														"memberName": "deregisterPool",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 794,
														"src": "6237:28:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6237:43:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1241,
												"nodeType": "ExpressionStatement",
												"src": "6237:43:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1245,
															"name": "lender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "6306:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1246,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "6314:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1242,
															"name": "asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "6291:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$515",
																"typeString": "contract IERC20"
															}
														},
														"id": 1244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6297:8:11",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 482,
														"src": "6291:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6291:30:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1248,
												"nodeType": "ExpressionStatement",
												"src": "6291:30:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1250,
															"name": "lender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "6348:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1251,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "6356:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1249,
														"name": "LoanClosed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "6337:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6337:26:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1253,
												"nodeType": "EmitStatement",
												"src": "6332:31:11"
											}
										]
									},
									"documentation": {
										"id": 1177,
										"nodeType": "StructuredDocumentation",
										"src": "5603:109:11",
										"text": "@notice Allows the lender to close the loan and withdraw their funds if no active flash loans are present"
									},
									"functionSelector": "232fa733",
									"id": 1255,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1180,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1179,
												"name": "nonReentrant",
												"nameLocations": [
													"5747:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 578,
												"src": "5747:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5747:12:11"
										}
									],
									"name": "closeLoan",
									"nameLocation": "5726:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5735:2:11"
									},
									"returnParameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5760:0:11"
									},
									"scope": 1388,
									"src": "5717:653:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1376,
										"nodeType": "Block",
										"src": "6963:903:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1271,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1261,
																"src": "6981:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1274,
																		"name": "asset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 901,
																		"src": "6998:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$515",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$515",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6990:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1272,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6990:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6990:14:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6981:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e737570706f7274656420746f6b656e",
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7006:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_35557054842e6bac2d5677ccc2aeb32b43981809d9c333559406d70b18885a3e",
																"typeString": "literal_string \"Unsupported token\""
															},
															"value": "Unsupported token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_35557054842e6bac2d5677ccc2aeb32b43981809d9c333559406d70b18885a3e",
																"typeString": "literal_string \"Unsupported token\""
															}
														],
														"id": 1270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6973:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6973:53:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1279,
												"nodeType": "ExpressionStatement",
												"src": "6973:53:11"
											},
											{
												"assignments": [
													1281
												],
												"declarations": [
													{
														"constant": false,
														"id": 1281,
														"mutability": "mutable",
														"name": "totalFee",
														"nameLocation": "7045:8:11",
														"nodeType": "VariableDeclaration",
														"scope": 1376,
														"src": "7037:16:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1280,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7037:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1286,
												"initialValue": {
													"arguments": [
														{
															"id": 1283,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "7065:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1284,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "7072:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1282,
														"name": "flashFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "7056:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7056:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7037:42:11"
											},
											{
												"assignments": [
													1288
												],
												"declarations": [
													{
														"constant": false,
														"id": 1288,
														"mutability": "mutable",
														"name": "balanceBefore",
														"nameLocation": "7097:13:11",
														"nodeType": "VariableDeclaration",
														"scope": 1376,
														"src": "7089:21:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1287,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7089:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1296,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1293,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7137:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TuliaFlashPool_$1388",
																		"typeString": "contract TuliaFlashPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TuliaFlashPool_$1388",
																		"typeString": "contract TuliaFlashPool"
																	}
																],
																"id": 1292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7129:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1291,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7129:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7129:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1289,
															"name": "asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "7113:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$515",
																"typeString": "contract IERC20"
															}
														},
														"id": 1290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7119:9:11",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 472,
														"src": "7113:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7113:30:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7089:54:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1302,
																	"name": "receiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1259,
																	"src": "7177:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC3156FlashBorrower_$398",
																		"typeString": "contract IERC3156FlashBorrower"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC3156FlashBorrower_$398",
																		"typeString": "contract IERC3156FlashBorrower"
																	}
																],
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7169:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1300,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7169:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7169:17:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1304,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "7188:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1297,
															"name": "asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "7154:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$515",
																"typeString": "contract IERC20"
															}
														},
														"id": 1299,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7160:8:11",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 482,
														"src": "7154:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7154:41:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1306,
												"nodeType": "ExpressionStatement",
												"src": "7154:41:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1310,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7248:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7252:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7248:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1312,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1261,
																		"src": "7260:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1313,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1263,
																		"src": "7267:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1314,
																		"name": "totalFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1281,
																		"src": "7275:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1315,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1265,
																		"src": "7285:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"expression": {
																		"id": 1308,
																		"name": "receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1259,
																		"src": "7227:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC3156FlashBorrower_$398",
																			"typeString": "contract IERC3156FlashBorrower"
																		}
																	},
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7236:11:11",
																	"memberName": "onFlashLoan",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 397,
																	"src": "7227:20:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes32)"
																	}
																},
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7227:63:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "45524333313536466c617368426f72726f7765722e6f6e466c6173684c6f616e",
																		"id": 1318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7320:34:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9",
																			"typeString": "literal_string \"ERC3156FlashBorrower.onFlashLoan\""
																		},
																		"value": "ERC3156FlashBorrower.onFlashLoan"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9",
																			"typeString": "literal_string \"ERC3156FlashBorrower.onFlashLoan\""
																		}
																	],
																	"id": 1317,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "7310:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7310:45:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "7227:128:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "466c617368206c6f616e206661696c6564",
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7369:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_63b9b223ee638cd0ab97f0a72b926003f28084afe15ca83039d9a810e771c94b",
																"typeString": "literal_string \"Flash loan failed\""
															},
															"value": "Flash loan failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_63b9b223ee638cd0ab97f0a72b926003f28084afe15ca83039d9a810e771c94b",
																"typeString": "literal_string \"Flash loan failed\""
															}
														],
														"id": 1307,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7206:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7206:192:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1323,
												"nodeType": "ExpressionStatement",
												"src": "7206:192:11"
											},
											{
												"assignments": [
													1325
												],
												"declarations": [
													{
														"constant": false,
														"id": 1325,
														"mutability": "mutable",
														"name": "amountOwed",
														"nameLocation": "7417:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1376,
														"src": "7409:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1324,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7409:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1329,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1326,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "7430:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1327,
														"name": "totalFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1281,
														"src": "7439:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7430:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7409:38:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1335,
																	"name": "receiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1259,
																	"src": "7484:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC3156FlashBorrower_$398",
																		"typeString": "contract IERC3156FlashBorrower"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC3156FlashBorrower_$398",
																		"typeString": "contract IERC3156FlashBorrower"
																	}
																],
																"id": 1334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7476:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1333,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7476:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7476:17:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1339,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7503:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TuliaFlashPool_$1388",
																		"typeString": "contract TuliaFlashPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TuliaFlashPool_$1388",
																		"typeString": "contract TuliaFlashPool"
																	}
																],
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7495:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1337,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7495:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7495:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1341,
															"name": "amountOwed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "7510:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1330,
															"name": "asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "7457:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$515",
																"typeString": "contract IERC20"
															}
														},
														"id": 1332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7463:12:11",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 514,
														"src": "7457:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7457:64:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1343,
												"nodeType": "ExpressionStatement",
												"src": "7457:64:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1349,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "7577:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TuliaFlashPool_$1388",
																					"typeString": "contract TuliaFlashPool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TuliaFlashPool_$1388",
																					"typeString": "contract TuliaFlashPool"
																				}
																			],
																			"id": 1348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7569:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1347,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7569:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7569:13:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1345,
																		"name": "asset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 901,
																		"src": "7553:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$515",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7559:9:11",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 472,
																	"src": "7553:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:30:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1352,
																"name": "balanceBefore",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1288,
																"src": "7587:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7553:47:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "466c617368206c6f616e2072657061796d656e74206661696c6564",
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7614:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6a194ecd5810fa14ab3aae881c21c82acc6b18a75f7dcdcc28989e1e38f4d297",
																"typeString": "literal_string \"Flash loan repayment failed\""
															},
															"value": "Flash loan repayment failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6a194ecd5810fa14ab3aae881c21c82acc6b18a75f7dcdcc28989e1e38f4d297",
																"typeString": "literal_string \"Flash loan repayment failed\""
															}
														],
														"id": 1344,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7532:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7532:121:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1356,
												"nodeType": "ExpressionStatement",
												"src": "7532:121:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1360,
															"name": "lender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "7744:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1361,
															"name": "totalFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "7752:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1357,
															"name": "asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "7729:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$515",
																"typeString": "contract IERC20"
															}
														},
														"id": 1359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7735:8:11",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 482,
														"src": "7729:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7729:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1363,
												"nodeType": "ExpressionStatement",
												"src": "7729:32:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1367,
																	"name": "receiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1259,
																	"src": "7803:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC3156FlashBorrower_$398",
																		"typeString": "contract IERC3156FlashBorrower"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC3156FlashBorrower_$398",
																		"typeString": "contract IERC3156FlashBorrower"
																	}
																],
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7795:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1365,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7795:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7795:17:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1369,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "7814:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "7821:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1371,
															"name": "totalFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "7829:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1364,
														"name": "FlashLoanExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "7777:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7777:61:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1373,
												"nodeType": "EmitStatement",
												"src": "7772:66:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7855:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1269,
												"id": 1375,
												"nodeType": "Return",
												"src": "7848:11:11"
											}
										]
									},
									"documentation": {
										"id": 1256,
										"nodeType": "StructuredDocumentation",
										"src": "6376:409:11",
										"text": "@dev Internal function to execute a flash loan transaction\n Handles the lifecycle of a flash loan including fee calculation, asset transfer, and repayment check\n @param receiver The borrower contract\n @param token The ERC20 token for the loan\n @param amount The loan amount\n @param data Data payload for the borrower\n @return true if the transaction is successful"
									},
									"id": 1377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_executeFlashLoan",
									"nameLocation": "6799:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "6848:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "6826:30:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC3156FlashBorrower_$398",
													"typeString": "contract IERC3156FlashBorrower"
												},
												"typeName": {
													"id": 1258,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1257,
														"name": "IERC3156FlashBorrower",
														"nameLocations": [
															"6826:21:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 398,
														"src": "6826:21:11"
													},
													"referencedDeclaration": 398,
													"src": "6826:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC3156FlashBorrower_$398",
														"typeString": "contract IERC3156FlashBorrower"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6874:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "6866:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6866:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6897:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "6889:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6889:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6928:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "6913:19:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1264,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6913:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6816:122:11"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "6957:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1267,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6957:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6956:6:11"
									},
									"scope": 1388,
									"src": "6790:1076:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1386,
										"nodeType": "Block",
										"src": "8052:29:11",
										"statements": [
											{
												"expression": {
													"id": 1384,
													"name": "state",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 938,
													"src": "8069:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_FlashLoanState_$935",
														"typeString": "enum TuliaFlashPool.FlashLoanState"
													}
												},
												"functionReturnParameters": 1383,
												"id": 1385,
												"nodeType": "Return",
												"src": "8062:12:11"
											}
										]
									},
									"documentation": {
										"id": 1378,
										"nodeType": "StructuredDocumentation",
										"src": "7872:107:11",
										"text": "@notice Returns the current state of the flash loan\n @return The current state of the flash loan"
									},
									"functionSelector": "c694b54c",
									"id": 1387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFlashLoanState",
									"nameLocation": "7993:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8010:2:11"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "8036:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_FlashLoanState_$935",
													"typeString": "enum TuliaFlashPool.FlashLoanState"
												},
												"typeName": {
													"id": 1381,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1380,
														"name": "FlashLoanState",
														"nameLocations": [
															"8036:14:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 935,
														"src": "8036:14:11"
													},
													"referencedDeclaration": 935,
													"src": "8036:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_FlashLoanState_$935",
														"typeString": "enum TuliaFlashPool.FlashLoanState"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8035:16:11"
									},
									"scope": 1388,
									"src": "7984:97:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1389,
							"src": "644:7439:11",
							"usedErrors": [
								305,
								308,
								559
							],
							"usedEvents": [
								317,
								326,
								335,
								930,
								945,
								951
							]
						}
					],
					"src": "32:8052:11"
				},
				"id": 11
			}
		}
	}
}