{
	"id": "6826b81ee439d3ac01e47fab0c431131",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"settings": {
			"viaIR": true,
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/contracts/protocol/PoolOrganizer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"../interfaces/IPoolOrganizer.sol\";\nimport \"../interfaces/IVaultManager.sol\";\nimport \"../interfaces/IRewardManager.sol\";\n\n/// @title Pool Organizer for managing pools, vaults, and rewards.\n/// @dev Implements access control and management for pool lifecycle and integration with external managers.\ncontract PoolOrganizer is AccessControl, IPoolOrganizer {\n    bytes32 public constant POOL_MANAGER_ROLE = keccak256(\"POOL_MANAGER_ROLE\");\n\n    IVaultManager public vaultManager;\n    IRewardManager public rewardManager;\n\n    address[] private pools;\n    mapping(address => PoolDetails) private poolDetails;\n    mapping(address => address[]) private lenderPools;\n    mapping(address => address) public poolVaults;\n\n    /// @dev Emitted when a pool is registered.\n    event PoolRegistered(\n        address indexed pool,\n        address indexed lender,\n        address indexed borrower,\n        address vault,\n        PoolType poolType\n    );\n    /// @dev Emitted when a pool is deregistered.\n    event PoolDeregistered(address indexed pool);\n    /// @dev Emitted when managers are registered.\n    event ManagerRegistered(address vaultManager, address rewardManager);\n\n    event VaultRegistered(address indexed pool, address indexed vault);\n\n    constructor() {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(POOL_MANAGER_ROLE, msg.sender);\n    }\n\n    /// @notice Registers a new pool within the organizer.\n    /// @param pool The address of the new pool.\n    /// @param lender The address of the lender.\n    /// @param borrower The address of the borrower (if known at this point, otherwise zero).\n    /// @param vault The address of the vault associated with the pool.\n    /// @param loanToken The address of the loan token.\n    /// @param assetToken The address of the asset token used as collateral.\n    /// @param loanAmount The amount of the loan.\n    /// @param interestRate The interest rate of the loan.\n    /// @param repaymentPeriod The period over which the loan is to be repaid.\n    /// @param poolType The type of the pool (standard or flash).\n    function registerPool(\n        address pool,\n        address lender,\n        address borrower,\n        address vault,\n        address loanToken,\n        address assetToken,\n        uint256 loanAmount,\n        uint256 interestRate,\n        uint256 repaymentPeriod,\n        PoolType poolType\n    ) external onlyRole(POOL_MANAGER_ROLE) {\n        require(pool != address(0), \"Pool address cannot be zero\");\n        require(\n            poolDetails[pool].lender == address(0),\n            \"Pool already registered\"\n        );\n\n        poolDetails[pool] = PoolDetails({\n            lender: lender,\n            borrower: borrower,\n            creationTime: block.timestamp,\n            vault: vault,\n            loanToken: loanToken,\n            assetToken: assetToken,\n            loanAmount: loanAmount,\n            interestRate: interestRate,\n            repaymentPeriod: repaymentPeriod,\n            poolType: poolType\n        });\n        lenderPools[lender].push(pool);\n        pools.push(pool);\n        emit PoolRegistered(pool, lender, borrower, vault, poolType);\n    }\n\n    /// @notice Deregisters a pool from the organizer.\n    /// @param pool The address of the pool to deregister.\n    function deregisterPool(address pool) external onlyRole(POOL_MANAGER_ROLE) {\n        require(poolDetails[pool].lender != address(0), \"Pool not registered\");\n\n        address lender = poolDetails[pool].lender;\n        _removePoolFromLenderArray(lender, pool);\n        _removePoolFromMainArray(pool);\n\n        delete poolDetails[pool];\n        emit PoolDeregistered(pool);\n    }\n\n    /// @notice Registers the manager contracts for managing vaults and rewards.\n    /// @param _vaultManager Address of the VaultManager contract.\n    /// @param _rewardManager Address of the RewardManager contract.\n    function registerManagers(address _vaultManager, address _rewardManager)\n        external\n        onlyRole(DEFAULT_ADMIN_ROLE)\n    {\n        require(\n            _vaultManager != address(0),\n            \"VaultManager cannot be zero address\"\n        );\n        require(\n            _rewardManager != address(0),\n            \"RewardManager cannot be zero address\"\n        );\n\n        vaultManager = IVaultManager(_vaultManager);\n        rewardManager = IRewardManager(_rewardManager);\n\n        emit ManagerRegistered(_vaultManager, _rewardManager);\n    }\n\n    /// @notice Returns the addresses of the VaultManager and RewardManager.\n    /// @return A tuple containing the addresses of the VaultManager and RewardManager.\n    function getManagers() external view returns (address, address) {\n        return (address(vaultManager), address(rewardManager));\n    }\n\n    /// @notice Retrieves the total number of registered pools.\n    /// @return The total number of pools.\n    function getTotalPools() external view returns (uint256) {\n        return pools.length;\n    }\n\n    /// @notice Retrieves all pools associated with a specific lender.\n    /// @param lender The address of the lender.\n    /// @return An array of pool addresses.\n    function getPoolsByLender(address lender)\n        external\n        view\n        returns (address[] memory)\n    {\n        return lenderPools[lender];\n    }\n\n    /// @notice Retrieves details for a specific pool.\n    /// @param pool The address of the pool.\n    /// @return Details of the specified pool.\n    function getPoolDetails(address pool)\n        external\n        view\n        returns (PoolDetails memory)\n    {\n        require(poolDetails[pool].lender != address(0), \"Pool not registered\");\n        return poolDetails[pool];\n    }\n\n    /// @notice Retrieves the vault associated with a specific pool.\n    /// @param pool The address of the pool.\n    /// @return The address of the vault linked to the pool.\n       function getVaultForPool(address pool) external view returns (address) {\n        require(\n            poolVaults[pool] != address(0),\n            \"Pool not registered or has no vault\"\n        );\n        return poolVaults[pool];\n    }\n\n\n    /// @notice Grants factory access to manage pools.\n    /// @param factoryAddress The address of the factory to be granted access.\n    function grantFactoryAccess(address factoryAddress) external {\n        require(\n            hasRole(DEFAULT_ADMIN_ROLE, msg.sender),\n            \"Caller is not an admin\"\n        );\n        grantRole(POOL_MANAGER_ROLE, factoryAddress);\n    }\n\n    // Private helper functions\n    function _removePoolFromLenderArray(address lender, address pool) private {\n        uint256 index = findIndexInArray(lenderPools[lender], pool);\n        uint256 lastIndex = lenderPools[lender].length - 1;\n        lenderPools[lender][index] = lenderPools[lender][lastIndex];\n        lenderPools[lender].pop();\n    }\n\n    function _removePoolFromMainArray(address pool) private {\n        uint256 index = findIndexInArray(pools, pool);\n        uint256 lastIndex = pools.length - 1;\n        pools[index] = pools[lastIndex];\n        pools.pop();\n    }\n\n    function findIndexInArray(address[] storage array, address target)\n        private\n        view\n        returns (uint256)\n    {\n        for (uint256 i = 0; i < array.length; i++) {\n            if (array[i] == target) return i;\n        }\n        return type(uint256).max; // Indicates not found\n    }\n\n    /// @notice Registers a vault for a given pool.\n    /// @param pool The address of the pool for which the vault is being registered.\n    /// @param vault The address of the newly created vault.\n    /// @dev This function can only be called by authorized roles, typically the PoolFactory.\n     function registerVault(address pool, address vault)\n        external\n        onlyRole(POOL_MANAGER_ROLE)\n    {\n        require(pool != address(0) && vault != address(0), \"Invalid addresses\");\n        require(poolDetails[pool].lender != address(0), \"Pool not registered\");\n        require(\n            poolVaults[pool] == address(0),\n            \"Vault already registered for this pool\"\n        );\n\n        poolVaults[pool] = vault;\n        emit VaultRegistered(pool, vault);\n    }\n}\n"
			},
			"contracts/contracts/interfaces/IRewardManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\n/// @title IRewardManager\r\n/// @dev Interface for managing rewards across all active loan pools, allowing for dynamic reward tokens.\r\ninterface IRewardManager {\r\n    /// @notice Sets the reward token for a specific pool.\r\n    /// @param pool The address of the TuliaPool.\r\n    /// @param rewardToken The reward token for this pool.\r\n    function setRewardToken(address pool, address rewardToken) external;\r\n\r\n    /// @notice Registers a pool to be eligible for rewards, initializing its reward token.\r\n    /// @param pool The address of the TuliaPool to register.\r\n    /// @param rewardToken The reward token for this pool.\r\n    function registerPool(address pool, address rewardToken) external;\r\n\r\n    /// @notice Accrues rewards for a pool based on its loan amount since the loan was funded.\r\n    /// @param pool The TuliaPool instance.\r\n    function accrueReward(address pool) external;\r\n\r\n    /// @notice Allows a pool to claim its accrued rewards.\r\n    /// @param pool The TuliaPool instance claiming its rewards.\r\n    function claimRewards(address pool) external;\r\n\r\n    /// @notice Retrieves the total accrued rewards for a specified pool.\r\n    /// @param pool The address of the TuliaPool.\r\n    /// @return reward The total accrued rewards for the pool.\r\n    function getAccruedRewards(address pool) external view returns (uint256 reward);\r\n\r\n    /// @notice Deregisters a pool when a loan is closed.\r\n    /// @param pool Address of the pool whose vault is to be deregistered.\r\n    function deregisterPool(address pool) external;\r\n\r\n \r\n}\r\n"
			},
			"contracts/contracts/interfaces/IVaultManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n/// @title IVaultManager\r\n/// @dev Interface for the VaultManager contract.\r\ninterface IVaultManager {\r\n    /// @notice Registers a pool's vault upon creation.\r\n    /// @param pool Address of the pool.\r\n    /// @param vault Address of the vault associated with the pool.\r\n    function registerPoolVault(address pool, address vault) external;\r\n\r\n    /// @notice Deregisters a pool's vault upon loan closure.\r\n    /// @param pool Address of the pool.\r\n    function deregisterVault(address pool) external;\r\n\r\n    /// @notice Distributes accrued interest from a vault to a specified recipient.\r\n    /// @param pool Address of the pool initiating the interest payout.\r\n    /// @param to Recipient of the interest payment.\r\n    /// @param amount Amount of interest to be distributed.\r\n    function distributeInterest(address pool, address to, uint256 amount) external;\r\n\r\n    /// @notice Calculates the claimable interest for a user based on the pool's loan configuration.\r\n    /// @param pool Address of the pool for which to calculate interest.\r\n    /// @param user Address of the user (borrower) claiming interest.\r\n    /// @return amount The calculated interest amount.\r\n    function calculateClaimableInterest(address pool, address user) external view returns (uint256);\r\n}\r\n"
			},
			"contracts/contracts/interfaces/IPoolOrganizer.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IPoolOrganizer {\r\n    enum PoolType { STANDARD, FLASH_LOAN }\r\n\r\n    struct PoolDetails {\r\n        address lender;\r\n        address borrower;\r\n        uint256 creationTime;\r\n        address vault;\r\n        address loanToken;\r\n        address assetToken;\r\n        uint256 loanAmount;\r\n        uint256 interestRate;\r\n        uint256 repaymentPeriod;\r\n        PoolType poolType; // New field to specify the type of pool\r\n    }\r\n\r\n    function registerPool(\r\n        address pool,\r\n        address lender,\r\n        address borrower,\r\n        address vault,\r\n        address loanToken,\r\n        address assetToken,\r\n        uint256 loanAmount,\r\n        uint256 interestRate,\r\n        uint256 repaymentPeriod,\r\n        PoolType poolType  // Include pool type in registration\r\n    ) external;\r\n\r\n    function deregisterPool(address pool) external;\r\n    function getTotalPools() external view returns (uint256);\r\n    function getPoolsByLender(address lender) external view returns (address[] memory);\r\n    function getPoolDetails(address pool) external view returns (PoolDetails memory);\r\n    function getVaultForPool(address pool) external view returns (address);\r\n    function grantFactoryAccess(address factoryAddress) external;\r\n    function registerVault(address pool,address vault) external;\r\n    function registerManagers(address _vaultManager, address _rewardManager) external;\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/interfaces/IPoolOrganizer.sol": {
				"IPoolOrganizer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "deregisterPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "getPoolDetails",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "lender",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "borrower",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "creationTime",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "vault",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "loanToken",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "assetToken",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "loanAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "interestRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "repaymentPeriod",
											"type": "uint256"
										},
										{
											"internalType": "enum IPoolOrganizer.PoolType",
											"name": "poolType",
											"type": "uint8"
										}
									],
									"internalType": "struct IPoolOrganizer.PoolDetails",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "lender",
									"type": "address"
								}
							],
							"name": "getPoolsByLender",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalPools",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "getVaultForPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "factoryAddress",
									"type": "address"
								}
							],
							"name": "grantFactoryAccess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_vaultManager",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardManager",
									"type": "address"
								}
							],
							"name": "registerManagers",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "lender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "borrower",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "loanToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "assetToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "loanAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "repaymentPeriod",
									"type": "uint256"
								},
								{
									"internalType": "enum IPoolOrganizer.PoolType",
									"name": "poolType",
									"type": "uint8"
								}
							],
							"name": "registerPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "registerVault",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deregisterPool(address)": "7e72c7d7",
							"getPoolDetails(address)": "d3e90fa0",
							"getPoolsByLender(address)": "24a44efb",
							"getTotalPools()": "d3ffe67a",
							"getVaultForPool(address)": "7570e389",
							"grantFactoryAccess(address)": "5d102df7",
							"registerManagers(address,address)": "c489579d",
							"registerPool(address,address,address,address,address,address,uint256,uint256,uint256,uint8)": "2437769a",
							"registerVault(address,address)": "05c4fdf9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"deregisterPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"loanToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"assetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repaymentPeriod\",\"type\":\"uint256\"},{\"internalType\":\"enum IPoolOrganizer.PoolType\",\"name\":\"poolType\",\"type\":\"uint8\"}],\"internalType\":\"struct IPoolOrganizer.PoolDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"}],\"name\":\"getPoolsByLender\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalPools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getVaultForPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factoryAddress\",\"type\":\"address\"}],\"name\":\"grantFactoryAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardManager\",\"type\":\"address\"}],\"name\":\"registerManagers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"loanToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"assetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repaymentPeriod\",\"type\":\"uint256\"},{\"internalType\":\"enum IPoolOrganizer.PoolType\",\"name\":\"poolType\",\"type\":\"uint8\"}],\"name\":\"registerPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"registerVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/interfaces/IPoolOrganizer.sol\":\"IPoolOrganizer\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/interfaces/IPoolOrganizer.sol\":{\"keccak256\":\"0xd820fcf275d71dfa3f2e0d34dd11407c168f5831685596f4a7f6074fa4ec6663\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20ddf5fbc3c67df648c3df1468c716f1b78a291e9c45df69ac6ccd636c1b2cdd\",\"dweb:/ipfs/QmUA5sMAKQswnf3t6EzkjrAzoYArj6k7oCoieuaqFXP4rp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/interfaces/IRewardManager.sol": {
				"IRewardManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "accrueReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "claimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "deregisterPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "getAccruedRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rewardToken",
									"type": "address"
								}
							],
							"name": "registerPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rewardToken",
									"type": "address"
								}
							],
							"name": "setRewardToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for managing rewards across all active loan pools, allowing for dynamic reward tokens.",
						"kind": "dev",
						"methods": {
							"accrueReward(address)": {
								"params": {
									"pool": "The TuliaPool instance."
								}
							},
							"claimRewards(address)": {
								"params": {
									"pool": "The TuliaPool instance claiming its rewards."
								}
							},
							"deregisterPool(address)": {
								"params": {
									"pool": "Address of the pool whose vault is to be deregistered."
								}
							},
							"getAccruedRewards(address)": {
								"params": {
									"pool": "The address of the TuliaPool."
								},
								"returns": {
									"reward": "The total accrued rewards for the pool."
								}
							},
							"registerPool(address,address)": {
								"params": {
									"pool": "The address of the TuliaPool to register.",
									"rewardToken": "The reward token for this pool."
								}
							},
							"setRewardToken(address,address)": {
								"params": {
									"pool": "The address of the TuliaPool.",
									"rewardToken": "The reward token for this pool."
								}
							}
						},
						"title": "IRewardManager",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"accrueReward(address)": "978e08d7",
							"claimRewards(address)": "ef5cfb8c",
							"deregisterPool(address)": "7e72c7d7",
							"getAccruedRewards(address)": "2552aa1f",
							"registerPool(address,address)": "7286e5e5",
							"setRewardToken(address,address)": "e5c8c572"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"accrueReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"deregisterPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getAccruedRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"}],\"name\":\"registerPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"}],\"name\":\"setRewardToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for managing rewards across all active loan pools, allowing for dynamic reward tokens.\",\"kind\":\"dev\",\"methods\":{\"accrueReward(address)\":{\"params\":{\"pool\":\"The TuliaPool instance.\"}},\"claimRewards(address)\":{\"params\":{\"pool\":\"The TuliaPool instance claiming its rewards.\"}},\"deregisterPool(address)\":{\"params\":{\"pool\":\"Address of the pool whose vault is to be deregistered.\"}},\"getAccruedRewards(address)\":{\"params\":{\"pool\":\"The address of the TuliaPool.\"},\"returns\":{\"reward\":\"The total accrued rewards for the pool.\"}},\"registerPool(address,address)\":{\"params\":{\"pool\":\"The address of the TuliaPool to register.\",\"rewardToken\":\"The reward token for this pool.\"}},\"setRewardToken(address,address)\":{\"params\":{\"pool\":\"The address of the TuliaPool.\",\"rewardToken\":\"The reward token for this pool.\"}}},\"title\":\"IRewardManager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accrueReward(address)\":{\"notice\":\"Accrues rewards for a pool based on its loan amount since the loan was funded.\"},\"claimRewards(address)\":{\"notice\":\"Allows a pool to claim its accrued rewards.\"},\"deregisterPool(address)\":{\"notice\":\"Deregisters a pool when a loan is closed.\"},\"getAccruedRewards(address)\":{\"notice\":\"Retrieves the total accrued rewards for a specified pool.\"},\"registerPool(address,address)\":{\"notice\":\"Registers a pool to be eligible for rewards, initializing its reward token.\"},\"setRewardToken(address,address)\":{\"notice\":\"Sets the reward token for a specific pool.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/interfaces/IRewardManager.sol\":\"IRewardManager\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"contracts/contracts/interfaces/IRewardManager.sol\":{\"keccak256\":\"0xe3c69239d04d61f5342b5e7fe84efa65935b5068cdfef5d276baccaf947f6f05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b4e5103fc8600295e4fe33a713ebcdd6d83cf38903c4e6947b03f0a88766869\",\"dweb:/ipfs/QmRAnDKVZ6WndjDVvavBcrpkkrqUyZoSB3PYEMQVDTKiaB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"accrueReward(address)": {
								"notice": "Accrues rewards for a pool based on its loan amount since the loan was funded."
							},
							"claimRewards(address)": {
								"notice": "Allows a pool to claim its accrued rewards."
							},
							"deregisterPool(address)": {
								"notice": "Deregisters a pool when a loan is closed."
							},
							"getAccruedRewards(address)": {
								"notice": "Retrieves the total accrued rewards for a specified pool."
							},
							"registerPool(address,address)": {
								"notice": "Registers a pool to be eligible for rewards, initializing its reward token."
							},
							"setRewardToken(address,address)": {
								"notice": "Sets the reward token for a specific pool."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/contracts/interfaces/IVaultManager.sol": {
				"IVaultManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "calculateClaimableInterest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "deregisterVault",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "distributeInterest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "registerPoolVault",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the VaultManager contract.",
						"kind": "dev",
						"methods": {
							"calculateClaimableInterest(address,address)": {
								"params": {
									"pool": "Address of the pool for which to calculate interest.",
									"user": "Address of the user (borrower) claiming interest."
								},
								"returns": {
									"_0": "amount The calculated interest amount."
								}
							},
							"deregisterVault(address)": {
								"params": {
									"pool": "Address of the pool."
								}
							},
							"distributeInterest(address,address,uint256)": {
								"params": {
									"amount": "Amount of interest to be distributed.",
									"pool": "Address of the pool initiating the interest payout.",
									"to": "Recipient of the interest payment."
								}
							},
							"registerPoolVault(address,address)": {
								"params": {
									"pool": "Address of the pool.",
									"vault": "Address of the vault associated with the pool."
								}
							}
						},
						"title": "IVaultManager",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"calculateClaimableInterest(address,address)": "1f0249f6",
							"deregisterVault(address)": "38e270ed",
							"distributeInterest(address,address,uint256)": "e0f0707f",
							"registerPoolVault(address,address)": "9c515629"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"calculateClaimableInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"deregisterVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"distributeInterest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"registerPoolVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the VaultManager contract.\",\"kind\":\"dev\",\"methods\":{\"calculateClaimableInterest(address,address)\":{\"params\":{\"pool\":\"Address of the pool for which to calculate interest.\",\"user\":\"Address of the user (borrower) claiming interest.\"},\"returns\":{\"_0\":\"amount The calculated interest amount.\"}},\"deregisterVault(address)\":{\"params\":{\"pool\":\"Address of the pool.\"}},\"distributeInterest(address,address,uint256)\":{\"params\":{\"amount\":\"Amount of interest to be distributed.\",\"pool\":\"Address of the pool initiating the interest payout.\",\"to\":\"Recipient of the interest payment.\"}},\"registerPoolVault(address,address)\":{\"params\":{\"pool\":\"Address of the pool.\",\"vault\":\"Address of the vault associated with the pool.\"}}},\"title\":\"IVaultManager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"calculateClaimableInterest(address,address)\":{\"notice\":\"Calculates the claimable interest for a user based on the pool's loan configuration.\"},\"deregisterVault(address)\":{\"notice\":\"Deregisters a pool's vault upon loan closure.\"},\"distributeInterest(address,address,uint256)\":{\"notice\":\"Distributes accrued interest from a vault to a specified recipient.\"},\"registerPoolVault(address,address)\":{\"notice\":\"Registers a pool's vault upon creation.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/interfaces/IVaultManager.sol\":\"IVaultManager\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/interfaces/IVaultManager.sol\":{\"keccak256\":\"0x5a025ecef74f49112c2479fc967e3c7761412348dc6ad129e7b79667a09cd699\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fae75e94df0a7ade68c3fc89ad8091784574e3005eb8a7044c6c9d29330117b7\",\"dweb:/ipfs/QmWjzKcKC8sHHdagpLQtw58bLD1TDaMHqheW8jMfw3vNwe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"calculateClaimableInterest(address,address)": {
								"notice": "Calculates the claimable interest for a user based on the pool's loan configuration."
							},
							"deregisterVault(address)": {
								"notice": "Deregisters a pool's vault upon loan closure."
							},
							"distributeInterest(address,address,uint256)": {
								"notice": "Distributes accrued interest from a vault to a specified recipient."
							},
							"registerPoolVault(address,address)": {
								"notice": "Registers a pool's vault upon creation."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/contracts/protocol/PoolOrganizer.sol": {
				"PoolOrganizer": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "vaultManager",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "rewardManager",
									"type": "address"
								}
							],
							"name": "ManagerRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "PoolDeregistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "lender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "borrower",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "enum IPoolOrganizer.PoolType",
									"name": "poolType",
									"type": "uint8"
								}
							],
							"name": "PoolRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "VaultRegistered",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "POOL_MANAGER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "deregisterPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getManagers",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "getPoolDetails",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "lender",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "borrower",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "creationTime",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "vault",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "loanToken",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "assetToken",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "loanAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "interestRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "repaymentPeriod",
											"type": "uint256"
										},
										{
											"internalType": "enum IPoolOrganizer.PoolType",
											"name": "poolType",
											"type": "uint8"
										}
									],
									"internalType": "struct IPoolOrganizer.PoolDetails",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "lender",
									"type": "address"
								}
							],
							"name": "getPoolsByLender",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalPools",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "getVaultForPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "factoryAddress",
									"type": "address"
								}
							],
							"name": "grantFactoryAccess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "poolVaults",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_vaultManager",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardManager",
									"type": "address"
								}
							],
							"name": "registerManagers",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "lender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "borrower",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "loanToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "assetToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "loanAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "repaymentPeriod",
									"type": "uint256"
								},
								{
									"internalType": "enum IPoolOrganizer.PoolType",
									"name": "poolType",
									"type": "uint8"
								}
							],
							"name": "registerPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "registerVault",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardManager",
							"outputs": [
								{
									"internalType": "contract IRewardManager",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vaultManager",
							"outputs": [
								{
									"internalType": "contract IVaultManager",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implements access control and management for pool lifecycle and integration with external managers.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"ManagerRegistered(address,address)": {
								"details": "Emitted when managers are registered."
							},
							"PoolDeregistered(address)": {
								"details": "Emitted when a pool is deregistered."
							},
							"PoolRegistered(address,address,address,address,uint8)": {
								"details": "Emitted when a pool is registered."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"deregisterPool(address)": {
								"params": {
									"pool": "The address of the pool to deregister."
								}
							},
							"getManagers()": {
								"returns": {
									"_0": "A tuple containing the addresses of the VaultManager and RewardManager."
								}
							},
							"getPoolDetails(address)": {
								"params": {
									"pool": "The address of the pool."
								},
								"returns": {
									"_0": "Details of the specified pool."
								}
							},
							"getPoolsByLender(address)": {
								"params": {
									"lender": "The address of the lender."
								},
								"returns": {
									"_0": "An array of pool addresses."
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getTotalPools()": {
								"returns": {
									"_0": "The total number of pools."
								}
							},
							"getVaultForPool(address)": {
								"params": {
									"pool": "The address of the pool."
								},
								"returns": {
									"_0": "The address of the vault linked to the pool."
								}
							},
							"grantFactoryAccess(address)": {
								"params": {
									"factoryAddress": "The address of the factory to be granted access."
								}
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"registerManagers(address,address)": {
								"params": {
									"_rewardManager": "Address of the RewardManager contract.",
									"_vaultManager": "Address of the VaultManager contract."
								}
							},
							"registerPool(address,address,address,address,address,address,uint256,uint256,uint256,uint8)": {
								"params": {
									"assetToken": "The address of the asset token used as collateral.",
									"borrower": "The address of the borrower (if known at this point, otherwise zero).",
									"interestRate": "The interest rate of the loan.",
									"lender": "The address of the lender.",
									"loanAmount": "The amount of the loan.",
									"loanToken": "The address of the loan token.",
									"pool": "The address of the new pool.",
									"poolType": "The type of the pool (standard or flash).",
									"repaymentPeriod": "The period over which the loan is to be repaid.",
									"vault": "The address of the vault associated with the pool."
								}
							},
							"registerVault(address,address)": {
								"details": "This function can only be called by authorized roles, typically the PoolFactory.",
								"params": {
									"pool": "The address of the pool for which the vault is being registered.",
									"vault": "The address of the newly created vault."
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"title": "Pool Organizer for managing pools, vaults, and rewards.",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n  mstore(0x40, 0x80)\n  jumpi(tag_3, callvalue)\n    /* \"contracts/contracts/protocol/PoolOrganizer.sol\":1387:1429  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_5\n    /* \"contracts/contracts/protocol/PoolOrganizer.sol\":1418:1428  msg.sender */\n  caller\n    /* \"contracts/contracts/protocol/PoolOrganizer.sol\":1387:1429  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_1\n  jump\t// in\ntag_5:\n  pop\n    /* \"contracts/contracts/protocol/PoolOrganizer.sol\":1439:1480  _grantRole(POOL_MANAGER_ROLE, msg.sender) */\n  tag_6\n    /* \"contracts/contracts/protocol/PoolOrganizer.sol\":1418:1428  msg.sender */\n  caller\n    /* \"contracts/contracts/protocol/PoolOrganizer.sol\":1439:1480  _grantRole(POOL_MANAGER_ROLE, msg.sender) */\n  tag_2\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_3:\n  0x00\n  dup1\n  revert\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_1:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n  dup2\n  dup2\n  mstore\n  mstore(0x20, 0xad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5)\n  0x40\n  dup2\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  swap1\n  swap2\n    /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n  swap1\n  0xff\n  and\n  tag_7\n  jumpi\n  dup2\n  dup1\n  mstore\n  dup2\n  0x20\n  mstore\n  0x40\n  dup3\n  keccak256\n  dup2\n  dup4\n  mstore\n  0x20\n  mstore\n  0x40\n  dup3\n  keccak256\n  0x01\n  not(0xff)\n  dup3\n  sload\n  and\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  swap2\n  0x00\n  dup1\n  mload\n  0x20\n  data_01400fe2f234cf888b5e4c66700c7903f33f31bfc9675e51cb0119f915eb534d\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  dup2\n  dup1\n  log4\n    /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  pop\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_2:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x00\n    /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n  dup2\n  dup2\n  mstore\n  mstore(0x20, 0x729ef9451dd492832bd2a98139702ced95dfa0cec7e99526dbbcb957abcbc476)\n  0x40\n  dup2\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  swap1\n  swap2\n    /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n  swap1\n    /* \"contracts/contracts/protocol/PoolOrganizer.sol\":527:557  keccak256(\"POOL_MANAGER_ROLE\") */\n  0x6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98aff\n  swap1\n    /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n  0xff\n  and\n  tag_9\n  jumpi\n  dup1\n  dup4\n  mstore\n  dup3\n  0x20\n  mstore\n  0x40\n  dup4\n  keccak256\n  dup3\n  dup5\n  mstore\n  0x20\n  mstore\n  0x40\n  dup4\n  keccak256\n  0x01\n  not(0xff)\n  dup3\n  sload\n  and\n  or\n  swap1\n  sstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_01400fe2f234cf888b5e4c66700c7903f33f31bfc9675e51cb0119f915eb534d\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  swap4\n  dup1\n  log4\n    /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  pop\n  pop\n  swap1\n  jump\t// out\nstop\ndata_01400fe2f234cf888b5e4c66700c7903f33f31bfc9675e51cb0119f915eb534d 2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n\nsub_0: assembly {\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_19, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_19:\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0x01ffc9a7\n      eq\n      tag_21\n      jumpi\n      pop\n      dup1\n      0x05c4fdf9\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x0f4ef8a6\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x1e4966ab\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x2437769a\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_31\n      jumpi\n      dup1\n      0x24a44efb\n      eq\n      tag_33\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_35\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_37\n      jumpi\n      dup1\n      0x56d73568\n      eq\n      tag_39\n      jumpi\n      dup1\n      0x5d102df7\n      eq\n      tag_41\n      jumpi\n      dup1\n      0x7570e389\n      eq\n      tag_43\n      jumpi\n      dup1\n      0x7e72c7d7\n      eq\n      tag_45\n      jumpi\n      dup1\n      0x8a4adf24\n      eq\n      tag_47\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_49\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_51\n      jumpi\n      dup1\n      0xa8d088bb\n      eq\n      tag_53\n      jumpi\n      dup1\n      0xc489579d\n      eq\n      tag_55\n      jumpi\n      dup1\n      0xd3e90fa0\n      eq\n      tag_57\n      jumpi\n      dup1\n      0xd3ffe67a\n      eq\n      tag_59\n      jumpi\n      0xd547741f\n      eq\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      jumpi(tag_65, callvalue)\n      jumpi(tag_65, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_67\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      calldataload(0x04)\n      tag_68\n      tag_2\n      jump\t// in\n    tag_68:\n      swap1\n      dup1\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_69\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x01\n      keccak256(0x00, 0x40)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_6\n      jump\t// in\n    tag_69:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_9\n      jump\t// in\n    tag_67:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      stop\n    tag_65:\n      0x00\n      dup1\n      revert\n    tag_59:\n      jumpi(tag_65, callvalue)\n      jumpi(tag_65, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      sload(0x03)\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_57:\n      jumpi(tag_65, callvalue)\n      jumpi(tag_65, slt(add(not(0x03), calldatasize), 0x20))\n      tag_78\n      tag_1\n      jump\t// in\n    tag_78:\n      0x00\n      0x0120\n      mload(0x40)\n      tag_79\n      dup2\n      tag_10\n      jump\t// in\n    tag_79:\n      dup3\n      dup2\n      mstore\n      dup3\n      0x20\n      dup3\n      add\n      mstore\n      dup3\n      0x40\n      dup3\n      add\n      mstore\n      dup3\n      0x60\n      dup3\n      add\n      mstore\n      dup3\n      0x80\n      dup3\n      add\n      mstore\n      dup3\n      0xa0\n      dup3\n      add\n      mstore\n      dup3\n      0xc0\n      dup3\n      add\n      mstore\n      dup3\n      0xe0\n      dup3\n      add\n      mstore\n      dup3\n      0x0100\n      dup3\n      add\n      mstore\n      add\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      dup1\n      0x00\n      mstore\n      mstore(0x20, 0x04)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5651:5721  require(poolDetails[pool].lender != address(0), \"Pool not registered\") */\n      tag_80\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      sload(keccak256(0x00, 0x40))\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5659:5697  poolDetails[pool].lender != address(0) */\n      iszero\n      iszero\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5651:5721  require(poolDetails[pool].lender != address(0), \"Pool not registered\") */\n      tag_16\n      jump\t// in\n    tag_80:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x00\n      mstore\n      mstore(0x20, 0x04)\n      0x0140\n      keccak256(0x00, 0x40)\n      tag_81\n      0xff\n      0x09\n      mload(0x40)\n      swap4\n      tag_82\n      dup6\n      tag_10\n      jump\t// in\n    tag_82:\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      dup7\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      and\n      0x20\n      dup8\n      add\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      0x40\n      dup8\n      add\n      mstore\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      and\n      0x60\n      dup8\n      add\n      mstore\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      and\n      0x80\n      dup8\n      add\n      mstore\n      0x05\n      dup3\n      add\n      sload\n      and\n      0xa0\n      dup7\n      add\n      mstore\n      0x06\n      dup2\n      add\n      sload\n      0xc0\n      dup7\n      add\n      mstore\n      0x07\n      dup2\n      add\n      sload\n      0xe0\n      dup7\n      add\n      mstore\n      0x08\n      dup2\n      add\n      sload\n      0x0100\n      dup7\n      add\n      mstore\n      add\n      sload\n      and\n      0x0120\n      dup4\n      add\n      tag_11\n      jump\t// in\n    tag_81:\n      tag_83\n      0x0120\n      mload(0x40)\n      swap3\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup2\n      mload\n      and\n      dup5\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      0x20\n      dup3\n      add\n      mload\n      and\n      0x20\n      dup6\n      add\n      mstore\n      0x40\n      dup2\n      add\n      mload\n      0x40\n      dup6\n      add\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      0x60\n      dup3\n      add\n      mload\n      and\n      0x60\n      dup6\n      add\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      0x80\n      dup3\n      add\n      mload\n      and\n      0x80\n      dup6\n      add\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      0xa0\n      dup3\n      add\n      mload\n      and\n      0xa0\n      dup6\n      add\n      mstore\n      0xc0\n      dup2\n      add\n      mload\n      0xc0\n      dup6\n      add\n      mstore\n      0xe0\n      dup2\n      add\n      mload\n      0xe0\n      dup6\n      add\n      mstore\n      0x0100\n      dup2\n      add\n      mload\n      0x0100\n      dup6\n      add\n      mstore\n      add\n      mload\n      0x0120\n      dup4\n      add\n      swap1\n      tag_4\n      jump\t// in\n    tag_83:\n      return\n    tag_55:\n      jumpi(tag_65, callvalue)\n      jumpi(tag_65, slt(add(not(0x03), calldatasize), 0x40))\n      tag_88\n      tag_1\n      jump\t// in\n    tag_88:\n      tag_89\n      tag_2\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x00\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0xad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5)\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3519:3542  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_90\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup3\n      dup2\n      and\n      swap3\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4153:4180  _vaultManager != address(0) */\n      dup4\n      iszero\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      tag_92\n      jumpi\n      dup3\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4272:4300  _rewardManager != address(0) */\n      dup1\n      iszero\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      tag_94\n      jumpi\n      0x01\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      swap6\n      swap1\n      swap6\n      or\n      swap1\n      sstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4426:4472  rewardManager = IRewardManager(_rewardManager) */\n      0x02\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup1\n      sload\n      swap1\n      swap5\n      and\n      or\n      swap1\n      swap3\n      sstore\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      dup2\n      mstore\n      swap2\n      swap1\n      swap3\n      and\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4488:4536  ManagerRegistered(_vaultManager, _rewardManager) */\n      0x8fc18cc172f74c81235145b7927190d2bd0e351fc45bfb17bb572593273cef21\n      swap2\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4488:4536  ManagerRegistered(_vaultManager, _rewardManager) */\n      log1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      stop\n    tag_94:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x24\n      dup1\n      dup3\n      add\n      mstore\n      0x5265776172644d616e616765722063616e6e6f74206265207a65726f20616464\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xe0, 0x72657373)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_92:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x23\n      0x24\n      dup3\n      add\n      mstore\n      0x5661756c744d616e616765722063616e6e6f74206265207a65726f2061646472\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xe8, 0x657373)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_90:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mload(0x40)\n      shl(0xe0, 0xe2517d3f)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x04\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      dup3\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mstore\n      0x00\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n    tag_53:\n      jumpi(tag_65, callvalue)\n      jumpi(tag_65, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4827:4840  rewardManager */\n      0x02\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      sload\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      dup2\n      mstore\n      swap3\n      swap1\n      swap2\n      and\n      0x20\n      dup4\n      add\n      mstore\n      swap1\n      return\n    tag_51:\n      jumpi(tag_65, callvalue)\n      jumpi(tag_65, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      return\n    tag_49:\n      jumpi(tag_65, callvalue)\n      jumpi(tag_65, slt(add(not(0x03), calldatasize), 0x40))\n      tag_110\n      tag_2\n      jump\t// in\n    tag_110:\n      mstore(0x00, calldataload(0x04))\n      mstore(0x20, 0x00)\n      keccak256(0x00, 0x40)\n      swap1\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      0x20\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_47:\n      jumpi(tag_65, callvalue)\n      jumpi(tag_65, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x01)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_45:\n      jumpi(tag_65, callvalue)\n      0x20\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_65\n      jumpi\n      tag_119\n      tag_1\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      swap1\n      tag_120\n      tag_5\n      jump\t// in\n    tag_120:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap1\n      dup2\n      dup4\n      and\n      swap3\n      dup4\n      0x00\n      mstore\n      0x04\n      dup3\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":3477:3547  require(poolDetails[pool].lender != address(0), \"Pool not registered\") */\n      tag_121\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup4\n      sload(keccak256(0x00, 0x40))\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":3485:3523  poolDetails[pool].lender != address(0) */\n      iszero\n      iszero\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":3477:3547  require(poolDetails[pool].lender != address(0), \"Pool not registered\") */\n      tag_16\n      jump\t// in\n    tag_121:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup4\n      0x00\n      mstore\n      0x04\n      dup3\n      mstore\n      dup3\n      sload(keccak256(0x00, 0x40))\n      and\n      dup1\n      0x00\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6715:6726  lenderPools */\n      0x05\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap4\n      dup5\n      dup5\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6698:6741  findIndexInArray(lenderPools[lender], pool) */\n      tag_122\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup4\n      keccak256(0x00, 0x40)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6698:6741  findIndexInArray(lenderPools[lender], pool) */\n      tag_18\n      jump\t// in\n    tag_122:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap3\n      dup3\n      0x00\n      mstore\n      dup6\n      dup6\n      mstore\n      sload(keccak256(0x00, 0x40))\n      swap3\n      not(0x00)\n      swap4\n      dup5\n      dup2\n      add\n      swap1\n      dup2\n      gt\n      tag_133\n      jumpi\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6811:6837  lenderPools[lender][index] */\n      tag_125\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap6\n      dup5\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6840:6870  lenderPools[lender][lastIndex] */\n      tag_126\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6811:6870  lenderPools[lender][index] = lenderPools[lender][lastIndex] */\n      tag_127\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap4\n      dup6\n      0x00\n      mstore\n      dup12\n      dup12\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6840:6870  lenderPools[lender][lastIndex] */\n      tag_13\n      jump\t// in\n    tag_126:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap9\n      swap1\n      sload\n      swap3\n      dup6\n      0x00\n      mstore\n      dup12\n      dup12\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6811:6837  lenderPools[lender][index] */\n      tag_13\n      jump\t// in\n    tag_125:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap2\n      swap1\n      swap3\n      0x03\n      swap10\n      dup11\n      shl\n      shr\n      and\n      swap1\n      dup3\n      sload\n      swap1\n      0x03\n      shl\n      swap2\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup1\n      swap2\n      and\n      dup4\n      shl\n      swap3\n      shl\n      not\n      and\n      or\n      swap1\n      sstore\n      jump\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6811:6870  lenderPools[lender][index] = lenderPools[lender][lastIndex] */\n    tag_127:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x00\n      mstore\n      dup6\n      dup6\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      dup2\n      sload\n      swap2\n      dup3\n      iszero\n      tag_138\n      jumpi\n      dup5\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7000:7029  findIndexInArray(pools, pool) */\n      tag_130\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap4\n      add\n      swap1\n      tag_131\n      tag_132\n      dup4\n      dup4\n      tag_13\n      jump\t// in\n    tag_132:\n      dup2\n      sload\n      swap1\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap1\n      0x03\n      shl\n      shl\n      not\n      and\n      swap1\n      sstore\n      jump\n    tag_131:\n      sstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7000:7029  findIndexInArray(pools, pool) */\n      tag_17\n      jump\t// in\n    tag_130:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup4\n      sload\n      dup4\n      dup2\n      add\n      swap1\n      dup2\n      gt\n      tag_133\n      jumpi\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7085:7116  pools[index] = pools[lastIndex] */\n      tag_135\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7100:7116  pools[lastIndex] */\n      swap3\n      tag_136\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7085:7097  pools[index] */\n      tag_137\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7100:7116  pools[lastIndex] */\n      swap3\n      tag_12\n      jump\t// in\n    tag_136:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap1\n      sload\n      swap1\n      dup8\n      shl\n      shr\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7085:7097  pools[index] */\n      swap2\n      tag_12\n      jump\t// in\n    tag_137:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7085:7116  pools[index] = pools[lastIndex] */\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap2\n      swap1\n      dup3\n      sload\n      swap1\n      0x03\n      shl\n      swap2\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup1\n      swap2\n      and\n      dup4\n      shl\n      swap3\n      shl\n      not\n      and\n      or\n      swap1\n      sstore\n      jump\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7085:7116  pools[index] = pools[lastIndex] */\n    tag_135:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup2\n      sload\n      swap4\n      dup5\n      iszero\n      tag_138\n      jumpi\n      0x04\n      0x09\n      swap5\n      0x00\n      swap7\n      swap4\n      dup8\n      swap5\n      add\n      tag_140\n      tag_132\n      dup3\n      tag_12\n      jump\t// in\n    tag_140:\n      dup6\n      sstore\n      dup8\n      dup5\n      mstore\n      mstore\n      dup2\n      0x40\n      dup2\n      keccak256\n      swap4\n      dup2\n      dup6\n      sstore\n      dup2\n      0x01\n      dup7\n      add\n      sstore\n      dup2\n      0x02\n      dup7\n      add\n      sstore\n      dup5\n      add\n      sstore\n      dup2\n      0x04\n      dup5\n      add\n      sstore\n      dup3\n      add\n      sstore\n      dup3\n      0x06\n      dup3\n      add\n      sstore\n      dup3\n      0x07\n      dup3\n      add\n      sstore\n      dup3\n      0x08\n      dup3\n      add\n      sstore\n      add\n      sstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":3739:3761  PoolDeregistered(pool) */\n      0x334d0b2111287dfddebe4b4c1c5af3ae644909d7fcd024377bf601e236ed5abb\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":3739:3761  PoolDeregistered(pool) */\n      dup1\n      log2\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      stop\n    tag_138:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x31)\n      revert(0x00, 0x24)\n    tag_133:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n    tag_43:\n      jumpi(tag_65, callvalue)\n      jumpi(tag_65, slt(add(not(0x03), calldatasize), 0x20))\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      tag_146\n      tag_1\n      jump\t// in\n    tag_146:\n      and\n      swap1\n      dup2\n      0x00\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6048:6058  poolVaults */\n      0x06\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x20\n      mstore\n      dup1\n      sload(keccak256(0x00, 0x40))\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6048:6078  poolVaults[pool] != address(0) */\n      iszero\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      tag_147\n      jumpi\n      0x20\n      swap2\n      0x00\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6048:6058  poolVaults */\n      0x06\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup3\n      mstore\n      sload(keccak256(0x00, 0x40))\n      and\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_147:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x23\n      0x24\n      dup3\n      add\n      mstore\n      0x506f6f6c206e6f742072656769737465726564206f7220686173206e6f207661\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xea, 0x1d5b1d)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_41:\n      jumpi(tag_65, callvalue)\n      jumpi(tag_65, slt(add(not(0x03), calldatasize), 0x20))\n      tag_153\n      tag_1\n      jump\t// in\n    tag_153:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6440:6450  msg.sender */\n      caller\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x00\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0xad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5)\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      iszero\n      tag_154\n      jumpi\n      0x00\n      dup1\n      mload\n      0x20\n      data_cea5b988323acc73cd81db0e6f2932cdc75f39072539d65cbfa79c56b2a64e51\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x00\n      swap1\n      dup2\n      mstore\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x729ef9451dd492832bd2a98139702ced95dfa0cec7e99526dbbcb957abcbc477\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_67\n      swap2\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_157\n      swap1\n      tag_6\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_7\n      jump\t// in\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n    tag_154:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x16\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x51, 0x21b0b63632b91034b9903737ba1030b71030b236b4b7)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_39:\n      jumpi(tag_65, callvalue)\n      jumpi(tag_65, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n      0x00\n      dup1\n      mload\n      0x20\n      data_cea5b988323acc73cd81db0e6f2932cdc75f39072539d65cbfa79c56b2a64e51\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup2\n      mstore\n      return\n    tag_37:\n      jumpi(tag_65, callvalue)\n      jumpi(tag_65, slt(add(not(0x03), calldatasize), 0x40))\n      tag_166\n      tag_2\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      sub\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_167\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_67\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap1\n      calldataload(0x04)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_9\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_167:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mload(0x40)\n      shl(0xe1, 0x334bd919)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x04\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      revert\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n    tag_35:\n      jumpi(tag_65, callvalue)\n      jumpi(tag_65, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_67\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      calldataload(0x04)\n      tag_175\n      tag_2\n      jump\t// in\n    tag_175:\n      swap1\n      dup1\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_176\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x01\n      keccak256(0x00, 0x40)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_6\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_8\n      jump\t// in\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n    tag_33:\n      jumpi(tag_65, callvalue)\n      0x20\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_65\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      tag_181\n      tag_1\n      jump\t// in\n    tag_181:\n      and\n      0x00\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5353:5364  lenderPools */\n      0x05\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup2\n      mstore\n      keccak256(0x00, 0x40)\n      mload(0x40)\n      dup1\n      dup4\n      dup4\n      sload\n      swap2\n      dup3\n      dup2\n      mstore\n      add\n      swap1\n      dup2\n      swap4\n      0x00\n      mstore\n      dup5\n      0x00\n      keccak256\n      swap1\n      0x00\n    tag_182:\n      dup7\n      dup3\n      dup3\n      lt\n      tag_183\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      dup2\n      swap1\n      sub\n      0x1f\n      add\n      not(0x1f)\n      and\n      dup2\n      add\n      swap3\n      0xffffffffffffffff\n      dup5\n      gt\n      dup3\n      dup6\n      lt\n      or\n      tag_185\n      jumpi\n      swap1\n      dup4\n      0x40\n      mstore\n      dup2\n      dup5\n      add\n      swap1\n      dup3\n      dup6\n      mstore\n      mload\n      dup1\n      swap2\n      mstore\n      0x40\n      dup5\n      add\n      swap3\n      swap2\n      0x00\n    tag_187:\n      dup3\n      dup2\n      lt\n      tag_188\n      jumpi\n      dup6\n      dup6\n      sub\n      dup7\n      return\n    tag_188:\n      dup4\n      mload\n      dup8\n      and\n      dup6\n      mstore\n      swap4\n      dup2\n      add\n      swap4\n      swap3\n      dup2\n      add\n      swap3\n      0x01\n      add\n      jump(tag_187)\n    tag_185:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_183:\n      dup4\n      sload\n      dup10\n      and\n      dup6\n      mstore\n      swap1\n      swap4\n      add\n      swap3\n      0x01\n      swap3\n      dup4\n      add\n      swap3\n      add\n      jump(tag_182)\n    tag_31:\n      jumpi(tag_65, callvalue)\n      jumpi(tag_65, slt(add(not(0x03), calldatasize), 0x20))\n      mstore(0x00, calldataload(0x04))\n      mstore(0x20, 0x00)\n      0x20\n      0x01\n      keccak256(0x00, 0x40)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_29:\n      jumpi(tag_65, callvalue)\n      jumpi(tag_65, slt(add(not(0x03), calldatasize), 0x0140))\n      tag_198\n      tag_1\n      jump\t// in\n    tag_198:\n      tag_199\n      tag_2\n      jump\t// in\n    tag_199:\n      swap1\n      calldataload(0x44)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_65\n      jumpi\n      calldataload(0x64)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_65\n      jumpi\n      calldataload(0x84)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_65\n      jumpi\n      calldataload(0xa4)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_65\n      jumpi\n      jumpi(tag_65, iszero(lt(calldataload(0x0124), 0x02)))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_210\n      tag_5\n      jump\t// in\n    tag_210:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup6\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":2554:2572  pool != address(0) */\n      iszero\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      tag_211\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0x04)\n      0x40\n      swap1\n      keccak256\n      sload\n      and\n      tag_213\n      jumpi\n      mload(0x40)\n      swap2\n      tag_215\n      dup4\n      tag_10\n      jump\t// in\n    tag_215:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      dup2\n      and\n      dup5\n      mstore\n      dup5\n      dup2\n      and\n      0x20\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":2753:3129  PoolDetails({... */\n      dup6\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":2853:2868  block.timestamp */\n      timestamp\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x40\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":2753:3129  PoolDetails({... */\n      dup6\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mstore\n      dup6\n      dup2\n      and\n      0x60\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":2753:3129  PoolDetails({... */\n      dup6\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mstore\n      swap1\n      dup2\n      and\n      0x80\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":2753:3129  PoolDetails({... */\n      dup5\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mstore\n      and\n      0xa0\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":2753:3129  PoolDetails({... */\n      dup3\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mstore\n      calldataload(0xc4)\n      0xc0\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":2753:3129  PoolDetails({... */\n      dup3\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mstore\n      calldataload(0xe4)\n      0xe0\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":2753:3129  PoolDetails({... */\n      dup3\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mstore\n      calldataload(0x0104)\n      0x0100\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":2753:3129  PoolDetails({... */\n      dup3\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":2753:3129  PoolDetails({... */\n      tag_216\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      calldataload(0x0124)\n      0x0120\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":2753:3129  PoolDetails({... */\n      dup4\n      add\n      tag_11\n      jump\t// in\n    tag_216:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup5\n      and\n      0x00\n      mstore\n      mstore(0x20, 0x04)\n      0x0120\n      0x09\n      keccak256(0x00, 0x40)\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup5\n      mload\n      and\n      shl(0xa0, 0xffffffffffffffffffffffff)\n      swap1\n      dup2\n      dup4\n      sload\n      and\n      or\n      dup3\n      sstore\n      0x01\n      dup3\n      add\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      0x20\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":2753:3129  PoolDetails({... */\n      dup8\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mload\n      and\n      dup3\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n      0x40\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":2753:3129  PoolDetails({... */\n      dup6\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mload\n      0x02\n      dup4\n      add\n      sstore\n      0x03\n      dup3\n      add\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      0x60\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":2753:3129  PoolDetails({... */\n      dup8\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mload\n      and\n      dup3\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n      0x04\n      dup3\n      add\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      0x80\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":2753:3129  PoolDetails({... */\n      dup8\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mload\n      and\n      dup3\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n      0x05\n      dup3\n      add\n      swap1\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      0xa0\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":2753:3129  PoolDetails({... */\n      dup8\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mload\n      and\n      swap1\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n      0xc0\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":2753:3129  PoolDetails({... */\n      dup5\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mload\n      0x06\n      dup3\n      add\n      sstore\n      0xe0\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":2753:3129  PoolDetails({... */\n      dup5\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mload\n      0x07\n      dup3\n      add\n      sstore\n      0x0100\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":2753:3129  PoolDetails({... */\n      dup5\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mload\n      0x08\n      dup3\n      add\n      sstore\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":2753:3129  PoolDetails({... */\n      swap2\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mload\n      0x02\n      dup2\n      lt\n      iszero\n      tag_217\n      jumpi\n      0xff\n      dup1\n      not\n      dup4\n      sload\n      and\n      swap2\n      and\n      or\n      swap1\n      sstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup5\n      and\n      0x00\n      mstore\n      mstore(0x20, 0x05)\n      keccak256(0x00, 0x40)\n      dup1\n      sload\n      swap1\n      0x010000000000000000\n      swap2\n      dup3\n      dup2\n      lt\n      iszero\n      tag_185\n      jumpi\n      tag_137\n      dup2\n      tag_222\n      swap4\n      0x01\n      dup10\n      swap5\n      add\n      dup2\n      sstore\n      tag_13\n      jump\t// in\n    tag_222:\n      sload(0x03)\n      swap1\n      dup2\n      lt\n      iszero\n      tag_185\n      jumpi\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":3210:3265  PoolRegistered(pool, lender, borrower, vault, poolType) */\n      0x8f723e49dc038e67c41b41307a1e0c65653d50125a0c474a21ac32d9a0b24d2b\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap2\n      tag_225\n      dup6\n      tag_137\n      dup5\n      0x01\n      0x40\n      swap7\n      add\n      0x03\n      sstore\n      tag_12\n      jump\t// in\n    tag_225:\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap5\n      and\n      dup5\n      mstore\n      tag_227\n      0x20\n      dup6\n      add\n      calldataload(0x0124)\n      tag_4\n      jump\t// in\n    tag_227:\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap6\n      dup2\n      and\n      swap5\n      and\n      swap3\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":3210:3265  PoolRegistered(pool, lender, borrower, vault, poolType) */\n      log4\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      stop\n    tag_217:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_213:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x17\n      0x24\n      dup3\n      add\n      mstore\n      0x506f6f6c20616c72656164792072656769737465726564000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_211:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x506f6f6c20616464726573732063616e6e6f74206265207a65726f0000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_27:\n      jumpi(tag_65, callvalue)\n      jumpi(tag_65, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      tag_232\n      tag_1\n      jump\t// in\n    tag_232:\n      and\n      0x00\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":786:831  mapping(address => address) public poolVaults */\n      0x06\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup3\n      mstore\n      sload(keccak256(0x00, 0x40))\n      and\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_25:\n      jumpi(tag_65, callvalue)\n      jumpi(tag_65, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":603:638  IRewardManager public rewardManager */\n      0x02\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_23:\n      jumpi(tag_65, callvalue)\n      jumpi(tag_65, slt(add(not(0x03), calldatasize), 0x40))\n      tag_241\n      tag_1\n      jump\t// in\n    tag_241:\n      tag_242\n      tag_2\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      swap1\n      tag_243\n      tag_5\n      jump\t// in\n    tag_243:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap1\n      dup2\n      and\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7875:7893  pool != address(0) */\n      dup2\n      iszero\n      iszero\n      dup1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7875:7916  pool != address(0) && vault != address(0) */\n      tag_244\n      jumpi\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n    tag_245:\n      iszero\n      tag_246\n      jumpi\n      dup2\n      0x00\n      mstore\n      mstore(0x20, 0x04)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7948:8018  require(poolDetails[pool].lender != address(0), \"Pool not registered\") */\n      tag_248\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup2\n      sload(keccak256(0x00, 0x40))\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7956:7994  poolDetails[pool].lender != address(0) */\n      iszero\n      iszero\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7948:8018  require(poolDetails[pool].lender != address(0), \"Pool not registered\") */\n      tag_16\n      jump\t// in\n    tag_248:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup2\n      0x00\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8049:8059  poolVaults */\n      0x06\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x20\n      mstore\n      dup1\n      sload(keccak256(0x00, 0x40))\n      and\n      tag_249\n      jumpi\n      dup2\n      0x00\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8049:8059  poolVaults */\n      0x06\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap3\n      and\n      swap2\n      dup3\n      shl(0xa0, 0xffffffffffffffffffffffff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8193:8221  VaultRegistered(pool, vault) */\n      0xf8ee9039d8e4d43426638703c71517008894fdea742bb2d2dbff5a46fb07abdb\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8193:8221  VaultRegistered(pool, vault) */\n      dup1\n      log3\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      stop\n    tag_249:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x26\n      0x24\n      dup3\n      add\n      mstore\n      0x5661756c7420616c7265616479207265676973746572656420666f7220746869\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xd2, 0x1cc81c1bdbdb)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_246:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x78, 0x496e76616c696420616464726573736573)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7875:7916  pool != address(0) && vault != address(0) */\n    tag_244:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      pop\n      dup1\n      dup4\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7897:7916  vault != address(0) */\n      iszero\n      iszero\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7875:7916  pool != address(0) && vault != address(0) */\n      jump(tag_245)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n    tag_21:\n      jumpi(tag_65, callvalue)\n      jumpi(tag_65, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      swap1\n      shl(0xe0, 0xffffffff)\n      dup3\n      and\n      dup1\n      swap3\n      sub\n      tag_65\n      jumpi\n      0x20\n      swap2\n      shl(0xe0, 0x7965db0b)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      dup2\n      eq\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup2\n      iszero\n      tag_257\n      jumpi\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n    tag_258:\n      pop\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_257:\n      shl(0xe0, 0x01ffc9a7)\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      eq\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup4\n      jump(tag_258)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n    tag_1:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_65\n      jumpi\n      jump\t// out\n    tag_2:\n      calldataload(0x24)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_65\n      jumpi\n      jump\t// out\n    tag_4:\n      swap1\n      0x02\n      dup3\n      lt\n      iszero\n      tag_217\n      jumpi\n      mstore\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0x729ef9451dd492832bd2a98139702ced95dfa0cec7e99526dbbcb957abcbc476)\n      0x40\n      swap1\n      keccak256\n      sload\n      0x00\n      dup1\n      mload\n      0x20\n      data_cea5b988323acc73cd81db0e6f2932cdc75f39072539d65cbfa79c56b2a64e51\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":527:557  keccak256(\"POOL_MANAGER_ROLE\") */\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3519:3542  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_265:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x44\n      swap1\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      swap1\n      shl(0xe0, 0xe2517d3f)\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n      dup4\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_6:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x20\n      mstore\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      keccak256\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mstore\n      0x20\n      mstore\n      0xff\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      keccak256\n      sload\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3519:3542  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_7:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup2\n      dup2\n      mstore\n      mstore(0x20, 0x729ef9451dd492832bd2a98139702ced95dfa0cec7e99526dbbcb957abcbc476)\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      swap1\n      swap2\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_cea5b988323acc73cd81db0e6f2932cdc75f39072539d65cbfa79c56b2a64e51\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":527:557  keccak256(\"POOL_MANAGER_ROLE\") */\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0xff\n      and\n      tag_269\n      jumpi\n      dup1\n      dup4\n      mstore\n      dup3\n      0x20\n      mstore\n      0x40\n      dup4\n      keccak256\n      dup3\n      dup5\n      mstore\n      0x20\n      mstore\n      0x40\n      dup4\n      keccak256\n      0x01\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      swap4\n      dup1\n      log4\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_269:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      pop\n      pop\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_8:\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap2\n      dup1\n      dup4\n      mstore\n      dup3\n      0x20\n      mstore\n      0x40\n      dup4\n      keccak256\n      swap2\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      swap2\n      dup3\n      dup5\n      mstore\n      0x20\n      mstore\n      0xff\n      0x40\n      dup5\n      keccak256\n      sload\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6276:6299  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      eq\n      tag_269\n      jumpi\n      dup1\n      dup4\n      mstore\n      dup3\n      0x20\n      mstore\n      0x40\n      dup4\n      keccak256\n      dup3\n      dup5\n      mstore\n      0x20\n      mstore\n      0x40\n      dup4\n      keccak256\n      0x01\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      swap4\n      dup1\n      log4\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_9:\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap2\n      dup1\n      dup4\n      mstore\n      dup3\n      0x20\n      mstore\n      0x40\n      dup4\n      keccak256\n      swap2\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      swap2\n      dup3\n      dup5\n      mstore\n      0x20\n      mstore\n      0xff\n      0x40\n      dup5\n      keccak256\n      sload\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      eq\n      tag_269\n      jumpi\n      dup1\n      dup4\n      mstore\n      dup3\n      0x20\n      mstore\n      0x40\n      dup4\n      keccak256\n      dup3\n      dup5\n      mstore\n      0x20\n      mstore\n      0x40\n      dup4\n      keccak256\n      not(0xff)\n      dup2\n      sload\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      swap4\n      dup1\n      log4\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n    tag_10:\n      0x0140\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_185\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_11:\n      0x02\n      dup3\n      lt\n      iszero\n      tag_217\n      jumpi\n      mstore\n      jump\t// out\n    tag_12:\n      sload(0x03)\n      dup2\n      lt\n      iszero\n      tag_279\n      jumpi\n      mstore(0x00, 0x03)\n      0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b\n      add\n      swap1\n      0x00\n      swap1\n      jump\t// out\n    tag_279:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_13:\n      dup1\n      sload\n      dup3\n      lt\n      iszero\n      tag_279\n      jumpi\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      swap1\n      0x00\n      swap1\n      jump\t// out\n    tag_16:\n      iszero\n      tag_283\n      jumpi\n      jump\t// out\n    tag_283:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x6a, 0x141bdbdb081b9bdd081c9959da5cdd195c9959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7150:7449  function findIndexInArray(address[] storage array, address target)... */\n    tag_17:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7303:7304  0 */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7291:7304  uint256 i = 0 */\n      dup1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap2\n      0x03\n      dup1\n      sload\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7286:7386  for (uint256 i = 0; i < array.length; i++) {... */\n      swap4\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7306:7322  i < array.length */\n    tag_285:\n      dup5\n      dup2\n      lt\n      tag_286\n      jumpi\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      not(0x00)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7150:7449  function findIndexInArray(address[] storage array, address target)... */\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7324:7327  i++ */\n    tag_286:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7347:7355  array[i] */\n      tag_288\n      dup2\n      tag_12\n      jump\t// in\n    tag_288:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap1\n      sload\n      swap1\n      dup4\n      shl\n      shr\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap1\n      dup5\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7347:7365  array[i] == target */\n      eq\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7343:7375  if (array[i] == target) return i */\n      tag_289\n      jumpi\n      not(0x00)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup2\n      eq\n      tag_291\n      jumpi\n      0x01\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7291:7304  uint256 i = 0 */\n      jump(tag_285)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n    tag_291:\n      shl(0xe0, 0x4e487b71)\n      dup5\n      mstore\n      mstore(0x04, 0x11)\n      0x24\n      dup5\n      revert\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7343:7375  if (array[i] == target) return i */\n    tag_289:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7367:7375  return i */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7150:7449  function findIndexInArray(address[] storage array, address target)... */\n    tag_18:\n      swap2\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7303:7304  0 */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7291:7304  uint256 i = 0 */\n      swap2\n      dup3\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7324:7327  i++ */\n    tag_293:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup5\n      sload\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7306:7322  i < array.length */\n      dup2\n      lt\n      iszero\n      tag_294\n      jumpi\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7347:7355  array[i] */\n      tag_296\n      dup2\n      dup7\n      tag_13\n      jump\t// in\n    tag_296:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap1\n      sload\n      0x03\n      swap2\n      swap1\n      swap2\n      shl\n      shr\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap1\n      dup4\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7347:7365  array[i] == target */\n      eq\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7343:7375  if (array[i] == target) return i */\n      tag_297\n      jumpi\n      not(0x00)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup2\n      eq\n      tag_291\n      jumpi\n      0x01\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7291:7304  uint256 i = 0 */\n      jump(tag_293)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7343:7375  if (array[i] == target) return i */\n    tag_297:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7367:7375  return i */\n      swap3\n      pop\n      pop\n      swap2\n      pop\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7306:7322  i < array.length */\n    tag_294:\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":421:8230  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      not(0x00)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7150:7449  function findIndexInArray(address[] storage array, address target)... */\n      swap1\n      jump\t// out\n    stop\n    data_cea5b988323acc73cd81db0e6f2932cdc75f39072539d65cbfa79c56b2a64e51 6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98aff\n\n    auxdata: 0xa264697066735822122071f6c4a674f381b3ca6656ce44afd24295ae726d8cea574f6ce126b243cd759364736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"fun_grantRole": {
									"entryPoint": 172,
									"id": 256,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_grantRole_276": {
									"entryPoint": 48,
									"id": 256,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040523461002c5761001233610030565b5061001c336100ac565b5060405161140d908161014b8239f35b5f80fd5b6001600160a01b03165f8181527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604081205490919060ff166100a857818052816020526040822081835260205260408220600160ff1982541617905533915f805160206115588339815191528180a4600190565b5090565b6001600160a01b03165f8181527f729ef9451dd492832bd2a98139702ced95dfa0cec7e99526dbbcb957abcbc47660205260408120549091907f6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98aff9060ff1661014557808352826020526040832082845260205260408320600160ff198254161790555f80516020611558833981519152339380a4600190565b50509056fe6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a714610f955750806305c4fdf914610e415780630f4ef8a614610e195780631e4966ab14610de05780632437769a14610a96578063248a9ca314610a6a57806324a44efb146109935780632f2ff15d1461095757806336568abe1461091057806356d73568146108e95780635d102df7146108125780637570e389146107725780637e72c7d7146105655780638a4adf241461053d57806391d14854146104f5578063a217fddf146104db578063a8d088bb146104a8578063c489579d14610315578063d3e90fa014610162578063d3ffe67a146101455763d547741f14610103575f80fd5b346101415760403660031901126101415761013f600435610122610ffe565b90805f525f60205261013a600160405f200154611087565b6111bd565b005b5f80fd5b34610141575f366003190112610141576020600354604051908152f35b346101415760203660031901126101415761017b610fe8565b5f61012060405161018b81611230565b8281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e082015282610100820152015260018060a01b0316805f5260046020526101e860018060a01b0360405f20541615156112b7565b5f52600460205261014060405f2061027e60ff60096040519361020a85611230565b80546001600160a01b0390811686526001820154811660208701526002820154604087015260038201548116606087015260048201548116608087015260058201541660a0860152600681015460c0860152600781015460e08601526008810154610100860152015416610120830161124d565b6103136101206040519260018060a01b03815116845260018060a01b0360208201511660208501526040810151604085015260018060a01b03606082015116606085015260018060a01b03608082015116608085015260018060a01b0360a08201511660a085015260c081015160c085015260e081015160e08501526101008101516101008501520151610120830190611014565bf35b346101415760403660031901126101415761032e610fe8565b610336610ffe565b335f9081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604090205460ff161561048a576001600160a01b038281169290831561043957821680156103e857600180546001600160a01b03199081169590951790556002805490941617909255604080516001600160a01b0393841681529190921660208201527f8fc18cc172f74c81235145b7927190d2bd0e351fc45bfb17bb572593273cef219190a1005b60405162461bcd60e51b8152602060048201526024808201527f5265776172644d616e616765722063616e6e6f74206265207a65726f206164646044820152637265737360e01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f5661756c744d616e616765722063616e6e6f74206265207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405163e2517d3f60e01b81523360048201525f6024820152604490fd5b34610141575f36600319011261014157600154600254604080516001600160a01b03938416815292909116602083015290f35b34610141575f3660031901126101415760206040515f8152f35b346101415760403660031901126101415761050e610ffe565b6004355f525f60205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b34610141575f366003190112610141576001546040516001600160a01b039091168152602090f35b34610141576020806003193601126101415761057f610fe8565b90610588611021565b60018060a01b039081831692835f52600482526105ac8360405f20541615156112b7565b835f52600482528260405f205416805f526005938484526105d08360405f20611361565b92825f5285855260405f2054925f199384810190811161075e57610618958461060561063f93855f528b8b5260405f206112a2565b98905492855f528b8b5260405f206112a2565b9190926003998a1b1c169082549060031b9160018060a01b03809116831b921b1916179055565b5f5285855260405f2090815491821561074a578461068193019061067b61066683836112a2565b81549060018060a01b039060031b1b19169055565b556112f9565b835483810190811161075e576106c99261069d6106aa92611259565b905490871b1c1691611259565b90919082549060031b9160018060a01b03809116831b921b1916179055565b815493841561074a5760046009945f96938794016106e961066682611259565b85558784525281604081209381855581600186015581600286015584015581600484015582015582600682015582600782015582600882015501557f334d0b2111287dfddebe4b4c1c5af3ae644909d7fcd024377bf601e236ed5abb5f80a2005b634e487b7160e01b5f52603160045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b34610141576020366003190112610141576001600160a01b0380610794610fe8565b1690815f5260066020528060405f205416156107c1576020915f526006825260405f205416604051908152f35b60405162461bcd60e51b815260206004820152602360248201527f506f6f6c206e6f742072656769737465726564206f7220686173206e6f2076616044820152621d5b1d60ea1b6064820152608490fd5b346101415760203660031901126101415761082b610fe8565b335f9081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604090205460ff16156108ab575f805160206113b88339815191525f9081526020527f729ef9451dd492832bd2a98139702ced95dfa0cec7e99526dbbcb957abcbc4775461013f91906108a690611087565b6110a8565b60405162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1030b71030b236b4b760511b6044820152606490fd5b34610141575f3660031901126101415760206040515f805160206113b88339815191528152f35b3461014157604036600319011261014157610929610ffe565b336001600160a01b038216036109455761013f906004356111bd565b60405163334bd91960e11b8152600490fd5b346101415760403660031901126101415761013f600435610976610ffe565b90805f525f60205261098e600160405f200154611087565b611146565b3461014157602080600319360112610141576001600160a01b0390816109b7610fe8565b165f526005815260405f206040518083835491828152019081935f52845f20905f5b86828210610a545750505050819003601f01601f191681019267ffffffffffffffff841182851017610a4057908360405281840190828552518091526040840192915f5b828110610a2a5785850386f35b8351871685529381019392810192600101610a1d565b634e487b7160e01b5f52604160045260245ffd5b83548916855290930192600192830192016109d9565b34610141576020366003190112610141576004355f525f6020526020600160405f200154604051908152f35b346101415761014036600319011261014157610ab0610fe8565b610ab8610ffe565b906044356001600160a01b038116810361014157606435906001600160a01b0382168203610141576084356001600160a01b03811681036101415760a4356001600160a01b038116810361014157600261012435101561014157610b1a611021565b6001600160a01b03851615610d9b576001600160a01b038581165f9081526004602052604090205416610d565760405191610b5483611230565b6001600160a01b0387811684528481166020850152426040850152858116606085015290811660808401521660a082015260c43560c082015260e43560e082015261010435610100820152610bb061012435610120830161124d565b60018060a01b0384165f526004602052610120600960405f2060018060a01b038451166bffffffffffffffffffffffff60a01b90818354161782556001820160018060a01b0360208701511682825416179055604085015160028301556003820160018060a01b03606087015116828254161790556004820160018060a01b0360808701511682825416179055600582019060018060a01b0360a0870151169082541617905560c0840151600682015560e084015160078201556101008401516008820155019101516002811015610d425760ff8019835416911617905560018060a01b0384165f52600560205260405f20805490680100000000000000009182811015610a40576106aa81610ccc93600189940181556112a2565b60035490811015610a40577f8f723e49dc038e67c41b41307a1e0c65653d50125a0c474a21ac32d9a0b24d2b91610d0f856106aa84600160409601600355611259565b81516001600160a01b039094168452610d2e6020850161012435611014565b6001600160a01b03908116958116941692a4005b634e487b7160e01b5f52602160045260245ffd5b60405162461bcd60e51b815260206004820152601760248201527f506f6f6c20616c726561647920726567697374657265640000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601b60248201527f506f6f6c20616464726573732063616e6e6f74206265207a65726f00000000006044820152606490fd5b346101415760203660031901126101415760206001600160a01b0380610e04610fe8565b165f526006825260405f205416604051908152f35b34610141575f366003190112610141576002546040516001600160a01b039091168152602090f35b3461014157604036600319011261014157610e5a610fe8565b610e62610ffe565b90610e6b611021565b6001600160a01b039081169081151580610f8a575b15610f5157815f526004602052610e9e8160405f20541615156112b7565b815f5260066020528060405f205416610efd57815f52600660205260405f20921691826bffffffffffffffffffffffff60a01b8254161790557ff8ee9039d8e4d43426638703c71517008894fdea742bb2d2dbff5a46fb07abdb5f80a3005b60405162461bcd60e51b815260206004820152602660248201527f5661756c7420616c7265616479207265676973746572656420666f72207468696044820152651cc81c1bdbdb60d21b6064820152608490fd5b60405162461bcd60e51b8152602060048201526011602482015270496e76616c69642061646472657373657360781b6044820152606490fd5b508083161515610e80565b34610141576020366003190112610141576004359063ffffffff60e01b821680920361014157602091637965db0b60e01b8114908115610fd7575b5015158152f35b6301ffc9a760e01b14905083610fd0565b600435906001600160a01b038216820361014157565b602435906001600160a01b038216820361014157565b906002821015610d425752565b335f9081527f729ef9451dd492832bd2a98139702ced95dfa0cec7e99526dbbcb957abcbc47660205260409020545f805160206113b88339815191529060ff16156110695750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b805f525f60205260405f20335f5260205260ff60405f205416156110695750565b6001600160a01b03165f8181527f729ef9451dd492832bd2a98139702ced95dfa0cec7e99526dbbcb957abcbc47660205260408120549091905f805160206113b88339815191529060ff1661114157808352826020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b905f9180835282602052604083209160018060a01b03169182845260205260ff604084205416155f1461114157808352826020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b905f9180835282602052604083209160018060a01b03169182845260205260ff6040842054165f146111415780835282602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b610140810190811067ffffffffffffffff821117610a4057604052565b6002821015610d425752565b60035481101561128e5760035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01905f90565b634e487b7160e01b5f52603260045260245ffd5b805482101561128e575f5260205f2001905f90565b156112be57565b60405162461bcd60e51b8152602060048201526013602482015272141bdbdb081b9bdd081c9959da5cdd195c9959606a1b6044820152606490fd5b5f809160038054935b8481106113135750505050505f1990565b61131c81611259565b905490831b1c6001600160a01b0390811690841614611359575f19811461134557600101611302565b634e487b7160e01b84526011600452602484fd5b935050505090565b915f91825b84548110156113ad5761137981866112a2565b905460039190911b1c6001600160a01b03908116908316146113a5575f19811461134557600101611366565b925050915090565b50509150505f199056fe6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98affa264697066735822122071f6c4a674f381b3ca6656ce44afd24295ae726d8cea574f6ce126b243cd759364736f6c634300081400332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x2C JUMPI PUSH2 0x12 CALLER PUSH2 0x30 JUMP JUMPDEST POP PUSH2 0x1C CALLER PUSH2 0xAC JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x140D SWAP1 DUP2 PUSH2 0x14B DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH2 0xA8 JUMPI DUP2 DUP1 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1558 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH32 0x729EF9451DD492832BD2A98139702CED95DFA0CEC7E99526DBBCB957ABCBC476 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x6077685936C8169D09204A1D97DB12E41713588C38E1D29A61867D3DCEE98AFF SWAP1 PUSH1 0xFF AND PUSH2 0x145 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1558 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0xF95 JUMPI POP DUP1 PUSH4 0x5C4FDF9 EQ PUSH2 0xE41 JUMPI DUP1 PUSH4 0xF4EF8A6 EQ PUSH2 0xE19 JUMPI DUP1 PUSH4 0x1E4966AB EQ PUSH2 0xDE0 JUMPI DUP1 PUSH4 0x2437769A EQ PUSH2 0xA96 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xA6A JUMPI DUP1 PUSH4 0x24A44EFB EQ PUSH2 0x993 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x957 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x910 JUMPI DUP1 PUSH4 0x56D73568 EQ PUSH2 0x8E9 JUMPI DUP1 PUSH4 0x5D102DF7 EQ PUSH2 0x812 JUMPI DUP1 PUSH4 0x7570E389 EQ PUSH2 0x772 JUMPI DUP1 PUSH4 0x7E72C7D7 EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0x8A4ADF24 EQ PUSH2 0x53D JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xA8D088BB EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0xC489579D EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xD3E90FA0 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xD3FFE67A EQ PUSH2 0x145 JUMPI PUSH4 0xD547741F EQ PUSH2 0x103 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH2 0x13F PUSH1 0x4 CALLDATALOAD PUSH2 0x122 PUSH2 0xFFE JUMP JUMPDEST SWAP1 DUP1 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH2 0x13A PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD PUSH2 0x1087 JUMP JUMPDEST PUSH2 0x11BD JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH2 0x17B PUSH2 0xFE8 JUMP JUMPDEST PUSH0 PUSH2 0x120 PUSH1 0x40 MLOAD PUSH2 0x18B DUP2 PUSH2 0x1230 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x1E8 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO ISZERO PUSH2 0x12B7 JUMP JUMPDEST PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x140 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x27E PUSH1 0xFF PUSH1 0x9 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x20A DUP6 PUSH2 0x1230 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP7 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 AND PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD DUP2 AND PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD DUP2 AND PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD AND PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP7 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP7 ADD MSTORE ADD SLOAD AND PUSH2 0x120 DUP4 ADD PUSH2 0x124D JUMP JUMPDEST PUSH2 0x313 PUSH2 0x120 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP3 ADD MLOAD AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x80 DUP3 ADD MLOAD AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 DUP3 ADD MLOAD AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x100 DUP6 ADD MSTORE ADD MLOAD PUSH2 0x120 DUP4 ADD SWAP1 PUSH2 0x1014 JUMP JUMPDEST RETURN JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH2 0x32E PUSH2 0xFE8 JUMP JUMPDEST PUSH2 0x336 PUSH2 0xFFE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x48A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP3 SWAP1 DUP4 ISZERO PUSH2 0x439 JUMPI DUP3 AND DUP1 ISZERO PUSH2 0x3E8 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP5 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x8FC18CC172F74C81235145B7927190D2BD0E351FC45BFB17BB572593273CEF21 SWAP2 SWAP1 LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5265776172644D616E616765722063616E6E6F74206265207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C744D616E616765722063616E6E6F74206265207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH2 0x50E PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x141 JUMPI PUSH2 0x57F PUSH2 0xFE8 JUMP JUMPDEST SWAP1 PUSH2 0x588 PUSH2 0x1021 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP4 AND SWAP3 DUP4 PUSH0 MSTORE PUSH1 0x4 DUP3 MSTORE PUSH2 0x5AC DUP4 PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO ISZERO PUSH2 0x12B7 JUMP JUMPDEST DUP4 PUSH0 MSTORE PUSH1 0x4 DUP3 MSTORE DUP3 PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND DUP1 PUSH0 MSTORE PUSH1 0x5 SWAP4 DUP5 DUP5 MSTORE PUSH2 0x5D0 DUP4 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1361 JUMP JUMPDEST SWAP3 DUP3 PUSH0 MSTORE DUP6 DUP6 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP3 PUSH0 NOT SWAP4 DUP5 DUP2 ADD SWAP1 DUP2 GT PUSH2 0x75E JUMPI PUSH2 0x618 SWAP6 DUP5 PUSH2 0x605 PUSH2 0x63F SWAP4 DUP6 PUSH0 MSTORE DUP12 DUP12 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x12A2 JUMP JUMPDEST SWAP9 SWAP1 SLOAD SWAP3 DUP6 PUSH0 MSTORE DUP12 DUP12 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x12A2 JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH1 0x3 SWAP10 DUP11 SHL SHR AND SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 MSTORE DUP6 DUP6 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 DUP2 SLOAD SWAP2 DUP3 ISZERO PUSH2 0x74A JUMPI DUP5 PUSH2 0x681 SWAP4 ADD SWAP1 PUSH2 0x67B PUSH2 0x666 DUP4 DUP4 PUSH2 0x12A2 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST SSTORE PUSH2 0x12F9 JUMP JUMPDEST DUP4 SLOAD DUP4 DUP2 ADD SWAP1 DUP2 GT PUSH2 0x75E JUMPI PUSH2 0x6C9 SWAP3 PUSH2 0x69D PUSH2 0x6AA SWAP3 PUSH2 0x1259 JUMP JUMPDEST SWAP1 SLOAD SWAP1 DUP8 SHL SHR AND SWAP2 PUSH2 0x1259 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 SLOAD SWAP4 DUP5 ISZERO PUSH2 0x74A JUMPI PUSH1 0x4 PUSH1 0x9 SWAP5 PUSH0 SWAP7 SWAP4 DUP8 SWAP5 ADD PUSH2 0x6E9 PUSH2 0x666 DUP3 PUSH2 0x1259 JUMP JUMPDEST DUP6 SSTORE DUP8 DUP5 MSTORE MSTORE DUP2 PUSH1 0x40 DUP2 KECCAK256 SWAP4 DUP2 DUP6 SSTORE DUP2 PUSH1 0x1 DUP7 ADD SSTORE DUP2 PUSH1 0x2 DUP7 ADD SSTORE DUP5 ADD SSTORE DUP2 PUSH1 0x4 DUP5 ADD SSTORE DUP3 ADD SSTORE DUP3 PUSH1 0x6 DUP3 ADD SSTORE DUP3 PUSH1 0x7 DUP3 ADD SSTORE DUP3 PUSH1 0x8 DUP3 ADD SSTORE ADD SSTORE PUSH32 0x334D0B2111287DFDDEBE4B4C1C5AF3AE644909D7FCD024377BF601E236ED5ABB PUSH0 DUP1 LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x794 PUSH2 0xFE8 JUMP JUMPDEST AND SWAP1 DUP2 PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x20 SWAP2 PUSH0 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C206E6F742072656769737465726564206F7220686173206E6F207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1D5B1D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH2 0x82B PUSH2 0xFE8 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8AB JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x13B8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 MSTORE PUSH32 0x729EF9451DD492832BD2A98139702CED95DFA0CEC7E99526DBBCB957ABCBC477 SLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x8A6 SWAP1 PUSH2 0x1087 JUMP JUMPDEST PUSH2 0x10A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x21B0B63632B91034B9903737BA1030B71030B236B4B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x13B8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH2 0x929 PUSH2 0xFFE JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x945 JUMPI PUSH2 0x13F SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH2 0x13F PUSH1 0x4 CALLDATALOAD PUSH2 0x976 PUSH2 0xFFE JUMP JUMPDEST SWAP1 DUP1 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH2 0x98E PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD PUSH2 0x1087 JUMP JUMPDEST PUSH2 0x1146 JUMP JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x141 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH2 0x9B7 PUSH2 0xFE8 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP4 PUSH0 MSTORE DUP5 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST DUP7 DUP3 DUP3 LT PUSH2 0xA54 JUMPI POP POP POP POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP3 DUP6 LT OR PUSH2 0xA40 JUMPI SWAP1 DUP4 PUSH1 0x40 MSTORE DUP2 DUP5 ADD SWAP1 DUP3 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0xA2A JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST DUP4 MLOAD DUP8 AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xA1D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP4 SLOAD DUP10 AND DUP6 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x9D9 JUMP JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH2 0x140 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH2 0xAB0 PUSH2 0xFE8 JUMP JUMPDEST PUSH2 0xAB8 PUSH2 0xFFE JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x141 JUMPI PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x141 JUMPI PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x141 JUMPI PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x141 JUMPI PUSH1 0x2 PUSH2 0x124 CALLDATALOAD LT ISZERO PUSH2 0x141 JUMPI PUSH2 0xB1A PUSH2 0x1021 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0xD9B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0xD56 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0xB54 DUP4 PUSH2 0x1230 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP5 MSTORE DUP5 DUP2 AND PUSH1 0x20 DUP6 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP6 ADD MSTORE DUP6 DUP2 AND PUSH1 0x60 DUP6 ADD MSTORE SWAP1 DUP2 AND PUSH1 0x80 DUP5 ADD MSTORE AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x104 CALLDATALOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0xBB0 PUSH2 0x124 CALLDATALOAD PUSH2 0x120 DUP4 ADD PUSH2 0x124D JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x120 PUSH1 0x9 PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL SWAP1 DUP2 DUP4 SLOAD AND OR DUP3 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP8 ADD MLOAD AND DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP8 ADD MLOAD AND DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x80 DUP8 ADD MLOAD AND DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x5 DUP3 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 DUP8 ADD MLOAD AND SWAP1 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0xE0 DUP5 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x100 DUP5 ADD MLOAD PUSH1 0x8 DUP3 ADD SSTORE ADD SWAP2 ADD MLOAD PUSH1 0x2 DUP2 LT ISZERO PUSH2 0xD42 JUMPI PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD SWAP1 PUSH9 0x10000000000000000 SWAP2 DUP3 DUP2 LT ISZERO PUSH2 0xA40 JUMPI PUSH2 0x6AA DUP2 PUSH2 0xCCC SWAP4 PUSH1 0x1 DUP10 SWAP5 ADD DUP2 SSTORE PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 DUP2 LT ISZERO PUSH2 0xA40 JUMPI PUSH32 0x8F723E49DC038E67C41B41307A1E0C65653D50125A0C474A21AC32D9A0B24D2B SWAP2 PUSH2 0xD0F DUP6 PUSH2 0x6AA DUP5 PUSH1 0x1 PUSH1 0x40 SWAP7 ADD PUSH1 0x3 SSTORE PUSH2 0x1259 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH2 0xD2E PUSH1 0x20 DUP6 ADD PUSH2 0x124 CALLDATALOAD PUSH2 0x1014 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP6 DUP2 AND SWAP5 AND SWAP3 LOG4 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20616C72656164792072656769737465726564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20616464726573732063616E6E6F74206265207A65726F0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0xE04 PUSH2 0xFE8 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH2 0xE5A PUSH2 0xFE8 JUMP JUMPDEST PUSH2 0xE62 PUSH2 0xFFE JUMP JUMPDEST SWAP1 PUSH2 0xE6B PUSH2 0x1021 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO ISZERO DUP1 PUSH2 0xF8A JUMPI JUMPDEST ISZERO PUSH2 0xF51 JUMPI DUP2 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0xE9E DUP2 PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO ISZERO PUSH2 0x12B7 JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH2 0xEFD JUMPI DUP2 PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP3 AND SWAP2 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0xF8EE9039D8E4D43426638703C71517008894FDEA742BB2D2DBFF5A46FB07ABDB PUSH0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C7420616C7265616479207265676973746572656420666F7220746869 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1CC81C1BDBDB PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C696420616464726573736573 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP1 DUP4 AND ISZERO ISZERO PUSH2 0xE80 JUMP JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x141 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0xFD7 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x141 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x141 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0xD42 JUMPI MSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x729EF9451DD492832BD2A98139702CED95DFA0CEC7E99526DBBCB957ABCBC476 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x13B8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x1069 JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 CALLER PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1069 JUMPI POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH32 0x729EF9451DD492832BD2A98139702CED95DFA0CEC7E99526DBBCB957ABCBC476 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x13B8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x1141 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH0 EQ PUSH2 0x1141 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH0 EQ PUSH2 0x1141 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x140 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xA40 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x2 DUP3 LT ISZERO PUSH2 0xD42 JUMPI MSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x128E JUMPI PUSH1 0x3 PUSH0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x128E JUMPI PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x12BE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x141BDBDB081B9BDD081C9959DA5CDD195C9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH0 DUP1 SWAP2 PUSH1 0x3 DUP1 SLOAD SWAP4 JUMPDEST DUP5 DUP2 LT PUSH2 0x1313 JUMPI POP POP POP POP POP PUSH0 NOT SWAP1 JUMP JUMPDEST PUSH2 0x131C DUP2 PUSH2 0x1259 JUMP JUMPDEST SWAP1 SLOAD SWAP1 DUP4 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP5 AND EQ PUSH2 0x1359 JUMPI PUSH0 NOT DUP2 EQ PUSH2 0x1345 JUMPI PUSH1 0x1 ADD PUSH2 0x1302 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST SWAP2 PUSH0 SWAP2 DUP3 JUMPDEST DUP5 SLOAD DUP2 LT ISZERO PUSH2 0x13AD JUMPI PUSH2 0x1379 DUP2 DUP7 PUSH2 0x12A2 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND EQ PUSH2 0x13A5 JUMPI PUSH0 NOT DUP2 EQ PUSH2 0x1345 JUMPI PUSH1 0x1 ADD PUSH2 0x1366 JUMP JUMPDEST SWAP3 POP POP SWAP2 POP SWAP1 JUMP JUMPDEST POP POP SWAP2 POP POP PUSH0 NOT SWAP1 JUMP INVALID PUSH1 0x77 PUSH9 0x5936C8169D09204A1D SWAP8 0xDB SLT 0xE4 OR SGT PC DUP13 CODESIZE 0xE1 0xD2 SWAP11 PUSH2 0x867D RETURNDATASIZE 0xCE 0xE9 DUP11 SELFDESTRUCT LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xF6C4A674F381B3CA6656CE44AFD24295AE72 PUSH14 0x8CEA574F6CE126B243CD75936473 PUSH16 0x6C634300081400332F8788117E7EFF1D DUP3 0xE9 0x26 0xEC PUSH26 0x4901D17C78024A50270940304540A733656F0D00000000000000 ",
							"sourceMap": "421:7809:9:-:0;;;;;;1387:42;1418:10;1387:42;:::i;:::-;;1439:41;1418:10;1439:41;:::i;:::-;;421:7809;;;;;;;;;;;;;6179:316:0;-1:-1:-1;;;;;421:7809:9;2232:4:0;421:7809:9;;;;;;;;;;2232:4:0;;421:7809:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;735:10:3;6370:40:0;-1:-1:-1;;;;;;;;;;;6370:40:0;;;421:7809:9;6424:11:0;:::o;6272:217::-;6466:12;;:::o;6179:316::-;-1:-1:-1;;;;;421:7809:9;2954:6:0;421:7809:9;;;;;;;;;;2954:6:0;;421:7809:9;527:30;;421:7809;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:3;6370:40:0;;;421:7809:9;6424:11:0;:::o;6272:217::-;6466:12;;;:::o"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 4094,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_16387": {
									"entryPoint": 4072,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_address_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_enum_PoolType": {
									"entryPoint": 4116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 4656,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkRole": {
									"entryPoint": 4231,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkRole_16389": {
									"entryPoint": 4129,
									"id": 93,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_findIndexInArray": {
									"entryPoint": 4961,
									"id": 1217,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_findIndexInArray_16408": {
									"entryPoint": 4857,
									"id": 1217,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_grantRole": {
									"entryPoint": 4422,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_grantRole_16404": {
									"entryPoint": 4264,
									"id": 256,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_revokeRole": {
									"entryPoint": 4541,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"require_helper_stringliteral_d422": {
									"entryPoint": 4791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"storage_array_index_access_address_dyn_ptr": {
									"entryPoint": 4770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"storage_array_index_access_address_dyn_ptr_16409": {
									"entryPoint": 4697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"update_storage_value_address_to_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"update_storage_value_address_to_address_16483": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"write_to_memory_enum_PoolType": {
									"entryPoint": 4685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0xF95 JUMPI POP DUP1 PUSH4 0x5C4FDF9 EQ PUSH2 0xE41 JUMPI DUP1 PUSH4 0xF4EF8A6 EQ PUSH2 0xE19 JUMPI DUP1 PUSH4 0x1E4966AB EQ PUSH2 0xDE0 JUMPI DUP1 PUSH4 0x2437769A EQ PUSH2 0xA96 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xA6A JUMPI DUP1 PUSH4 0x24A44EFB EQ PUSH2 0x993 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x957 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x910 JUMPI DUP1 PUSH4 0x56D73568 EQ PUSH2 0x8E9 JUMPI DUP1 PUSH4 0x5D102DF7 EQ PUSH2 0x812 JUMPI DUP1 PUSH4 0x7570E389 EQ PUSH2 0x772 JUMPI DUP1 PUSH4 0x7E72C7D7 EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0x8A4ADF24 EQ PUSH2 0x53D JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xA8D088BB EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0xC489579D EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xD3E90FA0 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xD3FFE67A EQ PUSH2 0x145 JUMPI PUSH4 0xD547741F EQ PUSH2 0x103 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH2 0x13F PUSH1 0x4 CALLDATALOAD PUSH2 0x122 PUSH2 0xFFE JUMP JUMPDEST SWAP1 DUP1 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH2 0x13A PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD PUSH2 0x1087 JUMP JUMPDEST PUSH2 0x11BD JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH2 0x17B PUSH2 0xFE8 JUMP JUMPDEST PUSH0 PUSH2 0x120 PUSH1 0x40 MLOAD PUSH2 0x18B DUP2 PUSH2 0x1230 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x1E8 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO ISZERO PUSH2 0x12B7 JUMP JUMPDEST PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x140 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x27E PUSH1 0xFF PUSH1 0x9 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x20A DUP6 PUSH2 0x1230 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP7 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 AND PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD DUP2 AND PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD DUP2 AND PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD AND PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP7 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP7 ADD MSTORE ADD SLOAD AND PUSH2 0x120 DUP4 ADD PUSH2 0x124D JUMP JUMPDEST PUSH2 0x313 PUSH2 0x120 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP3 ADD MLOAD AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x80 DUP3 ADD MLOAD AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 DUP3 ADD MLOAD AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x100 DUP6 ADD MSTORE ADD MLOAD PUSH2 0x120 DUP4 ADD SWAP1 PUSH2 0x1014 JUMP JUMPDEST RETURN JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH2 0x32E PUSH2 0xFE8 JUMP JUMPDEST PUSH2 0x336 PUSH2 0xFFE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x48A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP3 SWAP1 DUP4 ISZERO PUSH2 0x439 JUMPI DUP3 AND DUP1 ISZERO PUSH2 0x3E8 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP5 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x8FC18CC172F74C81235145B7927190D2BD0E351FC45BFB17BB572593273CEF21 SWAP2 SWAP1 LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5265776172644D616E616765722063616E6E6F74206265207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C744D616E616765722063616E6E6F74206265207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH2 0x50E PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x141 JUMPI PUSH2 0x57F PUSH2 0xFE8 JUMP JUMPDEST SWAP1 PUSH2 0x588 PUSH2 0x1021 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP4 AND SWAP3 DUP4 PUSH0 MSTORE PUSH1 0x4 DUP3 MSTORE PUSH2 0x5AC DUP4 PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO ISZERO PUSH2 0x12B7 JUMP JUMPDEST DUP4 PUSH0 MSTORE PUSH1 0x4 DUP3 MSTORE DUP3 PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND DUP1 PUSH0 MSTORE PUSH1 0x5 SWAP4 DUP5 DUP5 MSTORE PUSH2 0x5D0 DUP4 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1361 JUMP JUMPDEST SWAP3 DUP3 PUSH0 MSTORE DUP6 DUP6 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP3 PUSH0 NOT SWAP4 DUP5 DUP2 ADD SWAP1 DUP2 GT PUSH2 0x75E JUMPI PUSH2 0x618 SWAP6 DUP5 PUSH2 0x605 PUSH2 0x63F SWAP4 DUP6 PUSH0 MSTORE DUP12 DUP12 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x12A2 JUMP JUMPDEST SWAP9 SWAP1 SLOAD SWAP3 DUP6 PUSH0 MSTORE DUP12 DUP12 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x12A2 JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH1 0x3 SWAP10 DUP11 SHL SHR AND SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 MSTORE DUP6 DUP6 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 DUP2 SLOAD SWAP2 DUP3 ISZERO PUSH2 0x74A JUMPI DUP5 PUSH2 0x681 SWAP4 ADD SWAP1 PUSH2 0x67B PUSH2 0x666 DUP4 DUP4 PUSH2 0x12A2 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST SSTORE PUSH2 0x12F9 JUMP JUMPDEST DUP4 SLOAD DUP4 DUP2 ADD SWAP1 DUP2 GT PUSH2 0x75E JUMPI PUSH2 0x6C9 SWAP3 PUSH2 0x69D PUSH2 0x6AA SWAP3 PUSH2 0x1259 JUMP JUMPDEST SWAP1 SLOAD SWAP1 DUP8 SHL SHR AND SWAP2 PUSH2 0x1259 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 SLOAD SWAP4 DUP5 ISZERO PUSH2 0x74A JUMPI PUSH1 0x4 PUSH1 0x9 SWAP5 PUSH0 SWAP7 SWAP4 DUP8 SWAP5 ADD PUSH2 0x6E9 PUSH2 0x666 DUP3 PUSH2 0x1259 JUMP JUMPDEST DUP6 SSTORE DUP8 DUP5 MSTORE MSTORE DUP2 PUSH1 0x40 DUP2 KECCAK256 SWAP4 DUP2 DUP6 SSTORE DUP2 PUSH1 0x1 DUP7 ADD SSTORE DUP2 PUSH1 0x2 DUP7 ADD SSTORE DUP5 ADD SSTORE DUP2 PUSH1 0x4 DUP5 ADD SSTORE DUP3 ADD SSTORE DUP3 PUSH1 0x6 DUP3 ADD SSTORE DUP3 PUSH1 0x7 DUP3 ADD SSTORE DUP3 PUSH1 0x8 DUP3 ADD SSTORE ADD SSTORE PUSH32 0x334D0B2111287DFDDEBE4B4C1C5AF3AE644909D7FCD024377BF601E236ED5ABB PUSH0 DUP1 LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x794 PUSH2 0xFE8 JUMP JUMPDEST AND SWAP1 DUP2 PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x20 SWAP2 PUSH0 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C206E6F742072656769737465726564206F7220686173206E6F207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1D5B1D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH2 0x82B PUSH2 0xFE8 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8AB JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x13B8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 MSTORE PUSH32 0x729EF9451DD492832BD2A98139702CED95DFA0CEC7E99526DBBCB957ABCBC477 SLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x8A6 SWAP1 PUSH2 0x1087 JUMP JUMPDEST PUSH2 0x10A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x21B0B63632B91034B9903737BA1030B71030B236B4B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x13B8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH2 0x929 PUSH2 0xFFE JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x945 JUMPI PUSH2 0x13F SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH2 0x13F PUSH1 0x4 CALLDATALOAD PUSH2 0x976 PUSH2 0xFFE JUMP JUMPDEST SWAP1 DUP1 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH2 0x98E PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD PUSH2 0x1087 JUMP JUMPDEST PUSH2 0x1146 JUMP JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x141 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH2 0x9B7 PUSH2 0xFE8 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP4 PUSH0 MSTORE DUP5 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST DUP7 DUP3 DUP3 LT PUSH2 0xA54 JUMPI POP POP POP POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP3 DUP6 LT OR PUSH2 0xA40 JUMPI SWAP1 DUP4 PUSH1 0x40 MSTORE DUP2 DUP5 ADD SWAP1 DUP3 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0xA2A JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST DUP4 MLOAD DUP8 AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xA1D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP4 SLOAD DUP10 AND DUP6 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x9D9 JUMP JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH2 0x140 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH2 0xAB0 PUSH2 0xFE8 JUMP JUMPDEST PUSH2 0xAB8 PUSH2 0xFFE JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x141 JUMPI PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x141 JUMPI PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x141 JUMPI PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x141 JUMPI PUSH1 0x2 PUSH2 0x124 CALLDATALOAD LT ISZERO PUSH2 0x141 JUMPI PUSH2 0xB1A PUSH2 0x1021 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0xD9B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0xD56 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0xB54 DUP4 PUSH2 0x1230 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP5 MSTORE DUP5 DUP2 AND PUSH1 0x20 DUP6 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP6 ADD MSTORE DUP6 DUP2 AND PUSH1 0x60 DUP6 ADD MSTORE SWAP1 DUP2 AND PUSH1 0x80 DUP5 ADD MSTORE AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x104 CALLDATALOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0xBB0 PUSH2 0x124 CALLDATALOAD PUSH2 0x120 DUP4 ADD PUSH2 0x124D JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x120 PUSH1 0x9 PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL SWAP1 DUP2 DUP4 SLOAD AND OR DUP3 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP8 ADD MLOAD AND DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP8 ADD MLOAD AND DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x80 DUP8 ADD MLOAD AND DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x5 DUP3 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 DUP8 ADD MLOAD AND SWAP1 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0xE0 DUP5 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x100 DUP5 ADD MLOAD PUSH1 0x8 DUP3 ADD SSTORE ADD SWAP2 ADD MLOAD PUSH1 0x2 DUP2 LT ISZERO PUSH2 0xD42 JUMPI PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD SWAP1 PUSH9 0x10000000000000000 SWAP2 DUP3 DUP2 LT ISZERO PUSH2 0xA40 JUMPI PUSH2 0x6AA DUP2 PUSH2 0xCCC SWAP4 PUSH1 0x1 DUP10 SWAP5 ADD DUP2 SSTORE PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 DUP2 LT ISZERO PUSH2 0xA40 JUMPI PUSH32 0x8F723E49DC038E67C41B41307A1E0C65653D50125A0C474A21AC32D9A0B24D2B SWAP2 PUSH2 0xD0F DUP6 PUSH2 0x6AA DUP5 PUSH1 0x1 PUSH1 0x40 SWAP7 ADD PUSH1 0x3 SSTORE PUSH2 0x1259 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH2 0xD2E PUSH1 0x20 DUP6 ADD PUSH2 0x124 CALLDATALOAD PUSH2 0x1014 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP6 DUP2 AND SWAP5 AND SWAP3 LOG4 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20616C72656164792072656769737465726564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20616464726573732063616E6E6F74206265207A65726F0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0xE04 PUSH2 0xFE8 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH2 0xE5A PUSH2 0xFE8 JUMP JUMPDEST PUSH2 0xE62 PUSH2 0xFFE JUMP JUMPDEST SWAP1 PUSH2 0xE6B PUSH2 0x1021 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO ISZERO DUP1 PUSH2 0xF8A JUMPI JUMPDEST ISZERO PUSH2 0xF51 JUMPI DUP2 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0xE9E DUP2 PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO ISZERO PUSH2 0x12B7 JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH2 0xEFD JUMPI DUP2 PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP3 AND SWAP2 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0xF8EE9039D8E4D43426638703C71517008894FDEA742BB2D2DBFF5A46FB07ABDB PUSH0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C7420616C7265616479207265676973746572656420666F7220746869 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1CC81C1BDBDB PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C696420616464726573736573 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP1 DUP4 AND ISZERO ISZERO PUSH2 0xE80 JUMP JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x141 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x141 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0xFD7 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x141 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x141 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0xD42 JUMPI MSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x729EF9451DD492832BD2A98139702CED95DFA0CEC7E99526DBBCB957ABCBC476 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x13B8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x1069 JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 CALLER PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1069 JUMPI POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH32 0x729EF9451DD492832BD2A98139702CED95DFA0CEC7E99526DBBCB957ABCBC476 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x13B8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x1141 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH0 EQ PUSH2 0x1141 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH0 EQ PUSH2 0x1141 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x140 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xA40 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x2 DUP3 LT ISZERO PUSH2 0xD42 JUMPI MSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x128E JUMPI PUSH1 0x3 PUSH0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x128E JUMPI PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x12BE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x141BDBDB081B9BDD081C9959DA5CDD195C9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH0 DUP1 SWAP2 PUSH1 0x3 DUP1 SLOAD SWAP4 JUMPDEST DUP5 DUP2 LT PUSH2 0x1313 JUMPI POP POP POP POP POP PUSH0 NOT SWAP1 JUMP JUMPDEST PUSH2 0x131C DUP2 PUSH2 0x1259 JUMP JUMPDEST SWAP1 SLOAD SWAP1 DUP4 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP5 AND EQ PUSH2 0x1359 JUMPI PUSH0 NOT DUP2 EQ PUSH2 0x1345 JUMPI PUSH1 0x1 ADD PUSH2 0x1302 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST SWAP2 PUSH0 SWAP2 DUP3 JUMPDEST DUP5 SLOAD DUP2 LT ISZERO PUSH2 0x13AD JUMPI PUSH2 0x1379 DUP2 DUP7 PUSH2 0x12A2 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND EQ PUSH2 0x13A5 JUMPI PUSH0 NOT DUP2 EQ PUSH2 0x1345 JUMPI PUSH1 0x1 ADD PUSH2 0x1366 JUMP JUMPDEST SWAP3 POP POP SWAP2 POP SWAP1 JUMP JUMPDEST POP POP SWAP2 POP POP PUSH0 NOT SWAP1 JUMP INVALID PUSH1 0x77 PUSH9 0x5936C8169D09204A1D SWAP8 0xDB SLT 0xE4 OR SGT PC DUP13 CODESIZE 0xE1 0xD2 SWAP11 PUSH2 0x867D RETURNDATASIZE 0xCE 0xE9 DUP11 SELFDESTRUCT LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xF6C4A674F381B3CA6656CE44AFD24295AE72 PUSH14 0x8CEA574F6CE126B243CD75936473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "421:7809:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;421:7809:9;;;;4747:26:0;421:7809:9;;;;:::i;:::-;;;;;;;;2475:4:0;421:7809:9;;;;3901:22:0;421:7809:9;2475:4:0;:::i;:::-;4747:26;:::i;:::-;421:7809:9;;;;;;;;;;;-1:-1:-1;;421:7809:9;;;;;;;;;;;;;;;;;;;-1:-1:-1;;421:7809:9;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5651:70;421:7809;;;;;;;;;;5659:38;;5651:70;:::i;:::-;421:7809;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;421:7809:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;421:7809:9;;;;;;:::i;:::-;;;:::i;:::-;735:10:3;421:7809:9;;;;;;;;;;;;;3519:23:0;3515:108;;-1:-1:-1;;;;;421:7809:9;;;;;4153:27;;421:7809;;;;4272:28;;421:7809;;;;;-1:-1:-1;;;;;;421:7809:9;;;;;;;;;4426:46;421:7809;;;;;;;;;;;;-1:-1:-1;;;;;421:7809:9;;;;;;;;;;;;;4488:48;;421:7809;4488:48;421:7809;;;;-1:-1:-1;;;421:7809:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;421:7809:9;;;;;;;;;;-1:-1:-1;;;421:7809:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;421:7809:9;;;;;;;3515:108:0;421:7809:9;;-1:-1:-1;;;3565:47:0;;735:10:3;421:7809:9;3565:47:0;;421:7809:9;-1:-1:-1;421:7809:9;;;;;;3565:47:0;421:7809:9;;;;;;-1:-1:-1;;421:7809:9;;;;;;4827:13;421:7809;;;;-1:-1:-1;;;;;421:7809:9;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;421:7809:9;;;;;;;;;;;;;;;;;-1:-1:-1;;421:7809:9;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;421:7809:9;;;;;;;;-1:-1:-1;;;;;421:7809:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2475:4:0;;;:::i;:::-;421:7809:9;;;;;;;;;;;;;;;;3477:70;421:7809;;;;;;3485:38;;3477:70;:::i;:::-;421:7809;;;;;;;;;;;;;;;6715:11;421:7809;;;;6698:43;421:7809;;;;6698:43;:::i;:::-;421:7809;;;;;;;;;;;;;;;;;;;;;;;6811:26;421:7809;;6840:30;6811:59;421:7809;;;;;;;;;;6840:30;:::i;:::-;421:7809;;;;;;;;;;;;;6811:26;:::i;:::-;421:7809;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6811:59;421:7809;;;;;;;;;;;;;;;;;7000:29;421:7809;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;7000:29;:::i;:::-;421:7809;;;;;;;;;;7085:31;7100:16;;7085:12;7100:16;;:::i;:::-;421:7809;;;;;;;7085:12;;:::i;:::-;:31;421:7809;;;;;;;;;;;;;;;;;;;;;;;;;;7085:31;421:7809;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3739:22;421:7809;3739:22;;421:7809;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;421:7809:9;;;;-1:-1:-1;;;;;421:7809:9;;;:::i;:::-;;;;;;6048:10;421:7809;;;;;;;;6048:30;421:7809;;;;;;6048:10;421:7809;;;;;;;;;;;;;;;;-1:-1:-1;;;421:7809:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;421:7809:9;;;;;;;;;;;;;-1:-1:-1;;421:7809:9;;;;;;:::i;:::-;6440:10;421:7809;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;421:7809:9;;;;;;3901:22:0;421:7809:9;4330:25:0;;421:7809:9;2475:4:0;;;:::i;:::-;4330:25;:::i;421:7809:9:-;;;-1:-1:-1;;;421:7809:9;;;;;;;;;;;;-1:-1:-1;;;421:7809:9;;;;;;;;;;;;;-1:-1:-1;;421:7809:9;;;;;;;-1:-1:-1;;;;;;;;;;;421:7809:9;;;;;;;;;-1:-1:-1;;421:7809:9;;;;;;:::i;:::-;735:10:3;-1:-1:-1;;;;;421:7809:9;;5421:34:0;5417:102;;5529:37;421:7809:9;;;5529:37:0;:::i;5417:102::-;421:7809:9;;-1:-1:-1;;;5478:30:0;;421:7809:9;;5478:30:0;421:7809:9;;;;;;-1:-1:-1;;421:7809:9;;;;4330:25:0;421:7809:9;;;;:::i;:::-;;;;;;;;2475:4:0;421:7809:9;;;;3901:22:0;421:7809:9;2475:4:0;:::i;:::-;4330:25;:::i;421:7809:9:-;;;;;;;;;;;;;-1:-1:-1;;;;;421:7809:9;;;;:::i;:::-;;;;5353:11;421:7809;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;421:7809:9;;;;;-1:-1:-1;;421:7809:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;421:7809:9;;;;;;;;;;;;;;;;3901:22:0;421:7809:9;;;;;;;;;;;;;-1:-1:-1;;421:7809:9;;;;;;:::i;:::-;;;:::i;:::-;;;;-1:-1:-1;;;;;421:7809:9;;;;;;;;;-1:-1:-1;;;;;421:7809:9;;;;;;;;-1:-1:-1;;;;;421:7809:9;;;;;;;;-1:-1:-1;;;;;421:7809:9;;;;;;;;;;;;;2475:4:0;;:::i;:::-;-1:-1:-1;;;;;421:7809:9;;2554:18;421:7809;;-1:-1:-1;;;;;421:7809:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;421:7809:9;;;;;;;;;2753:376;;421:7809;2853:15;421:7809;2753:376;;421:7809;;;;;2753:376;;421:7809;;;;;2753:376;;421:7809;;;2753:376;;421:7809;;;;2753:376;;421:7809;;;;2753:376;;421:7809;;;;2753:376;;421:7809;2753:376;421:7809;;;2753:376;;;:::i;:::-;421:7809;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2753:376;;421:7809;;;;;;;;;;2753:376;;421:7809;;;;;;;;;;;;;;2753:376;;421:7809;;;;;;;;;;;;;;;;;;2753:376;;421:7809;;;;;;;;;;;;;;;;;;;2753:376;;421:7809;;;;;;;;;;2753:376;;421:7809;;;;;;2753:376;;421:7809;;;;;;2753:376;;421:7809;;;;;;2753:376;;421:7809;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;3210:55;421:7809;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;421:7809:9;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;421:7809:9;;;;;;;;;3210:55;421:7809;;;;;;;;;;;;;;;;-1:-1:-1;;;421:7809:9;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;421:7809:9;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;421:7809:9;;;;;-1:-1:-1;;;;;421:7809:9;;;:::i;:::-;;;;786:45;421:7809;;;;;;;;;;;;;;;;;;;-1:-1:-1;;421:7809:9;;;;603:35;421:7809;;;-1:-1:-1;;;;;421:7809:9;;;;;;;;;;;;;;-1:-1:-1;;421:7809:9;;;;;;:::i;:::-;;;:::i;:::-;2475:4:0;;;:::i;:::-;-1:-1:-1;;;;;421:7809:9;;;;7875:18;;;;:41;;421:7809;;;;;;;;;;7948:70;421:7809;;;;;;7956:38;;7948:70;:::i;:::-;421:7809;;;8049:10;421:7809;;;;;;;;;;;;;8049:10;421:7809;;;;;;;;;;;;;;;;;;8193:28;421:7809;8193:28;;421:7809;;;;-1:-1:-1;;;421:7809:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;421:7809:9;;;;;;;;;;-1:-1:-1;;;421:7809:9;;;;;;;;;;;;-1:-1:-1;;;421:7809:9;;;;;;;7875:41;421:7809;;;;7897:19;;7875:41;;421:7809;;;;;;-1:-1:-1;;421:7809:9;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2673:47:0;;;:87;;;;421:7809:9;;;;;;;2673:87:0;-1:-1:-1;;;861:40:4;;-1:-1:-1;2673:87:0;;;421:7809:9;;;;-1:-1:-1;;;;;421:7809:9;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;421:7809:9;;;;;;:::o;:::-;;;;;;;;;:::o;3199:103:0:-;735:10:3;2954:6:0;421:7809:9;;;;;;;;;;-1:-1:-1;;;;;;;;;;;527:30:9;421:7809;;3519:23:0;3515:108;;3199:103;:::o;3515:108::-;421:7809:9;;;;3565:47:0;;;;;;735:10:3;3565:47:0;;;421:7809:9;;;;;3565:47:0;3199:103;421:7809:9;2954:6:0;421:7809:9;2954:6:0;421:7809:9;;;2954:6:0;421:7809:9;735:10:3;2954:6:0;421:7809:9;;;;;2954:6:0;421:7809:9;;;3519:23:0;3515:108;;3199:103;:::o;6179:316::-;-1:-1:-1;;;;;421:7809:9;2954:6:0;421:7809:9;;;;;;;;;;2954:6:0;;421:7809:9;-1:-1:-1;;;;;;;;;;;527:30:9;421:7809;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6370:40:0;735:10:3;6370:40:0;;;421:7809:9;6424:11:0;:::o;6272:217::-;6466:12;;;:::o;6179:316::-;;2954:6;421:7809:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6276:23:0;6272:217;421:7809:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6370:40:0;735:10:3;6370:40:0;;;421:7809:9;6424:11:0;:::o;6730:317::-;;2954:6;421:7809:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6824:217:0;421:7809:9;;;;;;;;;;;;;;;;;;;;;;;;;;;6922:40:0;735:10:3;6922:40:0;;;421:7809:9;6976:11:0;:::o;421:7809:9:-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;421:7809:9;;;;-1:-1:-1;421:7809:9;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;421:7809:9;;-1:-1:-1;421:7809:9;;;-1:-1:-1;421:7809:9;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;421:7809:9;;;;;;;;;;;;-1:-1:-1;;;421:7809:9;;;;;;;7150:299;7303:1;7291:13;421:7809;;;;7286:100;7306:16;;;;;;421:7809;;;;;;;7150:299;:::o;7324:3::-;7347:8;;;:::i;:::-;421:7809;;;;;;-1:-1:-1;;;;;421:7809:9;;;;;;7347:18;7343:32;;-1:-1:-1;;421:7809:9;;;;;;7291:13;;421:7809;-1:-1:-1;;;421:7809:9;;;;;;;;7343:32;7367:8;;;;;;:::o;7150:299::-;;7303:1;7291:13;;7324:3;421:7809;;7306:16;;;;;7347:8;;;;:::i;:::-;421:7809;;;;;;;;-1:-1:-1;;;;;421:7809:9;;;;;;7347:18;7343:32;;-1:-1:-1;;421:7809:9;;;;;;7291:13;;7343:32;7367:8;;;;;;:::o;7306:16::-;;;;;;421:7809;;7150:299;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1026600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "482",
								"POOL_MANAGER_ROLE()": "383",
								"deregisterPool(address)": "infinite",
								"getManagers()": "4762",
								"getPoolDetails(address)": "infinite",
								"getPoolsByLender(address)": "infinite",
								"getRoleAdmin(bytes32)": "2436",
								"getTotalPools()": "2674",
								"getVaultForPool(address)": "4846",
								"grantFactoryAccess(address)": "infinite",
								"grantRole(bytes32,address)": "33360",
								"hasRole(bytes32,address)": "2792",
								"poolVaults(address)": "2478",
								"registerManagers(address,address)": "52731",
								"registerPool(address,address,address,address,address,address,uint256,uint256,uint256,uint8)": "infinite",
								"registerVault(address,address)": "infinite",
								"renounceRole(bytes32,address)": "28972",
								"revokeRole(bytes32,address)": "33634",
								"rewardManager()": "2324",
								"supportsInterface(bytes4)": "270",
								"vaultManager()": "2566"
							},
							"internal": {
								"_removePoolFromLenderArray(address,address)": "infinite",
								"_removePoolFromMainArray(address)": "infinite",
								"findIndexInArray(address[] storage pointer,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 421,
									"end": 8230,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1387,
									"end": 1429,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1418,
									"end": 1428,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1387,
									"end": 1429,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1387,
									"end": 1429,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1387,
									"end": 1429,
									"name": "tag",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1387,
									"end": 1429,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1387,
									"end": 1429,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1480,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1418,
									"end": 1428,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1480,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1439,
									"end": 1480,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1480,
									"name": "tag",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1439,
									"end": 1480,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1480,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "RETURN",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2232,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "PUSH",
									"source": 9,
									"value": "AD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5"
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2232,
									"end": 2236,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2232,
									"end": 2236,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "1400FE2F234CF888B5E4C66700C7903F33F31BFC9675E51CB0119F915EB534D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "PUSH",
									"source": 9,
									"value": "729EF9451DD492832BD2A98139702CED95DFA0CEC7E99526DBBCB957ABCBC476"
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 527,
									"end": 557,
									"name": "PUSH",
									"source": 9,
									"value": "6077685936C8169D09204A1D97DB12E41713588C38E1D29A61867D3DCEE98AFF"
								},
								{
									"begin": 527,
									"end": 557,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "1400FE2F234CF888B5E4C66700C7903F33F31BFC9675E51CB0119F915EB534D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 421,
									"end": 8230,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122071f6c4a674f381b3ca6656ce44afd24295ae726d8cea574f6ce126b243cd759364736f6c63430008140033",
									".code": [
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A7"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "5C4FDF9"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "F4EF8A6"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1E4966AB"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "2437769A"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "248A9CA3"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "24A44EFB"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "2F2FF15D"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "36568ABE"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "56D73568"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "5D102DF7"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "7570E389"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "7E72C7D7"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "8A4ADF24"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "91D14854"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "A217FDDF"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "A8D088BB"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "C489579D"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "D3E90FA0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "D3FFE67A"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "D547741F"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5651,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5659,
											"end": 5697,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5659,
											"end": 5697,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5651,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 5651,
											"end": 5721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5651,
											"end": 5721,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 5651,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "AD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4180,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4180,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4272,
											"end": 4300,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4272,
											"end": 4300,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4426,
											"end": 4472,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4488,
											"end": 4536,
											"name": "PUSH",
											"source": 9,
											"value": "8FC18CC172F74C81235145B7927190D2BD0E351FC45BFB17BB572593273CEF21"
										},
										{
											"begin": 4488,
											"end": 4536,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4488,
											"end": 4536,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "5265776172644D616E616765722063616E6E6F74206265207A65726F20616464"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "5661756C744D616E616765722063616E6E6F74206265207A65726F2061646472"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2517D3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4827,
											"end": 4840,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3477,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3485,
											"end": 3523,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3485,
											"end": 3523,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3477,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 3477,
											"end": 3547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3477,
											"end": 3547,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 3477,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6726,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6698,
											"end": 6741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6698,
											"end": 6741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 6698,
											"end": 6741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6698,
											"end": 6741,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 6698,
											"end": 6741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6811,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6840,
											"end": 6870,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 6811,
											"end": 6870,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6840,
											"end": 6870,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 6840,
											"end": 6870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6840,
											"end": 6870,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 6840,
											"end": 6870,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6811,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 6811,
											"end": 6837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6811,
											"end": 6837,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 6811,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP10",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6811,
											"end": 6870,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 6811,
											"end": 6870,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7000,
											"end": 7029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7000,
											"end": 7029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 7000,
											"end": 7029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7000,
											"end": 7029,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 7000,
											"end": 7029,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7085,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 7100,
											"end": 7116,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7100,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 7085,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 7100,
											"end": 7116,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7100,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 7100,
											"end": 7116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7100,
											"end": 7116,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 7100,
											"end": 7116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7085,
											"end": 7097,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7085,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 7085,
											"end": 7097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7085,
											"end": 7097,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 7085,
											"end": 7097,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7085,
											"end": 7116,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7085,
											"end": 7116,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 7085,
											"end": 7116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3739,
											"end": 3761,
											"name": "PUSH",
											"source": 9,
											"value": "334D0B2111287DFDDEBE4B4C1C5AF3AE644909D7FCD024377BF601E236ED5ABB"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3739,
											"end": 3761,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3739,
											"end": 3761,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6048,
											"end": 6058,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6048,
											"end": 6078,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6048,
											"end": 6058,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "506F6F6C206E6F742072656769737465726564206F7220686173206E6F207661"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D5B1D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6440,
											"end": 6450,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "AD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CEA5B988323ACC73CD81DB0E6F2932CDC75F39072539D65CBFA79C56B2A64E51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "729EF9451DD492832BD2A98139702CED95DFA0CEC7E99526DBBCB957ABCBC477"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21B0B63632B91034B9903737BA1030B71030B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CEA5B988323ACC73CD81DB0E6F2932CDC75F39072539D65CBFA79C56B2A64E51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "334BD919"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5353,
											"end": 5364,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "A4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2554,
											"end": 2572,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2868,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "C4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "E4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 2753,
											"end": 3129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 3129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "10000000000000000"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3210,
											"end": 3265,
											"name": "PUSH",
											"source": 9,
											"value": "8F723E49DC038E67C41B41307A1E0C65653D50125A0C474A21AC32D9A0B24D2B"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3210,
											"end": 3265,
											"name": "LOG4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "506F6F6C20616C72656164792072656769737465726564000000000000000000"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "506F6F6C20616464726573732063616E6E6F74206265207A65726F0000000000"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 786,
											"end": 831,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 603,
											"end": 638,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 7893,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 7893,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 7893,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 7893,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 7916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 7875,
											"end": 7916,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7948,
											"end": 8018,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7956,
											"end": 7994,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7956,
											"end": 7994,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7948,
											"end": 8018,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 7948,
											"end": 8018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7948,
											"end": 8018,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 7948,
											"end": 8018,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8049,
											"end": 8059,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8049,
											"end": 8059,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8193,
											"end": 8221,
											"name": "PUSH",
											"source": 9,
											"value": "F8EE9039D8E4D43426638703C71517008894FDEA742BB2D2DBFF5A46FB07ABDB"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8193,
											"end": 8221,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8193,
											"end": 8221,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "5661756C7420616C7265616479207265676973746572656420666F7220746869"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1CC81C1BDBDB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420616464726573736573"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 7916,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 7875,
											"end": 7916,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7897,
											"end": 7916,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7897,
											"end": 7916,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 7916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 7875,
											"end": 7916,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 861,
											"end": 901,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "729EF9451DD492832BD2A98139702CED95DFA0CEC7E99526DBBCB957ABCBC476"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CEA5B988323ACC73CD81DB0E6F2932CDC75F39072539D65CBFA79C56B2A64E51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 527,
											"end": 557,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "729EF9451DD492832BD2A98139702CED95DFA0CEC7E99526DBBCB957ABCBC476"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CEA5B988323ACC73CD81DB0E6F2932CDC75F39072539D65CBFA79C56B2A64E51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 527,
											"end": 557,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6276,
											"end": 6299,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "C2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "141BDBDB081B9BDD081C9959DA5CDD195C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7150,
											"end": 7449,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 7150,
											"end": 7449,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7303,
											"end": 7304,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7291,
											"end": 7304,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7286,
											"end": 7386,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7322,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 7306,
											"end": 7322,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7322,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7322,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7322,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 7306,
											"end": 7322,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 7150,
											"end": 7449,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7150,
											"end": 7449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7324,
											"end": 7327,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 7324,
											"end": 7327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7347,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 7347,
											"end": 7355,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7347,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 7347,
											"end": 7355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7347,
											"end": 7355,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 7347,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7347,
											"end": 7365,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 7343,
											"end": 7375,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 7343,
											"end": 7375,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7291,
											"end": 7304,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 7291,
											"end": 7304,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7343,
											"end": 7375,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 7343,
											"end": 7375,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7367,
											"end": 7375,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7367,
											"end": 7375,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7367,
											"end": 7375,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7367,
											"end": 7375,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7367,
											"end": 7375,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7367,
											"end": 7375,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7367,
											"end": 7375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7150,
											"end": 7449,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 7150,
											"end": 7449,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7150,
											"end": 7449,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7303,
											"end": 7304,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7291,
											"end": 7304,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7291,
											"end": 7304,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7324,
											"end": 7327,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 7324,
											"end": 7327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7322,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7322,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7322,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 7306,
											"end": 7322,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7347,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 7347,
											"end": 7355,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7347,
											"end": 7355,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7347,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 7347,
											"end": 7355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7347,
											"end": 7355,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 7347,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7347,
											"end": 7365,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 7343,
											"end": 7375,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 7343,
											"end": 7375,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7291,
											"end": 7304,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 7291,
											"end": 7304,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7343,
											"end": 7375,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 7343,
											"end": 7375,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7367,
											"end": 7375,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7367,
											"end": 7375,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7367,
											"end": 7375,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7367,
											"end": 7375,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7367,
											"end": 7375,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7367,
											"end": 7375,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7367,
											"end": 7375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7322,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 7306,
											"end": 7322,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7322,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7322,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7322,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7322,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7322,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 8230,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 7150,
											"end": 7449,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7150,
											"end": 7449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									],
									".data": {
										"CEA5B988323ACC73CD81DB0E6F2932CDC75F39072539D65CBFA79C56B2A64E51": "6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98aff"
									}
								},
								"01400FE2F234CF888B5E4C66700C7903F33F31BFC9675E51CB0119F915EB534D": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d"
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/contracts/interfaces/IPoolOrganizer.sol",
								"contracts/contracts/interfaces/IRewardManager.sol",
								"contracts/contracts/interfaces/IVaultManager.sol",
								"contracts/contracts/protocol/PoolOrganizer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"POOL_MANAGER_ROLE()": "56d73568",
							"deregisterPool(address)": "7e72c7d7",
							"getManagers()": "a8d088bb",
							"getPoolDetails(address)": "d3e90fa0",
							"getPoolsByLender(address)": "24a44efb",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getTotalPools()": "d3ffe67a",
							"getVaultForPool(address)": "7570e389",
							"grantFactoryAccess(address)": "5d102df7",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"poolVaults(address)": "1e4966ab",
							"registerManagers(address,address)": "c489579d",
							"registerPool(address,address,address,address,address,address,uint256,uint256,uint256,uint8)": "2437769a",
							"registerVault(address,address)": "05c4fdf9",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"rewardManager()": "0f4ef8a6",
							"supportsInterface(bytes4)": "01ffc9a7",
							"vaultManager()": "8a4adf24"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vaultManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardManager\",\"type\":\"address\"}],\"name\":\"ManagerRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IPoolOrganizer.PoolType\",\"name\":\"poolType\",\"type\":\"uint8\"}],\"name\":\"PoolRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"VaultRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POOL_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"deregisterPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getManagers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"loanToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"assetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repaymentPeriod\",\"type\":\"uint256\"},{\"internalType\":\"enum IPoolOrganizer.PoolType\",\"name\":\"poolType\",\"type\":\"uint8\"}],\"internalType\":\"struct IPoolOrganizer.PoolDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"}],\"name\":\"getPoolsByLender\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalPools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getVaultForPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factoryAddress\",\"type\":\"address\"}],\"name\":\"grantFactoryAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolVaults\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardManager\",\"type\":\"address\"}],\"name\":\"registerManagers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"loanToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"assetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repaymentPeriod\",\"type\":\"uint256\"},{\"internalType\":\"enum IPoolOrganizer.PoolType\",\"name\":\"poolType\",\"type\":\"uint8\"}],\"name\":\"registerPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"registerVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardManager\",\"outputs\":[{\"internalType\":\"contract IRewardManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultManager\",\"outputs\":[{\"internalType\":\"contract IVaultManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implements access control and management for pool lifecycle and integration with external managers.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"ManagerRegistered(address,address)\":{\"details\":\"Emitted when managers are registered.\"},\"PoolDeregistered(address)\":{\"details\":\"Emitted when a pool is deregistered.\"},\"PoolRegistered(address,address,address,address,uint8)\":{\"details\":\"Emitted when a pool is registered.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"deregisterPool(address)\":{\"params\":{\"pool\":\"The address of the pool to deregister.\"}},\"getManagers()\":{\"returns\":{\"_0\":\"A tuple containing the addresses of the VaultManager and RewardManager.\"}},\"getPoolDetails(address)\":{\"params\":{\"pool\":\"The address of the pool.\"},\"returns\":{\"_0\":\"Details of the specified pool.\"}},\"getPoolsByLender(address)\":{\"params\":{\"lender\":\"The address of the lender.\"},\"returns\":{\"_0\":\"An array of pool addresses.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getTotalPools()\":{\"returns\":{\"_0\":\"The total number of pools.\"}},\"getVaultForPool(address)\":{\"params\":{\"pool\":\"The address of the pool.\"},\"returns\":{\"_0\":\"The address of the vault linked to the pool.\"}},\"grantFactoryAccess(address)\":{\"params\":{\"factoryAddress\":\"The address of the factory to be granted access.\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"registerManagers(address,address)\":{\"params\":{\"_rewardManager\":\"Address of the RewardManager contract.\",\"_vaultManager\":\"Address of the VaultManager contract.\"}},\"registerPool(address,address,address,address,address,address,uint256,uint256,uint256,uint8)\":{\"params\":{\"assetToken\":\"The address of the asset token used as collateral.\",\"borrower\":\"The address of the borrower (if known at this point, otherwise zero).\",\"interestRate\":\"The interest rate of the loan.\",\"lender\":\"The address of the lender.\",\"loanAmount\":\"The amount of the loan.\",\"loanToken\":\"The address of the loan token.\",\"pool\":\"The address of the new pool.\",\"poolType\":\"The type of the pool (standard or flash).\",\"repaymentPeriod\":\"The period over which the loan is to be repaid.\",\"vault\":\"The address of the vault associated with the pool.\"}},\"registerVault(address,address)\":{\"details\":\"This function can only be called by authorized roles, typically the PoolFactory.\",\"params\":{\"pool\":\"The address of the pool for which the vault is being registered.\",\"vault\":\"The address of the newly created vault.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"title\":\"Pool Organizer for managing pools, vaults, and rewards.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deregisterPool(address)\":{\"notice\":\"Deregisters a pool from the organizer.\"},\"getManagers()\":{\"notice\":\"Returns the addresses of the VaultManager and RewardManager.\"},\"getPoolDetails(address)\":{\"notice\":\"Retrieves details for a specific pool.\"},\"getPoolsByLender(address)\":{\"notice\":\"Retrieves all pools associated with a specific lender.\"},\"getTotalPools()\":{\"notice\":\"Retrieves the total number of registered pools.\"},\"getVaultForPool(address)\":{\"notice\":\"Retrieves the vault associated with a specific pool.\"},\"grantFactoryAccess(address)\":{\"notice\":\"Grants factory access to manage pools.\"},\"registerManagers(address,address)\":{\"notice\":\"Registers the manager contracts for managing vaults and rewards.\"},\"registerPool(address,address,address,address,address,address,uint256,uint256,uint256,uint8)\":{\"notice\":\"Registers a new pool within the organizer.\"},\"registerVault(address,address)\":{\"notice\":\"Registers a vault for a given pool.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/protocol/PoolOrganizer.sol\":\"PoolOrganizer\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/contracts/interfaces/IPoolOrganizer.sol\":{\"keccak256\":\"0xd820fcf275d71dfa3f2e0d34dd11407c168f5831685596f4a7f6074fa4ec6663\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20ddf5fbc3c67df648c3df1468c716f1b78a291e9c45df69ac6ccd636c1b2cdd\",\"dweb:/ipfs/QmUA5sMAKQswnf3t6EzkjrAzoYArj6k7oCoieuaqFXP4rp\"]},\"contracts/contracts/interfaces/IRewardManager.sol\":{\"keccak256\":\"0xe3c69239d04d61f5342b5e7fe84efa65935b5068cdfef5d276baccaf947f6f05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b4e5103fc8600295e4fe33a713ebcdd6d83cf38903c4e6947b03f0a88766869\",\"dweb:/ipfs/QmRAnDKVZ6WndjDVvavBcrpkkrqUyZoSB3PYEMQVDTKiaB\"]},\"contracts/contracts/interfaces/IVaultManager.sol\":{\"keccak256\":\"0x5a025ecef74f49112c2479fc967e3c7761412348dc6ad129e7b79667a09cd699\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fae75e94df0a7ade68c3fc89ad8091784574e3005eb8a7044c6c9d29330117b7\",\"dweb:/ipfs/QmWjzKcKC8sHHdagpLQtw58bLD1TDaMHqheW8jMfw3vNwe\"]},\"contracts/contracts/protocol/PoolOrganizer.sol\":{\"keccak256\":\"0xab4d5b1d07d61caeadcb824b8bcbff836e9e12ddc1b413455e144345e0ad5dbe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ec1be464727d9993c16317eadfddfa6b2f36e5abfc59bdb2871552bdda45c16\",\"dweb:/ipfs/QmS6gba3GDFLZApJizP7eRFF9ty7t7rQtC5JJZ6EG899JK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 730,
								"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
								"label": "vaultManager",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IVaultManager)711"
							},
							{
								"astId": 733,
								"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
								"label": "rewardManager",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IRewardManager)673"
							},
							{
								"astId": 736,
								"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
								"label": "pools",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 741,
								"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
								"label": "poolDetails",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(PoolDetails)549_storage)"
							},
							{
								"astId": 746,
								"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
								"label": "lenderPools",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
							},
							{
								"astId": 750,
								"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
								"label": "poolVaults",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IRewardManager)673": {
								"encoding": "inplace",
								"label": "contract IRewardManager",
								"numberOfBytes": "20"
							},
							"t_contract(IVaultManager)711": {
								"encoding": "inplace",
								"label": "contract IVaultManager",
								"numberOfBytes": "20"
							},
							"t_enum(PoolType)527": {
								"encoding": "inplace",
								"label": "enum IPoolOrganizer.PoolType",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_array(t_address)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address[])",
								"numberOfBytes": "32",
								"value": "t_array(t_address)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(PoolDetails)549_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct IPoolOrganizer.PoolDetails)",
								"numberOfBytes": "32",
								"value": "t_struct(PoolDetails)549_storage"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(PoolDetails)549_storage": {
								"encoding": "inplace",
								"label": "struct IPoolOrganizer.PoolDetails",
								"members": [
									{
										"astId": 529,
										"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "lender",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 531,
										"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "borrower",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 533,
										"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "creationTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 535,
										"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "vault",
										"offset": 0,
										"slot": "3",
										"type": "t_address"
									},
									{
										"astId": 537,
										"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "loanToken",
										"offset": 0,
										"slot": "4",
										"type": "t_address"
									},
									{
										"astId": 539,
										"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "assetToken",
										"offset": 0,
										"slot": "5",
										"type": "t_address"
									},
									{
										"astId": 541,
										"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "loanAmount",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 543,
										"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "interestRate",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 545,
										"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "repaymentPeriod",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 548,
										"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "poolType",
										"offset": 0,
										"slot": "9",
										"type": "t_enum(PoolType)527"
									}
								],
								"numberOfBytes": "320"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deregisterPool(address)": {
								"notice": "Deregisters a pool from the organizer."
							},
							"getManagers()": {
								"notice": "Returns the addresses of the VaultManager and RewardManager."
							},
							"getPoolDetails(address)": {
								"notice": "Retrieves details for a specific pool."
							},
							"getPoolsByLender(address)": {
								"notice": "Retrieves all pools associated with a specific lender."
							},
							"getTotalPools()": {
								"notice": "Retrieves the total number of registered pools."
							},
							"getVaultForPool(address)": {
								"notice": "Retrieves the vault associated with a specific pool."
							},
							"grantFactoryAccess(address)": {
								"notice": "Grants factory access to manage pools."
							},
							"registerManagers(address,address)": {
								"notice": "Registers the manager contracts for managing vaults and rewards."
							},
							"registerPool(address,address,address,address,address,address,uint256,uint256,uint256,uint8)": {
								"notice": "Registers a new pool within the organizer."
							},
							"registerVault(address,address)": {
								"notice": "Registers a vault for a given pool."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							486
						],
						"ERC165": [
							510
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 487,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 486,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 511,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 510,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 486,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 510,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								510,
								522,
								378,
								486
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										509
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 509,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 468,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 468,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "356:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "373:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:1"
									},
									"src": "317:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:1"
									},
									"src": "552:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "877:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "899:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "934:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:1"
									},
									"src": "854:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1193:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1205:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1227:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1252:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:1"
									},
									"src": "1187:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1580:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1602:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1627:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:1"
									},
									"src": "1562:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1755:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1769:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1809:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:1"
									},
									"scope": 378,
									"src": "1738:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:1"
									},
									"scope": 378,
									"src": "2010:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2347:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2361:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:1"
									},
									"scope": 378,
									"src": "2328:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2641:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2655:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:1"
									},
									"scope": 378,
									"src": "2621:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3205:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3219:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 378,
									"src": "3183:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "225:3033:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3150:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							456
						]
					},
					"id": 457,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 456,
							"linearizedBaseContracts": [
								456
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 390,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 399,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 456,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 456,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 456,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 456,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 456,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 452,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 456,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 457,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								390,
								399
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							486
						]
					},
					"id": 487,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 458,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 459,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 486,
							"linearizedBaseContracts": [
								486
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 464,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 463,
												"id": 466,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 486,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 473,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 472,
												"id": 475,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 486,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 481,
												"id": 483,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 486,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 487,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							510
						],
						"IERC165": [
							522
						]
					},
					"id": 511,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 488,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 490,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 511,
							"sourceUnit": 523,
							"src": "140:38:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 489,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 522,
										"src": "148:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 492,
										"name": "IERC165",
										"nameLocations": [
											"687:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 522,
										"src": "687:7:4"
									},
									"id": 493,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:4"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 491,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:4",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 510,
							"linearizedBaseContracts": [
								510,
								522
							],
							"name": "ERC165",
							"nameLocation": "677:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										521
									],
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "844:64:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 501,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "861:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 503,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "881:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$522_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$522_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 502,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$522",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:4",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 500,
												"id": 507,
												"nodeType": "Return",
												"src": "854:47:4"
											}
										]
									},
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "789:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 495,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:4"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "838:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:4"
									},
									"scope": 510,
									"src": "762:146:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 511,
							"src": "659:251:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							522
						]
					},
					"id": 523,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 512,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 513,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:5",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 522,
							"linearizedBaseContracts": [
								522
							],
							"name": "IERC165",
							"nameLocation": "431:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 521,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "817:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 515,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:5"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "860:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 518,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:5"
									},
									"scope": 522,
									"src": "790:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 523,
							"src": "421:447:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:5"
				},
				"id": 5
			},
			"contracts/contracts/interfaces/IPoolOrganizer.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/interfaces/IPoolOrganizer.sol",
					"exportedSymbols": {
						"IPoolOrganizer": [
							626
						]
					},
					"id": 627,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 524,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPoolOrganizer",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 626,
							"linearizedBaseContracts": [
								626
							],
							"name": "IPoolOrganizer",
							"nameLocation": "70:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IPoolOrganizer.PoolType",
									"id": 527,
									"members": [
										{
											"id": 525,
											"name": "STANDARD",
											"nameLocation": "108:8:6",
											"nodeType": "EnumValue",
											"src": "108:8:6"
										},
										{
											"id": 526,
											"name": "FLASH_LOAN",
											"nameLocation": "118:10:6",
											"nodeType": "EnumValue",
											"src": "118:10:6"
										}
									],
									"name": "PoolType",
									"nameLocation": "97:8:6",
									"nodeType": "EnumDefinition",
									"src": "92:38:6"
								},
								{
									"canonicalName": "IPoolOrganizer.PoolDetails",
									"id": 549,
									"members": [
										{
											"constant": false,
											"id": 529,
											"mutability": "mutable",
											"name": "lender",
											"nameLocation": "176:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 549,
											"src": "168:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 528,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "168:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 531,
											"mutability": "mutable",
											"name": "borrower",
											"nameLocation": "201:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 549,
											"src": "193:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 530,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "193:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 533,
											"mutability": "mutable",
											"name": "creationTime",
											"nameLocation": "228:12:6",
											"nodeType": "VariableDeclaration",
											"scope": 549,
											"src": "220:20:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 532,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "220:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 535,
											"mutability": "mutable",
											"name": "vault",
											"nameLocation": "259:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 549,
											"src": "251:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 534,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "251:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 537,
											"mutability": "mutable",
											"name": "loanToken",
											"nameLocation": "283:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 549,
											"src": "275:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 536,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "275:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 539,
											"mutability": "mutable",
											"name": "assetToken",
											"nameLocation": "311:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 549,
											"src": "303:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 538,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "303:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 541,
											"mutability": "mutable",
											"name": "loanAmount",
											"nameLocation": "340:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 549,
											"src": "332:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 540,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "332:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 543,
											"mutability": "mutable",
											"name": "interestRate",
											"nameLocation": "369:12:6",
											"nodeType": "VariableDeclaration",
											"scope": 549,
											"src": "361:20:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 542,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "361:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 545,
											"mutability": "mutable",
											"name": "repaymentPeriod",
											"nameLocation": "400:15:6",
											"nodeType": "VariableDeclaration",
											"scope": 549,
											"src": "392:23:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 544,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "392:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 548,
											"mutability": "mutable",
											"name": "poolType",
											"nameLocation": "435:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 549,
											"src": "426:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_PoolType_$527",
												"typeString": "enum IPoolOrganizer.PoolType"
											},
											"typeName": {
												"id": 547,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 546,
													"name": "PoolType",
													"nameLocations": [
														"426:8:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 527,
													"src": "426:8:6"
												},
												"referencedDeclaration": 527,
												"src": "426:8:6",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PoolType_$527",
													"typeString": "enum IPoolOrganizer.PoolType"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolDetails",
									"nameLocation": "145:11:6",
									"nodeType": "StructDefinition",
									"scope": 626,
									"src": "138:354:6",
									"visibility": "public"
								},
								{
									"functionSelector": "2437769a",
									"id": 573,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerPool",
									"nameLocation": "509:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "540:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "532:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "532:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "563:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "555:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "borrower",
												"nameLocation": "588:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "580:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "615:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "607:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "607:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "loanToken",
												"nameLocation": "639:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "631:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "assetToken",
												"nameLocation": "667:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "659:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "loanAmount",
												"nameLocation": "696:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "688:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "688:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "interestRate",
												"nameLocation": "725:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "717:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "repaymentPeriod",
												"nameLocation": "756:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "748:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "poolType",
												"nameLocation": "791:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "782:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PoolType_$527",
													"typeString": "enum IPoolOrganizer.PoolType"
												},
												"typeName": {
													"id": 569,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 568,
														"name": "PoolType",
														"nameLocations": [
															"782:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 527,
														"src": "782:8:6"
													},
													"referencedDeclaration": 527,
													"src": "782:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PoolType_$527",
														"typeString": "enum IPoolOrganizer.PoolType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "521:323:6"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "853:0:6"
									},
									"scope": 626,
									"src": "500:354:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7e72c7d7",
									"id": 578,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deregisterPool",
									"nameLocation": "871:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "894:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "886:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "886:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "885:14:6"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:0:6"
									},
									"scope": 626,
									"src": "862:47:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d3ffe67a",
									"id": 583,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalPools",
									"nameLocation": "924:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "937:2:6"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "963:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "963:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "962:9:6"
									},
									"scope": 626,
									"src": "915:57:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "24a44efb",
									"id": 591,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolsByLender",
									"nameLocation": "987:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "1012:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "1004:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:16:6"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "1043:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 587,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1043:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 588,
													"nodeType": "ArrayTypeName",
													"src": "1043:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:18:6"
									},
									"scope": 626,
									"src": "978:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d3e90fa0",
									"id": 599,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolDetails",
									"nameLocation": "1076:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1099:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "1091:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1091:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1090:14:6"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "1128:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolDetails_$549_memory_ptr",
													"typeString": "struct IPoolOrganizer.PoolDetails"
												},
												"typeName": {
													"id": 596,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 595,
														"name": "PoolDetails",
														"nameLocations": [
															"1128:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 549,
														"src": "1128:11:6"
													},
													"referencedDeclaration": 549,
													"src": "1128:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolDetails_$549_storage_ptr",
														"typeString": "struct IPoolOrganizer.PoolDetails"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1127:20:6"
									},
									"scope": 626,
									"src": "1067:81:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7570e389",
									"id": 606,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getVaultForPool",
									"nameLocation": "1163:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1187:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "1179:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1179:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1178:14:6"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "1216:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1216:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1215:9:6"
									},
									"scope": 626,
									"src": "1154:71:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5d102df7",
									"id": 611,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantFactoryAccess",
									"nameLocation": "1240:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "factoryAddress",
												"nameLocation": "1267:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "1259:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1259:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:24:6"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:6"
									},
									"scope": 626,
									"src": "1231:61:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "05c4fdf9",
									"id": 618,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerVault",
									"nameLocation": "1307:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1329:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "1321:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1321:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "1342:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "1334:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1334:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1320:28:6"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1357:0:6"
									},
									"scope": 626,
									"src": "1298:60:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c489579d",
									"id": 625,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerManagers",
									"nameLocation": "1373:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "_vaultManager",
												"nameLocation": "1398:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "1390:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1390:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "_rewardManager",
												"nameLocation": "1421:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "1413:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1413:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1389:47:6"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1445:0:6"
									},
									"scope": 626,
									"src": "1364:82:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 627,
							"src": "60:1389:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1418:6"
				},
				"id": 6
			},
			"contracts/contracts/interfaces/IRewardManager.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/interfaces/IRewardManager.sol",
					"exportedSymbols": {
						"IERC20": [
							456
						],
						"IRewardManager": [
							673
						]
					},
					"id": 674,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 628,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 629,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 674,
							"sourceUnit": 457,
							"src": "60:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRewardManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 630,
								"nodeType": "StructuredDocumentation",
								"src": "120:134:7",
								"text": "@title IRewardManager\n @dev Interface for managing rewards across all active loan pools, allowing for dynamic reward tokens."
							},
							"fullyImplemented": false,
							"id": 673,
							"linearizedBaseContracts": [
								673
							],
							"name": "IRewardManager",
							"nameLocation": "264:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "286:165:7",
										"text": "@notice Sets the reward token for a specific pool.\n @param pool The address of the TuliaPool.\n @param rewardToken The reward token for this pool."
									},
									"functionSelector": "e5c8c572",
									"id": 638,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setRewardToken",
									"nameLocation": "466:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "489:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "481:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "481:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "rewardToken",
												"nameLocation": "503:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "495:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "480:35:7"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "524:0:7"
									},
									"scope": 673,
									"src": "457:68:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "533:210:7",
										"text": "@notice Registers a pool to be eligible for rewards, initializing its reward token.\n @param pool The address of the TuliaPool to register.\n @param rewardToken The reward token for this pool."
									},
									"functionSelector": "7286e5e5",
									"id": 646,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerPool",
									"nameLocation": "758:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "779:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "771:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "771:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "rewardToken",
												"nameLocation": "793:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "785:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "785:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "770:35:7"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "814:0:7"
									},
									"scope": 673,
									"src": "749:66:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "823:135:7",
										"text": "@notice Accrues rewards for a pool based on its loan amount since the loan was funded.\n @param pool The TuliaPool instance."
									},
									"functionSelector": "978e08d7",
									"id": 652,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "accrueReward",
									"nameLocation": "973:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "994:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "986:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "986:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "985:14:7"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1008:0:7"
									},
									"scope": 673,
									"src": "964:45:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "1017:121:7",
										"text": "@notice Allows a pool to claim its accrued rewards.\n @param pool The TuliaPool instance claiming its rewards."
									},
									"functionSelector": "ef5cfb8c",
									"id": 658,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewards",
									"nameLocation": "1153:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1174:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "1166:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1166:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1165:14:7"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1188:0:7"
									},
									"scope": 673,
									"src": "1144:45:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "1197:184:7",
										"text": "@notice Retrieves the total accrued rewards for a specified pool.\n @param pool The address of the TuliaPool.\n @return reward The total accrued rewards for the pool."
									},
									"functionSelector": "2552aa1f",
									"id": 666,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAccruedRewards",
									"nameLocation": "1396:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1422:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "1414:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1414:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1413:14:7"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1459:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "1451:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1451:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1450:16:7"
									},
									"scope": 673,
									"src": "1387:80:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "1475:129:7",
										"text": "@notice Deregisters a pool when a loan is closed.\n @param pool Address of the pool whose vault is to be deregistered."
									},
									"functionSelector": "7e72c7d7",
									"id": 672,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deregisterPool",
									"nameLocation": "1619:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1642:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "1634:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1634:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1633:14:7"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1656:0:7"
									},
									"scope": 673,
									"src": "1610:47:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 674,
							"src": "254:1411:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1634:7"
				},
				"id": 7
			},
			"contracts/contracts/interfaces/IVaultManager.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/interfaces/IVaultManager.sol",
					"exportedSymbols": {
						"IVaultManager": [
							711
						]
					},
					"id": 712,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 675,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IVaultManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 676,
								"nodeType": "StructuredDocumentation",
								"src": "60:77:8",
								"text": "@title IVaultManager\n @dev Interface for the VaultManager contract."
							},
							"fullyImplemented": false,
							"id": 711,
							"linearizedBaseContracts": [
								711
							],
							"name": "IVaultManager",
							"nameLocation": "147:13:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "168:162:8",
										"text": "@notice Registers a pool's vault upon creation.\n @param pool Address of the pool.\n @param vault Address of the vault associated with the pool."
									},
									"functionSelector": "9c515629",
									"id": 684,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerPoolVault",
									"nameLocation": "345:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "371:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "363:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "363:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "385:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "377:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "377:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "362:29:8"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "400:0:8"
									},
									"scope": 711,
									"src": "336:65:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "409:99:8",
										"text": "@notice Deregisters a pool's vault upon loan closure.\n @param pool Address of the pool."
									},
									"functionSelector": "38e270ed",
									"id": 690,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deregisterVault",
									"nameLocation": "523:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "547:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "539:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "539:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:14:8"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "561:0:8"
									},
									"scope": 711,
									"src": "514:48:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "570:267:8",
										"text": "@notice Distributes accrued interest from a vault to a specified recipient.\n @param pool Address of the pool initiating the interest payout.\n @param to Recipient of the interest payment.\n @param amount Amount of interest to be distributed."
									},
									"functionSelector": "e0f0707f",
									"id": 700,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "distributeInterest",
									"nameLocation": "852:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "879:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "871:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "871:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "893:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "885:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "905:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "897:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "897:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "870:42:8"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "921:0:8"
									},
									"scope": 711,
									"src": "843:79:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 701,
										"nodeType": "StructuredDocumentation",
										"src": "930:297:8",
										"text": "@notice Calculates the claimable interest for a user based on the pool's loan configuration.\n @param pool Address of the pool for which to calculate interest.\n @param user Address of the user (borrower) claiming interest.\n @return amount The calculated interest amount."
									},
									"functionSelector": "1f0249f6",
									"id": 710,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateClaimableInterest",
									"nameLocation": "1242:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1277:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "1269:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1269:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1291:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "1283:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1268:28:8"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "1320:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1320:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1319:9:8"
									},
									"scope": 711,
									"src": "1233:96:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 712,
							"src": "137:1195:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1301:8"
				},
				"id": 8
			},
			"contracts/contracts/protocol/PoolOrganizer.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/protocol/PoolOrganizer.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							486
						],
						"ERC165": [
							510
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							456
						],
						"IPoolOrganizer": [
							626
						],
						"IRewardManager": [
							673
						],
						"IVaultManager": [
							711
						],
						"PoolOrganizer": [
							1283
						]
					},
					"id": 1284,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 713,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 714,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1284,
							"sourceUnit": 296,
							"src": "57:58:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/interfaces/IPoolOrganizer.sol",
							"file": "../interfaces/IPoolOrganizer.sol",
							"id": 715,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1284,
							"sourceUnit": 627,
							"src": "116:42:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/interfaces/IVaultManager.sol",
							"file": "../interfaces/IVaultManager.sol",
							"id": 716,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1284,
							"sourceUnit": 712,
							"src": "159:41:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/interfaces/IRewardManager.sol",
							"file": "../interfaces/IRewardManager.sol",
							"id": 717,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1284,
							"sourceUnit": 674,
							"src": "201:42:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 719,
										"name": "AccessControl",
										"nameLocations": [
											"447:13:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "447:13:9"
									},
									"id": 720,
									"nodeType": "InheritanceSpecifier",
									"src": "447:13:9"
								},
								{
									"baseName": {
										"id": 721,
										"name": "IPoolOrganizer",
										"nameLocations": [
											"462:14:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 626,
										"src": "462:14:9"
									},
									"id": 722,
									"nodeType": "InheritanceSpecifier",
									"src": "462:14:9"
								}
							],
							"canonicalName": "PoolOrganizer",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 718,
								"nodeType": "StructuredDocumentation",
								"src": "245:176:9",
								"text": "@title Pool Organizer for managing pools, vaults, and rewards.\n @dev Implements access control and management for pool lifecycle and integration with external managers."
							},
							"fullyImplemented": true,
							"id": 1283,
							"linearizedBaseContracts": [
								1283,
								626,
								295,
								510,
								522,
								378,
								486
							],
							"name": "PoolOrganizer",
							"nameLocation": "430:13:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "56d73568",
									"id": 727,
									"mutability": "constant",
									"name": "POOL_MANAGER_ROLE",
									"nameLocation": "507:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 1283,
									"src": "483:74:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 723,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "483:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "504f4f4c5f4d414e414745525f524f4c45",
												"id": 725,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "537:19:9",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98aff",
													"typeString": "literal_string \"POOL_MANAGER_ROLE\""
												},
												"value": "POOL_MANAGER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98aff",
													"typeString": "literal_string \"POOL_MANAGER_ROLE\""
												}
											],
											"id": 724,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "527:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 726,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "527:30:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8a4adf24",
									"id": 730,
									"mutability": "mutable",
									"name": "vaultManager",
									"nameLocation": "585:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1283,
									"src": "564:33:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IVaultManager_$711",
										"typeString": "contract IVaultManager"
									},
									"typeName": {
										"id": 729,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 728,
											"name": "IVaultManager",
											"nameLocations": [
												"564:13:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 711,
											"src": "564:13:9"
										},
										"referencedDeclaration": 711,
										"src": "564:13:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IVaultManager_$711",
											"typeString": "contract IVaultManager"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0f4ef8a6",
									"id": 733,
									"mutability": "mutable",
									"name": "rewardManager",
									"nameLocation": "625:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1283,
									"src": "603:35:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IRewardManager_$673",
										"typeString": "contract IRewardManager"
									},
									"typeName": {
										"id": 732,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 731,
											"name": "IRewardManager",
											"nameLocations": [
												"603:14:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 673,
											"src": "603:14:9"
										},
										"referencedDeclaration": 673,
										"src": "603:14:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IRewardManager_$673",
											"typeString": "contract IRewardManager"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 736,
									"mutability": "mutable",
									"name": "pools",
									"nameLocation": "663:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 1283,
									"src": "645:23:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 734,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "645:7:9",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 735,
										"nodeType": "ArrayTypeName",
										"src": "645:9:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 741,
									"mutability": "mutable",
									"name": "poolDetails",
									"nameLocation": "714:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1283,
									"src": "674:51:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$549_storage_$",
										"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails)"
									},
									"typeName": {
										"id": 740,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 737,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "682:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "674:31:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$549_storage_$",
											"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 739,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 738,
												"name": "PoolDetails",
												"nameLocations": [
													"693:11:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 549,
												"src": "693:11:9"
											},
											"referencedDeclaration": 549,
											"src": "693:11:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolDetails_$549_storage_ptr",
												"typeString": "struct IPoolOrganizer.PoolDetails"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 746,
									"mutability": "mutable",
									"name": "lenderPools",
									"nameLocation": "769:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1283,
									"src": "731:49:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
										"typeString": "mapping(address => address[])"
									},
									"typeName": {
										"id": 745,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 742,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "739:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "731:29:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
											"typeString": "mapping(address => address[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 743,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "750:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"id": 744,
											"nodeType": "ArrayTypeName",
											"src": "750:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "1e4966ab",
									"id": 750,
									"mutability": "mutable",
									"name": "poolVaults",
									"nameLocation": "821:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1283,
									"src": "786:45:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 749,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 747,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "794:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "786:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 748,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "805:7:9",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "838:43:9",
										"text": "@dev Emitted when a pool is registered."
									},
									"eventSelector": "8f723e49dc038e67c41b41307a1e0c65653d50125a0c474a21ac32d9a0b24d2b",
									"id": 764,
									"name": "PoolRegistered",
									"nameLocation": "892:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "932:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "916:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "916:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"indexed": true,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "962:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "946:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"indexed": true,
												"mutability": "mutable",
												"name": "borrower",
												"nameLocation": "994:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "978:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "978:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"indexed": false,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "1020:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "1012:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"indexed": false,
												"mutability": "mutable",
												"name": "poolType",
												"nameLocation": "1044:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "1035:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PoolType_$527",
													"typeString": "enum IPoolOrganizer.PoolType"
												},
												"typeName": {
													"id": 761,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 760,
														"name": "PoolType",
														"nameLocations": [
															"1035:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 527,
														"src": "1035:8:9"
													},
													"referencedDeclaration": 527,
													"src": "1035:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PoolType_$527",
														"typeString": "enum IPoolOrganizer.PoolType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:152:9"
									},
									"src": "886:173:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "1064:45:9",
										"text": "@dev Emitted when a pool is deregistered."
									},
									"eventSelector": "334d0b2111287dfddebe4b4c1c5af3ae644909d7fcd024377bf601e236ed5abb",
									"id": 769,
									"name": "PoolDeregistered",
									"nameLocation": "1120:16:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1153:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "1137:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1137:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1136:22:9"
									},
									"src": "1114:45:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 770,
										"nodeType": "StructuredDocumentation",
										"src": "1164:46:9",
										"text": "@dev Emitted when managers are registered."
									},
									"eventSelector": "8fc18cc172f74c81235145b7927190d2bd0e351fc45bfb17bb572593273cef21",
									"id": 776,
									"name": "ManagerRegistered",
									"nameLocation": "1221:17:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"indexed": false,
												"mutability": "mutable",
												"name": "vaultManager",
												"nameLocation": "1247:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "1239:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1239:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardManager",
												"nameLocation": "1269:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "1261:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1261:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1238:45:9"
									},
									"src": "1215:69:9"
								},
								{
									"anonymous": false,
									"eventSelector": "f8ee9039d8e4d43426638703c71517008894fdea742bb2d2dbff5a46fb07abdb",
									"id": 782,
									"name": "VaultRegistered",
									"nameLocation": "1296:15:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1328:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "1312:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1312:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"indexed": true,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "1350:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "1334:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1334:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1311:45:9"
									},
									"src": "1290:67:9"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "1377:110:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 786,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1398:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 787,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1418:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1422:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1418:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 785,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1387:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1387:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "1387:42:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 792,
															"name": "POOL_MANAGER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "1450:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 793,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1469:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1469:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 791,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1439:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1439:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "1439:41:9"
											}
										]
									},
									"id": 798,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1374:2:9"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1377:0:9"
									},
									"scope": 1283,
									"src": "1363:124:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										573
									],
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "2536:736:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 827,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "2554:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2570:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2562:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 828,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2562:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2562:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2554:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c20616464726573732063616e6e6f74206265207a65726f",
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2574:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87b863ecb9e24e5ca6ed73ab80a99e3ca6cb5645b7108a8418eddd7225dd4578",
																"typeString": "literal_string \"Pool address cannot be zero\""
															},
															"value": "Pool address cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87b863ecb9e24e5ca6ed73ab80a99e3ca6cb5645b7108a8418eddd7225dd4578",
																"typeString": "literal_string \"Pool address cannot be zero\""
															}
														],
														"id": 826,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2546:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2546:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "ExpressionStatement",
												"src": "2546:58:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 837,
																		"name": "poolDetails",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 741,
																		"src": "2635:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$549_storage_$",
																			"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
																		}
																	},
																	"id": 839,
																	"indexExpression": {
																		"id": 838,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "2647:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2635:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolDetails_$549_storage",
																		"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
																	}
																},
																"id": 840,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2653:6:9",
																"memberName": "lender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 529,
																"src": "2635:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2671:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2663:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 841,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2663:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2663:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2635:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c20616c72656164792072656769737465726564",
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2687:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc861dfb3d1e0446599e73c98b2e7d579c1ecdb9e65a09f726c97d864f2bf3dd",
																"typeString": "literal_string \"Pool already registered\""
															},
															"value": "Pool already registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc861dfb3d1e0446599e73c98b2e7d579c1ecdb9e65a09f726c97d864f2bf3dd",
																"typeString": "literal_string \"Pool already registered\""
															}
														],
														"id": 836,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2614:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2614:108:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "2614:108:9"
											},
											{
												"expression": {
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 849,
															"name": "poolDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "2733:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$549_storage_$",
																"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
															}
														},
														"id": 851,
														"indexExpression": {
															"id": 850,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "2745:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2733:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolDetails_$549_storage",
															"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 853,
																"name": "lender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 803,
																"src": "2787:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 854,
																"name": "borrower",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "2817:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 855,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2853:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2859:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2853:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 857,
																"name": "vault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "2889:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 858,
																"name": "loanToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 809,
																"src": "2919:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 859,
																"name": "assetToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "2954:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 860,
																"name": "loanAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 813,
																"src": "2990:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 861,
																"name": "interestRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 815,
																"src": "3028:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 862,
																"name": "repaymentPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 817,
																"src": "3071:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 863,
																"name": "poolType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 820,
																"src": "3110:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PoolType_$527",
																	"typeString": "enum IPoolOrganizer.PoolType"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_enum$_PoolType_$527",
																	"typeString": "enum IPoolOrganizer.PoolType"
																}
															],
															"id": 852,
															"name": "PoolDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "2753:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_PoolDetails_$549_storage_ptr_$",
																"typeString": "type(struct IPoolOrganizer.PoolDetails storage pointer)"
															}
														},
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"2779:6:9",
															"2807:8:9",
															"2839:12:9",
															"2882:5:9",
															"2908:9:9",
															"2942:10:9",
															"2978:10:9",
															"3014:12:9",
															"3054:15:9",
															"3100:8:9"
														],
														"names": [
															"lender",
															"borrower",
															"creationTime",
															"vault",
															"loanToken",
															"assetToken",
															"loanAmount",
															"interestRate",
															"repaymentPeriod",
															"poolType"
														],
														"nodeType": "FunctionCall",
														"src": "2753:376:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolDetails_$549_memory_ptr",
															"typeString": "struct IPoolOrganizer.PoolDetails memory"
														}
													},
													"src": "2733:396:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolDetails_$549_storage",
														"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "2733:396:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 871,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "3164:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 867,
																"name": "lenderPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "3139:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 869,
															"indexExpression": {
																"id": 868,
																"name": "lender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 803,
																"src": "3151:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3139:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3159:4:9",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3139:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3139:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "3139:30:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 877,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "3190:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 874,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "3179:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3185:4:9",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3179:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3179:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 879,
												"nodeType": "ExpressionStatement",
												"src": "3179:16:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 881,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "3225:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 882,
															"name": "lender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "3231:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 883,
															"name": "borrower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "3239:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 884,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "3249:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 885,
															"name": "poolType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "3256:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_PoolType_$527",
																"typeString": "enum IPoolOrganizer.PoolType"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_enum$_PoolType_$527",
																"typeString": "enum IPoolOrganizer.PoolType"
															}
														],
														"id": 880,
														"name": "PoolRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "3210:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_enum$_PoolType_$527_$returns$__$",
															"typeString": "function (address,address,address,address,enum IPoolOrganizer.PoolType)"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3210:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 887,
												"nodeType": "EmitStatement",
												"src": "3205:60:9"
											}
										]
									},
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "1493:705:9",
										"text": "@notice Registers a new pool within the organizer.\n @param pool The address of the new pool.\n @param lender The address of the lender.\n @param borrower The address of the borrower (if known at this point, otherwise zero).\n @param vault The address of the vault associated with the pool.\n @param loanToken The address of the loan token.\n @param assetToken The address of the asset token used as collateral.\n @param loanAmount The amount of the loan.\n @param interestRate The interest rate of the loan.\n @param repaymentPeriod The period over which the loan is to be repaid.\n @param poolType The type of the pool (standard or flash)."
									},
									"functionSelector": "2437769a",
									"id": 889,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 823,
													"name": "POOL_MANAGER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 727,
													"src": "2517:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 824,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 822,
												"name": "onlyRole",
												"nameLocations": [
													"2508:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2508:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2508:27:9"
										}
									],
									"name": "registerPool",
									"nameLocation": "2212:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "2242:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "2234:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2234:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "2264:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "2256:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2256:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "borrower",
												"nameLocation": "2288:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "2280:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2280:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "2314:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "2306:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2306:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "loanToken",
												"nameLocation": "2337:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "2329:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2329:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "assetToken",
												"nameLocation": "2364:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "2356:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "loanAmount",
												"nameLocation": "2392:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "2384:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2384:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "interestRate",
												"nameLocation": "2420:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "2412:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2412:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "repaymentPeriod",
												"nameLocation": "2450:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "2442:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2442:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "poolType",
												"nameLocation": "2484:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "2475:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PoolType_$527",
													"typeString": "enum IPoolOrganizer.PoolType"
												},
												"typeName": {
													"id": 819,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 818,
														"name": "PoolType",
														"nameLocations": [
															"2475:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 527,
														"src": "2475:8:9"
													},
													"referencedDeclaration": 527,
													"src": "2475:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PoolType_$527",
														"typeString": "enum IPoolOrganizer.PoolType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2224:274:9"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2536:0:9"
									},
									"scope": 1283,
									"src": "2203:1069:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										578
									],
									"body": {
										"id": 936,
										"nodeType": "Block",
										"src": "3467:301:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 899,
																		"name": "poolDetails",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 741,
																		"src": "3485:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$549_storage_$",
																			"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
																		}
																	},
																	"id": 901,
																	"indexExpression": {
																		"id": 900,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 892,
																		"src": "3497:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3485:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolDetails_$549_storage",
																		"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
																	}
																},
																"id": 902,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3503:6:9",
																"memberName": "lender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 529,
																"src": "3485:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3521:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3513:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 903,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3513:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3513:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3485:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c206e6f742072656769737465726564",
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3525:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4223e50a367045d38bb02066828a03f85319e396cac02a270481328c4439b7c",
																"typeString": "literal_string \"Pool not registered\""
															},
															"value": "Pool not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4223e50a367045d38bb02066828a03f85319e396cac02a270481328c4439b7c",
																"typeString": "literal_string \"Pool not registered\""
															}
														],
														"id": 898,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3477:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3477:70:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 910,
												"nodeType": "ExpressionStatement",
												"src": "3477:70:9"
											},
											{
												"assignments": [
													912
												],
												"declarations": [
													{
														"constant": false,
														"id": 912,
														"mutability": "mutable",
														"name": "lender",
														"nameLocation": "3566:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 936,
														"src": "3558:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 911,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3558:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 917,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 913,
															"name": "poolDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "3575:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$549_storage_$",
																"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
															}
														},
														"id": 915,
														"indexExpression": {
															"id": 914,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "3587:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3575:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolDetails_$549_storage",
															"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3593:6:9",
													"memberName": "lender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 529,
													"src": "3575:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3558:41:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 919,
															"name": "lender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "3636:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 920,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "3644:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 918,
														"name": "_removePoolFromLenderArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "3609:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3609:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "3609:40:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 924,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "3684:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 923,
														"name": "_removePoolFromMainArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "3659:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3659:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "3659:30:9"
											},
											{
												"expression": {
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "3700:24:9",
													"subExpression": {
														"baseExpression": {
															"id": 927,
															"name": "poolDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "3707:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$549_storage_$",
																"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
															}
														},
														"id": 929,
														"indexExpression": {
															"id": 928,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "3719:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3707:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolDetails_$549_storage",
															"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 931,
												"nodeType": "ExpressionStatement",
												"src": "3700:24:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 933,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "3756:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 932,
														"name": "PoolDeregistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "3739:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3739:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 935,
												"nodeType": "EmitStatement",
												"src": "3734:27:9"
											}
										]
									},
									"documentation": {
										"id": 890,
										"nodeType": "StructuredDocumentation",
										"src": "3278:109:9",
										"text": "@notice Deregisters a pool from the organizer.\n @param pool The address of the pool to deregister."
									},
									"functionSelector": "7e72c7d7",
									"id": 937,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 895,
													"name": "POOL_MANAGER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 727,
													"src": "3448:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 896,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 894,
												"name": "onlyRole",
												"nameLocations": [
													"3439:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "3439:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3439:27:9"
										}
									],
									"name": "deregisterPool",
									"nameLocation": "3401:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "3424:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "3416:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3416:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3415:14:9"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3467:0:9"
									},
									"scope": 1283,
									"src": "3392:376:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										625
									],
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "4122:421:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 949,
																"name": "_vaultManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 940,
																"src": "4153:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4178:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4170:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 950,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4170:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 953,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4170:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4153:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5661756c744d616e616765722063616e6e6f74206265207a65726f2061646472657373",
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4194:37:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3300f91172421bdc36f79d184a3d6d7dc2e019f7fb0814aeb4306f4cacbe452e",
																"typeString": "literal_string \"VaultManager cannot be zero address\""
															},
															"value": "VaultManager cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3300f91172421bdc36f79d184a3d6d7dc2e019f7fb0814aeb4306f4cacbe452e",
																"typeString": "literal_string \"VaultManager cannot be zero address\""
															}
														],
														"id": 948,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4132:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4132:109:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 957,
												"nodeType": "ExpressionStatement",
												"src": "4132:109:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 959,
																"name": "_rewardManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "4272:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4298:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4290:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 960,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4290:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4290:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4272:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265776172644d616e616765722063616e6e6f74206265207a65726f2061646472657373",
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4314:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fd60161d2dbc5f20e9acfa92ab57db75891d1d8ebbf7459220687d0a65d0b331",
																"typeString": "literal_string \"RewardManager cannot be zero address\""
															},
															"value": "RewardManager cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fd60161d2dbc5f20e9acfa92ab57db75891d1d8ebbf7459220687d0a65d0b331",
																"typeString": "literal_string \"RewardManager cannot be zero address\""
															}
														],
														"id": 958,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4251:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4251:111:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "4251:111:9"
											},
											{
												"expression": {
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 968,
														"name": "vaultManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "4373:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IVaultManager_$711",
															"typeString": "contract IVaultManager"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 970,
																"name": "_vaultManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 940,
																"src": "4402:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 969,
															"name": "IVaultManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "4388:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IVaultManager_$711_$",
																"typeString": "type(contract IVaultManager)"
															}
														},
														"id": 971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4388:28:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IVaultManager_$711",
															"typeString": "contract IVaultManager"
														}
													},
													"src": "4373:43:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IVaultManager_$711",
														"typeString": "contract IVaultManager"
													}
												},
												"id": 973,
												"nodeType": "ExpressionStatement",
												"src": "4373:43:9"
											},
											{
												"expression": {
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 974,
														"name": "rewardManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "4426:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IRewardManager_$673",
															"typeString": "contract IRewardManager"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 976,
																"name": "_rewardManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "4457:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 975,
															"name": "IRewardManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "4442:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IRewardManager_$673_$",
																"typeString": "type(contract IRewardManager)"
															}
														},
														"id": 977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4442:30:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IRewardManager_$673",
															"typeString": "contract IRewardManager"
														}
													},
													"src": "4426:46:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IRewardManager_$673",
														"typeString": "contract IRewardManager"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "4426:46:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 981,
															"name": "_vaultManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "4506:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 982,
															"name": "_rewardManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "4521:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 980,
														"name": "ManagerRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "4488:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4488:48:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 984,
												"nodeType": "EmitStatement",
												"src": "4483:53:9"
											}
										]
									},
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "3774:212:9",
										"text": "@notice Registers the manager contracts for managing vaults and rewards.\n @param _vaultManager Address of the VaultManager contract.\n @param _rewardManager Address of the RewardManager contract."
									},
									"functionSelector": "c489579d",
									"id": 986,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 945,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "4098:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 946,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 944,
												"name": "onlyRole",
												"nameLocations": [
													"4089:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4089:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4089:28:9"
										}
									],
									"name": "registerManagers",
									"nameLocation": "4000:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "_vaultManager",
												"nameLocation": "4025:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "4017:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4017:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "_rewardManager",
												"nameLocation": "4048:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "4040:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4040:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4016:47:9"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4122:0:9"
									},
									"scope": 1283,
									"src": "3991:552:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "4778:71:9",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 996,
																	"name": "vaultManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 730,
																	"src": "4804:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IVaultManager_$711",
																		"typeString": "contract IVaultManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IVaultManager_$711",
																		"typeString": "contract IVaultManager"
																	}
																],
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4796:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 994,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4796:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4796:21:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1000,
																	"name": "rewardManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "4827:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IRewardManager_$673",
																		"typeString": "contract IRewardManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IRewardManager_$673",
																		"typeString": "contract IRewardManager"
																	}
																],
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4819:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 998,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4819:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4819:22:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 1002,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4795:47:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
														"typeString": "tuple(address,address)"
													}
												},
												"functionReturnParameters": 993,
												"id": 1003,
												"nodeType": "Return",
												"src": "4788:54:9"
											}
										]
									},
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "4549:160:9",
										"text": "@notice Returns the addresses of the VaultManager and RewardManager.\n @return A tuple containing the addresses of the VaultManager and RewardManager."
									},
									"functionSelector": "a8d088bb",
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getManagers",
									"nameLocation": "4723:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4734:2:9"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "4760:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4760:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "4769:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4769:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4759:18:9"
									},
									"scope": 1283,
									"src": "4714:135:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										583
									],
									"body": {
										"id": 1014,
										"nodeType": "Block",
										"src": "5019:36:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1011,
														"name": "pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "5036:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5042:6:9",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "5036:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1010,
												"id": 1013,
												"nodeType": "Return",
												"src": "5029:19:9"
											}
										]
									},
									"documentation": {
										"id": 1006,
										"nodeType": "StructuredDocumentation",
										"src": "4855:102:9",
										"text": "@notice Retrieves the total number of registered pools.\n @return The total number of pools."
									},
									"functionSelector": "d3ffe67a",
									"id": 1015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalPools",
									"nameLocation": "4971:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4984:2:9"
									},
									"returnParameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "5010:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5010:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5009:9:9"
									},
									"scope": 1283,
									"src": "4962:93:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										591
									],
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "5336:43:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1024,
														"name": "lenderPools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "5353:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
															"typeString": "mapping(address => address[] storage ref)"
														}
													},
													"id": 1026,
													"indexExpression": {
														"id": 1025,
														"name": "lender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "5365:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5353:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 1023,
												"id": 1027,
												"nodeType": "Return",
												"src": "5346:26:9"
											}
										]
									},
									"documentation": {
										"id": 1016,
										"nodeType": "StructuredDocumentation",
										"src": "5061:159:9",
										"text": "@notice Retrieves all pools associated with a specific lender.\n @param lender The address of the lender.\n @return An array of pool addresses."
									},
									"functionSelector": "24a44efb",
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolsByLender",
									"nameLocation": "5234:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "5259:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "5251:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5251:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5250:16:9"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "5314:16:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1020,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5314:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1021,
													"nodeType": "ArrayTypeName",
													"src": "5314:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5313:18:9"
									},
									"scope": 1283,
									"src": "5225:154:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										599
									],
									"body": {
										"id": 1055,
										"nodeType": "Block",
										"src": "5641:121:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1039,
																		"name": "poolDetails",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 741,
																		"src": "5659:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$549_storage_$",
																			"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
																		}
																	},
																	"id": 1041,
																	"indexExpression": {
																		"id": 1040,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1032,
																		"src": "5671:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5659:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolDetails_$549_storage",
																		"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
																	}
																},
																"id": 1042,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5677:6:9",
																"memberName": "lender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 529,
																"src": "5659:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5695:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5687:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1043,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5687:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5687:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5659:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c206e6f742072656769737465726564",
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5699:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4223e50a367045d38bb02066828a03f85319e396cac02a270481328c4439b7c",
																"typeString": "literal_string \"Pool not registered\""
															},
															"value": "Pool not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4223e50a367045d38bb02066828a03f85319e396cac02a270481328c4439b7c",
																"typeString": "literal_string \"Pool not registered\""
															}
														],
														"id": 1038,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5651:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5651:70:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "5651:70:9"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1051,
														"name": "poolDetails",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "5738:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$549_storage_$",
															"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
														}
													},
													"id": 1053,
													"indexExpression": {
														"id": 1052,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "5750:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5738:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolDetails_$549_storage",
														"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
													}
												},
												"functionReturnParameters": 1037,
												"id": 1054,
												"nodeType": "Return",
												"src": "5731:24:9"
											}
										]
									},
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "5385:142:9",
										"text": "@notice Retrieves details for a specific pool.\n @param pool The address of the pool.\n @return Details of the specified pool."
									},
									"functionSelector": "d3e90fa0",
									"id": 1056,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolDetails",
									"nameLocation": "5541:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "5564:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "5556:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5556:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5555:14:9"
									},
									"returnParameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "5617:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolDetails_$549_memory_ptr",
													"typeString": "struct IPoolOrganizer.PoolDetails"
												},
												"typeName": {
													"id": 1035,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1034,
														"name": "PoolDetails",
														"nameLocations": [
															"5617:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 549,
														"src": "5617:11:9"
													},
													"referencedDeclaration": 549,
													"src": "5617:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolDetails_$549_storage_ptr",
														"typeString": "struct IPoolOrganizer.PoolDetails"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5616:20:9"
									},
									"scope": 1283,
									"src": "5532:230:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										606
									],
									"body": {
										"id": 1080,
										"nodeType": "Block",
										"src": "6017:162:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1065,
																	"name": "poolVaults",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "6048:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 1067,
																"indexExpression": {
																	"id": 1066,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1059,
																	"src": "6059:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6048:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1070,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6076:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6068:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1068,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6068:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6068:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6048:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c206e6f742072656769737465726564206f7220686173206e6f207661756c74",
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6092:37:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_39a3b1530e3b6596e085e382bff955d043a269a2081635a9d861923ef05dbbcd",
																"typeString": "literal_string \"Pool not registered or has no vault\""
															},
															"value": "Pool not registered or has no vault"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_39a3b1530e3b6596e085e382bff955d043a269a2081635a9d861923ef05dbbcd",
																"typeString": "literal_string \"Pool not registered or has no vault\""
															}
														],
														"id": 1064,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6027:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6027:112:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "6027:112:9"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1076,
														"name": "poolVaults",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "6156:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 1078,
													"indexExpression": {
														"id": 1077,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1059,
														"src": "6167:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6156:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1063,
												"id": 1079,
												"nodeType": "Return",
												"src": "6149:23:9"
											}
										]
									},
									"documentation": {
										"id": 1057,
										"nodeType": "StructuredDocumentation",
										"src": "5768:170:9",
										"text": "@notice Retrieves the vault associated with a specific pool.\n @param pool The address of the pool.\n @return The address of the vault linked to the pool."
									},
									"functionSelector": "7570e389",
									"id": 1081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVaultForPool",
									"nameLocation": "5955:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "5979:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "5971:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5971:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5970:14:9"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "6008:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:9"
									},
									"scope": 1283,
									"src": "5946:233:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										611
									],
									"body": {
										"id": 1101,
										"nodeType": "Block",
										"src": "6381:179:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1089,
																	"name": "DEFAULT_ADMIN_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "6420:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 1090,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6440:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6444:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6440:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1088,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "6412:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6412:39:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f7420616e2061646d696e",
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6465:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
																"typeString": "literal_string \"Caller is not an admin\""
															},
															"value": "Caller is not an admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
																"typeString": "literal_string \"Caller is not an admin\""
															}
														],
														"id": 1087,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6391:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6391:108:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1095,
												"nodeType": "ExpressionStatement",
												"src": "6391:108:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1097,
															"name": "POOL_MANAGER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "6519:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1098,
															"name": "factoryAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "6538:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1096,
														"name": "grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "6509:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6509:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1100,
												"nodeType": "ExpressionStatement",
												"src": "6509:44:9"
											}
										]
									},
									"documentation": {
										"id": 1082,
										"nodeType": "StructuredDocumentation",
										"src": "6186:129:9",
										"text": "@notice Grants factory access to manage pools.\n @param factoryAddress The address of the factory to be granted access."
									},
									"functionSelector": "5d102df7",
									"id": 1102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "grantFactoryAccess",
									"nameLocation": "6329:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "factoryAddress",
												"nameLocation": "6356:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "6348:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1083,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6348:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6347:24:9"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6381:0:9"
									},
									"scope": 1283,
									"src": "6320:240:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "6672:240:9",
										"statements": [
											{
												"assignments": [
													1110
												],
												"declarations": [
													{
														"constant": false,
														"id": 1110,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "6690:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1145,
														"src": "6682:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1109,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6682:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1117,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1112,
																"name": "lenderPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "6715:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 1114,
															"indexExpression": {
																"id": 1113,
																"name": "lender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "6727:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6715:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														{
															"id": 1115,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "6736:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1111,
														"name": "findIndexInArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "6698:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address[] storage pointer,address) view returns (uint256)"
														}
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6698:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6682:59:9"
											},
											{
												"assignments": [
													1119
												],
												"declarations": [
													{
														"constant": false,
														"id": 1119,
														"mutability": "mutable",
														"name": "lastIndex",
														"nameLocation": "6759:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1145,
														"src": "6751:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1118,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6751:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1126,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1120,
																"name": "lenderPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "6771:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 1122,
															"indexExpression": {
																"id": 1121,
																"name": "lender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "6783:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6771:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6791:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6771:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1124,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6800:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6771:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6751:50:9"
											},
											{
												"expression": {
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1127,
																"name": "lenderPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "6811:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 1130,
															"indexExpression": {
																"id": 1128,
																"name": "lender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "6823:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6811:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1131,
														"indexExpression": {
															"id": 1129,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "6831:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6811:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1132,
																"name": "lenderPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "6840:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 1134,
															"indexExpression": {
																"id": 1133,
																"name": "lender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "6852:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6840:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1136,
														"indexExpression": {
															"id": 1135,
															"name": "lastIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "6860:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6840:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6811:59:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "6811:59:9"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 1139,
																"name": "lenderPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "6880:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 1141,
															"indexExpression": {
																"id": 1140,
																"name": "lender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "6892:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6880:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6900:3:9",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "6880:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer)"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6880:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "6880:25:9"
											}
										]
									},
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removePoolFromLenderArray",
									"nameLocation": "6607:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "6642:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "6634:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6634:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "6658:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "6650:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6650:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6633:30:9"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6672:0:9"
									},
									"scope": 1283,
									"src": "6598:314:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1178,
										"nodeType": "Block",
										"src": "6974:170:9",
										"statements": [
											{
												"assignments": [
													1152
												],
												"declarations": [
													{
														"constant": false,
														"id": 1152,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "6992:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1178,
														"src": "6984:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1151,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6984:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1157,
												"initialValue": {
													"arguments": [
														{
															"id": 1154,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "7017:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														{
															"id": 1155,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "7024:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1153,
														"name": "findIndexInArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "7000:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address[] storage pointer,address) view returns (uint256)"
														}
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7000:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6984:45:9"
											},
											{
												"assignments": [
													1159
												],
												"declarations": [
													{
														"constant": false,
														"id": 1159,
														"mutability": "mutable",
														"name": "lastIndex",
														"nameLocation": "7047:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1178,
														"src": "7039:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1158,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7039:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1164,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1160,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "7059:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7065:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7059:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1162,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7074:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "7059:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7039:36:9"
											},
											{
												"expression": {
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1165,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "7085:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1167,
														"indexExpression": {
															"id": 1166,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "7091:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7085:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1168,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "7100:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1170,
														"indexExpression": {
															"id": 1169,
															"name": "lastIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "7106:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7100:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7085:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1172,
												"nodeType": "ExpressionStatement",
												"src": "7085:31:9"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1173,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "7126:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7132:3:9",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "7126:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer)"
														}
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7126:11:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1177,
												"nodeType": "ExpressionStatement",
												"src": "7126:11:9"
											}
										]
									},
									"id": 1179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removePoolFromMainArray",
									"nameLocation": "6927:24:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "6960:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "6952:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6952:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6951:14:9"
									},
									"returnParameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6974:0:9"
									},
									"scope": 1283,
									"src": "6918:226:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1216,
										"nodeType": "Block",
										"src": "7276:173:9",
										"statements": [
											{
												"body": {
													"id": 1208,
													"nodeType": "Block",
													"src": "7329:57:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1200,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1182,
																		"src": "7347:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																			"typeString": "address[] storage pointer"
																		}
																	},
																	"id": 1202,
																	"indexExpression": {
																		"id": 1201,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1190,
																		"src": "7353:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7347:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1203,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1184,
																	"src": "7359:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7347:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1207,
															"nodeType": "IfStatement",
															"src": "7343:32:9",
															"trueBody": {
																"expression": {
																	"id": 1205,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1190,
																	"src": "7374:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 1188,
																"id": 1206,
																"nodeType": "Return",
																"src": "7367:8:9"
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1193,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "7306:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1194,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "7310:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[] storage pointer"
															}
														},
														"id": 1195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7316:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7310:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7306:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1209,
												"initializationExpression": {
													"assignments": [
														1190
													],
													"declarations": [
														{
															"constant": false,
															"id": 1190,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7299:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1209,
															"src": "7291:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1189,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7291:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1192,
													"initialValue": {
														"hexValue": "30",
														"id": 1191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7303:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7291:13:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7324:3:9",
														"subExpression": {
															"id": 1197,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "7324:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1199,
													"nodeType": "ExpressionStatement",
													"src": "7324:3:9"
												},
												"nodeType": "ForStatement",
												"src": "7286:100:9"
											},
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7407:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1211,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7407:7:9",
																	"typeDescriptions": {}
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																}
															],
															"id": 1210,
															"name": "type",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967269,
															"src": "7402:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1213,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7402:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_magic_meta_type_t_uint256",
															"typeString": "type(uint256)"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "7416:3:9",
													"memberName": "max",
													"nodeType": "MemberAccess",
													"src": "7402:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1188,
												"id": 1215,
												"nodeType": "Return",
												"src": "7395:24:9"
											}
										]
									},
									"id": 1217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findIndexInArray",
									"nameLocation": "7159:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "7194:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "7176:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1180,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "7176:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1181,
													"nodeType": "ArrayTypeName",
													"src": "7176:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7209:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "7201:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7201:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7175:41:9"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "7263:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7263:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7262:9:9"
									},
									"scope": 1283,
									"src": "7150:299:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										618
									],
									"body": {
										"id": 1281,
										"nodeType": "Block",
										"src": "7857:371:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1229,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1220,
																	"src": "7875:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1232,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7891:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7883:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1230,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7883:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7883:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7875:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1235,
																	"name": "vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "7897:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1238,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7914:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7906:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1236,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7906:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7906:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7897:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7875:41:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616464726573736573",
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7918:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ee597f13de1ba23a7961edbe397251ba0565f39f3d995b5348c732d160eca14f",
																"typeString": "literal_string \"Invalid addresses\""
															},
															"value": "Invalid addresses"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ee597f13de1ba23a7961edbe397251ba0565f39f3d995b5348c732d160eca14f",
																"typeString": "literal_string \"Invalid addresses\""
															}
														],
														"id": 1228,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7867:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7867:71:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1244,
												"nodeType": "ExpressionStatement",
												"src": "7867:71:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1246,
																		"name": "poolDetails",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 741,
																		"src": "7956:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$549_storage_$",
																			"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
																		}
																	},
																	"id": 1248,
																	"indexExpression": {
																		"id": 1247,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1220,
																		"src": "7968:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7956:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolDetails_$549_storage",
																		"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
																	}
																},
																"id": 1249,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7974:6:9",
																"memberName": "lender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 529,
																"src": "7956:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7992:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7984:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1250,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7984:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7984:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7956:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c206e6f742072656769737465726564",
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7996:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4223e50a367045d38bb02066828a03f85319e396cac02a270481328c4439b7c",
																"typeString": "literal_string \"Pool not registered\""
															},
															"value": "Pool not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4223e50a367045d38bb02066828a03f85319e396cac02a270481328c4439b7c",
																"typeString": "literal_string \"Pool not registered\""
															}
														],
														"id": 1245,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7948:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7948:70:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "7948:70:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1259,
																	"name": "poolVaults",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "8049:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 1261,
																"indexExpression": {
																	"id": 1260,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1220,
																	"src": "8060:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8049:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8077:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8069:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1262,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8069:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1265,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8069:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8049:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5661756c7420616c7265616479207265676973746572656420666f72207468697320706f6f6c",
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8093:40:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d429b56e51591333ba49e70031a7e747fbb1110c7c7977c922e5e8e59ef9580",
																"typeString": "literal_string \"Vault already registered for this pool\""
															},
															"value": "Vault already registered for this pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d429b56e51591333ba49e70031a7e747fbb1110c7c7977c922e5e8e59ef9580",
																"typeString": "literal_string \"Vault already registered for this pool\""
															}
														],
														"id": 1258,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8028:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8028:115:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1269,
												"nodeType": "ExpressionStatement",
												"src": "8028:115:9"
											},
											{
												"expression": {
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1270,
															"name": "poolVaults",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "8154:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1272,
														"indexExpression": {
															"id": 1271,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "8165:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8154:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1273,
														"name": "vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1222,
														"src": "8173:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8154:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1275,
												"nodeType": "ExpressionStatement",
												"src": "8154:24:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1277,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "8209:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1278,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "8215:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1276,
														"name": "VaultRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "8193:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8193:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1280,
												"nodeType": "EmitStatement",
												"src": "8188:33:9"
											}
										]
									},
									"documentation": {
										"id": 1218,
										"nodeType": "StructuredDocumentation",
										"src": "7455:287:9",
										"text": "@notice Registers a vault for a given pool.\n @param pool The address of the pool for which the vault is being registered.\n @param vault The address of the newly created vault.\n @dev This function can only be called by authorized roles, typically the PoolFactory."
									},
									"functionSelector": "05c4fdf9",
									"id": 1282,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1225,
													"name": "POOL_MANAGER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 727,
													"src": "7834:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1226,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1224,
												"name": "onlyRole",
												"nameLocations": [
													"7825:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "7825:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7825:27:9"
										}
									],
									"name": "registerVault",
									"nameLocation": "7757:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "7779:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "7771:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7771:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "7793:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "7785:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7785:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7770:29:9"
									},
									"returnParameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7857:0:9"
									},
									"scope": 1283,
									"src": "7748:480:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1284,
							"src": "421:7809:9",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335,
								764,
								769,
								776,
								782
							]
						}
					],
					"src": "32:8199:9"
				},
				"id": 9
			}
		}
	}
}